// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: watchtower.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_watchtower_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_watchtower_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_watchtower_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_watchtower_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_watchtower_2eproto;
namespace watchtowerrpc {
class GetInfoRequest;
struct GetInfoRequestDefaultTypeInternal;
extern GetInfoRequestDefaultTypeInternal _GetInfoRequest_default_instance_;
class GetInfoResponse;
struct GetInfoResponseDefaultTypeInternal;
extern GetInfoResponseDefaultTypeInternal _GetInfoResponse_default_instance_;
}  // namespace watchtowerrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace watchtowerrpc {

// ===================================================================


// -------------------------------------------------------------------

class GetInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:watchtowerrpc.GetInfoResponse) */ {
 public:
  inline GetInfoResponse() : GetInfoResponse(nullptr) {}
  ~GetInfoResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInfoResponse(const GetInfoResponse& from) : GetInfoResponse(nullptr, from) {}
  inline GetInfoResponse(GetInfoResponse&& from) noexcept
      : GetInfoResponse(nullptr, std::move(from)) {}
  inline GetInfoResponse& operator=(const GetInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInfoResponse& operator=(GetInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetInfoResponse*>(
        &_GetInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetInfoResponse& a, GetInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInfoResponse& from) { GetInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "watchtowerrpc.GetInfoResponse"; }

 protected:
  explicit GetInfoResponse(::google::protobuf::Arena* arena);
  GetInfoResponse(::google::protobuf::Arena* arena, const GetInfoResponse& from);
  GetInfoResponse(::google::protobuf::Arena* arena, GetInfoResponse&& from) noexcept
      : GetInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kListenersFieldNumber = 2,
    kUrisFieldNumber = 3,
    kPubkeyFieldNumber = 1,
  };
  // repeated string listeners = 2;
  int listeners_size() const;
  private:
  int _internal_listeners_size() const;

  public:
  void clear_listeners() ;
  const std::string& listeners(int index) const;
  std::string* mutable_listeners(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_listeners(int index, Arg_&& value, Args_... args);
  std::string* add_listeners();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_listeners(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& listeners() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_listeners();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_listeners() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_listeners();

  public:
  // repeated string uris = 3;
  int uris_size() const;
  private:
  int _internal_uris_size() const;

  public:
  void clear_uris() ;
  const std::string& uris(int index) const;
  std::string* mutable_uris(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uris(int index, Arg_&& value, Args_... args);
  std::string* add_uris();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_uris(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& uris() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_uris();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_uris() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_uris();

  public:
  // bytes pubkey = 1;
  void clear_pubkey() ;
  const std::string& pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_pubkey();
  PROTOBUF_NODISCARD std::string* release_pubkey();
  void set_allocated_pubkey(std::string* value);

  private:
  const std::string& _internal_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubkey(
      const std::string& value);
  std::string* _internal_mutable_pubkey();

  public:
  // @@protoc_insertion_point(class_scope:watchtowerrpc.GetInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInfoResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> listeners_;
    ::google::protobuf::RepeatedPtrField<std::string> uris_;
    ::google::protobuf::internal::ArenaStringPtr pubkey_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_watchtower_2eproto;
};
// -------------------------------------------------------------------

class GetInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:watchtowerrpc.GetInfoRequest) */ {
 public:
  inline GetInfoRequest() : GetInfoRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInfoRequest(const GetInfoRequest& from) : GetInfoRequest(nullptr, from) {}
  inline GetInfoRequest(GetInfoRequest&& from) noexcept
      : GetInfoRequest(nullptr, std::move(from)) {}
  inline GetInfoRequest& operator=(const GetInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInfoRequest& operator=(GetInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetInfoRequest*>(
        &_GetInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetInfoRequest& a, GetInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "watchtowerrpc.GetInfoRequest"; }

 protected:
  explicit GetInfoRequest(::google::protobuf::Arena* arena);
  GetInfoRequest(::google::protobuf::Arena* arena, const GetInfoRequest& from);
  GetInfoRequest(::google::protobuf::Arena* arena, GetInfoRequest&& from) noexcept
      : GetInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:watchtowerrpc.GetInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_watchtower_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetInfoRequest

// -------------------------------------------------------------------

// GetInfoResponse

// bytes pubkey = 1;
inline void GetInfoResponse::clear_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:watchtowerrpc.GetInfoResponse.pubkey)
  return _internal_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:watchtowerrpc.GetInfoResponse.pubkey)
}
inline std::string* GetInfoResponse::mutable_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pubkey();
  // @@protoc_insertion_point(field_mutable:watchtowerrpc.GetInfoResponse.pubkey)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pubkey_.Get();
}
inline void GetInfoResponse::_internal_set_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pubkey_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:watchtowerrpc.GetInfoResponse.pubkey)
  return _impl_.pubkey_.Release();
}
inline void GetInfoResponse::set_allocated_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubkey_.IsDefault()) {
          _impl_.pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:watchtowerrpc.GetInfoResponse.pubkey)
}

// repeated string listeners = 2;
inline int GetInfoResponse::_internal_listeners_size() const {
  return _internal_listeners().size();
}
inline int GetInfoResponse::listeners_size() const {
  return _internal_listeners_size();
}
inline void GetInfoResponse::clear_listeners() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.listeners_.Clear();
}
inline std::string* GetInfoResponse::add_listeners() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_listeners()->Add();
  // @@protoc_insertion_point(field_add_mutable:watchtowerrpc.GetInfoResponse.listeners)
  return _s;
}
inline const std::string& GetInfoResponse::listeners(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:watchtowerrpc.GetInfoResponse.listeners)
  return _internal_listeners().Get(index);
}
inline std::string* GetInfoResponse::mutable_listeners(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:watchtowerrpc.GetInfoResponse.listeners)
  return _internal_mutable_listeners()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetInfoResponse::set_listeners(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_listeners()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:watchtowerrpc.GetInfoResponse.listeners)
}
template <typename Arg_, typename... Args_>
inline void GetInfoResponse::add_listeners(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_listeners(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:watchtowerrpc.GetInfoResponse.listeners)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetInfoResponse::listeners() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:watchtowerrpc.GetInfoResponse.listeners)
  return _internal_listeners();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetInfoResponse::mutable_listeners() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:watchtowerrpc.GetInfoResponse.listeners)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_listeners();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetInfoResponse::_internal_listeners() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.listeners_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetInfoResponse::_internal_mutable_listeners() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.listeners_;
}

// repeated string uris = 3;
inline int GetInfoResponse::_internal_uris_size() const {
  return _internal_uris().size();
}
inline int GetInfoResponse::uris_size() const {
  return _internal_uris_size();
}
inline void GetInfoResponse::clear_uris() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uris_.Clear();
}
inline std::string* GetInfoResponse::add_uris() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_uris()->Add();
  // @@protoc_insertion_point(field_add_mutable:watchtowerrpc.GetInfoResponse.uris)
  return _s;
}
inline const std::string& GetInfoResponse::uris(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:watchtowerrpc.GetInfoResponse.uris)
  return _internal_uris().Get(index);
}
inline std::string* GetInfoResponse::mutable_uris(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:watchtowerrpc.GetInfoResponse.uris)
  return _internal_mutable_uris()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetInfoResponse::set_uris(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_uris()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:watchtowerrpc.GetInfoResponse.uris)
}
template <typename Arg_, typename... Args_>
inline void GetInfoResponse::add_uris(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_uris(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:watchtowerrpc.GetInfoResponse.uris)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetInfoResponse::uris() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:watchtowerrpc.GetInfoResponse.uris)
  return _internal_uris();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetInfoResponse::mutable_uris() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:watchtowerrpc.GetInfoResponse.uris)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_uris();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetInfoResponse::_internal_uris() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uris_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetInfoResponse::_internal_mutable_uris() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.uris_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace watchtowerrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_watchtower_2eproto_2epb_2eh
