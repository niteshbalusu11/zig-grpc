// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chainnotifier.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_chainnotifier_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_chainnotifier_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_chainnotifier_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_chainnotifier_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_chainnotifier_2eproto;
namespace chainrpc {
class BlockEpoch;
struct BlockEpochDefaultTypeInternal;
extern BlockEpochDefaultTypeInternal _BlockEpoch_default_instance_;
class ConfDetails;
struct ConfDetailsDefaultTypeInternal;
extern ConfDetailsDefaultTypeInternal _ConfDetails_default_instance_;
class ConfEvent;
struct ConfEventDefaultTypeInternal;
extern ConfEventDefaultTypeInternal _ConfEvent_default_instance_;
class ConfRequest;
struct ConfRequestDefaultTypeInternal;
extern ConfRequestDefaultTypeInternal _ConfRequest_default_instance_;
class Outpoint;
struct OutpointDefaultTypeInternal;
extern OutpointDefaultTypeInternal _Outpoint_default_instance_;
class Reorg;
struct ReorgDefaultTypeInternal;
extern ReorgDefaultTypeInternal _Reorg_default_instance_;
class SpendDetails;
struct SpendDetailsDefaultTypeInternal;
extern SpendDetailsDefaultTypeInternal _SpendDetails_default_instance_;
class SpendEvent;
struct SpendEventDefaultTypeInternal;
extern SpendEventDefaultTypeInternal _SpendEvent_default_instance_;
class SpendRequest;
struct SpendRequestDefaultTypeInternal;
extern SpendRequestDefaultTypeInternal _SpendRequest_default_instance_;
}  // namespace chainrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace chainrpc {

// ===================================================================


// -------------------------------------------------------------------

class Reorg final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:chainrpc.Reorg) */ {
 public:
  inline Reorg() : Reorg(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Reorg(
      ::google::protobuf::internal::ConstantInitialized);

  inline Reorg(const Reorg& from) : Reorg(nullptr, from) {}
  inline Reorg(Reorg&& from) noexcept
      : Reorg(nullptr, std::move(from)) {}
  inline Reorg& operator=(const Reorg& from) {
    CopyFrom(from);
    return *this;
  }
  inline Reorg& operator=(Reorg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Reorg& default_instance() {
    return *internal_default_instance();
  }
  static inline const Reorg* internal_default_instance() {
    return reinterpret_cast<const Reorg*>(
        &_Reorg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Reorg& a, Reorg& b) { a.Swap(&b); }
  inline void Swap(Reorg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Reorg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Reorg* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Reorg>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Reorg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Reorg& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.Reorg"; }

 protected:
  explicit Reorg(::google::protobuf::Arena* arena);
  Reorg(::google::protobuf::Arena* arena, const Reorg& from);
  Reorg(::google::protobuf::Arena* arena, Reorg&& from) noexcept
      : Reorg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:chainrpc.Reorg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Reorg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Reorg& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class Outpoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.Outpoint) */ {
 public:
  inline Outpoint() : Outpoint(nullptr) {}
  ~Outpoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Outpoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline Outpoint(const Outpoint& from) : Outpoint(nullptr, from) {}
  inline Outpoint(Outpoint&& from) noexcept
      : Outpoint(nullptr, std::move(from)) {}
  inline Outpoint& operator=(const Outpoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline Outpoint& operator=(Outpoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Outpoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const Outpoint* internal_default_instance() {
    return reinterpret_cast<const Outpoint*>(
        &_Outpoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Outpoint& a, Outpoint& b) { a.Swap(&b); }
  inline void Swap(Outpoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Outpoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Outpoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Outpoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Outpoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Outpoint& from) { Outpoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Outpoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.Outpoint"; }

 protected:
  explicit Outpoint(::google::protobuf::Arena* arena);
  Outpoint(::google::protobuf::Arena* arena, const Outpoint& from);
  Outpoint(::google::protobuf::Arena* arena, Outpoint&& from) noexcept
      : Outpoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
    kIndexFieldNumber = 2,
  };
  // bytes hash = 1;
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // uint32 index = 2;
  void clear_index() ;
  ::uint32_t index() const;
  void set_index(::uint32_t value);

  private:
  ::uint32_t _internal_index() const;
  void _internal_set_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.Outpoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Outpoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Outpoint& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::uint32_t index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class ConfRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.ConfRequest) */ {
 public:
  inline ConfRequest() : ConfRequest(nullptr) {}
  ~ConfRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfRequest(const ConfRequest& from) : ConfRequest(nullptr, from) {}
  inline ConfRequest(ConfRequest&& from) noexcept
      : ConfRequest(nullptr, std::move(from)) {}
  inline ConfRequest& operator=(const ConfRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfRequest& operator=(ConfRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfRequest* internal_default_instance() {
    return reinterpret_cast<const ConfRequest*>(
        &_ConfRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ConfRequest& a, ConfRequest& b) { a.Swap(&b); }
  inline void Swap(ConfRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConfRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConfRequest& from) { ConfRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConfRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.ConfRequest"; }

 protected:
  explicit ConfRequest(::google::protobuf::Arena* arena);
  ConfRequest(::google::protobuf::Arena* arena, const ConfRequest& from);
  ConfRequest(::google::protobuf::Arena* arena, ConfRequest&& from) noexcept
      : ConfRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
    kScriptFieldNumber = 2,
    kNumConfsFieldNumber = 3,
    kHeightHintFieldNumber = 4,
    kIncludeBlockFieldNumber = 5,
  };
  // bytes txid = 1;
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* mutable_txid();
  PROTOBUF_NODISCARD std::string* release_txid();
  void set_allocated_txid(std::string* value);

  private:
  const std::string& _internal_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid(
      const std::string& value);
  std::string* _internal_mutable_txid();

  public:
  // bytes script = 2;
  void clear_script() ;
  const std::string& script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script(Arg_&& arg, Args_... args);
  std::string* mutable_script();
  PROTOBUF_NODISCARD std::string* release_script();
  void set_allocated_script(std::string* value);

  private:
  const std::string& _internal_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script(
      const std::string& value);
  std::string* _internal_mutable_script();

  public:
  // uint32 num_confs = 3;
  void clear_num_confs() ;
  ::uint32_t num_confs() const;
  void set_num_confs(::uint32_t value);

  private:
  ::uint32_t _internal_num_confs() const;
  void _internal_set_num_confs(::uint32_t value);

  public:
  // uint32 height_hint = 4;
  void clear_height_hint() ;
  ::uint32_t height_hint() const;
  void set_height_hint(::uint32_t value);

  private:
  ::uint32_t _internal_height_hint() const;
  void _internal_set_height_hint(::uint32_t value);

  public:
  // bool include_block = 5;
  void clear_include_block() ;
  bool include_block() const;
  void set_include_block(bool value);

  private:
  bool _internal_include_block() const;
  void _internal_set_include_block(bool value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.ConfRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConfRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_;
    ::google::protobuf::internal::ArenaStringPtr script_;
    ::uint32_t num_confs_;
    ::uint32_t height_hint_;
    bool include_block_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class ConfDetails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.ConfDetails) */ {
 public:
  inline ConfDetails() : ConfDetails(nullptr) {}
  ~ConfDetails() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfDetails(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfDetails(const ConfDetails& from) : ConfDetails(nullptr, from) {}
  inline ConfDetails(ConfDetails&& from) noexcept
      : ConfDetails(nullptr, std::move(from)) {}
  inline ConfDetails& operator=(const ConfDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfDetails& operator=(ConfDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfDetails* internal_default_instance() {
    return reinterpret_cast<const ConfDetails*>(
        &_ConfDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ConfDetails& a, ConfDetails& b) { a.Swap(&b); }
  inline void Swap(ConfDetails* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfDetails* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConfDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConfDetails& from) { ConfDetails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConfDetails* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.ConfDetails"; }

 protected:
  explicit ConfDetails(::google::protobuf::Arena* arena);
  ConfDetails(::google::protobuf::Arena* arena, const ConfDetails& from);
  ConfDetails(::google::protobuf::Arena* arena, ConfDetails&& from) noexcept
      : ConfDetails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawTxFieldNumber = 1,
    kBlockHashFieldNumber = 2,
    kRawBlockFieldNumber = 5,
    kBlockHeightFieldNumber = 3,
    kTxIndexFieldNumber = 4,
  };
  // bytes raw_tx = 1;
  void clear_raw_tx() ;
  const std::string& raw_tx() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_tx(Arg_&& arg, Args_... args);
  std::string* mutable_raw_tx();
  PROTOBUF_NODISCARD std::string* release_raw_tx();
  void set_allocated_raw_tx(std::string* value);

  private:
  const std::string& _internal_raw_tx() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_tx(
      const std::string& value);
  std::string* _internal_mutable_raw_tx();

  public:
  // bytes block_hash = 2;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // bytes raw_block = 5;
  void clear_raw_block() ;
  const std::string& raw_block() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_block(Arg_&& arg, Args_... args);
  std::string* mutable_raw_block();
  PROTOBUF_NODISCARD std::string* release_raw_block();
  void set_allocated_raw_block(std::string* value);

  private:
  const std::string& _internal_raw_block() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_block(
      const std::string& value);
  std::string* _internal_mutable_raw_block();

  public:
  // uint32 block_height = 3;
  void clear_block_height() ;
  ::uint32_t block_height() const;
  void set_block_height(::uint32_t value);

  private:
  ::uint32_t _internal_block_height() const;
  void _internal_set_block_height(::uint32_t value);

  public:
  // uint32 tx_index = 4;
  void clear_tx_index() ;
  ::uint32_t tx_index() const;
  void set_tx_index(::uint32_t value);

  private:
  ::uint32_t _internal_tx_index() const;
  void _internal_set_tx_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.ConfDetails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConfDetails_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfDetails& from_msg);
    ::google::protobuf::internal::ArenaStringPtr raw_tx_;
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    ::google::protobuf::internal::ArenaStringPtr raw_block_;
    ::uint32_t block_height_;
    ::uint32_t tx_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class BlockEpoch final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.BlockEpoch) */ {
 public:
  inline BlockEpoch() : BlockEpoch(nullptr) {}
  ~BlockEpoch() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockEpoch(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlockEpoch(const BlockEpoch& from) : BlockEpoch(nullptr, from) {}
  inline BlockEpoch(BlockEpoch&& from) noexcept
      : BlockEpoch(nullptr, std::move(from)) {}
  inline BlockEpoch& operator=(const BlockEpoch& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockEpoch& operator=(BlockEpoch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockEpoch& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlockEpoch* internal_default_instance() {
    return reinterpret_cast<const BlockEpoch*>(
        &_BlockEpoch_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(BlockEpoch& a, BlockEpoch& b) { a.Swap(&b); }
  inline void Swap(BlockEpoch* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockEpoch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockEpoch* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BlockEpoch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockEpoch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockEpoch& from) { BlockEpoch::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlockEpoch* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.BlockEpoch"; }

 protected:
  explicit BlockEpoch(::google::protobuf::Arena* arena);
  BlockEpoch(::google::protobuf::Arena* arena, const BlockEpoch& from);
  BlockEpoch(::google::protobuf::Arena* arena, BlockEpoch&& from) noexcept
      : BlockEpoch(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashFieldNumber = 1,
    kHeightFieldNumber = 2,
  };
  // bytes hash = 1;
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // uint32 height = 2;
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.BlockEpoch)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlockEpoch_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlockEpoch& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::uint32_t height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class SpendRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.SpendRequest) */ {
 public:
  inline SpendRequest() : SpendRequest(nullptr) {}
  ~SpendRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpendRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SpendRequest(const SpendRequest& from) : SpendRequest(nullptr, from) {}
  inline SpendRequest(SpendRequest&& from) noexcept
      : SpendRequest(nullptr, std::move(from)) {}
  inline SpendRequest& operator=(const SpendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpendRequest& operator=(SpendRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpendRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpendRequest* internal_default_instance() {
    return reinterpret_cast<const SpendRequest*>(
        &_SpendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SpendRequest& a, SpendRequest& b) { a.Swap(&b); }
  inline void Swap(SpendRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpendRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpendRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SpendRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpendRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpendRequest& from) { SpendRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SpendRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.SpendRequest"; }

 protected:
  explicit SpendRequest(::google::protobuf::Arena* arena);
  SpendRequest(::google::protobuf::Arena* arena, const SpendRequest& from);
  SpendRequest(::google::protobuf::Arena* arena, SpendRequest&& from) noexcept
      : SpendRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScriptFieldNumber = 2,
    kOutpointFieldNumber = 1,
    kHeightHintFieldNumber = 3,
  };
  // bytes script = 2;
  void clear_script() ;
  const std::string& script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script(Arg_&& arg, Args_... args);
  std::string* mutable_script();
  PROTOBUF_NODISCARD std::string* release_script();
  void set_allocated_script(std::string* value);

  private:
  const std::string& _internal_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script(
      const std::string& value);
  std::string* _internal_mutable_script();

  public:
  // .chainrpc.Outpoint outpoint = 1;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::chainrpc::Outpoint& outpoint() const;
  PROTOBUF_NODISCARD ::chainrpc::Outpoint* release_outpoint();
  ::chainrpc::Outpoint* mutable_outpoint();
  void set_allocated_outpoint(::chainrpc::Outpoint* value);
  void unsafe_arena_set_allocated_outpoint(::chainrpc::Outpoint* value);
  ::chainrpc::Outpoint* unsafe_arena_release_outpoint();

  private:
  const ::chainrpc::Outpoint& _internal_outpoint() const;
  ::chainrpc::Outpoint* _internal_mutable_outpoint();

  public:
  // uint32 height_hint = 3;
  void clear_height_hint() ;
  ::uint32_t height_hint() const;
  void set_height_hint(::uint32_t value);

  private:
  ::uint32_t _internal_height_hint() const;
  void _internal_set_height_hint(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.SpendRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SpendRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SpendRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr script_;
    ::chainrpc::Outpoint* outpoint_;
    ::uint32_t height_hint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class SpendDetails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.SpendDetails) */ {
 public:
  inline SpendDetails() : SpendDetails(nullptr) {}
  ~SpendDetails() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpendDetails(
      ::google::protobuf::internal::ConstantInitialized);

  inline SpendDetails(const SpendDetails& from) : SpendDetails(nullptr, from) {}
  inline SpendDetails(SpendDetails&& from) noexcept
      : SpendDetails(nullptr, std::move(from)) {}
  inline SpendDetails& operator=(const SpendDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpendDetails& operator=(SpendDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpendDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const SpendDetails* internal_default_instance() {
    return reinterpret_cast<const SpendDetails*>(
        &_SpendDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(SpendDetails& a, SpendDetails& b) { a.Swap(&b); }
  inline void Swap(SpendDetails* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpendDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpendDetails* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SpendDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpendDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpendDetails& from) { SpendDetails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SpendDetails* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.SpendDetails"; }

 protected:
  explicit SpendDetails(::google::protobuf::Arena* arena);
  SpendDetails(::google::protobuf::Arena* arena, const SpendDetails& from);
  SpendDetails(::google::protobuf::Arena* arena, SpendDetails&& from) noexcept
      : SpendDetails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawSpendingTxFieldNumber = 2,
    kSpendingTxHashFieldNumber = 3,
    kSpendingOutpointFieldNumber = 1,
    kSpendingInputIndexFieldNumber = 4,
    kSpendingHeightFieldNumber = 5,
  };
  // bytes raw_spending_tx = 2;
  void clear_raw_spending_tx() ;
  const std::string& raw_spending_tx() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_spending_tx(Arg_&& arg, Args_... args);
  std::string* mutable_raw_spending_tx();
  PROTOBUF_NODISCARD std::string* release_raw_spending_tx();
  void set_allocated_raw_spending_tx(std::string* value);

  private:
  const std::string& _internal_raw_spending_tx() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_spending_tx(
      const std::string& value);
  std::string* _internal_mutable_raw_spending_tx();

  public:
  // bytes spending_tx_hash = 3;
  void clear_spending_tx_hash() ;
  const std::string& spending_tx_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_spending_tx_hash(Arg_&& arg, Args_... args);
  std::string* mutable_spending_tx_hash();
  PROTOBUF_NODISCARD std::string* release_spending_tx_hash();
  void set_allocated_spending_tx_hash(std::string* value);

  private:
  const std::string& _internal_spending_tx_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_spending_tx_hash(
      const std::string& value);
  std::string* _internal_mutable_spending_tx_hash();

  public:
  // .chainrpc.Outpoint spending_outpoint = 1;
  bool has_spending_outpoint() const;
  void clear_spending_outpoint() ;
  const ::chainrpc::Outpoint& spending_outpoint() const;
  PROTOBUF_NODISCARD ::chainrpc::Outpoint* release_spending_outpoint();
  ::chainrpc::Outpoint* mutable_spending_outpoint();
  void set_allocated_spending_outpoint(::chainrpc::Outpoint* value);
  void unsafe_arena_set_allocated_spending_outpoint(::chainrpc::Outpoint* value);
  ::chainrpc::Outpoint* unsafe_arena_release_spending_outpoint();

  private:
  const ::chainrpc::Outpoint& _internal_spending_outpoint() const;
  ::chainrpc::Outpoint* _internal_mutable_spending_outpoint();

  public:
  // uint32 spending_input_index = 4;
  void clear_spending_input_index() ;
  ::uint32_t spending_input_index() const;
  void set_spending_input_index(::uint32_t value);

  private:
  ::uint32_t _internal_spending_input_index() const;
  void _internal_set_spending_input_index(::uint32_t value);

  public:
  // uint32 spending_height = 5;
  void clear_spending_height() ;
  ::uint32_t spending_height() const;
  void set_spending_height(::uint32_t value);

  private:
  ::uint32_t _internal_spending_height() const;
  void _internal_set_spending_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.SpendDetails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SpendDetails_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SpendDetails& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr raw_spending_tx_;
    ::google::protobuf::internal::ArenaStringPtr spending_tx_hash_;
    ::chainrpc::Outpoint* spending_outpoint_;
    ::uint32_t spending_input_index_;
    ::uint32_t spending_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class ConfEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.ConfEvent) */ {
 public:
  inline ConfEvent() : ConfEvent(nullptr) {}
  ~ConfEvent() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfEvent(const ConfEvent& from) : ConfEvent(nullptr, from) {}
  inline ConfEvent(ConfEvent&& from) noexcept
      : ConfEvent(nullptr, std::move(from)) {}
  inline ConfEvent& operator=(const ConfEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfEvent& operator=(ConfEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfEvent& default_instance() {
    return *internal_default_instance();
  }
  enum EventCase {
    kConf = 1,
    kReorg = 2,
    EVENT_NOT_SET = 0,
  };
  static inline const ConfEvent* internal_default_instance() {
    return reinterpret_cast<const ConfEvent*>(
        &_ConfEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(ConfEvent& a, ConfEvent& b) { a.Swap(&b); }
  inline void Swap(ConfEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfEvent* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConfEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConfEvent& from) { ConfEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConfEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.ConfEvent"; }

 protected:
  explicit ConfEvent(::google::protobuf::Arena* arena);
  ConfEvent(::google::protobuf::Arena* arena, const ConfEvent& from);
  ConfEvent(::google::protobuf::Arena* arena, ConfEvent&& from) noexcept
      : ConfEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfFieldNumber = 1,
    kReorgFieldNumber = 2,
  };
  // .chainrpc.ConfDetails conf = 1;
  bool has_conf() const;
  private:
  bool _internal_has_conf() const;

  public:
  void clear_conf() ;
  const ::chainrpc::ConfDetails& conf() const;
  PROTOBUF_NODISCARD ::chainrpc::ConfDetails* release_conf();
  ::chainrpc::ConfDetails* mutable_conf();
  void set_allocated_conf(::chainrpc::ConfDetails* value);
  void unsafe_arena_set_allocated_conf(::chainrpc::ConfDetails* value);
  ::chainrpc::ConfDetails* unsafe_arena_release_conf();

  private:
  const ::chainrpc::ConfDetails& _internal_conf() const;
  ::chainrpc::ConfDetails* _internal_mutable_conf();

  public:
  // .chainrpc.Reorg reorg = 2;
  bool has_reorg() const;
  private:
  bool _internal_has_reorg() const;

  public:
  void clear_reorg() ;
  const ::chainrpc::Reorg& reorg() const;
  PROTOBUF_NODISCARD ::chainrpc::Reorg* release_reorg();
  ::chainrpc::Reorg* mutable_reorg();
  void set_allocated_reorg(::chainrpc::Reorg* value);
  void unsafe_arena_set_allocated_reorg(::chainrpc::Reorg* value);
  ::chainrpc::Reorg* unsafe_arena_release_reorg();

  private:
  const ::chainrpc::Reorg& _internal_reorg() const;
  ::chainrpc::Reorg* _internal_mutable_reorg();

  public:
  void clear_event();
  EventCase event_case() const;
  // @@protoc_insertion_point(class_scope:chainrpc.ConfEvent)
 private:
  class _Internal;
  void set_has_conf();
  void set_has_reorg();
  inline bool has_event() const;
  inline void clear_has_event();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConfEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfEvent& from_msg);
    union EventUnion {
      constexpr EventUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::chainrpc::ConfDetails* conf_;
      ::chainrpc::Reorg* reorg_;
    } event_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};
// -------------------------------------------------------------------

class SpendEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.SpendEvent) */ {
 public:
  inline SpendEvent() : SpendEvent(nullptr) {}
  ~SpendEvent() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SpendEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline SpendEvent(const SpendEvent& from) : SpendEvent(nullptr, from) {}
  inline SpendEvent(SpendEvent&& from) noexcept
      : SpendEvent(nullptr, std::move(from)) {}
  inline SpendEvent& operator=(const SpendEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline SpendEvent& operator=(SpendEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SpendEvent& default_instance() {
    return *internal_default_instance();
  }
  enum EventCase {
    kSpend = 1,
    kReorg = 2,
    EVENT_NOT_SET = 0,
  };
  static inline const SpendEvent* internal_default_instance() {
    return reinterpret_cast<const SpendEvent*>(
        &_SpendEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SpendEvent& a, SpendEvent& b) { a.Swap(&b); }
  inline void Swap(SpendEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SpendEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SpendEvent* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SpendEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SpendEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SpendEvent& from) { SpendEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SpendEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.SpendEvent"; }

 protected:
  explicit SpendEvent(::google::protobuf::Arena* arena);
  SpendEvent(::google::protobuf::Arena* arena, const SpendEvent& from);
  SpendEvent(::google::protobuf::Arena* arena, SpendEvent&& from) noexcept
      : SpendEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpendFieldNumber = 1,
    kReorgFieldNumber = 2,
  };
  // .chainrpc.SpendDetails spend = 1;
  bool has_spend() const;
  private:
  bool _internal_has_spend() const;

  public:
  void clear_spend() ;
  const ::chainrpc::SpendDetails& spend() const;
  PROTOBUF_NODISCARD ::chainrpc::SpendDetails* release_spend();
  ::chainrpc::SpendDetails* mutable_spend();
  void set_allocated_spend(::chainrpc::SpendDetails* value);
  void unsafe_arena_set_allocated_spend(::chainrpc::SpendDetails* value);
  ::chainrpc::SpendDetails* unsafe_arena_release_spend();

  private:
  const ::chainrpc::SpendDetails& _internal_spend() const;
  ::chainrpc::SpendDetails* _internal_mutable_spend();

  public:
  // .chainrpc.Reorg reorg = 2;
  bool has_reorg() const;
  private:
  bool _internal_has_reorg() const;

  public:
  void clear_reorg() ;
  const ::chainrpc::Reorg& reorg() const;
  PROTOBUF_NODISCARD ::chainrpc::Reorg* release_reorg();
  ::chainrpc::Reorg* mutable_reorg();
  void set_allocated_reorg(::chainrpc::Reorg* value);
  void unsafe_arena_set_allocated_reorg(::chainrpc::Reorg* value);
  ::chainrpc::Reorg* unsafe_arena_release_reorg();

  private:
  const ::chainrpc::Reorg& _internal_reorg() const;
  ::chainrpc::Reorg* _internal_mutable_reorg();

  public:
  void clear_event();
  EventCase event_case() const;
  // @@protoc_insertion_point(class_scope:chainrpc.SpendEvent)
 private:
  class _Internal;
  void set_has_spend();
  void set_has_reorg();
  inline bool has_event() const;
  inline void clear_has_event();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SpendEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SpendEvent& from_msg);
    union EventUnion {
      constexpr EventUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::chainrpc::SpendDetails* spend_;
      ::chainrpc::Reorg* reorg_;
    } event_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainnotifier_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ConfRequest

// bytes txid = 1;
inline void ConfRequest::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
}
inline const std::string& ConfRequest::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfRequest.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfRequest::set_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.ConfRequest.txid)
}
inline std::string* ConfRequest::mutable_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfRequest.txid)
  return _s;
}
inline const std::string& ConfRequest::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void ConfRequest::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* ConfRequest::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* ConfRequest::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.ConfRequest.txid)
  return _impl_.txid_.Release();
}
inline void ConfRequest::set_allocated_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_.IsDefault()) {
          _impl_.txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.ConfRequest.txid)
}

// bytes script = 2;
inline void ConfRequest::clear_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.ClearToEmpty();
}
inline const std::string& ConfRequest::script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfRequest.script)
  return _internal_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfRequest::set_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.ConfRequest.script)
}
inline std::string* ConfRequest::mutable_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfRequest.script)
  return _s;
}
inline const std::string& ConfRequest::_internal_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_.Get();
}
inline void ConfRequest::_internal_set_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.Set(value, GetArena());
}
inline std::string* ConfRequest::_internal_mutable_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_.Mutable( GetArena());
}
inline std::string* ConfRequest::release_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.ConfRequest.script)
  return _impl_.script_.Release();
}
inline void ConfRequest::set_allocated_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.script_.IsDefault()) {
          _impl_.script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.ConfRequest.script)
}

// uint32 num_confs = 3;
inline void ConfRequest::clear_num_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_confs_ = 0u;
}
inline ::uint32_t ConfRequest::num_confs() const {
  // @@protoc_insertion_point(field_get:chainrpc.ConfRequest.num_confs)
  return _internal_num_confs();
}
inline void ConfRequest::set_num_confs(::uint32_t value) {
  _internal_set_num_confs(value);
  // @@protoc_insertion_point(field_set:chainrpc.ConfRequest.num_confs)
}
inline ::uint32_t ConfRequest::_internal_num_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_confs_;
}
inline void ConfRequest::_internal_set_num_confs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_confs_ = value;
}

// uint32 height_hint = 4;
inline void ConfRequest::clear_height_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_hint_ = 0u;
}
inline ::uint32_t ConfRequest::height_hint() const {
  // @@protoc_insertion_point(field_get:chainrpc.ConfRequest.height_hint)
  return _internal_height_hint();
}
inline void ConfRequest::set_height_hint(::uint32_t value) {
  _internal_set_height_hint(value);
  // @@protoc_insertion_point(field_set:chainrpc.ConfRequest.height_hint)
}
inline ::uint32_t ConfRequest::_internal_height_hint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_hint_;
}
inline void ConfRequest::_internal_set_height_hint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_hint_ = value;
}

// bool include_block = 5;
inline void ConfRequest::clear_include_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_block_ = false;
}
inline bool ConfRequest::include_block() const {
  // @@protoc_insertion_point(field_get:chainrpc.ConfRequest.include_block)
  return _internal_include_block();
}
inline void ConfRequest::set_include_block(bool value) {
  _internal_set_include_block(value);
  // @@protoc_insertion_point(field_set:chainrpc.ConfRequest.include_block)
}
inline bool ConfRequest::_internal_include_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_block_;
}
inline void ConfRequest::_internal_set_include_block(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_block_ = value;
}

// -------------------------------------------------------------------

// ConfDetails

// bytes raw_tx = 1;
inline void ConfDetails::clear_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.ClearToEmpty();
}
inline const std::string& ConfDetails::raw_tx() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfDetails.raw_tx)
  return _internal_raw_tx();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfDetails::set_raw_tx(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.ConfDetails.raw_tx)
}
inline std::string* ConfDetails::mutable_raw_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_tx();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfDetails.raw_tx)
  return _s;
}
inline const std::string& ConfDetails::_internal_raw_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_tx_.Get();
}
inline void ConfDetails::_internal_set_raw_tx(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.Set(value, GetArena());
}
inline std::string* ConfDetails::_internal_mutable_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_tx_.Mutable( GetArena());
}
inline std::string* ConfDetails::release_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.ConfDetails.raw_tx)
  return _impl_.raw_tx_.Release();
}
inline void ConfDetails::set_allocated_raw_tx(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_tx_.IsDefault()) {
          _impl_.raw_tx_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.ConfDetails.raw_tx)
}

// bytes block_hash = 2;
inline void ConfDetails::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& ConfDetails::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfDetails.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfDetails::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.ConfDetails.block_hash)
}
inline std::string* ConfDetails::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfDetails.block_hash)
  return _s;
}
inline const std::string& ConfDetails::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void ConfDetails::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* ConfDetails::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* ConfDetails::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.ConfDetails.block_hash)
  return _impl_.block_hash_.Release();
}
inline void ConfDetails::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.ConfDetails.block_hash)
}

// uint32 block_height = 3;
inline void ConfDetails::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0u;
}
inline ::uint32_t ConfDetails::block_height() const {
  // @@protoc_insertion_point(field_get:chainrpc.ConfDetails.block_height)
  return _internal_block_height();
}
inline void ConfDetails::set_block_height(::uint32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:chainrpc.ConfDetails.block_height)
}
inline ::uint32_t ConfDetails::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void ConfDetails::_internal_set_block_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// uint32 tx_index = 4;
inline void ConfDetails::clear_tx_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_index_ = 0u;
}
inline ::uint32_t ConfDetails::tx_index() const {
  // @@protoc_insertion_point(field_get:chainrpc.ConfDetails.tx_index)
  return _internal_tx_index();
}
inline void ConfDetails::set_tx_index(::uint32_t value) {
  _internal_set_tx_index(value);
  // @@protoc_insertion_point(field_set:chainrpc.ConfDetails.tx_index)
}
inline ::uint32_t ConfDetails::_internal_tx_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_index_;
}
inline void ConfDetails::_internal_set_tx_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_index_ = value;
}

// bytes raw_block = 5;
inline void ConfDetails::clear_raw_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.ClearToEmpty();
}
inline const std::string& ConfDetails::raw_block() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfDetails.raw_block)
  return _internal_raw_block();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfDetails::set_raw_block(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.ConfDetails.raw_block)
}
inline std::string* ConfDetails::mutable_raw_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_block();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfDetails.raw_block)
  return _s;
}
inline const std::string& ConfDetails::_internal_raw_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_block_.Get();
}
inline void ConfDetails::_internal_set_raw_block(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.Set(value, GetArena());
}
inline std::string* ConfDetails::_internal_mutable_raw_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_block_.Mutable( GetArena());
}
inline std::string* ConfDetails::release_raw_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.ConfDetails.raw_block)
  return _impl_.raw_block_.Release();
}
inline void ConfDetails::set_allocated_raw_block(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_block_.IsDefault()) {
          _impl_.raw_block_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.ConfDetails.raw_block)
}

// -------------------------------------------------------------------

// Reorg

// -------------------------------------------------------------------

// ConfEvent

// .chainrpc.ConfDetails conf = 1;
inline bool ConfEvent::has_conf() const {
  return event_case() == kConf;
}
inline bool ConfEvent::_internal_has_conf() const {
  return event_case() == kConf;
}
inline void ConfEvent::set_has_conf() {
  _impl_._oneof_case_[0] = kConf;
}
inline void ConfEvent::clear_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kConf) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.conf_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.conf_);
    }
    clear_has_event();
  }
}
inline ::chainrpc::ConfDetails* ConfEvent::release_conf() {
  // @@protoc_insertion_point(field_release:chainrpc.ConfEvent.conf)
  if (event_case() == kConf) {
    clear_has_event();
    auto* temp = _impl_.event_.conf_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chainrpc::ConfDetails& ConfEvent::_internal_conf() const {
  return event_case() == kConf ? *_impl_.event_.conf_ : reinterpret_cast<::chainrpc::ConfDetails&>(::chainrpc::_ConfDetails_default_instance_);
}
inline const ::chainrpc::ConfDetails& ConfEvent::conf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfEvent.conf)
  return _internal_conf();
}
inline ::chainrpc::ConfDetails* ConfEvent::unsafe_arena_release_conf() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chainrpc.ConfEvent.conf)
  if (event_case() == kConf) {
    clear_has_event();
    auto* temp = _impl_.event_.conf_;
    _impl_.event_.conf_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConfEvent::unsafe_arena_set_allocated_conf(::chainrpc::ConfDetails* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_conf();
    _impl_.event_.conf_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chainrpc.ConfEvent.conf)
}
inline ::chainrpc::ConfDetails* ConfEvent::_internal_mutable_conf() {
  if (event_case() != kConf) {
    clear_event();
    set_has_conf();
    _impl_.event_.conf_ =
        ::google::protobuf::Message::DefaultConstruct<::chainrpc::ConfDetails>(GetArena());
  }
  return _impl_.event_.conf_;
}
inline ::chainrpc::ConfDetails* ConfEvent::mutable_conf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chainrpc::ConfDetails* _msg = _internal_mutable_conf();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfEvent.conf)
  return _msg;
}

// .chainrpc.Reorg reorg = 2;
inline bool ConfEvent::has_reorg() const {
  return event_case() == kReorg;
}
inline bool ConfEvent::_internal_has_reorg() const {
  return event_case() == kReorg;
}
inline void ConfEvent::set_has_reorg() {
  _impl_._oneof_case_[0] = kReorg;
}
inline void ConfEvent::clear_reorg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kReorg) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.reorg_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.reorg_);
    }
    clear_has_event();
  }
}
inline ::chainrpc::Reorg* ConfEvent::release_reorg() {
  // @@protoc_insertion_point(field_release:chainrpc.ConfEvent.reorg)
  if (event_case() == kReorg) {
    clear_has_event();
    auto* temp = _impl_.event_.reorg_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.reorg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chainrpc::Reorg& ConfEvent::_internal_reorg() const {
  return event_case() == kReorg ? *_impl_.event_.reorg_ : reinterpret_cast<::chainrpc::Reorg&>(::chainrpc::_Reorg_default_instance_);
}
inline const ::chainrpc::Reorg& ConfEvent::reorg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.ConfEvent.reorg)
  return _internal_reorg();
}
inline ::chainrpc::Reorg* ConfEvent::unsafe_arena_release_reorg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chainrpc.ConfEvent.reorg)
  if (event_case() == kReorg) {
    clear_has_event();
    auto* temp = _impl_.event_.reorg_;
    _impl_.event_.reorg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ConfEvent::unsafe_arena_set_allocated_reorg(::chainrpc::Reorg* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_reorg();
    _impl_.event_.reorg_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chainrpc.ConfEvent.reorg)
}
inline ::chainrpc::Reorg* ConfEvent::_internal_mutable_reorg() {
  if (event_case() != kReorg) {
    clear_event();
    set_has_reorg();
    _impl_.event_.reorg_ =
        ::google::protobuf::Message::DefaultConstruct<::chainrpc::Reorg>(GetArena());
  }
  return _impl_.event_.reorg_;
}
inline ::chainrpc::Reorg* ConfEvent::mutable_reorg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chainrpc::Reorg* _msg = _internal_mutable_reorg();
  // @@protoc_insertion_point(field_mutable:chainrpc.ConfEvent.reorg)
  return _msg;
}

inline bool ConfEvent::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
inline void ConfEvent::clear_has_event() {
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}
inline ConfEvent::EventCase ConfEvent::event_case() const {
  return ConfEvent::EventCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// Outpoint

// bytes hash = 1;
inline void Outpoint::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& Outpoint::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.Outpoint.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Outpoint::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.Outpoint.hash)
}
inline std::string* Outpoint::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.Outpoint.hash)
  return _s;
}
inline const std::string& Outpoint::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void Outpoint::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* Outpoint::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* Outpoint::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.Outpoint.hash)
  return _impl_.hash_.Release();
}
inline void Outpoint::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_.IsDefault()) {
          _impl_.hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.Outpoint.hash)
}

// uint32 index = 2;
inline void Outpoint::clear_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = 0u;
}
inline ::uint32_t Outpoint::index() const {
  // @@protoc_insertion_point(field_get:chainrpc.Outpoint.index)
  return _internal_index();
}
inline void Outpoint::set_index(::uint32_t value) {
  _internal_set_index(value);
  // @@protoc_insertion_point(field_set:chainrpc.Outpoint.index)
}
inline ::uint32_t Outpoint::_internal_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_;
}
inline void Outpoint::_internal_set_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_ = value;
}

// -------------------------------------------------------------------

// SpendRequest

// .chainrpc.Outpoint outpoint = 1;
inline bool SpendRequest::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline void SpendRequest::clear_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ != nullptr) _impl_.outpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::chainrpc::Outpoint& SpendRequest::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::chainrpc::Outpoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::chainrpc::Outpoint&>(::chainrpc::_Outpoint_default_instance_);
}
inline const ::chainrpc::Outpoint& SpendRequest::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendRequest.outpoint)
  return _internal_outpoint();
}
inline void SpendRequest::unsafe_arena_set_allocated_outpoint(::chainrpc::Outpoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::chainrpc::Outpoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chainrpc.SpendRequest.outpoint)
}
inline ::chainrpc::Outpoint* SpendRequest::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::chainrpc::Outpoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::chainrpc::Outpoint* SpendRequest::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.SpendRequest.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::chainrpc::Outpoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::chainrpc::Outpoint* SpendRequest::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::chainrpc::Outpoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::chainrpc::Outpoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::chainrpc::Outpoint* SpendRequest::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::chainrpc::Outpoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendRequest.outpoint)
  return _msg;
}
inline void SpendRequest::set_allocated_outpoint(::chainrpc::Outpoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::chainrpc::Outpoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:chainrpc.SpendRequest.outpoint)
}

// bytes script = 2;
inline void SpendRequest::clear_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.ClearToEmpty();
}
inline const std::string& SpendRequest::script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendRequest.script)
  return _internal_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SpendRequest::set_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.SpendRequest.script)
}
inline std::string* SpendRequest::mutable_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendRequest.script)
  return _s;
}
inline const std::string& SpendRequest::_internal_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_.Get();
}
inline void SpendRequest::_internal_set_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.Set(value, GetArena());
}
inline std::string* SpendRequest::_internal_mutable_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_.Mutable( GetArena());
}
inline std::string* SpendRequest::release_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.SpendRequest.script)
  return _impl_.script_.Release();
}
inline void SpendRequest::set_allocated_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.script_.IsDefault()) {
          _impl_.script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.SpendRequest.script)
}

// uint32 height_hint = 3;
inline void SpendRequest::clear_height_hint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_hint_ = 0u;
}
inline ::uint32_t SpendRequest::height_hint() const {
  // @@protoc_insertion_point(field_get:chainrpc.SpendRequest.height_hint)
  return _internal_height_hint();
}
inline void SpendRequest::set_height_hint(::uint32_t value) {
  _internal_set_height_hint(value);
  // @@protoc_insertion_point(field_set:chainrpc.SpendRequest.height_hint)
}
inline ::uint32_t SpendRequest::_internal_height_hint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_hint_;
}
inline void SpendRequest::_internal_set_height_hint(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_hint_ = value;
}

// -------------------------------------------------------------------

// SpendDetails

// .chainrpc.Outpoint spending_outpoint = 1;
inline bool SpendDetails::has_spending_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.spending_outpoint_ != nullptr);
  return value;
}
inline void SpendDetails::clear_spending_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spending_outpoint_ != nullptr) _impl_.spending_outpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::chainrpc::Outpoint& SpendDetails::_internal_spending_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::chainrpc::Outpoint* p = _impl_.spending_outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::chainrpc::Outpoint&>(::chainrpc::_Outpoint_default_instance_);
}
inline const ::chainrpc::Outpoint& SpendDetails::spending_outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendDetails.spending_outpoint)
  return _internal_spending_outpoint();
}
inline void SpendDetails::unsafe_arena_set_allocated_spending_outpoint(::chainrpc::Outpoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.spending_outpoint_);
  }
  _impl_.spending_outpoint_ = reinterpret_cast<::chainrpc::Outpoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chainrpc.SpendDetails.spending_outpoint)
}
inline ::chainrpc::Outpoint* SpendDetails::release_spending_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::chainrpc::Outpoint* released = _impl_.spending_outpoint_;
  _impl_.spending_outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::chainrpc::Outpoint* SpendDetails::unsafe_arena_release_spending_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.SpendDetails.spending_outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::chainrpc::Outpoint* temp = _impl_.spending_outpoint_;
  _impl_.spending_outpoint_ = nullptr;
  return temp;
}
inline ::chainrpc::Outpoint* SpendDetails::_internal_mutable_spending_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.spending_outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::chainrpc::Outpoint>(GetArena());
    _impl_.spending_outpoint_ = reinterpret_cast<::chainrpc::Outpoint*>(p);
  }
  return _impl_.spending_outpoint_;
}
inline ::chainrpc::Outpoint* SpendDetails::mutable_spending_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::chainrpc::Outpoint* _msg = _internal_mutable_spending_outpoint();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendDetails.spending_outpoint)
  return _msg;
}
inline void SpendDetails::set_allocated_spending_outpoint(::chainrpc::Outpoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.spending_outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.spending_outpoint_ = reinterpret_cast<::chainrpc::Outpoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:chainrpc.SpendDetails.spending_outpoint)
}

// bytes raw_spending_tx = 2;
inline void SpendDetails::clear_raw_spending_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_spending_tx_.ClearToEmpty();
}
inline const std::string& SpendDetails::raw_spending_tx() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendDetails.raw_spending_tx)
  return _internal_raw_spending_tx();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SpendDetails::set_raw_spending_tx(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_spending_tx_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.SpendDetails.raw_spending_tx)
}
inline std::string* SpendDetails::mutable_raw_spending_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_spending_tx();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendDetails.raw_spending_tx)
  return _s;
}
inline const std::string& SpendDetails::_internal_raw_spending_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_spending_tx_.Get();
}
inline void SpendDetails::_internal_set_raw_spending_tx(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_spending_tx_.Set(value, GetArena());
}
inline std::string* SpendDetails::_internal_mutable_raw_spending_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_spending_tx_.Mutable( GetArena());
}
inline std::string* SpendDetails::release_raw_spending_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.SpendDetails.raw_spending_tx)
  return _impl_.raw_spending_tx_.Release();
}
inline void SpendDetails::set_allocated_raw_spending_tx(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_spending_tx_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_spending_tx_.IsDefault()) {
          _impl_.raw_spending_tx_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.SpendDetails.raw_spending_tx)
}

// bytes spending_tx_hash = 3;
inline void SpendDetails::clear_spending_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_tx_hash_.ClearToEmpty();
}
inline const std::string& SpendDetails::spending_tx_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendDetails.spending_tx_hash)
  return _internal_spending_tx_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SpendDetails::set_spending_tx_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_tx_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.SpendDetails.spending_tx_hash)
}
inline std::string* SpendDetails::mutable_spending_tx_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_spending_tx_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendDetails.spending_tx_hash)
  return _s;
}
inline const std::string& SpendDetails::_internal_spending_tx_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spending_tx_hash_.Get();
}
inline void SpendDetails::_internal_set_spending_tx_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_tx_hash_.Set(value, GetArena());
}
inline std::string* SpendDetails::_internal_mutable_spending_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.spending_tx_hash_.Mutable( GetArena());
}
inline std::string* SpendDetails::release_spending_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.SpendDetails.spending_tx_hash)
  return _impl_.spending_tx_hash_.Release();
}
inline void SpendDetails::set_allocated_spending_tx_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_tx_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.spending_tx_hash_.IsDefault()) {
          _impl_.spending_tx_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.SpendDetails.spending_tx_hash)
}

// uint32 spending_input_index = 4;
inline void SpendDetails::clear_spending_input_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_input_index_ = 0u;
}
inline ::uint32_t SpendDetails::spending_input_index() const {
  // @@protoc_insertion_point(field_get:chainrpc.SpendDetails.spending_input_index)
  return _internal_spending_input_index();
}
inline void SpendDetails::set_spending_input_index(::uint32_t value) {
  _internal_set_spending_input_index(value);
  // @@protoc_insertion_point(field_set:chainrpc.SpendDetails.spending_input_index)
}
inline ::uint32_t SpendDetails::_internal_spending_input_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spending_input_index_;
}
inline void SpendDetails::_internal_set_spending_input_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_input_index_ = value;
}

// uint32 spending_height = 5;
inline void SpendDetails::clear_spending_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_height_ = 0u;
}
inline ::uint32_t SpendDetails::spending_height() const {
  // @@protoc_insertion_point(field_get:chainrpc.SpendDetails.spending_height)
  return _internal_spending_height();
}
inline void SpendDetails::set_spending_height(::uint32_t value) {
  _internal_set_spending_height(value);
  // @@protoc_insertion_point(field_set:chainrpc.SpendDetails.spending_height)
}
inline ::uint32_t SpendDetails::_internal_spending_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spending_height_;
}
inline void SpendDetails::_internal_set_spending_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spending_height_ = value;
}

// -------------------------------------------------------------------

// SpendEvent

// .chainrpc.SpendDetails spend = 1;
inline bool SpendEvent::has_spend() const {
  return event_case() == kSpend;
}
inline bool SpendEvent::_internal_has_spend() const {
  return event_case() == kSpend;
}
inline void SpendEvent::set_has_spend() {
  _impl_._oneof_case_[0] = kSpend;
}
inline void SpendEvent::clear_spend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kSpend) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.spend_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.spend_);
    }
    clear_has_event();
  }
}
inline ::chainrpc::SpendDetails* SpendEvent::release_spend() {
  // @@protoc_insertion_point(field_release:chainrpc.SpendEvent.spend)
  if (event_case() == kSpend) {
    clear_has_event();
    auto* temp = _impl_.event_.spend_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.spend_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chainrpc::SpendDetails& SpendEvent::_internal_spend() const {
  return event_case() == kSpend ? *_impl_.event_.spend_ : reinterpret_cast<::chainrpc::SpendDetails&>(::chainrpc::_SpendDetails_default_instance_);
}
inline const ::chainrpc::SpendDetails& SpendEvent::spend() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendEvent.spend)
  return _internal_spend();
}
inline ::chainrpc::SpendDetails* SpendEvent::unsafe_arena_release_spend() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chainrpc.SpendEvent.spend)
  if (event_case() == kSpend) {
    clear_has_event();
    auto* temp = _impl_.event_.spend_;
    _impl_.event_.spend_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SpendEvent::unsafe_arena_set_allocated_spend(::chainrpc::SpendDetails* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_spend();
    _impl_.event_.spend_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chainrpc.SpendEvent.spend)
}
inline ::chainrpc::SpendDetails* SpendEvent::_internal_mutable_spend() {
  if (event_case() != kSpend) {
    clear_event();
    set_has_spend();
    _impl_.event_.spend_ =
        ::google::protobuf::Message::DefaultConstruct<::chainrpc::SpendDetails>(GetArena());
  }
  return _impl_.event_.spend_;
}
inline ::chainrpc::SpendDetails* SpendEvent::mutable_spend() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chainrpc::SpendDetails* _msg = _internal_mutable_spend();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendEvent.spend)
  return _msg;
}

// .chainrpc.Reorg reorg = 2;
inline bool SpendEvent::has_reorg() const {
  return event_case() == kReorg;
}
inline bool SpendEvent::_internal_has_reorg() const {
  return event_case() == kReorg;
}
inline void SpendEvent::set_has_reorg() {
  _impl_._oneof_case_[0] = kReorg;
}
inline void SpendEvent::clear_reorg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kReorg) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.reorg_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.reorg_);
    }
    clear_has_event();
  }
}
inline ::chainrpc::Reorg* SpendEvent::release_reorg() {
  // @@protoc_insertion_point(field_release:chainrpc.SpendEvent.reorg)
  if (event_case() == kReorg) {
    clear_has_event();
    auto* temp = _impl_.event_.reorg_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.reorg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::chainrpc::Reorg& SpendEvent::_internal_reorg() const {
  return event_case() == kReorg ? *_impl_.event_.reorg_ : reinterpret_cast<::chainrpc::Reorg&>(::chainrpc::_Reorg_default_instance_);
}
inline const ::chainrpc::Reorg& SpendEvent::reorg() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.SpendEvent.reorg)
  return _internal_reorg();
}
inline ::chainrpc::Reorg* SpendEvent::unsafe_arena_release_reorg() {
  // @@protoc_insertion_point(field_unsafe_arena_release:chainrpc.SpendEvent.reorg)
  if (event_case() == kReorg) {
    clear_has_event();
    auto* temp = _impl_.event_.reorg_;
    _impl_.event_.reorg_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SpendEvent::unsafe_arena_set_allocated_reorg(::chainrpc::Reorg* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_reorg();
    _impl_.event_.reorg_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:chainrpc.SpendEvent.reorg)
}
inline ::chainrpc::Reorg* SpendEvent::_internal_mutable_reorg() {
  if (event_case() != kReorg) {
    clear_event();
    set_has_reorg();
    _impl_.event_.reorg_ =
        ::google::protobuf::Message::DefaultConstruct<::chainrpc::Reorg>(GetArena());
  }
  return _impl_.event_.reorg_;
}
inline ::chainrpc::Reorg* SpendEvent::mutable_reorg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::chainrpc::Reorg* _msg = _internal_mutable_reorg();
  // @@protoc_insertion_point(field_mutable:chainrpc.SpendEvent.reorg)
  return _msg;
}

inline bool SpendEvent::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
inline void SpendEvent::clear_has_event() {
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}
inline SpendEvent::EventCase SpendEvent::event_case() const {
  return SpendEvent::EventCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BlockEpoch

// bytes hash = 1;
inline void BlockEpoch::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& BlockEpoch::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.BlockEpoch.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlockEpoch::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.BlockEpoch.hash)
}
inline std::string* BlockEpoch::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.BlockEpoch.hash)
  return _s;
}
inline const std::string& BlockEpoch::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void BlockEpoch::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* BlockEpoch::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* BlockEpoch::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.BlockEpoch.hash)
  return _impl_.hash_.Release();
}
inline void BlockEpoch::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_.IsDefault()) {
          _impl_.hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.BlockEpoch.hash)
}

// uint32 height = 2;
inline void BlockEpoch::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0u;
}
inline ::uint32_t BlockEpoch::height() const {
  // @@protoc_insertion_point(field_get:chainrpc.BlockEpoch.height)
  return _internal_height();
}
inline void BlockEpoch::set_height(::uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:chainrpc.BlockEpoch.height)
}
inline ::uint32_t BlockEpoch::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void BlockEpoch::_internal_set_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace chainrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_chainnotifier_2eproto_2epb_2eh
