// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: peers.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_peers_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_peers_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "lightning.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_peers_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_peers_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_peers_2eproto;
namespace peersrpc {
class NodeAnnouncementUpdateRequest;
struct NodeAnnouncementUpdateRequestDefaultTypeInternal;
extern NodeAnnouncementUpdateRequestDefaultTypeInternal _NodeAnnouncementUpdateRequest_default_instance_;
class NodeAnnouncementUpdateResponse;
struct NodeAnnouncementUpdateResponseDefaultTypeInternal;
extern NodeAnnouncementUpdateResponseDefaultTypeInternal _NodeAnnouncementUpdateResponse_default_instance_;
class UpdateAddressAction;
struct UpdateAddressActionDefaultTypeInternal;
extern UpdateAddressActionDefaultTypeInternal _UpdateAddressAction_default_instance_;
class UpdateFeatureAction;
struct UpdateFeatureActionDefaultTypeInternal;
extern UpdateFeatureActionDefaultTypeInternal _UpdateFeatureAction_default_instance_;
}  // namespace peersrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace peersrpc {
enum UpdateAction : int {
  ADD = 0,
  REMOVE = 1,
  UpdateAction_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UpdateAction_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UpdateAction_IsValid(int value);
extern const uint32_t UpdateAction_internal_data_[];
constexpr UpdateAction UpdateAction_MIN = static_cast<UpdateAction>(0);
constexpr UpdateAction UpdateAction_MAX = static_cast<UpdateAction>(1);
constexpr int UpdateAction_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
UpdateAction_descriptor();
template <typename T>
const std::string& UpdateAction_Name(T value) {
  static_assert(std::is_same<T, UpdateAction>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to UpdateAction_Name().");
  return UpdateAction_Name(static_cast<UpdateAction>(value));
}
template <>
inline const std::string& UpdateAction_Name(UpdateAction value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UpdateAction_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool UpdateAction_Parse(absl::string_view name, UpdateAction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateAction>(
      UpdateAction_descriptor(), name, value);
}
enum FeatureSet : int {
  SET_INIT = 0,
  SET_LEGACY_GLOBAL = 1,
  SET_NODE_ANN = 2,
  SET_INVOICE = 3,
  SET_INVOICE_AMP = 4,
  FeatureSet_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FeatureSet_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FeatureSet_IsValid(int value);
extern const uint32_t FeatureSet_internal_data_[];
constexpr FeatureSet FeatureSet_MIN = static_cast<FeatureSet>(0);
constexpr FeatureSet FeatureSet_MAX = static_cast<FeatureSet>(4);
constexpr int FeatureSet_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
FeatureSet_descriptor();
template <typename T>
const std::string& FeatureSet_Name(T value) {
  static_assert(std::is_same<T, FeatureSet>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FeatureSet_Name().");
  return FeatureSet_Name(static_cast<FeatureSet>(value));
}
template <>
inline const std::string& FeatureSet_Name(FeatureSet value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FeatureSet_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool FeatureSet_Parse(absl::string_view name, FeatureSet* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FeatureSet>(
      FeatureSet_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class UpdateFeatureAction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:peersrpc.UpdateFeatureAction) */ {
 public:
  inline UpdateFeatureAction() : UpdateFeatureAction(nullptr) {}
  ~UpdateFeatureAction() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateFeatureAction(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateFeatureAction(const UpdateFeatureAction& from) : UpdateFeatureAction(nullptr, from) {}
  inline UpdateFeatureAction(UpdateFeatureAction&& from) noexcept
      : UpdateFeatureAction(nullptr, std::move(from)) {}
  inline UpdateFeatureAction& operator=(const UpdateFeatureAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateFeatureAction& operator=(UpdateFeatureAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateFeatureAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateFeatureAction* internal_default_instance() {
    return reinterpret_cast<const UpdateFeatureAction*>(
        &_UpdateFeatureAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(UpdateFeatureAction& a, UpdateFeatureAction& b) { a.Swap(&b); }
  inline void Swap(UpdateFeatureAction* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateFeatureAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateFeatureAction* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateFeatureAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateFeatureAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateFeatureAction& from) { UpdateFeatureAction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateFeatureAction* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "peersrpc.UpdateFeatureAction"; }

 protected:
  explicit UpdateFeatureAction(::google::protobuf::Arena* arena);
  UpdateFeatureAction(::google::protobuf::Arena* arena, const UpdateFeatureAction& from);
  UpdateFeatureAction(::google::protobuf::Arena* arena, UpdateFeatureAction&& from) noexcept
      : UpdateFeatureAction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActionFieldNumber = 1,
    kFeatureBitFieldNumber = 2,
  };
  // .peersrpc.UpdateAction action = 1;
  void clear_action() ;
  ::peersrpc::UpdateAction action() const;
  void set_action(::peersrpc::UpdateAction value);

  private:
  ::peersrpc::UpdateAction _internal_action() const;
  void _internal_set_action(::peersrpc::UpdateAction value);

  public:
  // .lnrpc.FeatureBit feature_bit = 2;
  void clear_feature_bit() ;
  ::lnrpc::FeatureBit feature_bit() const;
  void set_feature_bit(::lnrpc::FeatureBit value);

  private:
  ::lnrpc::FeatureBit _internal_feature_bit() const;
  void _internal_set_feature_bit(::lnrpc::FeatureBit value);

  public:
  // @@protoc_insertion_point(class_scope:peersrpc.UpdateFeatureAction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateFeatureAction_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateFeatureAction& from_msg);
    int action_;
    int feature_bit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_peers_2eproto;
};
// -------------------------------------------------------------------

class UpdateAddressAction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:peersrpc.UpdateAddressAction) */ {
 public:
  inline UpdateAddressAction() : UpdateAddressAction(nullptr) {}
  ~UpdateAddressAction() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateAddressAction(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateAddressAction(const UpdateAddressAction& from) : UpdateAddressAction(nullptr, from) {}
  inline UpdateAddressAction(UpdateAddressAction&& from) noexcept
      : UpdateAddressAction(nullptr, std::move(from)) {}
  inline UpdateAddressAction& operator=(const UpdateAddressAction& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateAddressAction& operator=(UpdateAddressAction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateAddressAction& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateAddressAction* internal_default_instance() {
    return reinterpret_cast<const UpdateAddressAction*>(
        &_UpdateAddressAction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(UpdateAddressAction& a, UpdateAddressAction& b) { a.Swap(&b); }
  inline void Swap(UpdateAddressAction* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateAddressAction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateAddressAction* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UpdateAddressAction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateAddressAction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateAddressAction& from) { UpdateAddressAction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateAddressAction* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "peersrpc.UpdateAddressAction"; }

 protected:
  explicit UpdateAddressAction(::google::protobuf::Arena* arena);
  UpdateAddressAction(::google::protobuf::Arena* arena, const UpdateAddressAction& from);
  UpdateAddressAction(::google::protobuf::Arena* arena, UpdateAddressAction&& from) noexcept
      : UpdateAddressAction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 2,
    kActionFieldNumber = 1,
  };
  // string address = 2;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // .peersrpc.UpdateAction action = 1;
  void clear_action() ;
  ::peersrpc::UpdateAction action() const;
  void set_action(::peersrpc::UpdateAction value);

  private:
  ::peersrpc::UpdateAction _internal_action() const;
  void _internal_set_action(::peersrpc::UpdateAction value);

  public:
  // @@protoc_insertion_point(class_scope:peersrpc.UpdateAddressAction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateAddressAction_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateAddressAction& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    int action_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_peers_2eproto;
};
// -------------------------------------------------------------------

class NodeAnnouncementUpdateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:peersrpc.NodeAnnouncementUpdateResponse) */ {
 public:
  inline NodeAnnouncementUpdateResponse() : NodeAnnouncementUpdateResponse(nullptr) {}
  ~NodeAnnouncementUpdateResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeAnnouncementUpdateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeAnnouncementUpdateResponse(const NodeAnnouncementUpdateResponse& from) : NodeAnnouncementUpdateResponse(nullptr, from) {}
  inline NodeAnnouncementUpdateResponse(NodeAnnouncementUpdateResponse&& from) noexcept
      : NodeAnnouncementUpdateResponse(nullptr, std::move(from)) {}
  inline NodeAnnouncementUpdateResponse& operator=(const NodeAnnouncementUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeAnnouncementUpdateResponse& operator=(NodeAnnouncementUpdateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeAnnouncementUpdateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeAnnouncementUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const NodeAnnouncementUpdateResponse*>(
        &_NodeAnnouncementUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(NodeAnnouncementUpdateResponse& a, NodeAnnouncementUpdateResponse& b) { a.Swap(&b); }
  inline void Swap(NodeAnnouncementUpdateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeAnnouncementUpdateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeAnnouncementUpdateResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeAnnouncementUpdateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeAnnouncementUpdateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeAnnouncementUpdateResponse& from) { NodeAnnouncementUpdateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeAnnouncementUpdateResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "peersrpc.NodeAnnouncementUpdateResponse"; }

 protected:
  explicit NodeAnnouncementUpdateResponse(::google::protobuf::Arena* arena);
  NodeAnnouncementUpdateResponse(::google::protobuf::Arena* arena, const NodeAnnouncementUpdateResponse& from);
  NodeAnnouncementUpdateResponse(::google::protobuf::Arena* arena, NodeAnnouncementUpdateResponse&& from) noexcept
      : NodeAnnouncementUpdateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpsFieldNumber = 1,
  };
  // repeated .lnrpc.Op ops = 1;
  int ops_size() const;
  private:
  int _internal_ops_size() const;

  public:
  void clear_ops() ;
  ::lnrpc::Op* mutable_ops(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Op>* mutable_ops();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>& _internal_ops() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Op>* _internal_mutable_ops();
  public:
  const ::lnrpc::Op& ops(int index) const;
  ::lnrpc::Op* add_ops();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>& ops() const;
  // @@protoc_insertion_point(class_scope:peersrpc.NodeAnnouncementUpdateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeAnnouncementUpdateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeAnnouncementUpdateResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Op > ops_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_peers_2eproto;
};
// -------------------------------------------------------------------

class NodeAnnouncementUpdateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:peersrpc.NodeAnnouncementUpdateRequest) */ {
 public:
  inline NodeAnnouncementUpdateRequest() : NodeAnnouncementUpdateRequest(nullptr) {}
  ~NodeAnnouncementUpdateRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeAnnouncementUpdateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeAnnouncementUpdateRequest(const NodeAnnouncementUpdateRequest& from) : NodeAnnouncementUpdateRequest(nullptr, from) {}
  inline NodeAnnouncementUpdateRequest(NodeAnnouncementUpdateRequest&& from) noexcept
      : NodeAnnouncementUpdateRequest(nullptr, std::move(from)) {}
  inline NodeAnnouncementUpdateRequest& operator=(const NodeAnnouncementUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeAnnouncementUpdateRequest& operator=(NodeAnnouncementUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeAnnouncementUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeAnnouncementUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const NodeAnnouncementUpdateRequest*>(
        &_NodeAnnouncementUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(NodeAnnouncementUpdateRequest& a, NodeAnnouncementUpdateRequest& b) { a.Swap(&b); }
  inline void Swap(NodeAnnouncementUpdateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeAnnouncementUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeAnnouncementUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeAnnouncementUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeAnnouncementUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeAnnouncementUpdateRequest& from) { NodeAnnouncementUpdateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeAnnouncementUpdateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "peersrpc.NodeAnnouncementUpdateRequest"; }

 protected:
  explicit NodeAnnouncementUpdateRequest(::google::protobuf::Arena* arena);
  NodeAnnouncementUpdateRequest(::google::protobuf::Arena* arena, const NodeAnnouncementUpdateRequest& from);
  NodeAnnouncementUpdateRequest(::google::protobuf::Arena* arena, NodeAnnouncementUpdateRequest&& from) noexcept
      : NodeAnnouncementUpdateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeatureUpdatesFieldNumber = 1,
    kAddressUpdatesFieldNumber = 4,
    kColorFieldNumber = 2,
    kAliasFieldNumber = 3,
  };
  // repeated .peersrpc.UpdateFeatureAction feature_updates = 1;
  int feature_updates_size() const;
  private:
  int _internal_feature_updates_size() const;

  public:
  void clear_feature_updates() ;
  ::peersrpc::UpdateFeatureAction* mutable_feature_updates(int index);
  ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>* mutable_feature_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>& _internal_feature_updates() const;
  ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>* _internal_mutable_feature_updates();
  public:
  const ::peersrpc::UpdateFeatureAction& feature_updates(int index) const;
  ::peersrpc::UpdateFeatureAction* add_feature_updates();
  const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>& feature_updates() const;
  // repeated .peersrpc.UpdateAddressAction address_updates = 4;
  int address_updates_size() const;
  private:
  int _internal_address_updates_size() const;

  public:
  void clear_address_updates() ;
  ::peersrpc::UpdateAddressAction* mutable_address_updates(int index);
  ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>* mutable_address_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>& _internal_address_updates() const;
  ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>* _internal_mutable_address_updates();
  public:
  const ::peersrpc::UpdateAddressAction& address_updates(int index) const;
  ::peersrpc::UpdateAddressAction* add_address_updates();
  const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>& address_updates() const;
  // string color = 2;
  void clear_color() ;
  const std::string& color() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color(Arg_&& arg, Args_... args);
  std::string* mutable_color();
  PROTOBUF_NODISCARD std::string* release_color();
  void set_allocated_color(std::string* value);

  private:
  const std::string& _internal_color() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color(
      const std::string& value);
  std::string* _internal_mutable_color();

  public:
  // string alias = 3;
  void clear_alias() ;
  const std::string& alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alias(Arg_&& arg, Args_... args);
  std::string* mutable_alias();
  PROTOBUF_NODISCARD std::string* release_alias();
  void set_allocated_alias(std::string* value);

  private:
  const std::string& _internal_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alias(
      const std::string& value);
  std::string* _internal_mutable_alias();

  public:
  // @@protoc_insertion_point(class_scope:peersrpc.NodeAnnouncementUpdateRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeAnnouncementUpdateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeAnnouncementUpdateRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::peersrpc::UpdateFeatureAction > feature_updates_;
    ::google::protobuf::RepeatedPtrField< ::peersrpc::UpdateAddressAction > address_updates_;
    ::google::protobuf::internal::ArenaStringPtr color_;
    ::google::protobuf::internal::ArenaStringPtr alias_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_peers_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// UpdateAddressAction

// .peersrpc.UpdateAction action = 1;
inline void UpdateAddressAction::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = 0;
}
inline ::peersrpc::UpdateAction UpdateAddressAction::action() const {
  // @@protoc_insertion_point(field_get:peersrpc.UpdateAddressAction.action)
  return _internal_action();
}
inline void UpdateAddressAction::set_action(::peersrpc::UpdateAction value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:peersrpc.UpdateAddressAction.action)
}
inline ::peersrpc::UpdateAction UpdateAddressAction::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::peersrpc::UpdateAction>(_impl_.action_);
}
inline void UpdateAddressAction::_internal_set_action(::peersrpc::UpdateAction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = value;
}

// string address = 2;
inline void UpdateAddressAction::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& UpdateAddressAction::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:peersrpc.UpdateAddressAction.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateAddressAction::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:peersrpc.UpdateAddressAction.address)
}
inline std::string* UpdateAddressAction::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:peersrpc.UpdateAddressAction.address)
  return _s;
}
inline const std::string& UpdateAddressAction::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void UpdateAddressAction::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* UpdateAddressAction::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* UpdateAddressAction::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:peersrpc.UpdateAddressAction.address)
  return _impl_.address_.Release();
}
inline void UpdateAddressAction::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:peersrpc.UpdateAddressAction.address)
}

// -------------------------------------------------------------------

// UpdateFeatureAction

// .peersrpc.UpdateAction action = 1;
inline void UpdateFeatureAction::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = 0;
}
inline ::peersrpc::UpdateAction UpdateFeatureAction::action() const {
  // @@protoc_insertion_point(field_get:peersrpc.UpdateFeatureAction.action)
  return _internal_action();
}
inline void UpdateFeatureAction::set_action(::peersrpc::UpdateAction value) {
  _internal_set_action(value);
  // @@protoc_insertion_point(field_set:peersrpc.UpdateFeatureAction.action)
}
inline ::peersrpc::UpdateAction UpdateFeatureAction::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::peersrpc::UpdateAction>(_impl_.action_);
}
inline void UpdateFeatureAction::_internal_set_action(::peersrpc::UpdateAction value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_ = value;
}

// .lnrpc.FeatureBit feature_bit = 2;
inline void UpdateFeatureAction::clear_feature_bit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_bit_ = 0;
}
inline ::lnrpc::FeatureBit UpdateFeatureAction::feature_bit() const {
  // @@protoc_insertion_point(field_get:peersrpc.UpdateFeatureAction.feature_bit)
  return _internal_feature_bit();
}
inline void UpdateFeatureAction::set_feature_bit(::lnrpc::FeatureBit value) {
  _internal_set_feature_bit(value);
  // @@protoc_insertion_point(field_set:peersrpc.UpdateFeatureAction.feature_bit)
}
inline ::lnrpc::FeatureBit UpdateFeatureAction::_internal_feature_bit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::FeatureBit>(_impl_.feature_bit_);
}
inline void UpdateFeatureAction::_internal_set_feature_bit(::lnrpc::FeatureBit value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_bit_ = value;
}

// -------------------------------------------------------------------

// NodeAnnouncementUpdateRequest

// repeated .peersrpc.UpdateFeatureAction feature_updates = 1;
inline int NodeAnnouncementUpdateRequest::_internal_feature_updates_size() const {
  return _internal_feature_updates().size();
}
inline int NodeAnnouncementUpdateRequest::feature_updates_size() const {
  return _internal_feature_updates_size();
}
inline void NodeAnnouncementUpdateRequest::clear_feature_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feature_updates_.Clear();
}
inline ::peersrpc::UpdateFeatureAction* NodeAnnouncementUpdateRequest::mutable_feature_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:peersrpc.NodeAnnouncementUpdateRequest.feature_updates)
  return _internal_mutable_feature_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>* NodeAnnouncementUpdateRequest::mutable_feature_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:peersrpc.NodeAnnouncementUpdateRequest.feature_updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_feature_updates();
}
inline const ::peersrpc::UpdateFeatureAction& NodeAnnouncementUpdateRequest::feature_updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:peersrpc.NodeAnnouncementUpdateRequest.feature_updates)
  return _internal_feature_updates().Get(index);
}
inline ::peersrpc::UpdateFeatureAction* NodeAnnouncementUpdateRequest::add_feature_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::peersrpc::UpdateFeatureAction* _add = _internal_mutable_feature_updates()->Add();
  // @@protoc_insertion_point(field_add:peersrpc.NodeAnnouncementUpdateRequest.feature_updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>& NodeAnnouncementUpdateRequest::feature_updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:peersrpc.NodeAnnouncementUpdateRequest.feature_updates)
  return _internal_feature_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>&
NodeAnnouncementUpdateRequest::_internal_feature_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feature_updates_;
}
inline ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateFeatureAction>*
NodeAnnouncementUpdateRequest::_internal_mutable_feature_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.feature_updates_;
}

// string color = 2;
inline void NodeAnnouncementUpdateRequest::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.ClearToEmpty();
}
inline const std::string& NodeAnnouncementUpdateRequest::color() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:peersrpc.NodeAnnouncementUpdateRequest.color)
  return _internal_color();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeAnnouncementUpdateRequest::set_color(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:peersrpc.NodeAnnouncementUpdateRequest.color)
}
inline std::string* NodeAnnouncementUpdateRequest::mutable_color() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:peersrpc.NodeAnnouncementUpdateRequest.color)
  return _s;
}
inline const std::string& NodeAnnouncementUpdateRequest::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_.Get();
}
inline void NodeAnnouncementUpdateRequest::_internal_set_color(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(value, GetArena());
}
inline std::string* NodeAnnouncementUpdateRequest::_internal_mutable_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.color_.Mutable( GetArena());
}
inline std::string* NodeAnnouncementUpdateRequest::release_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:peersrpc.NodeAnnouncementUpdateRequest.color)
  return _impl_.color_.Release();
}
inline void NodeAnnouncementUpdateRequest::set_allocated_color(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.color_.IsDefault()) {
          _impl_.color_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:peersrpc.NodeAnnouncementUpdateRequest.color)
}

// string alias = 3;
inline void NodeAnnouncementUpdateRequest::clear_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.ClearToEmpty();
}
inline const std::string& NodeAnnouncementUpdateRequest::alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:peersrpc.NodeAnnouncementUpdateRequest.alias)
  return _internal_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeAnnouncementUpdateRequest::set_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:peersrpc.NodeAnnouncementUpdateRequest.alias)
}
inline std::string* NodeAnnouncementUpdateRequest::mutable_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alias();
  // @@protoc_insertion_point(field_mutable:peersrpc.NodeAnnouncementUpdateRequest.alias)
  return _s;
}
inline const std::string& NodeAnnouncementUpdateRequest::_internal_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_.Get();
}
inline void NodeAnnouncementUpdateRequest::_internal_set_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(value, GetArena());
}
inline std::string* NodeAnnouncementUpdateRequest::_internal_mutable_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alias_.Mutable( GetArena());
}
inline std::string* NodeAnnouncementUpdateRequest::release_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:peersrpc.NodeAnnouncementUpdateRequest.alias)
  return _impl_.alias_.Release();
}
inline void NodeAnnouncementUpdateRequest::set_allocated_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.alias_.IsDefault()) {
          _impl_.alias_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:peersrpc.NodeAnnouncementUpdateRequest.alias)
}

// repeated .peersrpc.UpdateAddressAction address_updates = 4;
inline int NodeAnnouncementUpdateRequest::_internal_address_updates_size() const {
  return _internal_address_updates().size();
}
inline int NodeAnnouncementUpdateRequest::address_updates_size() const {
  return _internal_address_updates_size();
}
inline void NodeAnnouncementUpdateRequest::clear_address_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_updates_.Clear();
}
inline ::peersrpc::UpdateAddressAction* NodeAnnouncementUpdateRequest::mutable_address_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:peersrpc.NodeAnnouncementUpdateRequest.address_updates)
  return _internal_mutable_address_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>* NodeAnnouncementUpdateRequest::mutable_address_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:peersrpc.NodeAnnouncementUpdateRequest.address_updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_address_updates();
}
inline const ::peersrpc::UpdateAddressAction& NodeAnnouncementUpdateRequest::address_updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:peersrpc.NodeAnnouncementUpdateRequest.address_updates)
  return _internal_address_updates().Get(index);
}
inline ::peersrpc::UpdateAddressAction* NodeAnnouncementUpdateRequest::add_address_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::peersrpc::UpdateAddressAction* _add = _internal_mutable_address_updates()->Add();
  // @@protoc_insertion_point(field_add:peersrpc.NodeAnnouncementUpdateRequest.address_updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>& NodeAnnouncementUpdateRequest::address_updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:peersrpc.NodeAnnouncementUpdateRequest.address_updates)
  return _internal_address_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>&
NodeAnnouncementUpdateRequest::_internal_address_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_updates_;
}
inline ::google::protobuf::RepeatedPtrField<::peersrpc::UpdateAddressAction>*
NodeAnnouncementUpdateRequest::_internal_mutable_address_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.address_updates_;
}

// -------------------------------------------------------------------

// NodeAnnouncementUpdateResponse

// repeated .lnrpc.Op ops = 1;
inline int NodeAnnouncementUpdateResponse::_internal_ops_size() const {
  return _internal_ops().size();
}
inline int NodeAnnouncementUpdateResponse::ops_size() const {
  return _internal_ops_size();
}
inline ::lnrpc::Op* NodeAnnouncementUpdateResponse::mutable_ops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:peersrpc.NodeAnnouncementUpdateResponse.ops)
  return _internal_mutable_ops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Op>* NodeAnnouncementUpdateResponse::mutable_ops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:peersrpc.NodeAnnouncementUpdateResponse.ops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ops();
}
inline const ::lnrpc::Op& NodeAnnouncementUpdateResponse::ops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:peersrpc.NodeAnnouncementUpdateResponse.ops)
  return _internal_ops().Get(index);
}
inline ::lnrpc::Op* NodeAnnouncementUpdateResponse::add_ops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Op* _add = _internal_mutable_ops()->Add();
  // @@protoc_insertion_point(field_add:peersrpc.NodeAnnouncementUpdateResponse.ops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>& NodeAnnouncementUpdateResponse::ops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:peersrpc.NodeAnnouncementUpdateResponse.ops)
  return _internal_ops();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>&
NodeAnnouncementUpdateResponse::_internal_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ops_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Op>*
NodeAnnouncementUpdateResponse::_internal_mutable_ops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ops_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace peersrpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::peersrpc::UpdateAction> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::peersrpc::UpdateAction>() {
  return ::peersrpc::UpdateAction_descriptor();
}
template <>
struct is_proto_enum<::peersrpc::FeatureSet> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::peersrpc::FeatureSet>() {
  return ::peersrpc::FeatureSet_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_peers_2eproto_2epb_2eh
