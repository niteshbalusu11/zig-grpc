// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lightning.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_lightning_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_lightning_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_lightning_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_lightning_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_lightning_2eproto;
namespace lnrpc {
class AMP;
struct AMPDefaultTypeInternal;
extern AMPDefaultTypeInternal _AMP_default_instance_;
class AMPInvoiceState;
struct AMPInvoiceStateDefaultTypeInternal;
extern AMPInvoiceStateDefaultTypeInternal _AMPInvoiceState_default_instance_;
class AMPRecord;
struct AMPRecordDefaultTypeInternal;
extern AMPRecordDefaultTypeInternal _AMPRecord_default_instance_;
class AbandonChannelRequest;
struct AbandonChannelRequestDefaultTypeInternal;
extern AbandonChannelRequestDefaultTypeInternal _AbandonChannelRequest_default_instance_;
class AbandonChannelResponse;
struct AbandonChannelResponseDefaultTypeInternal;
extern AbandonChannelResponseDefaultTypeInternal _AbandonChannelResponse_default_instance_;
class AddInvoiceResponse;
struct AddInvoiceResponseDefaultTypeInternal;
extern AddInvoiceResponseDefaultTypeInternal _AddInvoiceResponse_default_instance_;
class AliasMap;
struct AliasMapDefaultTypeInternal;
extern AliasMapDefaultTypeInternal _AliasMap_default_instance_;
class Amount;
struct AmountDefaultTypeInternal;
extern AmountDefaultTypeInternal _Amount_default_instance_;
class BakeMacaroonRequest;
struct BakeMacaroonRequestDefaultTypeInternal;
extern BakeMacaroonRequestDefaultTypeInternal _BakeMacaroonRequest_default_instance_;
class BakeMacaroonResponse;
struct BakeMacaroonResponseDefaultTypeInternal;
extern BakeMacaroonResponseDefaultTypeInternal _BakeMacaroonResponse_default_instance_;
class BatchOpenChannel;
struct BatchOpenChannelDefaultTypeInternal;
extern BatchOpenChannelDefaultTypeInternal _BatchOpenChannel_default_instance_;
class BatchOpenChannelRequest;
struct BatchOpenChannelRequestDefaultTypeInternal;
extern BatchOpenChannelRequestDefaultTypeInternal _BatchOpenChannelRequest_default_instance_;
class BatchOpenChannelResponse;
struct BatchOpenChannelResponseDefaultTypeInternal;
extern BatchOpenChannelResponseDefaultTypeInternal _BatchOpenChannelResponse_default_instance_;
class BlindedHop;
struct BlindedHopDefaultTypeInternal;
extern BlindedHopDefaultTypeInternal _BlindedHop_default_instance_;
class BlindedPath;
struct BlindedPathDefaultTypeInternal;
extern BlindedPathDefaultTypeInternal _BlindedPath_default_instance_;
class BlindedPathConfig;
struct BlindedPathConfigDefaultTypeInternal;
extern BlindedPathConfigDefaultTypeInternal _BlindedPathConfig_default_instance_;
class BlindedPaymentPath;
struct BlindedPaymentPathDefaultTypeInternal;
extern BlindedPaymentPathDefaultTypeInternal _BlindedPaymentPath_default_instance_;
class Chain;
struct ChainDefaultTypeInternal;
extern ChainDefaultTypeInternal _Chain_default_instance_;
class ChanBackupExportRequest;
struct ChanBackupExportRequestDefaultTypeInternal;
extern ChanBackupExportRequestDefaultTypeInternal _ChanBackupExportRequest_default_instance_;
class ChanBackupSnapshot;
struct ChanBackupSnapshotDefaultTypeInternal;
extern ChanBackupSnapshotDefaultTypeInternal _ChanBackupSnapshot_default_instance_;
class ChanInfoRequest;
struct ChanInfoRequestDefaultTypeInternal;
extern ChanInfoRequestDefaultTypeInternal _ChanInfoRequest_default_instance_;
class ChanPointShim;
struct ChanPointShimDefaultTypeInternal;
extern ChanPointShimDefaultTypeInternal _ChanPointShim_default_instance_;
class Channel;
struct ChannelDefaultTypeInternal;
extern ChannelDefaultTypeInternal _Channel_default_instance_;
class ChannelAcceptRequest;
struct ChannelAcceptRequestDefaultTypeInternal;
extern ChannelAcceptRequestDefaultTypeInternal _ChannelAcceptRequest_default_instance_;
class ChannelAcceptResponse;
struct ChannelAcceptResponseDefaultTypeInternal;
extern ChannelAcceptResponseDefaultTypeInternal _ChannelAcceptResponse_default_instance_;
class ChannelBackup;
struct ChannelBackupDefaultTypeInternal;
extern ChannelBackupDefaultTypeInternal _ChannelBackup_default_instance_;
class ChannelBackupSubscription;
struct ChannelBackupSubscriptionDefaultTypeInternal;
extern ChannelBackupSubscriptionDefaultTypeInternal _ChannelBackupSubscription_default_instance_;
class ChannelBackups;
struct ChannelBackupsDefaultTypeInternal;
extern ChannelBackupsDefaultTypeInternal _ChannelBackups_default_instance_;
class ChannelBalanceRequest;
struct ChannelBalanceRequestDefaultTypeInternal;
extern ChannelBalanceRequestDefaultTypeInternal _ChannelBalanceRequest_default_instance_;
class ChannelBalanceResponse;
struct ChannelBalanceResponseDefaultTypeInternal;
extern ChannelBalanceResponseDefaultTypeInternal _ChannelBalanceResponse_default_instance_;
class ChannelCloseSummary;
struct ChannelCloseSummaryDefaultTypeInternal;
extern ChannelCloseSummaryDefaultTypeInternal _ChannelCloseSummary_default_instance_;
class ChannelCloseUpdate;
struct ChannelCloseUpdateDefaultTypeInternal;
extern ChannelCloseUpdateDefaultTypeInternal _ChannelCloseUpdate_default_instance_;
class ChannelConstraints;
struct ChannelConstraintsDefaultTypeInternal;
extern ChannelConstraintsDefaultTypeInternal _ChannelConstraints_default_instance_;
class ChannelEdge;
struct ChannelEdgeDefaultTypeInternal;
extern ChannelEdgeDefaultTypeInternal _ChannelEdge_default_instance_;
class ChannelEdgeUpdate;
struct ChannelEdgeUpdateDefaultTypeInternal;
extern ChannelEdgeUpdateDefaultTypeInternal _ChannelEdgeUpdate_default_instance_;
class ChannelEdge_CustomRecordsEntry_DoNotUse;
struct ChannelEdge_CustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern ChannelEdge_CustomRecordsEntry_DoNotUseDefaultTypeInternal _ChannelEdge_CustomRecordsEntry_DoNotUse_default_instance_;
class ChannelEventSubscription;
struct ChannelEventSubscriptionDefaultTypeInternal;
extern ChannelEventSubscriptionDefaultTypeInternal _ChannelEventSubscription_default_instance_;
class ChannelEventUpdate;
struct ChannelEventUpdateDefaultTypeInternal;
extern ChannelEventUpdateDefaultTypeInternal _ChannelEventUpdate_default_instance_;
class ChannelFeeReport;
struct ChannelFeeReportDefaultTypeInternal;
extern ChannelFeeReportDefaultTypeInternal _ChannelFeeReport_default_instance_;
class ChannelGraph;
struct ChannelGraphDefaultTypeInternal;
extern ChannelGraphDefaultTypeInternal _ChannelGraph_default_instance_;
class ChannelGraphRequest;
struct ChannelGraphRequestDefaultTypeInternal;
extern ChannelGraphRequestDefaultTypeInternal _ChannelGraphRequest_default_instance_;
class ChannelOpenUpdate;
struct ChannelOpenUpdateDefaultTypeInternal;
extern ChannelOpenUpdateDefaultTypeInternal _ChannelOpenUpdate_default_instance_;
class ChannelPoint;
struct ChannelPointDefaultTypeInternal;
extern ChannelPointDefaultTypeInternal _ChannelPoint_default_instance_;
class ChannelUpdate;
struct ChannelUpdateDefaultTypeInternal;
extern ChannelUpdateDefaultTypeInternal _ChannelUpdate_default_instance_;
class CheckMacPermRequest;
struct CheckMacPermRequestDefaultTypeInternal;
extern CheckMacPermRequestDefaultTypeInternal _CheckMacPermRequest_default_instance_;
class CheckMacPermResponse;
struct CheckMacPermResponseDefaultTypeInternal;
extern CheckMacPermResponseDefaultTypeInternal _CheckMacPermResponse_default_instance_;
class CloseChannelRequest;
struct CloseChannelRequestDefaultTypeInternal;
extern CloseChannelRequestDefaultTypeInternal _CloseChannelRequest_default_instance_;
class CloseOutput;
struct CloseOutputDefaultTypeInternal;
extern CloseOutputDefaultTypeInternal _CloseOutput_default_instance_;
class CloseStatusUpdate;
struct CloseStatusUpdateDefaultTypeInternal;
extern CloseStatusUpdateDefaultTypeInternal _CloseStatusUpdate_default_instance_;
class ClosedChannelUpdate;
struct ClosedChannelUpdateDefaultTypeInternal;
extern ClosedChannelUpdateDefaultTypeInternal _ClosedChannelUpdate_default_instance_;
class ClosedChannelsRequest;
struct ClosedChannelsRequestDefaultTypeInternal;
extern ClosedChannelsRequestDefaultTypeInternal _ClosedChannelsRequest_default_instance_;
class ClosedChannelsResponse;
struct ClosedChannelsResponseDefaultTypeInternal;
extern ClosedChannelsResponseDefaultTypeInternal _ClosedChannelsResponse_default_instance_;
class ConfirmationUpdate;
struct ConfirmationUpdateDefaultTypeInternal;
extern ConfirmationUpdateDefaultTypeInternal _ConfirmationUpdate_default_instance_;
class ConnectPeerRequest;
struct ConnectPeerRequestDefaultTypeInternal;
extern ConnectPeerRequestDefaultTypeInternal _ConnectPeerRequest_default_instance_;
class ConnectPeerResponse;
struct ConnectPeerResponseDefaultTypeInternal;
extern ConnectPeerResponseDefaultTypeInternal _ConnectPeerResponse_default_instance_;
class CustomMessage;
struct CustomMessageDefaultTypeInternal;
extern CustomMessageDefaultTypeInternal _CustomMessage_default_instance_;
class DebugLevelRequest;
struct DebugLevelRequestDefaultTypeInternal;
extern DebugLevelRequestDefaultTypeInternal _DebugLevelRequest_default_instance_;
class DebugLevelResponse;
struct DebugLevelResponseDefaultTypeInternal;
extern DebugLevelResponseDefaultTypeInternal _DebugLevelResponse_default_instance_;
class DeleteAllPaymentsRequest;
struct DeleteAllPaymentsRequestDefaultTypeInternal;
extern DeleteAllPaymentsRequestDefaultTypeInternal _DeleteAllPaymentsRequest_default_instance_;
class DeleteAllPaymentsResponse;
struct DeleteAllPaymentsResponseDefaultTypeInternal;
extern DeleteAllPaymentsResponseDefaultTypeInternal _DeleteAllPaymentsResponse_default_instance_;
class DeleteMacaroonIDRequest;
struct DeleteMacaroonIDRequestDefaultTypeInternal;
extern DeleteMacaroonIDRequestDefaultTypeInternal _DeleteMacaroonIDRequest_default_instance_;
class DeleteMacaroonIDResponse;
struct DeleteMacaroonIDResponseDefaultTypeInternal;
extern DeleteMacaroonIDResponseDefaultTypeInternal _DeleteMacaroonIDResponse_default_instance_;
class DeletePaymentRequest;
struct DeletePaymentRequestDefaultTypeInternal;
extern DeletePaymentRequestDefaultTypeInternal _DeletePaymentRequest_default_instance_;
class DeletePaymentResponse;
struct DeletePaymentResponseDefaultTypeInternal;
extern DeletePaymentResponseDefaultTypeInternal _DeletePaymentResponse_default_instance_;
class DisconnectPeerRequest;
struct DisconnectPeerRequestDefaultTypeInternal;
extern DisconnectPeerRequestDefaultTypeInternal _DisconnectPeerRequest_default_instance_;
class DisconnectPeerResponse;
struct DisconnectPeerResponseDefaultTypeInternal;
extern DisconnectPeerResponseDefaultTypeInternal _DisconnectPeerResponse_default_instance_;
class EdgeLocator;
struct EdgeLocatorDefaultTypeInternal;
extern EdgeLocatorDefaultTypeInternal _EdgeLocator_default_instance_;
class EstimateFeeRequest;
struct EstimateFeeRequestDefaultTypeInternal;
extern EstimateFeeRequestDefaultTypeInternal _EstimateFeeRequest_default_instance_;
class EstimateFeeRequest_AddrToAmountEntry_DoNotUse;
struct EstimateFeeRequest_AddrToAmountEntry_DoNotUseDefaultTypeInternal;
extern EstimateFeeRequest_AddrToAmountEntry_DoNotUseDefaultTypeInternal _EstimateFeeRequest_AddrToAmountEntry_DoNotUse_default_instance_;
class EstimateFeeResponse;
struct EstimateFeeResponseDefaultTypeInternal;
extern EstimateFeeResponseDefaultTypeInternal _EstimateFeeResponse_default_instance_;
class ExportChannelBackupRequest;
struct ExportChannelBackupRequestDefaultTypeInternal;
extern ExportChannelBackupRequestDefaultTypeInternal _ExportChannelBackupRequest_default_instance_;
class FailedUpdate;
struct FailedUpdateDefaultTypeInternal;
extern FailedUpdateDefaultTypeInternal _FailedUpdate_default_instance_;
class Failure;
struct FailureDefaultTypeInternal;
extern FailureDefaultTypeInternal _Failure_default_instance_;
class Feature;
struct FeatureDefaultTypeInternal;
extern FeatureDefaultTypeInternal _Feature_default_instance_;
class FeeLimit;
struct FeeLimitDefaultTypeInternal;
extern FeeLimitDefaultTypeInternal _FeeLimit_default_instance_;
class FeeReportRequest;
struct FeeReportRequestDefaultTypeInternal;
extern FeeReportRequestDefaultTypeInternal _FeeReportRequest_default_instance_;
class FeeReportResponse;
struct FeeReportResponseDefaultTypeInternal;
extern FeeReportResponseDefaultTypeInternal _FeeReportResponse_default_instance_;
class FloatMetric;
struct FloatMetricDefaultTypeInternal;
extern FloatMetricDefaultTypeInternal _FloatMetric_default_instance_;
class ForwardingEvent;
struct ForwardingEventDefaultTypeInternal;
extern ForwardingEventDefaultTypeInternal _ForwardingEvent_default_instance_;
class ForwardingHistoryRequest;
struct ForwardingHistoryRequestDefaultTypeInternal;
extern ForwardingHistoryRequestDefaultTypeInternal _ForwardingHistoryRequest_default_instance_;
class ForwardingHistoryResponse;
struct ForwardingHistoryResponseDefaultTypeInternal;
extern ForwardingHistoryResponseDefaultTypeInternal _ForwardingHistoryResponse_default_instance_;
class FundingPsbtFinalize;
struct FundingPsbtFinalizeDefaultTypeInternal;
extern FundingPsbtFinalizeDefaultTypeInternal _FundingPsbtFinalize_default_instance_;
class FundingPsbtVerify;
struct FundingPsbtVerifyDefaultTypeInternal;
extern FundingPsbtVerifyDefaultTypeInternal _FundingPsbtVerify_default_instance_;
class FundingShim;
struct FundingShimDefaultTypeInternal;
extern FundingShimDefaultTypeInternal _FundingShim_default_instance_;
class FundingShimCancel;
struct FundingShimCancelDefaultTypeInternal;
extern FundingShimCancelDefaultTypeInternal _FundingShimCancel_default_instance_;
class FundingStateStepResp;
struct FundingStateStepRespDefaultTypeInternal;
extern FundingStateStepRespDefaultTypeInternal _FundingStateStepResp_default_instance_;
class FundingTransitionMsg;
struct FundingTransitionMsgDefaultTypeInternal;
extern FundingTransitionMsgDefaultTypeInternal _FundingTransitionMsg_default_instance_;
class GetDebugInfoRequest;
struct GetDebugInfoRequestDefaultTypeInternal;
extern GetDebugInfoRequestDefaultTypeInternal _GetDebugInfoRequest_default_instance_;
class GetDebugInfoResponse;
struct GetDebugInfoResponseDefaultTypeInternal;
extern GetDebugInfoResponseDefaultTypeInternal _GetDebugInfoResponse_default_instance_;
class GetDebugInfoResponse_ConfigEntry_DoNotUse;
struct GetDebugInfoResponse_ConfigEntry_DoNotUseDefaultTypeInternal;
extern GetDebugInfoResponse_ConfigEntry_DoNotUseDefaultTypeInternal _GetDebugInfoResponse_ConfigEntry_DoNotUse_default_instance_;
class GetInfoRequest;
struct GetInfoRequestDefaultTypeInternal;
extern GetInfoRequestDefaultTypeInternal _GetInfoRequest_default_instance_;
class GetInfoResponse;
struct GetInfoResponseDefaultTypeInternal;
extern GetInfoResponseDefaultTypeInternal _GetInfoResponse_default_instance_;
class GetInfoResponse_FeaturesEntry_DoNotUse;
struct GetInfoResponse_FeaturesEntry_DoNotUseDefaultTypeInternal;
extern GetInfoResponse_FeaturesEntry_DoNotUseDefaultTypeInternal _GetInfoResponse_FeaturesEntry_DoNotUse_default_instance_;
class GetRecoveryInfoRequest;
struct GetRecoveryInfoRequestDefaultTypeInternal;
extern GetRecoveryInfoRequestDefaultTypeInternal _GetRecoveryInfoRequest_default_instance_;
class GetRecoveryInfoResponse;
struct GetRecoveryInfoResponseDefaultTypeInternal;
extern GetRecoveryInfoResponseDefaultTypeInternal _GetRecoveryInfoResponse_default_instance_;
class GetTransactionsRequest;
struct GetTransactionsRequestDefaultTypeInternal;
extern GetTransactionsRequestDefaultTypeInternal _GetTransactionsRequest_default_instance_;
class GraphTopologySubscription;
struct GraphTopologySubscriptionDefaultTypeInternal;
extern GraphTopologySubscriptionDefaultTypeInternal _GraphTopologySubscription_default_instance_;
class GraphTopologyUpdate;
struct GraphTopologyUpdateDefaultTypeInternal;
extern GraphTopologyUpdateDefaultTypeInternal _GraphTopologyUpdate_default_instance_;
class HTLC;
struct HTLCDefaultTypeInternal;
extern HTLCDefaultTypeInternal _HTLC_default_instance_;
class HTLCAttempt;
struct HTLCAttemptDefaultTypeInternal;
extern HTLCAttemptDefaultTypeInternal _HTLCAttempt_default_instance_;
class Hop;
struct HopDefaultTypeInternal;
extern HopDefaultTypeInternal _Hop_default_instance_;
class HopHint;
struct HopHintDefaultTypeInternal;
extern HopHintDefaultTypeInternal _HopHint_default_instance_;
class Hop_CustomRecordsEntry_DoNotUse;
struct Hop_CustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern Hop_CustomRecordsEntry_DoNotUseDefaultTypeInternal _Hop_CustomRecordsEntry_DoNotUse_default_instance_;
class InboundFee;
struct InboundFeeDefaultTypeInternal;
extern InboundFeeDefaultTypeInternal _InboundFee_default_instance_;
class InstantUpdate;
struct InstantUpdateDefaultTypeInternal;
extern InstantUpdateDefaultTypeInternal _InstantUpdate_default_instance_;
class InterceptFeedback;
struct InterceptFeedbackDefaultTypeInternal;
extern InterceptFeedbackDefaultTypeInternal _InterceptFeedback_default_instance_;
class Invoice;
struct InvoiceDefaultTypeInternal;
extern InvoiceDefaultTypeInternal _Invoice_default_instance_;
class InvoiceHTLC;
struct InvoiceHTLCDefaultTypeInternal;
extern InvoiceHTLCDefaultTypeInternal _InvoiceHTLC_default_instance_;
class InvoiceHTLC_CustomRecordsEntry_DoNotUse;
struct InvoiceHTLC_CustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern InvoiceHTLC_CustomRecordsEntry_DoNotUseDefaultTypeInternal _InvoiceHTLC_CustomRecordsEntry_DoNotUse_default_instance_;
class InvoiceSubscription;
struct InvoiceSubscriptionDefaultTypeInternal;
extern InvoiceSubscriptionDefaultTypeInternal _InvoiceSubscription_default_instance_;
class Invoice_AmpInvoiceStateEntry_DoNotUse;
struct Invoice_AmpInvoiceStateEntry_DoNotUseDefaultTypeInternal;
extern Invoice_AmpInvoiceStateEntry_DoNotUseDefaultTypeInternal _Invoice_AmpInvoiceStateEntry_DoNotUse_default_instance_;
class Invoice_FeaturesEntry_DoNotUse;
struct Invoice_FeaturesEntry_DoNotUseDefaultTypeInternal;
extern Invoice_FeaturesEntry_DoNotUseDefaultTypeInternal _Invoice_FeaturesEntry_DoNotUse_default_instance_;
class KeyDescriptor;
struct KeyDescriptorDefaultTypeInternal;
extern KeyDescriptorDefaultTypeInternal _KeyDescriptor_default_instance_;
class KeyLocator;
struct KeyLocatorDefaultTypeInternal;
extern KeyLocatorDefaultTypeInternal _KeyLocator_default_instance_;
class LightningAddress;
struct LightningAddressDefaultTypeInternal;
extern LightningAddressDefaultTypeInternal _LightningAddress_default_instance_;
class LightningNode;
struct LightningNodeDefaultTypeInternal;
extern LightningNodeDefaultTypeInternal _LightningNode_default_instance_;
class LightningNode_CustomRecordsEntry_DoNotUse;
struct LightningNode_CustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern LightningNode_CustomRecordsEntry_DoNotUseDefaultTypeInternal _LightningNode_CustomRecordsEntry_DoNotUse_default_instance_;
class LightningNode_FeaturesEntry_DoNotUse;
struct LightningNode_FeaturesEntry_DoNotUseDefaultTypeInternal;
extern LightningNode_FeaturesEntry_DoNotUseDefaultTypeInternal _LightningNode_FeaturesEntry_DoNotUse_default_instance_;
class ListAliasesRequest;
struct ListAliasesRequestDefaultTypeInternal;
extern ListAliasesRequestDefaultTypeInternal _ListAliasesRequest_default_instance_;
class ListAliasesResponse;
struct ListAliasesResponseDefaultTypeInternal;
extern ListAliasesResponseDefaultTypeInternal _ListAliasesResponse_default_instance_;
class ListChannelsRequest;
struct ListChannelsRequestDefaultTypeInternal;
extern ListChannelsRequestDefaultTypeInternal _ListChannelsRequest_default_instance_;
class ListChannelsResponse;
struct ListChannelsResponseDefaultTypeInternal;
extern ListChannelsResponseDefaultTypeInternal _ListChannelsResponse_default_instance_;
class ListInvoiceRequest;
struct ListInvoiceRequestDefaultTypeInternal;
extern ListInvoiceRequestDefaultTypeInternal _ListInvoiceRequest_default_instance_;
class ListInvoiceResponse;
struct ListInvoiceResponseDefaultTypeInternal;
extern ListInvoiceResponseDefaultTypeInternal _ListInvoiceResponse_default_instance_;
class ListMacaroonIDsRequest;
struct ListMacaroonIDsRequestDefaultTypeInternal;
extern ListMacaroonIDsRequestDefaultTypeInternal _ListMacaroonIDsRequest_default_instance_;
class ListMacaroonIDsResponse;
struct ListMacaroonIDsResponseDefaultTypeInternal;
extern ListMacaroonIDsResponseDefaultTypeInternal _ListMacaroonIDsResponse_default_instance_;
class ListPaymentsRequest;
struct ListPaymentsRequestDefaultTypeInternal;
extern ListPaymentsRequestDefaultTypeInternal _ListPaymentsRequest_default_instance_;
class ListPaymentsResponse;
struct ListPaymentsResponseDefaultTypeInternal;
extern ListPaymentsResponseDefaultTypeInternal _ListPaymentsResponse_default_instance_;
class ListPeersRequest;
struct ListPeersRequestDefaultTypeInternal;
extern ListPeersRequestDefaultTypeInternal _ListPeersRequest_default_instance_;
class ListPeersResponse;
struct ListPeersResponseDefaultTypeInternal;
extern ListPeersResponseDefaultTypeInternal _ListPeersResponse_default_instance_;
class ListPermissionsRequest;
struct ListPermissionsRequestDefaultTypeInternal;
extern ListPermissionsRequestDefaultTypeInternal _ListPermissionsRequest_default_instance_;
class ListPermissionsResponse;
struct ListPermissionsResponseDefaultTypeInternal;
extern ListPermissionsResponseDefaultTypeInternal _ListPermissionsResponse_default_instance_;
class ListPermissionsResponse_MethodPermissionsEntry_DoNotUse;
struct ListPermissionsResponse_MethodPermissionsEntry_DoNotUseDefaultTypeInternal;
extern ListPermissionsResponse_MethodPermissionsEntry_DoNotUseDefaultTypeInternal _ListPermissionsResponse_MethodPermissionsEntry_DoNotUse_default_instance_;
class ListUnspentRequest;
struct ListUnspentRequestDefaultTypeInternal;
extern ListUnspentRequestDefaultTypeInternal _ListUnspentRequest_default_instance_;
class ListUnspentResponse;
struct ListUnspentResponseDefaultTypeInternal;
extern ListUnspentResponseDefaultTypeInternal _ListUnspentResponse_default_instance_;
class LookupHtlcResolutionRequest;
struct LookupHtlcResolutionRequestDefaultTypeInternal;
extern LookupHtlcResolutionRequestDefaultTypeInternal _LookupHtlcResolutionRequest_default_instance_;
class LookupHtlcResolutionResponse;
struct LookupHtlcResolutionResponseDefaultTypeInternal;
extern LookupHtlcResolutionResponseDefaultTypeInternal _LookupHtlcResolutionResponse_default_instance_;
class MPPRecord;
struct MPPRecordDefaultTypeInternal;
extern MPPRecordDefaultTypeInternal _MPPRecord_default_instance_;
class MacaroonId;
struct MacaroonIdDefaultTypeInternal;
extern MacaroonIdDefaultTypeInternal _MacaroonId_default_instance_;
class MacaroonPermission;
struct MacaroonPermissionDefaultTypeInternal;
extern MacaroonPermissionDefaultTypeInternal _MacaroonPermission_default_instance_;
class MacaroonPermissionList;
struct MacaroonPermissionListDefaultTypeInternal;
extern MacaroonPermissionListDefaultTypeInternal _MacaroonPermissionList_default_instance_;
class MiddlewareRegistration;
struct MiddlewareRegistrationDefaultTypeInternal;
extern MiddlewareRegistrationDefaultTypeInternal _MiddlewareRegistration_default_instance_;
class MultiChanBackup;
struct MultiChanBackupDefaultTypeInternal;
extern MultiChanBackupDefaultTypeInternal _MultiChanBackup_default_instance_;
class NetworkInfo;
struct NetworkInfoDefaultTypeInternal;
extern NetworkInfoDefaultTypeInternal _NetworkInfo_default_instance_;
class NetworkInfoRequest;
struct NetworkInfoRequestDefaultTypeInternal;
extern NetworkInfoRequestDefaultTypeInternal _NetworkInfoRequest_default_instance_;
class NewAddressRequest;
struct NewAddressRequestDefaultTypeInternal;
extern NewAddressRequestDefaultTypeInternal _NewAddressRequest_default_instance_;
class NewAddressResponse;
struct NewAddressResponseDefaultTypeInternal;
extern NewAddressResponseDefaultTypeInternal _NewAddressResponse_default_instance_;
class NodeAddress;
struct NodeAddressDefaultTypeInternal;
extern NodeAddressDefaultTypeInternal _NodeAddress_default_instance_;
class NodeInfo;
struct NodeInfoDefaultTypeInternal;
extern NodeInfoDefaultTypeInternal _NodeInfo_default_instance_;
class NodeInfoRequest;
struct NodeInfoRequestDefaultTypeInternal;
extern NodeInfoRequestDefaultTypeInternal _NodeInfoRequest_default_instance_;
class NodeMetricsRequest;
struct NodeMetricsRequestDefaultTypeInternal;
extern NodeMetricsRequestDefaultTypeInternal _NodeMetricsRequest_default_instance_;
class NodeMetricsResponse;
struct NodeMetricsResponseDefaultTypeInternal;
extern NodeMetricsResponseDefaultTypeInternal _NodeMetricsResponse_default_instance_;
class NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse;
struct NodeMetricsResponse_BetweennessCentralityEntry_DoNotUseDefaultTypeInternal;
extern NodeMetricsResponse_BetweennessCentralityEntry_DoNotUseDefaultTypeInternal _NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse_default_instance_;
class NodePair;
struct NodePairDefaultTypeInternal;
extern NodePairDefaultTypeInternal _NodePair_default_instance_;
class NodeUpdate;
struct NodeUpdateDefaultTypeInternal;
extern NodeUpdateDefaultTypeInternal _NodeUpdate_default_instance_;
class NodeUpdate_FeaturesEntry_DoNotUse;
struct NodeUpdate_FeaturesEntry_DoNotUseDefaultTypeInternal;
extern NodeUpdate_FeaturesEntry_DoNotUseDefaultTypeInternal _NodeUpdate_FeaturesEntry_DoNotUse_default_instance_;
class Op;
struct OpDefaultTypeInternal;
extern OpDefaultTypeInternal _Op_default_instance_;
class OpenChannelRequest;
struct OpenChannelRequestDefaultTypeInternal;
extern OpenChannelRequestDefaultTypeInternal _OpenChannelRequest_default_instance_;
class OpenStatusUpdate;
struct OpenStatusUpdateDefaultTypeInternal;
extern OpenStatusUpdateDefaultTypeInternal _OpenStatusUpdate_default_instance_;
class OutPoint;
struct OutPointDefaultTypeInternal;
extern OutPointDefaultTypeInternal _OutPoint_default_instance_;
class OutputDetail;
struct OutputDetailDefaultTypeInternal;
extern OutputDetailDefaultTypeInternal _OutputDetail_default_instance_;
class PayReq;
struct PayReqDefaultTypeInternal;
extern PayReqDefaultTypeInternal _PayReq_default_instance_;
class PayReqString;
struct PayReqStringDefaultTypeInternal;
extern PayReqStringDefaultTypeInternal _PayReqString_default_instance_;
class PayReq_FeaturesEntry_DoNotUse;
struct PayReq_FeaturesEntry_DoNotUseDefaultTypeInternal;
extern PayReq_FeaturesEntry_DoNotUseDefaultTypeInternal _PayReq_FeaturesEntry_DoNotUse_default_instance_;
class Payment;
struct PaymentDefaultTypeInternal;
extern PaymentDefaultTypeInternal _Payment_default_instance_;
class PaymentHash;
struct PaymentHashDefaultTypeInternal;
extern PaymentHashDefaultTypeInternal _PaymentHash_default_instance_;
class Payment_FirstHopCustomRecordsEntry_DoNotUse;
struct Payment_FirstHopCustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern Payment_FirstHopCustomRecordsEntry_DoNotUseDefaultTypeInternal _Payment_FirstHopCustomRecordsEntry_DoNotUse_default_instance_;
class Peer;
struct PeerDefaultTypeInternal;
extern PeerDefaultTypeInternal _Peer_default_instance_;
class PeerEvent;
struct PeerEventDefaultTypeInternal;
extern PeerEventDefaultTypeInternal _PeerEvent_default_instance_;
class PeerEventSubscription;
struct PeerEventSubscriptionDefaultTypeInternal;
extern PeerEventSubscriptionDefaultTypeInternal _PeerEventSubscription_default_instance_;
class Peer_FeaturesEntry_DoNotUse;
struct Peer_FeaturesEntry_DoNotUseDefaultTypeInternal;
extern Peer_FeaturesEntry_DoNotUseDefaultTypeInternal _Peer_FeaturesEntry_DoNotUse_default_instance_;
class PendingChannelsRequest;
struct PendingChannelsRequestDefaultTypeInternal;
extern PendingChannelsRequestDefaultTypeInternal _PendingChannelsRequest_default_instance_;
class PendingChannelsResponse;
struct PendingChannelsResponseDefaultTypeInternal;
extern PendingChannelsResponseDefaultTypeInternal _PendingChannelsResponse_default_instance_;
class PendingChannelsResponse_ClosedChannel;
struct PendingChannelsResponse_ClosedChannelDefaultTypeInternal;
extern PendingChannelsResponse_ClosedChannelDefaultTypeInternal _PendingChannelsResponse_ClosedChannel_default_instance_;
class PendingChannelsResponse_Commitments;
struct PendingChannelsResponse_CommitmentsDefaultTypeInternal;
extern PendingChannelsResponse_CommitmentsDefaultTypeInternal _PendingChannelsResponse_Commitments_default_instance_;
class PendingChannelsResponse_ForceClosedChannel;
struct PendingChannelsResponse_ForceClosedChannelDefaultTypeInternal;
extern PendingChannelsResponse_ForceClosedChannelDefaultTypeInternal _PendingChannelsResponse_ForceClosedChannel_default_instance_;
class PendingChannelsResponse_PendingChannel;
struct PendingChannelsResponse_PendingChannelDefaultTypeInternal;
extern PendingChannelsResponse_PendingChannelDefaultTypeInternal _PendingChannelsResponse_PendingChannel_default_instance_;
class PendingChannelsResponse_PendingOpenChannel;
struct PendingChannelsResponse_PendingOpenChannelDefaultTypeInternal;
extern PendingChannelsResponse_PendingOpenChannelDefaultTypeInternal _PendingChannelsResponse_PendingOpenChannel_default_instance_;
class PendingChannelsResponse_WaitingCloseChannel;
struct PendingChannelsResponse_WaitingCloseChannelDefaultTypeInternal;
extern PendingChannelsResponse_WaitingCloseChannelDefaultTypeInternal _PendingChannelsResponse_WaitingCloseChannel_default_instance_;
class PendingHTLC;
struct PendingHTLCDefaultTypeInternal;
extern PendingHTLCDefaultTypeInternal _PendingHTLC_default_instance_;
class PendingUpdate;
struct PendingUpdateDefaultTypeInternal;
extern PendingUpdateDefaultTypeInternal _PendingUpdate_default_instance_;
class PolicyUpdateRequest;
struct PolicyUpdateRequestDefaultTypeInternal;
extern PolicyUpdateRequestDefaultTypeInternal _PolicyUpdateRequest_default_instance_;
class PolicyUpdateResponse;
struct PolicyUpdateResponseDefaultTypeInternal;
extern PolicyUpdateResponseDefaultTypeInternal _PolicyUpdateResponse_default_instance_;
class PreviousOutPoint;
struct PreviousOutPointDefaultTypeInternal;
extern PreviousOutPointDefaultTypeInternal _PreviousOutPoint_default_instance_;
class PsbtShim;
struct PsbtShimDefaultTypeInternal;
extern PsbtShimDefaultTypeInternal _PsbtShim_default_instance_;
class QueryRoutesRequest;
struct QueryRoutesRequestDefaultTypeInternal;
extern QueryRoutesRequestDefaultTypeInternal _QueryRoutesRequest_default_instance_;
class QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse;
struct QueryRoutesRequest_DestCustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern QueryRoutesRequest_DestCustomRecordsEntry_DoNotUseDefaultTypeInternal _QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse_default_instance_;
class QueryRoutesResponse;
struct QueryRoutesResponseDefaultTypeInternal;
extern QueryRoutesResponseDefaultTypeInternal _QueryRoutesResponse_default_instance_;
class RPCMessage;
struct RPCMessageDefaultTypeInternal;
extern RPCMessageDefaultTypeInternal _RPCMessage_default_instance_;
class RPCMiddlewareRequest;
struct RPCMiddlewareRequestDefaultTypeInternal;
extern RPCMiddlewareRequestDefaultTypeInternal _RPCMiddlewareRequest_default_instance_;
class RPCMiddlewareResponse;
struct RPCMiddlewareResponseDefaultTypeInternal;
extern RPCMiddlewareResponseDefaultTypeInternal _RPCMiddlewareResponse_default_instance_;
class ReadyForPsbtFunding;
struct ReadyForPsbtFundingDefaultTypeInternal;
extern ReadyForPsbtFundingDefaultTypeInternal _ReadyForPsbtFunding_default_instance_;
class Resolution;
struct ResolutionDefaultTypeInternal;
extern ResolutionDefaultTypeInternal _Resolution_default_instance_;
class RestoreBackupResponse;
struct RestoreBackupResponseDefaultTypeInternal;
extern RestoreBackupResponseDefaultTypeInternal _RestoreBackupResponse_default_instance_;
class RestoreChanBackupRequest;
struct RestoreChanBackupRequestDefaultTypeInternal;
extern RestoreChanBackupRequestDefaultTypeInternal _RestoreChanBackupRequest_default_instance_;
class Route;
struct RouteDefaultTypeInternal;
extern RouteDefaultTypeInternal _Route_default_instance_;
class RouteHint;
struct RouteHintDefaultTypeInternal;
extern RouteHintDefaultTypeInternal _RouteHint_default_instance_;
class RoutingPolicy;
struct RoutingPolicyDefaultTypeInternal;
extern RoutingPolicyDefaultTypeInternal _RoutingPolicy_default_instance_;
class RoutingPolicy_CustomRecordsEntry_DoNotUse;
struct RoutingPolicy_CustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern RoutingPolicy_CustomRecordsEntry_DoNotUseDefaultTypeInternal _RoutingPolicy_CustomRecordsEntry_DoNotUse_default_instance_;
class SendCoinsRequest;
struct SendCoinsRequestDefaultTypeInternal;
extern SendCoinsRequestDefaultTypeInternal _SendCoinsRequest_default_instance_;
class SendCoinsResponse;
struct SendCoinsResponseDefaultTypeInternal;
extern SendCoinsResponseDefaultTypeInternal _SendCoinsResponse_default_instance_;
class SendCustomMessageRequest;
struct SendCustomMessageRequestDefaultTypeInternal;
extern SendCustomMessageRequestDefaultTypeInternal _SendCustomMessageRequest_default_instance_;
class SendCustomMessageResponse;
struct SendCustomMessageResponseDefaultTypeInternal;
extern SendCustomMessageResponseDefaultTypeInternal _SendCustomMessageResponse_default_instance_;
class SendManyRequest;
struct SendManyRequestDefaultTypeInternal;
extern SendManyRequestDefaultTypeInternal _SendManyRequest_default_instance_;
class SendManyRequest_AddrToAmountEntry_DoNotUse;
struct SendManyRequest_AddrToAmountEntry_DoNotUseDefaultTypeInternal;
extern SendManyRequest_AddrToAmountEntry_DoNotUseDefaultTypeInternal _SendManyRequest_AddrToAmountEntry_DoNotUse_default_instance_;
class SendManyResponse;
struct SendManyResponseDefaultTypeInternal;
extern SendManyResponseDefaultTypeInternal _SendManyResponse_default_instance_;
class SendRequest;
struct SendRequestDefaultTypeInternal;
extern SendRequestDefaultTypeInternal _SendRequest_default_instance_;
class SendRequest_DestCustomRecordsEntry_DoNotUse;
struct SendRequest_DestCustomRecordsEntry_DoNotUseDefaultTypeInternal;
extern SendRequest_DestCustomRecordsEntry_DoNotUseDefaultTypeInternal _SendRequest_DestCustomRecordsEntry_DoNotUse_default_instance_;
class SendResponse;
struct SendResponseDefaultTypeInternal;
extern SendResponseDefaultTypeInternal _SendResponse_default_instance_;
class SendToRouteRequest;
struct SendToRouteRequestDefaultTypeInternal;
extern SendToRouteRequestDefaultTypeInternal _SendToRouteRequest_default_instance_;
class SetID;
struct SetIDDefaultTypeInternal;
extern SetIDDefaultTypeInternal _SetID_default_instance_;
class SignMessageRequest;
struct SignMessageRequestDefaultTypeInternal;
extern SignMessageRequestDefaultTypeInternal _SignMessageRequest_default_instance_;
class SignMessageResponse;
struct SignMessageResponseDefaultTypeInternal;
extern SignMessageResponseDefaultTypeInternal _SignMessageResponse_default_instance_;
class StopRequest;
struct StopRequestDefaultTypeInternal;
extern StopRequestDefaultTypeInternal _StopRequest_default_instance_;
class StopResponse;
struct StopResponseDefaultTypeInternal;
extern StopResponseDefaultTypeInternal _StopResponse_default_instance_;
class StreamAuth;
struct StreamAuthDefaultTypeInternal;
extern StreamAuthDefaultTypeInternal _StreamAuth_default_instance_;
class SubscribeCustomMessagesRequest;
struct SubscribeCustomMessagesRequestDefaultTypeInternal;
extern SubscribeCustomMessagesRequestDefaultTypeInternal _SubscribeCustomMessagesRequest_default_instance_;
class TimestampedError;
struct TimestampedErrorDefaultTypeInternal;
extern TimestampedErrorDefaultTypeInternal _TimestampedError_default_instance_;
class Transaction;
struct TransactionDefaultTypeInternal;
extern TransactionDefaultTypeInternal _Transaction_default_instance_;
class TransactionDetails;
struct TransactionDetailsDefaultTypeInternal;
extern TransactionDetailsDefaultTypeInternal _TransactionDetails_default_instance_;
class Utxo;
struct UtxoDefaultTypeInternal;
extern UtxoDefaultTypeInternal _Utxo_default_instance_;
class VerifyChanBackupResponse;
struct VerifyChanBackupResponseDefaultTypeInternal;
extern VerifyChanBackupResponseDefaultTypeInternal _VerifyChanBackupResponse_default_instance_;
class VerifyMessageRequest;
struct VerifyMessageRequestDefaultTypeInternal;
extern VerifyMessageRequestDefaultTypeInternal _VerifyMessageRequest_default_instance_;
class VerifyMessageResponse;
struct VerifyMessageResponseDefaultTypeInternal;
extern VerifyMessageResponseDefaultTypeInternal _VerifyMessageResponse_default_instance_;
class WalletAccountBalance;
struct WalletAccountBalanceDefaultTypeInternal;
extern WalletAccountBalanceDefaultTypeInternal _WalletAccountBalance_default_instance_;
class WalletBalanceRequest;
struct WalletBalanceRequestDefaultTypeInternal;
extern WalletBalanceRequestDefaultTypeInternal _WalletBalanceRequest_default_instance_;
class WalletBalanceResponse;
struct WalletBalanceResponseDefaultTypeInternal;
extern WalletBalanceResponseDefaultTypeInternal _WalletBalanceResponse_default_instance_;
class WalletBalanceResponse_AccountBalanceEntry_DoNotUse;
struct WalletBalanceResponse_AccountBalanceEntry_DoNotUseDefaultTypeInternal;
extern WalletBalanceResponse_AccountBalanceEntry_DoNotUseDefaultTypeInternal _WalletBalanceResponse_AccountBalanceEntry_DoNotUse_default_instance_;
}  // namespace lnrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace lnrpc {
enum ChannelCloseSummary_ClosureType : int {
  ChannelCloseSummary_ClosureType_COOPERATIVE_CLOSE = 0,
  ChannelCloseSummary_ClosureType_LOCAL_FORCE_CLOSE = 1,
  ChannelCloseSummary_ClosureType_REMOTE_FORCE_CLOSE = 2,
  ChannelCloseSummary_ClosureType_BREACH_CLOSE = 3,
  ChannelCloseSummary_ClosureType_FUNDING_CANCELED = 4,
  ChannelCloseSummary_ClosureType_ABANDONED = 5,
  ChannelCloseSummary_ClosureType_ChannelCloseSummary_ClosureType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ChannelCloseSummary_ClosureType_ChannelCloseSummary_ClosureType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ChannelCloseSummary_ClosureType_IsValid(int value);
extern const uint32_t ChannelCloseSummary_ClosureType_internal_data_[];
constexpr ChannelCloseSummary_ClosureType ChannelCloseSummary_ClosureType_ClosureType_MIN = static_cast<ChannelCloseSummary_ClosureType>(0);
constexpr ChannelCloseSummary_ClosureType ChannelCloseSummary_ClosureType_ClosureType_MAX = static_cast<ChannelCloseSummary_ClosureType>(5);
constexpr int ChannelCloseSummary_ClosureType_ClosureType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ChannelCloseSummary_ClosureType_descriptor();
template <typename T>
const std::string& ChannelCloseSummary_ClosureType_Name(T value) {
  static_assert(std::is_same<T, ChannelCloseSummary_ClosureType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ClosureType_Name().");
  return ChannelCloseSummary_ClosureType_Name(static_cast<ChannelCloseSummary_ClosureType>(value));
}
template <>
inline const std::string& ChannelCloseSummary_ClosureType_Name(ChannelCloseSummary_ClosureType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ChannelCloseSummary_ClosureType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ChannelCloseSummary_ClosureType_Parse(absl::string_view name, ChannelCloseSummary_ClosureType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChannelCloseSummary_ClosureType>(
      ChannelCloseSummary_ClosureType_descriptor(), name, value);
}
enum Peer_SyncType : int {
  Peer_SyncType_UNKNOWN_SYNC = 0,
  Peer_SyncType_ACTIVE_SYNC = 1,
  Peer_SyncType_PASSIVE_SYNC = 2,
  Peer_SyncType_PINNED_SYNC = 3,
  Peer_SyncType_Peer_SyncType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Peer_SyncType_Peer_SyncType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Peer_SyncType_IsValid(int value);
extern const uint32_t Peer_SyncType_internal_data_[];
constexpr Peer_SyncType Peer_SyncType_SyncType_MIN = static_cast<Peer_SyncType>(0);
constexpr Peer_SyncType Peer_SyncType_SyncType_MAX = static_cast<Peer_SyncType>(3);
constexpr int Peer_SyncType_SyncType_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Peer_SyncType_descriptor();
template <typename T>
const std::string& Peer_SyncType_Name(T value) {
  static_assert(std::is_same<T, Peer_SyncType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to SyncType_Name().");
  return Peer_SyncType_Name(static_cast<Peer_SyncType>(value));
}
template <>
inline const std::string& Peer_SyncType_Name(Peer_SyncType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Peer_SyncType_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Peer_SyncType_Parse(absl::string_view name, Peer_SyncType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Peer_SyncType>(
      Peer_SyncType_descriptor(), name, value);
}
enum PeerEvent_EventType : int {
  PeerEvent_EventType_PEER_ONLINE = 0,
  PeerEvent_EventType_PEER_OFFLINE = 1,
  PeerEvent_EventType_PeerEvent_EventType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PeerEvent_EventType_PeerEvent_EventType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PeerEvent_EventType_IsValid(int value);
extern const uint32_t PeerEvent_EventType_internal_data_[];
constexpr PeerEvent_EventType PeerEvent_EventType_EventType_MIN = static_cast<PeerEvent_EventType>(0);
constexpr PeerEvent_EventType PeerEvent_EventType_EventType_MAX = static_cast<PeerEvent_EventType>(1);
constexpr int PeerEvent_EventType_EventType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
PeerEvent_EventType_descriptor();
template <typename T>
const std::string& PeerEvent_EventType_Name(T value) {
  static_assert(std::is_same<T, PeerEvent_EventType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to EventType_Name().");
  return PeerEvent_EventType_Name(static_cast<PeerEvent_EventType>(value));
}
template <>
inline const std::string& PeerEvent_EventType_Name(PeerEvent_EventType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PeerEvent_EventType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool PeerEvent_EventType_Parse(absl::string_view name, PeerEvent_EventType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PeerEvent_EventType>(
      PeerEvent_EventType_descriptor(), name, value);
}
enum PendingChannelsResponse_ForceClosedChannel_AnchorState : int {
  PendingChannelsResponse_ForceClosedChannel_AnchorState_LIMBO = 0,
  PendingChannelsResponse_ForceClosedChannel_AnchorState_RECOVERED = 1,
  PendingChannelsResponse_ForceClosedChannel_AnchorState_LOST = 2,
  PendingChannelsResponse_ForceClosedChannel_AnchorState_PendingChannelsResponse_ForceClosedChannel_AnchorState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PendingChannelsResponse_ForceClosedChannel_AnchorState_PendingChannelsResponse_ForceClosedChannel_AnchorState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PendingChannelsResponse_ForceClosedChannel_AnchorState_IsValid(int value);
extern const uint32_t PendingChannelsResponse_ForceClosedChannel_AnchorState_internal_data_[];
constexpr PendingChannelsResponse_ForceClosedChannel_AnchorState PendingChannelsResponse_ForceClosedChannel_AnchorState_AnchorState_MIN = static_cast<PendingChannelsResponse_ForceClosedChannel_AnchorState>(0);
constexpr PendingChannelsResponse_ForceClosedChannel_AnchorState PendingChannelsResponse_ForceClosedChannel_AnchorState_AnchorState_MAX = static_cast<PendingChannelsResponse_ForceClosedChannel_AnchorState>(2);
constexpr int PendingChannelsResponse_ForceClosedChannel_AnchorState_AnchorState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
PendingChannelsResponse_ForceClosedChannel_AnchorState_descriptor();
template <typename T>
const std::string& PendingChannelsResponse_ForceClosedChannel_AnchorState_Name(T value) {
  static_assert(std::is_same<T, PendingChannelsResponse_ForceClosedChannel_AnchorState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AnchorState_Name().");
  return PendingChannelsResponse_ForceClosedChannel_AnchorState_Name(static_cast<PendingChannelsResponse_ForceClosedChannel_AnchorState>(value));
}
template <>
inline const std::string& PendingChannelsResponse_ForceClosedChannel_AnchorState_Name(PendingChannelsResponse_ForceClosedChannel_AnchorState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PendingChannelsResponse_ForceClosedChannel_AnchorState_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool PendingChannelsResponse_ForceClosedChannel_AnchorState_Parse(absl::string_view name, PendingChannelsResponse_ForceClosedChannel_AnchorState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PendingChannelsResponse_ForceClosedChannel_AnchorState>(
      PendingChannelsResponse_ForceClosedChannel_AnchorState_descriptor(), name, value);
}
enum ChannelEventUpdate_UpdateType : int {
  ChannelEventUpdate_UpdateType_OPEN_CHANNEL = 0,
  ChannelEventUpdate_UpdateType_CLOSED_CHANNEL = 1,
  ChannelEventUpdate_UpdateType_ACTIVE_CHANNEL = 2,
  ChannelEventUpdate_UpdateType_INACTIVE_CHANNEL = 3,
  ChannelEventUpdate_UpdateType_PENDING_OPEN_CHANNEL = 4,
  ChannelEventUpdate_UpdateType_FULLY_RESOLVED_CHANNEL = 5,
  ChannelEventUpdate_UpdateType_ChannelEventUpdate_UpdateType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ChannelEventUpdate_UpdateType_ChannelEventUpdate_UpdateType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ChannelEventUpdate_UpdateType_IsValid(int value);
extern const uint32_t ChannelEventUpdate_UpdateType_internal_data_[];
constexpr ChannelEventUpdate_UpdateType ChannelEventUpdate_UpdateType_UpdateType_MIN = static_cast<ChannelEventUpdate_UpdateType>(0);
constexpr ChannelEventUpdate_UpdateType ChannelEventUpdate_UpdateType_UpdateType_MAX = static_cast<ChannelEventUpdate_UpdateType>(5);
constexpr int ChannelEventUpdate_UpdateType_UpdateType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ChannelEventUpdate_UpdateType_descriptor();
template <typename T>
const std::string& ChannelEventUpdate_UpdateType_Name(T value) {
  static_assert(std::is_same<T, ChannelEventUpdate_UpdateType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to UpdateType_Name().");
  return ChannelEventUpdate_UpdateType_Name(static_cast<ChannelEventUpdate_UpdateType>(value));
}
template <>
inline const std::string& ChannelEventUpdate_UpdateType_Name(ChannelEventUpdate_UpdateType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ChannelEventUpdate_UpdateType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ChannelEventUpdate_UpdateType_Parse(absl::string_view name, ChannelEventUpdate_UpdateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChannelEventUpdate_UpdateType>(
      ChannelEventUpdate_UpdateType_descriptor(), name, value);
}
enum Invoice_InvoiceState : int {
  Invoice_InvoiceState_OPEN = 0,
  Invoice_InvoiceState_SETTLED = 1,
  Invoice_InvoiceState_CANCELED = 2,
  Invoice_InvoiceState_ACCEPTED = 3,
  Invoice_InvoiceState_Invoice_InvoiceState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Invoice_InvoiceState_Invoice_InvoiceState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Invoice_InvoiceState_IsValid(int value);
extern const uint32_t Invoice_InvoiceState_internal_data_[];
constexpr Invoice_InvoiceState Invoice_InvoiceState_InvoiceState_MIN = static_cast<Invoice_InvoiceState>(0);
constexpr Invoice_InvoiceState Invoice_InvoiceState_InvoiceState_MAX = static_cast<Invoice_InvoiceState>(3);
constexpr int Invoice_InvoiceState_InvoiceState_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Invoice_InvoiceState_descriptor();
template <typename T>
const std::string& Invoice_InvoiceState_Name(T value) {
  static_assert(std::is_same<T, Invoice_InvoiceState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to InvoiceState_Name().");
  return Invoice_InvoiceState_Name(static_cast<Invoice_InvoiceState>(value));
}
template <>
inline const std::string& Invoice_InvoiceState_Name(Invoice_InvoiceState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Invoice_InvoiceState_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Invoice_InvoiceState_Parse(absl::string_view name, Invoice_InvoiceState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Invoice_InvoiceState>(
      Invoice_InvoiceState_descriptor(), name, value);
}
enum Payment_PaymentStatus : int {
  Payment_PaymentStatus_UNKNOWN [[deprecated]] = 0,
  Payment_PaymentStatus_IN_FLIGHT = 1,
  Payment_PaymentStatus_SUCCEEDED = 2,
  Payment_PaymentStatus_FAILED = 3,
  Payment_PaymentStatus_INITIATED = 4,
  Payment_PaymentStatus_Payment_PaymentStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Payment_PaymentStatus_Payment_PaymentStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Payment_PaymentStatus_IsValid(int value);
extern const uint32_t Payment_PaymentStatus_internal_data_[];
constexpr Payment_PaymentStatus Payment_PaymentStatus_PaymentStatus_MIN = static_cast<Payment_PaymentStatus>(0);
constexpr Payment_PaymentStatus Payment_PaymentStatus_PaymentStatus_MAX = static_cast<Payment_PaymentStatus>(4);
constexpr int Payment_PaymentStatus_PaymentStatus_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
Payment_PaymentStatus_descriptor();
template <typename T>
const std::string& Payment_PaymentStatus_Name(T value) {
  static_assert(std::is_same<T, Payment_PaymentStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PaymentStatus_Name().");
  return Payment_PaymentStatus_Name(static_cast<Payment_PaymentStatus>(value));
}
template <>
inline const std::string& Payment_PaymentStatus_Name(Payment_PaymentStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Payment_PaymentStatus_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool Payment_PaymentStatus_Parse(absl::string_view name, Payment_PaymentStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Payment_PaymentStatus>(
      Payment_PaymentStatus_descriptor(), name, value);
}
enum HTLCAttempt_HTLCStatus : int {
  HTLCAttempt_HTLCStatus_IN_FLIGHT = 0,
  HTLCAttempt_HTLCStatus_SUCCEEDED = 1,
  HTLCAttempt_HTLCStatus_FAILED = 2,
  HTLCAttempt_HTLCStatus_HTLCAttempt_HTLCStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  HTLCAttempt_HTLCStatus_HTLCAttempt_HTLCStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool HTLCAttempt_HTLCStatus_IsValid(int value);
extern const uint32_t HTLCAttempt_HTLCStatus_internal_data_[];
constexpr HTLCAttempt_HTLCStatus HTLCAttempt_HTLCStatus_HTLCStatus_MIN = static_cast<HTLCAttempt_HTLCStatus>(0);
constexpr HTLCAttempt_HTLCStatus HTLCAttempt_HTLCStatus_HTLCStatus_MAX = static_cast<HTLCAttempt_HTLCStatus>(2);
constexpr int HTLCAttempt_HTLCStatus_HTLCStatus_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
HTLCAttempt_HTLCStatus_descriptor();
template <typename T>
const std::string& HTLCAttempt_HTLCStatus_Name(T value) {
  static_assert(std::is_same<T, HTLCAttempt_HTLCStatus>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to HTLCStatus_Name().");
  return HTLCAttempt_HTLCStatus_Name(static_cast<HTLCAttempt_HTLCStatus>(value));
}
template <>
inline const std::string& HTLCAttempt_HTLCStatus_Name(HTLCAttempt_HTLCStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<HTLCAttempt_HTLCStatus_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool HTLCAttempt_HTLCStatus_Parse(absl::string_view name, HTLCAttempt_HTLCStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<HTLCAttempt_HTLCStatus>(
      HTLCAttempt_HTLCStatus_descriptor(), name, value);
}
enum Failure_FailureCode : int {
  Failure_FailureCode_RESERVED = 0,
  Failure_FailureCode_INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS = 1,
  Failure_FailureCode_INCORRECT_PAYMENT_AMOUNT = 2,
  Failure_FailureCode_FINAL_INCORRECT_CLTV_EXPIRY = 3,
  Failure_FailureCode_FINAL_INCORRECT_HTLC_AMOUNT = 4,
  Failure_FailureCode_FINAL_EXPIRY_TOO_SOON = 5,
  Failure_FailureCode_INVALID_REALM = 6,
  Failure_FailureCode_EXPIRY_TOO_SOON = 7,
  Failure_FailureCode_INVALID_ONION_VERSION = 8,
  Failure_FailureCode_INVALID_ONION_HMAC = 9,
  Failure_FailureCode_INVALID_ONION_KEY = 10,
  Failure_FailureCode_AMOUNT_BELOW_MINIMUM = 11,
  Failure_FailureCode_FEE_INSUFFICIENT = 12,
  Failure_FailureCode_INCORRECT_CLTV_EXPIRY = 13,
  Failure_FailureCode_CHANNEL_DISABLED = 14,
  Failure_FailureCode_TEMPORARY_CHANNEL_FAILURE = 15,
  Failure_FailureCode_REQUIRED_NODE_FEATURE_MISSING = 16,
  Failure_FailureCode_REQUIRED_CHANNEL_FEATURE_MISSING = 17,
  Failure_FailureCode_UNKNOWN_NEXT_PEER = 18,
  Failure_FailureCode_TEMPORARY_NODE_FAILURE = 19,
  Failure_FailureCode_PERMANENT_NODE_FAILURE = 20,
  Failure_FailureCode_PERMANENT_CHANNEL_FAILURE = 21,
  Failure_FailureCode_EXPIRY_TOO_FAR = 22,
  Failure_FailureCode_MPP_TIMEOUT = 23,
  Failure_FailureCode_INVALID_ONION_PAYLOAD = 24,
  Failure_FailureCode_INVALID_ONION_BLINDING = 25,
  Failure_FailureCode_INTERNAL_FAILURE = 997,
  Failure_FailureCode_UNKNOWN_FAILURE = 998,
  Failure_FailureCode_UNREADABLE_FAILURE = 999,
  Failure_FailureCode_Failure_FailureCode_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Failure_FailureCode_Failure_FailureCode_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Failure_FailureCode_IsValid(int value);
extern const uint32_t Failure_FailureCode_internal_data_[];
constexpr Failure_FailureCode Failure_FailureCode_FailureCode_MIN = static_cast<Failure_FailureCode>(0);
constexpr Failure_FailureCode Failure_FailureCode_FailureCode_MAX = static_cast<Failure_FailureCode>(999);
constexpr int Failure_FailureCode_FailureCode_ARRAYSIZE = 999 + 1;
const ::google::protobuf::EnumDescriptor*
Failure_FailureCode_descriptor();
template <typename T>
const std::string& Failure_FailureCode_Name(T value) {
  static_assert(std::is_same<T, Failure_FailureCode>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FailureCode_Name().");
  return ::google::protobuf::internal::NameOfEnum(Failure_FailureCode_descriptor(), value);
}
inline bool Failure_FailureCode_Parse(absl::string_view name, Failure_FailureCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Failure_FailureCode>(
      Failure_FailureCode_descriptor(), name, value);
}
enum OutputScriptType : int {
  SCRIPT_TYPE_PUBKEY_HASH = 0,
  SCRIPT_TYPE_SCRIPT_HASH = 1,
  SCRIPT_TYPE_WITNESS_V0_PUBKEY_HASH = 2,
  SCRIPT_TYPE_WITNESS_V0_SCRIPT_HASH = 3,
  SCRIPT_TYPE_PUBKEY = 4,
  SCRIPT_TYPE_MULTISIG = 5,
  SCRIPT_TYPE_NULLDATA = 6,
  SCRIPT_TYPE_NON_STANDARD = 7,
  SCRIPT_TYPE_WITNESS_UNKNOWN = 8,
  SCRIPT_TYPE_WITNESS_V1_TAPROOT = 9,
  OutputScriptType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  OutputScriptType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool OutputScriptType_IsValid(int value);
extern const uint32_t OutputScriptType_internal_data_[];
constexpr OutputScriptType OutputScriptType_MIN = static_cast<OutputScriptType>(0);
constexpr OutputScriptType OutputScriptType_MAX = static_cast<OutputScriptType>(9);
constexpr int OutputScriptType_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor*
OutputScriptType_descriptor();
template <typename T>
const std::string& OutputScriptType_Name(T value) {
  static_assert(std::is_same<T, OutputScriptType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to OutputScriptType_Name().");
  return OutputScriptType_Name(static_cast<OutputScriptType>(value));
}
template <>
inline const std::string& OutputScriptType_Name(OutputScriptType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<OutputScriptType_descriptor,
                                                 0, 9>(
      static_cast<int>(value));
}
inline bool OutputScriptType_Parse(absl::string_view name, OutputScriptType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OutputScriptType>(
      OutputScriptType_descriptor(), name, value);
}
enum CoinSelectionStrategy : int {
  STRATEGY_USE_GLOBAL_CONFIG = 0,
  STRATEGY_LARGEST = 1,
  STRATEGY_RANDOM = 2,
  CoinSelectionStrategy_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CoinSelectionStrategy_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CoinSelectionStrategy_IsValid(int value);
extern const uint32_t CoinSelectionStrategy_internal_data_[];
constexpr CoinSelectionStrategy CoinSelectionStrategy_MIN = static_cast<CoinSelectionStrategy>(0);
constexpr CoinSelectionStrategy CoinSelectionStrategy_MAX = static_cast<CoinSelectionStrategy>(2);
constexpr int CoinSelectionStrategy_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
CoinSelectionStrategy_descriptor();
template <typename T>
const std::string& CoinSelectionStrategy_Name(T value) {
  static_assert(std::is_same<T, CoinSelectionStrategy>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CoinSelectionStrategy_Name().");
  return CoinSelectionStrategy_Name(static_cast<CoinSelectionStrategy>(value));
}
template <>
inline const std::string& CoinSelectionStrategy_Name(CoinSelectionStrategy value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CoinSelectionStrategy_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool CoinSelectionStrategy_Parse(absl::string_view name, CoinSelectionStrategy* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CoinSelectionStrategy>(
      CoinSelectionStrategy_descriptor(), name, value);
}
enum AddressType : int {
  WITNESS_PUBKEY_HASH = 0,
  NESTED_PUBKEY_HASH = 1,
  UNUSED_WITNESS_PUBKEY_HASH = 2,
  UNUSED_NESTED_PUBKEY_HASH = 3,
  TAPROOT_PUBKEY = 4,
  UNUSED_TAPROOT_PUBKEY = 5,
  AddressType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AddressType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AddressType_IsValid(int value);
extern const uint32_t AddressType_internal_data_[];
constexpr AddressType AddressType_MIN = static_cast<AddressType>(0);
constexpr AddressType AddressType_MAX = static_cast<AddressType>(5);
constexpr int AddressType_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
AddressType_descriptor();
template <typename T>
const std::string& AddressType_Name(T value) {
  static_assert(std::is_same<T, AddressType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AddressType_Name().");
  return AddressType_Name(static_cast<AddressType>(value));
}
template <>
inline const std::string& AddressType_Name(AddressType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AddressType_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool AddressType_Parse(absl::string_view name, AddressType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddressType>(
      AddressType_descriptor(), name, value);
}
enum CommitmentType : int {
  UNKNOWN_COMMITMENT_TYPE = 0,
  LEGACY = 1,
  STATIC_REMOTE_KEY = 2,
  ANCHORS = 3,
  SCRIPT_ENFORCED_LEASE = 4,
  SIMPLE_TAPROOT = 5,
  SIMPLE_TAPROOT_OVERLAY = 6,
  CommitmentType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  CommitmentType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool CommitmentType_IsValid(int value);
extern const uint32_t CommitmentType_internal_data_[];
constexpr CommitmentType CommitmentType_MIN = static_cast<CommitmentType>(0);
constexpr CommitmentType CommitmentType_MAX = static_cast<CommitmentType>(6);
constexpr int CommitmentType_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
CommitmentType_descriptor();
template <typename T>
const std::string& CommitmentType_Name(T value) {
  static_assert(std::is_same<T, CommitmentType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to CommitmentType_Name().");
  return CommitmentType_Name(static_cast<CommitmentType>(value));
}
template <>
inline const std::string& CommitmentType_Name(CommitmentType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<CommitmentType_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool CommitmentType_Parse(absl::string_view name, CommitmentType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CommitmentType>(
      CommitmentType_descriptor(), name, value);
}
enum Initiator : int {
  INITIATOR_UNKNOWN = 0,
  INITIATOR_LOCAL = 1,
  INITIATOR_REMOTE = 2,
  INITIATOR_BOTH = 3,
  Initiator_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Initiator_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Initiator_IsValid(int value);
extern const uint32_t Initiator_internal_data_[];
constexpr Initiator Initiator_MIN = static_cast<Initiator>(0);
constexpr Initiator Initiator_MAX = static_cast<Initiator>(3);
constexpr int Initiator_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
Initiator_descriptor();
template <typename T>
const std::string& Initiator_Name(T value) {
  static_assert(std::is_same<T, Initiator>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Initiator_Name().");
  return Initiator_Name(static_cast<Initiator>(value));
}
template <>
inline const std::string& Initiator_Name(Initiator value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Initiator_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool Initiator_Parse(absl::string_view name, Initiator* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Initiator>(
      Initiator_descriptor(), name, value);
}
enum ResolutionType : int {
  TYPE_UNKNOWN = 0,
  ANCHOR = 1,
  INCOMING_HTLC = 2,
  OUTGOING_HTLC = 3,
  COMMIT = 4,
  ResolutionType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ResolutionType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ResolutionType_IsValid(int value);
extern const uint32_t ResolutionType_internal_data_[];
constexpr ResolutionType ResolutionType_MIN = static_cast<ResolutionType>(0);
constexpr ResolutionType ResolutionType_MAX = static_cast<ResolutionType>(4);
constexpr int ResolutionType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
ResolutionType_descriptor();
template <typename T>
const std::string& ResolutionType_Name(T value) {
  static_assert(std::is_same<T, ResolutionType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResolutionType_Name().");
  return ResolutionType_Name(static_cast<ResolutionType>(value));
}
template <>
inline const std::string& ResolutionType_Name(ResolutionType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ResolutionType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool ResolutionType_Parse(absl::string_view name, ResolutionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResolutionType>(
      ResolutionType_descriptor(), name, value);
}
enum ResolutionOutcome : int {
  OUTCOME_UNKNOWN = 0,
  CLAIMED = 1,
  UNCLAIMED = 2,
  ABANDONED = 3,
  FIRST_STAGE = 4,
  TIMEOUT = 5,
  ResolutionOutcome_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ResolutionOutcome_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ResolutionOutcome_IsValid(int value);
extern const uint32_t ResolutionOutcome_internal_data_[];
constexpr ResolutionOutcome ResolutionOutcome_MIN = static_cast<ResolutionOutcome>(0);
constexpr ResolutionOutcome ResolutionOutcome_MAX = static_cast<ResolutionOutcome>(5);
constexpr int ResolutionOutcome_ARRAYSIZE = 5 + 1;
const ::google::protobuf::EnumDescriptor*
ResolutionOutcome_descriptor();
template <typename T>
const std::string& ResolutionOutcome_Name(T value) {
  static_assert(std::is_same<T, ResolutionOutcome>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ResolutionOutcome_Name().");
  return ResolutionOutcome_Name(static_cast<ResolutionOutcome>(value));
}
template <>
inline const std::string& ResolutionOutcome_Name(ResolutionOutcome value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ResolutionOutcome_descriptor,
                                                 0, 5>(
      static_cast<int>(value));
}
inline bool ResolutionOutcome_Parse(absl::string_view name, ResolutionOutcome* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ResolutionOutcome>(
      ResolutionOutcome_descriptor(), name, value);
}
enum NodeMetricType : int {
  UNKNOWN = 0,
  BETWEENNESS_CENTRALITY = 1,
  NodeMetricType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  NodeMetricType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool NodeMetricType_IsValid(int value);
extern const uint32_t NodeMetricType_internal_data_[];
constexpr NodeMetricType NodeMetricType_MIN = static_cast<NodeMetricType>(0);
constexpr NodeMetricType NodeMetricType_MAX = static_cast<NodeMetricType>(1);
constexpr int NodeMetricType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
NodeMetricType_descriptor();
template <typename T>
const std::string& NodeMetricType_Name(T value) {
  static_assert(std::is_same<T, NodeMetricType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to NodeMetricType_Name().");
  return NodeMetricType_Name(static_cast<NodeMetricType>(value));
}
template <>
inline const std::string& NodeMetricType_Name(NodeMetricType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<NodeMetricType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool NodeMetricType_Parse(absl::string_view name, NodeMetricType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NodeMetricType>(
      NodeMetricType_descriptor(), name, value);
}
enum InvoiceHTLCState : int {
  ACCEPTED = 0,
  SETTLED = 1,
  CANCELED = 2,
  InvoiceHTLCState_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  InvoiceHTLCState_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool InvoiceHTLCState_IsValid(int value);
extern const uint32_t InvoiceHTLCState_internal_data_[];
constexpr InvoiceHTLCState InvoiceHTLCState_MIN = static_cast<InvoiceHTLCState>(0);
constexpr InvoiceHTLCState InvoiceHTLCState_MAX = static_cast<InvoiceHTLCState>(2);
constexpr int InvoiceHTLCState_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
InvoiceHTLCState_descriptor();
template <typename T>
const std::string& InvoiceHTLCState_Name(T value) {
  static_assert(std::is_same<T, InvoiceHTLCState>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to InvoiceHTLCState_Name().");
  return InvoiceHTLCState_Name(static_cast<InvoiceHTLCState>(value));
}
template <>
inline const std::string& InvoiceHTLCState_Name(InvoiceHTLCState value) {
  return ::google::protobuf::internal::NameOfDenseEnum<InvoiceHTLCState_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool InvoiceHTLCState_Parse(absl::string_view name, InvoiceHTLCState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<InvoiceHTLCState>(
      InvoiceHTLCState_descriptor(), name, value);
}
enum PaymentFailureReason : int {
  FAILURE_REASON_NONE = 0,
  FAILURE_REASON_TIMEOUT = 1,
  FAILURE_REASON_NO_ROUTE = 2,
  FAILURE_REASON_ERROR = 3,
  FAILURE_REASON_INCORRECT_PAYMENT_DETAILS = 4,
  FAILURE_REASON_INSUFFICIENT_BALANCE = 5,
  FAILURE_REASON_CANCELED = 6,
  PaymentFailureReason_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  PaymentFailureReason_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool PaymentFailureReason_IsValid(int value);
extern const uint32_t PaymentFailureReason_internal_data_[];
constexpr PaymentFailureReason PaymentFailureReason_MIN = static_cast<PaymentFailureReason>(0);
constexpr PaymentFailureReason PaymentFailureReason_MAX = static_cast<PaymentFailureReason>(6);
constexpr int PaymentFailureReason_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor*
PaymentFailureReason_descriptor();
template <typename T>
const std::string& PaymentFailureReason_Name(T value) {
  static_assert(std::is_same<T, PaymentFailureReason>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to PaymentFailureReason_Name().");
  return PaymentFailureReason_Name(static_cast<PaymentFailureReason>(value));
}
template <>
inline const std::string& PaymentFailureReason_Name(PaymentFailureReason value) {
  return ::google::protobuf::internal::NameOfDenseEnum<PaymentFailureReason_descriptor,
                                                 0, 6>(
      static_cast<int>(value));
}
inline bool PaymentFailureReason_Parse(absl::string_view name, PaymentFailureReason* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PaymentFailureReason>(
      PaymentFailureReason_descriptor(), name, value);
}
enum FeatureBit : int {
  DATALOSS_PROTECT_REQ = 0,
  DATALOSS_PROTECT_OPT = 1,
  INITIAL_ROUING_SYNC = 3,
  UPFRONT_SHUTDOWN_SCRIPT_REQ = 4,
  UPFRONT_SHUTDOWN_SCRIPT_OPT = 5,
  GOSSIP_QUERIES_REQ = 6,
  GOSSIP_QUERIES_OPT = 7,
  TLV_ONION_REQ = 8,
  TLV_ONION_OPT = 9,
  EXT_GOSSIP_QUERIES_REQ = 10,
  EXT_GOSSIP_QUERIES_OPT = 11,
  STATIC_REMOTE_KEY_REQ = 12,
  STATIC_REMOTE_KEY_OPT = 13,
  PAYMENT_ADDR_REQ = 14,
  PAYMENT_ADDR_OPT = 15,
  MPP_REQ = 16,
  MPP_OPT = 17,
  WUMBO_CHANNELS_REQ = 18,
  WUMBO_CHANNELS_OPT = 19,
  ANCHORS_REQ = 20,
  ANCHORS_OPT = 21,
  ANCHORS_ZERO_FEE_HTLC_REQ = 22,
  ANCHORS_ZERO_FEE_HTLC_OPT = 23,
  ROUTE_BLINDING_REQUIRED = 24,
  ROUTE_BLINDING_OPTIONAL = 25,
  AMP_REQ = 30,
  AMP_OPT = 31,
  FeatureBit_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  FeatureBit_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool FeatureBit_IsValid(int value);
extern const uint32_t FeatureBit_internal_data_[];
constexpr FeatureBit FeatureBit_MIN = static_cast<FeatureBit>(0);
constexpr FeatureBit FeatureBit_MAX = static_cast<FeatureBit>(31);
constexpr int FeatureBit_ARRAYSIZE = 31 + 1;
const ::google::protobuf::EnumDescriptor*
FeatureBit_descriptor();
template <typename T>
const std::string& FeatureBit_Name(T value) {
  static_assert(std::is_same<T, FeatureBit>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to FeatureBit_Name().");
  return FeatureBit_Name(static_cast<FeatureBit>(value));
}
template <>
inline const std::string& FeatureBit_Name(FeatureBit value) {
  return ::google::protobuf::internal::NameOfDenseEnum<FeatureBit_descriptor,
                                                 0, 31>(
      static_cast<int>(value));
}
inline bool FeatureBit_Parse(absl::string_view name, FeatureBit* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FeatureBit>(
      FeatureBit_descriptor(), name, value);
}
enum UpdateFailure : int {
  UPDATE_FAILURE_UNKNOWN = 0,
  UPDATE_FAILURE_PENDING = 1,
  UPDATE_FAILURE_NOT_FOUND = 2,
  UPDATE_FAILURE_INTERNAL_ERR = 3,
  UPDATE_FAILURE_INVALID_PARAMETER = 4,
  UpdateFailure_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UpdateFailure_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UpdateFailure_IsValid(int value);
extern const uint32_t UpdateFailure_internal_data_[];
constexpr UpdateFailure UpdateFailure_MIN = static_cast<UpdateFailure>(0);
constexpr UpdateFailure UpdateFailure_MAX = static_cast<UpdateFailure>(4);
constexpr int UpdateFailure_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
UpdateFailure_descriptor();
template <typename T>
const std::string& UpdateFailure_Name(T value) {
  static_assert(std::is_same<T, UpdateFailure>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to UpdateFailure_Name().");
  return UpdateFailure_Name(static_cast<UpdateFailure>(value));
}
template <>
inline const std::string& UpdateFailure_Name(UpdateFailure value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UpdateFailure_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool UpdateFailure_Parse(absl::string_view name, UpdateFailure* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UpdateFailure>(
      UpdateFailure_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WalletBalanceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.WalletBalanceRequest) */ {
 public:
  inline WalletBalanceRequest() : WalletBalanceRequest(nullptr) {}
  ~WalletBalanceRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WalletBalanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline WalletBalanceRequest(const WalletBalanceRequest& from) : WalletBalanceRequest(nullptr, from) {}
  inline WalletBalanceRequest(WalletBalanceRequest&& from) noexcept
      : WalletBalanceRequest(nullptr, std::move(from)) {}
  inline WalletBalanceRequest& operator=(const WalletBalanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WalletBalanceRequest& operator=(WalletBalanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WalletBalanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WalletBalanceRequest* internal_default_instance() {
    return reinterpret_cast<const WalletBalanceRequest*>(
        &_WalletBalanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 106;
  friend void swap(WalletBalanceRequest& a, WalletBalanceRequest& b) { a.Swap(&b); }
  inline void Swap(WalletBalanceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WalletBalanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WalletBalanceRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WalletBalanceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WalletBalanceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WalletBalanceRequest& from) { WalletBalanceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WalletBalanceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.WalletBalanceRequest"; }

 protected:
  explicit WalletBalanceRequest(::google::protobuf::Arena* arena);
  WalletBalanceRequest(::google::protobuf::Arena* arena, const WalletBalanceRequest& from);
  WalletBalanceRequest(::google::protobuf::Arena* arena, WalletBalanceRequest&& from) noexcept
      : WalletBalanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
    kMinConfsFieldNumber = 2,
  };
  // string account = 1;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // int32 min_confs = 2;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.WalletBalanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WalletBalanceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WalletBalanceRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::int32_t min_confs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class WalletAccountBalance final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.WalletAccountBalance) */ {
 public:
  inline WalletAccountBalance() : WalletAccountBalance(nullptr) {}
  ~WalletAccountBalance() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WalletAccountBalance(
      ::google::protobuf::internal::ConstantInitialized);

  inline WalletAccountBalance(const WalletAccountBalance& from) : WalletAccountBalance(nullptr, from) {}
  inline WalletAccountBalance(WalletAccountBalance&& from) noexcept
      : WalletAccountBalance(nullptr, std::move(from)) {}
  inline WalletAccountBalance& operator=(const WalletAccountBalance& from) {
    CopyFrom(from);
    return *this;
  }
  inline WalletAccountBalance& operator=(WalletAccountBalance&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WalletAccountBalance& default_instance() {
    return *internal_default_instance();
  }
  static inline const WalletAccountBalance* internal_default_instance() {
    return reinterpret_cast<const WalletAccountBalance*>(
        &_WalletAccountBalance_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 105;
  friend void swap(WalletAccountBalance& a, WalletAccountBalance& b) { a.Swap(&b); }
  inline void Swap(WalletAccountBalance* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WalletAccountBalance* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WalletAccountBalance* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WalletAccountBalance>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WalletAccountBalance& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WalletAccountBalance& from) { WalletAccountBalance::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WalletAccountBalance* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.WalletAccountBalance"; }

 protected:
  explicit WalletAccountBalance(::google::protobuf::Arena* arena);
  WalletAccountBalance(::google::protobuf::Arena* arena, const WalletAccountBalance& from);
  WalletAccountBalance(::google::protobuf::Arena* arena, WalletAccountBalance&& from) noexcept
      : WalletAccountBalance(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfirmedBalanceFieldNumber = 1,
    kUnconfirmedBalanceFieldNumber = 2,
  };
  // int64 confirmed_balance = 1;
  void clear_confirmed_balance() ;
  ::int64_t confirmed_balance() const;
  void set_confirmed_balance(::int64_t value);

  private:
  ::int64_t _internal_confirmed_balance() const;
  void _internal_set_confirmed_balance(::int64_t value);

  public:
  // int64 unconfirmed_balance = 2;
  void clear_unconfirmed_balance() ;
  ::int64_t unconfirmed_balance() const;
  void set_unconfirmed_balance(::int64_t value);

  private:
  ::int64_t _internal_unconfirmed_balance() const;
  void _internal_set_unconfirmed_balance(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.WalletAccountBalance)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WalletAccountBalance_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WalletAccountBalance& from_msg);
    ::int64_t confirmed_balance_;
    ::int64_t unconfirmed_balance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class VerifyMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.VerifyMessageResponse) */ {
 public:
  inline VerifyMessageResponse() : VerifyMessageResponse(nullptr) {}
  ~VerifyMessageResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifyMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifyMessageResponse(const VerifyMessageResponse& from) : VerifyMessageResponse(nullptr, from) {}
  inline VerifyMessageResponse(VerifyMessageResponse&& from) noexcept
      : VerifyMessageResponse(nullptr, std::move(from)) {}
  inline VerifyMessageResponse& operator=(const VerifyMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyMessageResponse& operator=(VerifyMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyMessageResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyMessageResponse*>(
        &_VerifyMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(VerifyMessageResponse& a, VerifyMessageResponse& b) { a.Swap(&b); }
  inline void Swap(VerifyMessageResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifyMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<VerifyMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerifyMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerifyMessageResponse& from) { VerifyMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VerifyMessageResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.VerifyMessageResponse"; }

 protected:
  explicit VerifyMessageResponse(::google::protobuf::Arena* arena);
  VerifyMessageResponse(::google::protobuf::Arena* arena, const VerifyMessageResponse& from);
  VerifyMessageResponse(::google::protobuf::Arena* arena, VerifyMessageResponse&& from) noexcept
      : VerifyMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPubkeyFieldNumber = 2,
    kValidFieldNumber = 1,
  };
  // string pubkey = 2;
  void clear_pubkey() ;
  const std::string& pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_pubkey();
  PROTOBUF_NODISCARD std::string* release_pubkey();
  void set_allocated_pubkey(std::string* value);

  private:
  const std::string& _internal_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubkey(
      const std::string& value);
  std::string* _internal_mutable_pubkey();

  public:
  // bool valid = 1;
  void clear_valid() ;
  bool valid() const;
  void set_valid(bool value);

  private:
  bool _internal_valid() const;
  void _internal_set_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.VerifyMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VerifyMessageResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifyMessageResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pubkey_;
    bool valid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class VerifyMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.VerifyMessageRequest) */ {
 public:
  inline VerifyMessageRequest() : VerifyMessageRequest(nullptr) {}
  ~VerifyMessageRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifyMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifyMessageRequest(const VerifyMessageRequest& from) : VerifyMessageRequest(nullptr, from) {}
  inline VerifyMessageRequest(VerifyMessageRequest&& from) noexcept
      : VerifyMessageRequest(nullptr, std::move(from)) {}
  inline VerifyMessageRequest& operator=(const VerifyMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyMessageRequest& operator=(VerifyMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyMessageRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyMessageRequest*>(
        &_VerifyMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(VerifyMessageRequest& a, VerifyMessageRequest& b) { a.Swap(&b); }
  inline void Swap(VerifyMessageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifyMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<VerifyMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerifyMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerifyMessageRequest& from) { VerifyMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VerifyMessageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.VerifyMessageRequest"; }

 protected:
  explicit VerifyMessageRequest(::google::protobuf::Arena* arena);
  VerifyMessageRequest(::google::protobuf::Arena* arena, const VerifyMessageRequest& from);
  VerifyMessageRequest(::google::protobuf::Arena* arena, VerifyMessageRequest&& from) noexcept
      : VerifyMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
    kSignatureFieldNumber = 2,
  };
  // bytes msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string signature = 2;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.VerifyMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VerifyMessageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifyMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class VerifyChanBackupResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.VerifyChanBackupResponse) */ {
 public:
  inline VerifyChanBackupResponse() : VerifyChanBackupResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifyChanBackupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifyChanBackupResponse(const VerifyChanBackupResponse& from) : VerifyChanBackupResponse(nullptr, from) {}
  inline VerifyChanBackupResponse(VerifyChanBackupResponse&& from) noexcept
      : VerifyChanBackupResponse(nullptr, std::move(from)) {}
  inline VerifyChanBackupResponse& operator=(const VerifyChanBackupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyChanBackupResponse& operator=(VerifyChanBackupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyChanBackupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyChanBackupResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyChanBackupResponse*>(
        &_VerifyChanBackupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 204;
  friend void swap(VerifyChanBackupResponse& a, VerifyChanBackupResponse& b) { a.Swap(&b); }
  inline void Swap(VerifyChanBackupResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyChanBackupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifyChanBackupResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<VerifyChanBackupResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const VerifyChanBackupResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const VerifyChanBackupResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.VerifyChanBackupResponse"; }

 protected:
  explicit VerifyChanBackupResponse(::google::protobuf::Arena* arena);
  VerifyChanBackupResponse(::google::protobuf::Arena* arena, const VerifyChanBackupResponse& from);
  VerifyChanBackupResponse(::google::protobuf::Arena* arena, VerifyChanBackupResponse&& from) noexcept
      : VerifyChanBackupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.VerifyChanBackupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VerifyChanBackupResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifyChanBackupResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class TimestampedError final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.TimestampedError) */ {
 public:
  inline TimestampedError() : TimestampedError(nullptr) {}
  ~TimestampedError() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TimestampedError(
      ::google::protobuf::internal::ConstantInitialized);

  inline TimestampedError(const TimestampedError& from) : TimestampedError(nullptr, from) {}
  inline TimestampedError(TimestampedError&& from) noexcept
      : TimestampedError(nullptr, std::move(from)) {}
  inline TimestampedError& operator=(const TimestampedError& from) {
    CopyFrom(from);
    return *this;
  }
  inline TimestampedError& operator=(TimestampedError&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TimestampedError& default_instance() {
    return *internal_default_instance();
  }
  static inline const TimestampedError* internal_default_instance() {
    return reinterpret_cast<const TimestampedError*>(
        &_TimestampedError_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(TimestampedError& a, TimestampedError& b) { a.Swap(&b); }
  inline void Swap(TimestampedError* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TimestampedError* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TimestampedError* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TimestampedError>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TimestampedError& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TimestampedError& from) { TimestampedError::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TimestampedError* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.TimestampedError"; }

 protected:
  explicit TimestampedError(::google::protobuf::Arena* arena);
  TimestampedError(::google::protobuf::Arena* arena, const TimestampedError& from);
  TimestampedError(::google::protobuf::Arena* arena, TimestampedError&& from) noexcept
      : TimestampedError(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 2,
    kTimestampFieldNumber = 1,
  };
  // string error = 2;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // uint64 timestamp = 1;
  void clear_timestamp() ;
  ::uint64_t timestamp() const;
  void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.TimestampedError)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TimestampedError_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TimestampedError& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::uint64_t timestamp_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SubscribeCustomMessagesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.SubscribeCustomMessagesRequest) */ {
 public:
  inline SubscribeCustomMessagesRequest() : SubscribeCustomMessagesRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeCustomMessagesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SubscribeCustomMessagesRequest(const SubscribeCustomMessagesRequest& from) : SubscribeCustomMessagesRequest(nullptr, from) {}
  inline SubscribeCustomMessagesRequest(SubscribeCustomMessagesRequest&& from) noexcept
      : SubscribeCustomMessagesRequest(nullptr, std::move(from)) {}
  inline SubscribeCustomMessagesRequest& operator=(const SubscribeCustomMessagesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeCustomMessagesRequest& operator=(SubscribeCustomMessagesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeCustomMessagesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SubscribeCustomMessagesRequest* internal_default_instance() {
    return reinterpret_cast<const SubscribeCustomMessagesRequest*>(
        &_SubscribeCustomMessagesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(SubscribeCustomMessagesRequest& a, SubscribeCustomMessagesRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeCustomMessagesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeCustomMessagesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeCustomMessagesRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeCustomMessagesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeCustomMessagesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeCustomMessagesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SubscribeCustomMessagesRequest"; }

 protected:
  explicit SubscribeCustomMessagesRequest(::google::protobuf::Arena* arena);
  SubscribeCustomMessagesRequest(::google::protobuf::Arena* arena, const SubscribeCustomMessagesRequest& from);
  SubscribeCustomMessagesRequest(::google::protobuf::Arena* arena, SubscribeCustomMessagesRequest&& from) noexcept
      : SubscribeCustomMessagesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.SubscribeCustomMessagesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SubscribeCustomMessagesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SubscribeCustomMessagesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class StreamAuth final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.StreamAuth) */ {
 public:
  inline StreamAuth() : StreamAuth(nullptr) {}
  ~StreamAuth() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StreamAuth(
      ::google::protobuf::internal::ConstantInitialized);

  inline StreamAuth(const StreamAuth& from) : StreamAuth(nullptr, from) {}
  inline StreamAuth(StreamAuth&& from) noexcept
      : StreamAuth(nullptr, std::move(from)) {}
  inline StreamAuth& operator=(const StreamAuth& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamAuth& operator=(StreamAuth&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamAuth& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamAuth* internal_default_instance() {
    return reinterpret_cast<const StreamAuth*>(
        &_StreamAuth_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 223;
  friend void swap(StreamAuth& a, StreamAuth& b) { a.Swap(&b); }
  inline void Swap(StreamAuth* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamAuth* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamAuth* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StreamAuth>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamAuth& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StreamAuth& from) { StreamAuth::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamAuth* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.StreamAuth"; }

 protected:
  explicit StreamAuth(::google::protobuf::Arena* arena);
  StreamAuth(::google::protobuf::Arena* arena, const StreamAuth& from);
  StreamAuth(::google::protobuf::Arena* arena, StreamAuth&& from) noexcept
      : StreamAuth(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMethodFullUriFieldNumber = 1,
  };
  // string method_full_uri = 1;
  void clear_method_full_uri() ;
  const std::string& method_full_uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method_full_uri(Arg_&& arg, Args_... args);
  std::string* mutable_method_full_uri();
  PROTOBUF_NODISCARD std::string* release_method_full_uri();
  void set_allocated_method_full_uri(std::string* value);

  private:
  const std::string& _internal_method_full_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method_full_uri(
      const std::string& value);
  std::string* _internal_mutable_method_full_uri();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.StreamAuth)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StreamAuth_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StreamAuth& from_msg);
    ::google::protobuf::internal::ArenaStringPtr method_full_uri_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class StopResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.StopResponse) */ {
 public:
  inline StopResponse() : StopResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopResponse(const StopResponse& from) : StopResponse(nullptr, from) {}
  inline StopResponse(StopResponse&& from) noexcept
      : StopResponse(nullptr, std::move(from)) {}
  inline StopResponse& operator=(const StopResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopResponse& operator=(StopResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopResponse* internal_default_instance() {
    return reinterpret_cast<const StopResponse*>(
        &_StopResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 142;
  friend void swap(StopResponse& a, StopResponse& b) { a.Swap(&b); }
  inline void Swap(StopResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StopResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.StopResponse"; }

 protected:
  explicit StopResponse(::google::protobuf::Arena* arena);
  StopResponse(::google::protobuf::Arena* arena, const StopResponse& from);
  StopResponse(::google::protobuf::Arena* arena, StopResponse&& from) noexcept
      : StopResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.StopResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StopResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class StopRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.StopRequest) */ {
 public:
  inline StopRequest() : StopRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StopRequest(const StopRequest& from) : StopRequest(nullptr, from) {}
  inline StopRequest(StopRequest&& from) noexcept
      : StopRequest(nullptr, std::move(from)) {}
  inline StopRequest& operator=(const StopRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopRequest& operator=(StopRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StopRequest* internal_default_instance() {
    return reinterpret_cast<const StopRequest*>(
        &_StopRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 141;
  friend void swap(StopRequest& a, StopRequest& b) { a.Swap(&b); }
  inline void Swap(StopRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StopRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.StopRequest"; }

 protected:
  explicit StopRequest(::google::protobuf::Arena* arena);
  StopRequest(::google::protobuf::Arena* arena, const StopRequest& from);
  StopRequest(::google::protobuf::Arena* arena, StopRequest&& from) noexcept
      : StopRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.StopRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StopRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StopRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SignMessageResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SignMessageResponse) */ {
 public:
  inline SignMessageResponse() : SignMessageResponse(nullptr) {}
  ~SignMessageResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignMessageResponse(const SignMessageResponse& from) : SignMessageResponse(nullptr, from) {}
  inline SignMessageResponse(SignMessageResponse&& from) noexcept
      : SignMessageResponse(nullptr, std::move(from)) {}
  inline SignMessageResponse& operator=(const SignMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignMessageResponse& operator=(SignMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignMessageResponse* internal_default_instance() {
    return reinterpret_cast<const SignMessageResponse*>(
        &_SignMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(SignMessageResponse& a, SignMessageResponse& b) { a.Swap(&b); }
  inline void Swap(SignMessageResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SignMessageResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignMessageResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignMessageResponse& from) { SignMessageResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignMessageResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SignMessageResponse"; }

 protected:
  explicit SignMessageResponse(::google::protobuf::Arena* arena);
  SignMessageResponse(::google::protobuf::Arena* arena, const SignMessageResponse& from);
  SignMessageResponse(::google::protobuf::Arena* arena, SignMessageResponse&& from) noexcept
      : SignMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 1,
  };
  // string signature = 1;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SignMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SignMessageResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignMessageResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SignMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SignMessageRequest) */ {
 public:
  inline SignMessageRequest() : SignMessageRequest(nullptr) {}
  ~SignMessageRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignMessageRequest(const SignMessageRequest& from) : SignMessageRequest(nullptr, from) {}
  inline SignMessageRequest(SignMessageRequest&& from) noexcept
      : SignMessageRequest(nullptr, std::move(from)) {}
  inline SignMessageRequest& operator=(const SignMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignMessageRequest& operator=(SignMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignMessageRequest* internal_default_instance() {
    return reinterpret_cast<const SignMessageRequest*>(
        &_SignMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(SignMessageRequest& a, SignMessageRequest& b) { a.Swap(&b); }
  inline void Swap(SignMessageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SignMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignMessageRequest& from) { SignMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignMessageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SignMessageRequest"; }

 protected:
  explicit SignMessageRequest(::google::protobuf::Arena* arena);
  SignMessageRequest(::google::protobuf::Arena* arena, const SignMessageRequest& from);
  SignMessageRequest(::google::protobuf::Arena* arena, SignMessageRequest&& from) noexcept
      : SignMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
    kSingleHashFieldNumber = 2,
  };
  // bytes msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // bool single_hash = 2;
  void clear_single_hash() ;
  bool single_hash() const;
  void set_single_hash(bool value);

  private:
  bool _internal_single_hash() const;
  void _internal_set_single_hash(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SignMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SignMessageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    bool single_hash_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SetID final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SetID) */ {
 public:
  inline SetID() : SetID(nullptr) {}
  ~SetID() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SetID(
      ::google::protobuf::internal::ConstantInitialized);

  inline SetID(const SetID& from) : SetID(nullptr, from) {}
  inline SetID(SetID&& from) noexcept
      : SetID(nullptr, std::move(from)) {}
  inline SetID& operator=(const SetID& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetID& operator=(SetID&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetID& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetID* internal_default_instance() {
    return reinterpret_cast<const SetID*>(
        &_SetID_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 150;
  friend void swap(SetID& a, SetID& b) { a.Swap(&b); }
  inline void Swap(SetID* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetID* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetID* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SetID>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetID& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SetID& from) { SetID::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetID* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SetID"; }

 protected:
  explicit SetID(::google::protobuf::Arena* arena);
  SetID(::google::protobuf::Arena* arena, const SetID& from);
  SetID(::google::protobuf::Arena* arena, SetID&& from) noexcept
      : SetID(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSetIdFieldNumber = 1,
  };
  // bytes set_id = 1;
  void clear_set_id() ;
  const std::string& set_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_set_id(Arg_&& arg, Args_... args);
  std::string* mutable_set_id();
  PROTOBUF_NODISCARD std::string* release_set_id();
  void set_allocated_set_id(std::string* value);

  private:
  const std::string& _internal_set_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_set_id(
      const std::string& value);
  std::string* _internal_mutable_set_id();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SetID)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SetID_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SetID& from_msg);
    ::google::protobuf::internal::ArenaStringPtr set_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendRequest_DestCustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          SendRequest_DestCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      SendRequest_DestCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  SendRequest_DestCustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendRequest_DestCustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SendRequest_DestCustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SendRequest_DestCustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SendRequest_DestCustomRecordsEntry_DoNotUse*>(
        &_SendRequest_DestCustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendManyResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendManyResponse) */ {
 public:
  inline SendManyResponse() : SendManyResponse(nullptr) {}
  ~SendManyResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendManyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendManyResponse(const SendManyResponse& from) : SendManyResponse(nullptr, from) {}
  inline SendManyResponse(SendManyResponse&& from) noexcept
      : SendManyResponse(nullptr, std::move(from)) {}
  inline SendManyResponse& operator=(const SendManyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendManyResponse& operator=(SendManyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendManyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendManyResponse* internal_default_instance() {
    return reinterpret_cast<const SendManyResponse*>(
        &_SendManyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(SendManyResponse& a, SendManyResponse& b) { a.Swap(&b); }
  inline void Swap(SendManyResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendManyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendManyResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendManyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendManyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendManyResponse& from) { SendManyResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendManyResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendManyResponse"; }

 protected:
  explicit SendManyResponse(::google::protobuf::Arena* arena);
  SendManyResponse(::google::protobuf::Arena* arena, const SendManyResponse& from);
  SendManyResponse(::google::protobuf::Arena* arena, SendManyResponse&& from) noexcept
      : SendManyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
  };
  // string txid = 1;
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* mutable_txid();
  PROTOBUF_NODISCARD std::string* release_txid();
  void set_allocated_txid(std::string* value);

  private:
  const std::string& _internal_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid(
      const std::string& value);
  std::string* _internal_mutable_txid();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendManyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendManyResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendManyResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendManyRequest_AddrToAmountEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          SendManyRequest_AddrToAmountEntry_DoNotUse, std::string, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      SendManyRequest_AddrToAmountEntry_DoNotUse, std::string, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  SendManyRequest_AddrToAmountEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendManyRequest_AddrToAmountEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit SendManyRequest_AddrToAmountEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const SendManyRequest_AddrToAmountEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const SendManyRequest_AddrToAmountEntry_DoNotUse*>(
        &_SendManyRequest_AddrToAmountEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendCustomMessageResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.SendCustomMessageResponse) */ {
 public:
  inline SendCustomMessageResponse() : SendCustomMessageResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendCustomMessageResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendCustomMessageResponse(const SendCustomMessageResponse& from) : SendCustomMessageResponse(nullptr, from) {}
  inline SendCustomMessageResponse(SendCustomMessageResponse&& from) noexcept
      : SendCustomMessageResponse(nullptr, std::move(from)) {}
  inline SendCustomMessageResponse& operator=(const SendCustomMessageResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendCustomMessageResponse& operator=(SendCustomMessageResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendCustomMessageResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendCustomMessageResponse* internal_default_instance() {
    return reinterpret_cast<const SendCustomMessageResponse*>(
        &_SendCustomMessageResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(SendCustomMessageResponse& a, SendCustomMessageResponse& b) { a.Swap(&b); }
  inline void Swap(SendCustomMessageResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendCustomMessageResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendCustomMessageResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SendCustomMessageResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SendCustomMessageResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SendCustomMessageResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendCustomMessageResponse"; }

 protected:
  explicit SendCustomMessageResponse(::google::protobuf::Arena* arena);
  SendCustomMessageResponse(::google::protobuf::Arena* arena, const SendCustomMessageResponse& from);
  SendCustomMessageResponse(::google::protobuf::Arena* arena, SendCustomMessageResponse&& from) noexcept
      : SendCustomMessageResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.SendCustomMessageResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendCustomMessageResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendCustomMessageResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendCustomMessageRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendCustomMessageRequest) */ {
 public:
  inline SendCustomMessageRequest() : SendCustomMessageRequest(nullptr) {}
  ~SendCustomMessageRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendCustomMessageRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendCustomMessageRequest(const SendCustomMessageRequest& from) : SendCustomMessageRequest(nullptr, from) {}
  inline SendCustomMessageRequest(SendCustomMessageRequest&& from) noexcept
      : SendCustomMessageRequest(nullptr, std::move(from)) {}
  inline SendCustomMessageRequest& operator=(const SendCustomMessageRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendCustomMessageRequest& operator=(SendCustomMessageRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendCustomMessageRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendCustomMessageRequest* internal_default_instance() {
    return reinterpret_cast<const SendCustomMessageRequest*>(
        &_SendCustomMessageRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(SendCustomMessageRequest& a, SendCustomMessageRequest& b) { a.Swap(&b); }
  inline void Swap(SendCustomMessageRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendCustomMessageRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendCustomMessageRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendCustomMessageRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendCustomMessageRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendCustomMessageRequest& from) { SendCustomMessageRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendCustomMessageRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendCustomMessageRequest"; }

 protected:
  explicit SendCustomMessageRequest(::google::protobuf::Arena* arena);
  SendCustomMessageRequest(::google::protobuf::Arena* arena, const SendCustomMessageRequest& from);
  SendCustomMessageRequest(::google::protobuf::Arena* arena, SendCustomMessageRequest&& from) noexcept
      : SendCustomMessageRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerFieldNumber = 1,
    kDataFieldNumber = 3,
    kTypeFieldNumber = 2,
  };
  // bytes peer = 1;
  void clear_peer() ;
  const std::string& peer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer(Arg_&& arg, Args_... args);
  std::string* mutable_peer();
  PROTOBUF_NODISCARD std::string* release_peer();
  void set_allocated_peer(std::string* value);

  private:
  const std::string& _internal_peer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer(
      const std::string& value);
  std::string* _internal_mutable_peer();

  public:
  // bytes data = 3;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 type = 2;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendCustomMessageRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendCustomMessageRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendCustomMessageRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr peer_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendCoinsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendCoinsResponse) */ {
 public:
  inline SendCoinsResponse() : SendCoinsResponse(nullptr) {}
  ~SendCoinsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendCoinsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendCoinsResponse(const SendCoinsResponse& from) : SendCoinsResponse(nullptr, from) {}
  inline SendCoinsResponse(SendCoinsResponse&& from) noexcept
      : SendCoinsResponse(nullptr, std::move(from)) {}
  inline SendCoinsResponse& operator=(const SendCoinsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendCoinsResponse& operator=(SendCoinsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendCoinsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendCoinsResponse* internal_default_instance() {
    return reinterpret_cast<const SendCoinsResponse*>(
        &_SendCoinsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(SendCoinsResponse& a, SendCoinsResponse& b) { a.Swap(&b); }
  inline void Swap(SendCoinsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendCoinsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendCoinsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendCoinsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendCoinsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendCoinsResponse& from) { SendCoinsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendCoinsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendCoinsResponse"; }

 protected:
  explicit SendCoinsResponse(::google::protobuf::Arena* arena);
  SendCoinsResponse(::google::protobuf::Arena* arena, const SendCoinsResponse& from);
  SendCoinsResponse(::google::protobuf::Arena* arena, SendCoinsResponse&& from) noexcept
      : SendCoinsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
  };
  // string txid = 1;
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* mutable_txid();
  PROTOBUF_NODISCARD std::string* release_txid();
  void set_allocated_txid(std::string* value);

  private:
  const std::string& _internal_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid(
      const std::string& value);
  std::string* _internal_mutable_txid();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendCoinsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendCoinsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendCoinsResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RoutingPolicy_CustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RoutingPolicy_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RoutingPolicy_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  RoutingPolicy_CustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoutingPolicy_CustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RoutingPolicy_CustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RoutingPolicy_CustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RoutingPolicy_CustomRecordsEntry_DoNotUse*>(
        &_RoutingPolicy_CustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RestoreBackupResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.RestoreBackupResponse) */ {
 public:
  inline RestoreBackupResponse() : RestoreBackupResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RestoreBackupResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RestoreBackupResponse(const RestoreBackupResponse& from) : RestoreBackupResponse(nullptr, from) {}
  inline RestoreBackupResponse(RestoreBackupResponse&& from) noexcept
      : RestoreBackupResponse(nullptr, std::move(from)) {}
  inline RestoreBackupResponse& operator=(const RestoreBackupResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestoreBackupResponse& operator=(RestoreBackupResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RestoreBackupResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RestoreBackupResponse* internal_default_instance() {
    return reinterpret_cast<const RestoreBackupResponse*>(
        &_RestoreBackupResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 202;
  friend void swap(RestoreBackupResponse& a, RestoreBackupResponse& b) { a.Swap(&b); }
  inline void Swap(RestoreBackupResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RestoreBackupResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RestoreBackupResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<RestoreBackupResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const RestoreBackupResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const RestoreBackupResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RestoreBackupResponse"; }

 protected:
  explicit RestoreBackupResponse(::google::protobuf::Arena* arena);
  RestoreBackupResponse(::google::protobuf::Arena* arena, const RestoreBackupResponse& from);
  RestoreBackupResponse(::google::protobuf::Arena* arena, RestoreBackupResponse&& from) noexcept
      : RestoreBackupResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.RestoreBackupResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RestoreBackupResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RestoreBackupResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ReadyForPsbtFunding final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ReadyForPsbtFunding) */ {
 public:
  inline ReadyForPsbtFunding() : ReadyForPsbtFunding(nullptr) {}
  ~ReadyForPsbtFunding() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReadyForPsbtFunding(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReadyForPsbtFunding(const ReadyForPsbtFunding& from) : ReadyForPsbtFunding(nullptr, from) {}
  inline ReadyForPsbtFunding(ReadyForPsbtFunding&& from) noexcept
      : ReadyForPsbtFunding(nullptr, std::move(from)) {}
  inline ReadyForPsbtFunding& operator=(const ReadyForPsbtFunding& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReadyForPsbtFunding& operator=(ReadyForPsbtFunding&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReadyForPsbtFunding& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReadyForPsbtFunding* internal_default_instance() {
    return reinterpret_cast<const ReadyForPsbtFunding*>(
        &_ReadyForPsbtFunding_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 78;
  friend void swap(ReadyForPsbtFunding& a, ReadyForPsbtFunding& b) { a.Swap(&b); }
  inline void Swap(ReadyForPsbtFunding* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReadyForPsbtFunding* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReadyForPsbtFunding* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ReadyForPsbtFunding>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReadyForPsbtFunding& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReadyForPsbtFunding& from) { ReadyForPsbtFunding::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReadyForPsbtFunding* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ReadyForPsbtFunding"; }

 protected:
  explicit ReadyForPsbtFunding(::google::protobuf::Arena* arena);
  ReadyForPsbtFunding(::google::protobuf::Arena* arena, const ReadyForPsbtFunding& from);
  ReadyForPsbtFunding(::google::protobuf::Arena* arena, ReadyForPsbtFunding&& from) noexcept
      : ReadyForPsbtFunding(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundingAddressFieldNumber = 1,
    kPsbtFieldNumber = 3,
    kFundingAmountFieldNumber = 2,
  };
  // string funding_address = 1;
  void clear_funding_address() ;
  const std::string& funding_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funding_address(Arg_&& arg, Args_... args);
  std::string* mutable_funding_address();
  PROTOBUF_NODISCARD std::string* release_funding_address();
  void set_allocated_funding_address(std::string* value);

  private:
  const std::string& _internal_funding_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funding_address(
      const std::string& value);
  std::string* _internal_mutable_funding_address();

  public:
  // bytes psbt = 3;
  void clear_psbt() ;
  const std::string& psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_psbt();
  PROTOBUF_NODISCARD std::string* release_psbt();
  void set_allocated_psbt(std::string* value);

  private:
  const std::string& _internal_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_psbt(
      const std::string& value);
  std::string* _internal_mutable_psbt();

  public:
  // int64 funding_amount = 2;
  void clear_funding_amount() ;
  ::int64_t funding_amount() const;
  void set_funding_amount(::int64_t value);

  private:
  ::int64_t _internal_funding_amount() const;
  void _internal_set_funding_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ReadyForPsbtFunding)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReadyForPsbtFunding_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReadyForPsbtFunding& from_msg);
    ::google::protobuf::internal::ArenaStringPtr funding_address_;
    ::google::protobuf::internal::ArenaStringPtr psbt_;
    ::int64_t funding_amount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RPCMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.RPCMessage) */ {
 public:
  inline RPCMessage() : RPCMessage(nullptr) {}
  ~RPCMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPCMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPCMessage(const RPCMessage& from) : RPCMessage(nullptr, from) {}
  inline RPCMessage(RPCMessage&& from) noexcept
      : RPCMessage(nullptr, std::move(from)) {}
  inline RPCMessage& operator=(const RPCMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPCMessage& operator=(RPCMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPCMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const RPCMessage* internal_default_instance() {
    return reinterpret_cast<const RPCMessage*>(
        &_RPCMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 224;
  friend void swap(RPCMessage& a, RPCMessage& b) { a.Swap(&b); }
  inline void Swap(RPCMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPCMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPCMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RPCMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPCMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPCMessage& from) { RPCMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPCMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RPCMessage"; }

 protected:
  explicit RPCMessage(::google::protobuf::Arena* arena);
  RPCMessage(::google::protobuf::Arena* arena, const RPCMessage& from);
  RPCMessage(::google::protobuf::Arena* arena, RPCMessage&& from) noexcept
      : RPCMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMethodFullUriFieldNumber = 1,
    kTypeNameFieldNumber = 3,
    kSerializedFieldNumber = 4,
    kStreamRpcFieldNumber = 2,
    kIsErrorFieldNumber = 5,
  };
  // string method_full_uri = 1;
  void clear_method_full_uri() ;
  const std::string& method_full_uri() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_method_full_uri(Arg_&& arg, Args_... args);
  std::string* mutable_method_full_uri();
  PROTOBUF_NODISCARD std::string* release_method_full_uri();
  void set_allocated_method_full_uri(std::string* value);

  private:
  const std::string& _internal_method_full_uri() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_method_full_uri(
      const std::string& value);
  std::string* _internal_mutable_method_full_uri();

  public:
  // string type_name = 3;
  void clear_type_name() ;
  const std::string& type_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type_name(Arg_&& arg, Args_... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* value);

  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(
      const std::string& value);
  std::string* _internal_mutable_type_name();

  public:
  // bytes serialized = 4;
  void clear_serialized() ;
  const std::string& serialized() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_serialized(Arg_&& arg, Args_... args);
  std::string* mutable_serialized();
  PROTOBUF_NODISCARD std::string* release_serialized();
  void set_allocated_serialized(std::string* value);

  private:
  const std::string& _internal_serialized() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_serialized(
      const std::string& value);
  std::string* _internal_mutable_serialized();

  public:
  // bool stream_rpc = 2;
  void clear_stream_rpc() ;
  bool stream_rpc() const;
  void set_stream_rpc(bool value);

  private:
  bool _internal_stream_rpc() const;
  void _internal_set_stream_rpc(bool value);

  public:
  // bool is_error = 5;
  void clear_is_error() ;
  bool is_error() const;
  void set_is_error(bool value);

  private:
  bool _internal_is_error() const;
  void _internal_set_is_error(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.RPCMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RPCMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RPCMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr method_full_uri_;
    ::google::protobuf::internal::ArenaStringPtr type_name_;
    ::google::protobuf::internal::ArenaStringPtr serialized_;
    bool stream_rpc_;
    bool is_error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse*>(
        &_QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PsbtShim final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PsbtShim) */ {
 public:
  inline PsbtShim() : PsbtShim(nullptr) {}
  ~PsbtShim() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PsbtShim(
      ::google::protobuf::internal::ConstantInitialized);

  inline PsbtShim(const PsbtShim& from) : PsbtShim(nullptr, from) {}
  inline PsbtShim(PsbtShim&& from) noexcept
      : PsbtShim(nullptr, std::move(from)) {}
  inline PsbtShim& operator=(const PsbtShim& from) {
    CopyFrom(from);
    return *this;
  }
  inline PsbtShim& operator=(PsbtShim&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PsbtShim& default_instance() {
    return *internal_default_instance();
  }
  static inline const PsbtShim* internal_default_instance() {
    return reinterpret_cast<const PsbtShim*>(
        &_PsbtShim_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 87;
  friend void swap(PsbtShim& a, PsbtShim& b) { a.Swap(&b); }
  inline void Swap(PsbtShim* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PsbtShim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PsbtShim* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PsbtShim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PsbtShim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PsbtShim& from) { PsbtShim::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PsbtShim* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PsbtShim"; }

 protected:
  explicit PsbtShim(::google::protobuf::Arena* arena);
  PsbtShim(::google::protobuf::Arena* arena, const PsbtShim& from);
  PsbtShim(::google::protobuf::Arena* arena, PsbtShim&& from) noexcept
      : PsbtShim(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingChanIdFieldNumber = 1,
    kBasePsbtFieldNumber = 2,
    kNoPublishFieldNumber = 3,
  };
  // bytes pending_chan_id = 1;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // bytes base_psbt = 2;
  void clear_base_psbt() ;
  const std::string& base_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_base_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_base_psbt();
  PROTOBUF_NODISCARD std::string* release_base_psbt();
  void set_allocated_base_psbt(std::string* value);

  private:
  const std::string& _internal_base_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_base_psbt(
      const std::string& value);
  std::string* _internal_mutable_base_psbt();

  public:
  // bool no_publish = 3;
  void clear_no_publish() ;
  bool no_publish() const;
  void set_no_publish(bool value);

  private:
  bool _internal_no_publish() const;
  void _internal_set_no_publish(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PsbtShim)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PsbtShim_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PsbtShim& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    ::google::protobuf::internal::ArenaStringPtr base_psbt_;
    bool no_publish_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PreviousOutPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PreviousOutPoint) */ {
 public:
  inline PreviousOutPoint() : PreviousOutPoint(nullptr) {}
  ~PreviousOutPoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PreviousOutPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline PreviousOutPoint(const PreviousOutPoint& from) : PreviousOutPoint(nullptr, from) {}
  inline PreviousOutPoint(PreviousOutPoint&& from) noexcept
      : PreviousOutPoint(nullptr, std::move(from)) {}
  inline PreviousOutPoint& operator=(const PreviousOutPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreviousOutPoint& operator=(PreviousOutPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreviousOutPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const PreviousOutPoint* internal_default_instance() {
    return reinterpret_cast<const PreviousOutPoint*>(
        &_PreviousOutPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(PreviousOutPoint& a, PreviousOutPoint& b) { a.Swap(&b); }
  inline void Swap(PreviousOutPoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreviousOutPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreviousOutPoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PreviousOutPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreviousOutPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PreviousOutPoint& from) { PreviousOutPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PreviousOutPoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PreviousOutPoint"; }

 protected:
  explicit PreviousOutPoint(::google::protobuf::Arena* arena);
  PreviousOutPoint(::google::protobuf::Arena* arena, const PreviousOutPoint& from);
  PreviousOutPoint(::google::protobuf::Arena* arena, PreviousOutPoint&& from) noexcept
      : PreviousOutPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutpointFieldNumber = 1,
    kIsOurOutputFieldNumber = 2,
  };
  // string outpoint = 1;
  void clear_outpoint() ;
  const std::string& outpoint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_outpoint(Arg_&& arg, Args_... args);
  std::string* mutable_outpoint();
  PROTOBUF_NODISCARD std::string* release_outpoint();
  void set_allocated_outpoint(std::string* value);

  private:
  const std::string& _internal_outpoint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_outpoint(
      const std::string& value);
  std::string* _internal_mutable_outpoint();

  public:
  // bool is_our_output = 2;
  void clear_is_our_output() ;
  bool is_our_output() const;
  void set_is_our_output(bool value);

  private:
  bool _internal_is_our_output() const;
  void _internal_set_is_our_output(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PreviousOutPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PreviousOutPoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PreviousOutPoint& from_msg);
    ::google::protobuf::internal::ArenaStringPtr outpoint_;
    bool is_our_output_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingUpdate) */ {
 public:
  inline PendingUpdate() : PendingUpdate(nullptr) {}
  ~PendingUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingUpdate(const PendingUpdate& from) : PendingUpdate(nullptr, from) {}
  inline PendingUpdate(PendingUpdate&& from) noexcept
      : PendingUpdate(nullptr, std::move(from)) {}
  inline PendingUpdate& operator=(const PendingUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingUpdate& operator=(PendingUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingUpdate* internal_default_instance() {
    return reinterpret_cast<const PendingUpdate*>(
        &_PendingUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 76;
  friend void swap(PendingUpdate& a, PendingUpdate& b) { a.Swap(&b); }
  inline void Swap(PendingUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingUpdate& from) { PendingUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingUpdate"; }

 protected:
  explicit PendingUpdate(::google::protobuf::Arena* arena);
  PendingUpdate(::google::protobuf::Arena* arena, const PendingUpdate& from);
  PendingUpdate(::google::protobuf::Arena* arena, PendingUpdate&& from) noexcept
      : PendingUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
    kOutputIndexFieldNumber = 2,
  };
  // bytes txid = 1;
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* mutable_txid();
  PROTOBUF_NODISCARD std::string* release_txid();
  void set_allocated_txid(std::string* value);

  private:
  const std::string& _internal_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid(
      const std::string& value);
  std::string* _internal_mutable_txid();

  public:
  // uint32 output_index = 2;
  void clear_output_index() ;
  ::uint32_t output_index() const;
  void set_output_index(::uint32_t value);

  private:
  ::uint32_t _internal_output_index() const;
  void _internal_set_output_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingUpdate& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_;
    ::uint32_t output_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingHTLC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingHTLC) */ {
 public:
  inline PendingHTLC() : PendingHTLC(nullptr) {}
  ~PendingHTLC() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingHTLC(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingHTLC(const PendingHTLC& from) : PendingHTLC(nullptr, from) {}
  inline PendingHTLC(PendingHTLC&& from) noexcept
      : PendingHTLC(nullptr, std::move(from)) {}
  inline PendingHTLC& operator=(const PendingHTLC& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingHTLC& operator=(PendingHTLC&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingHTLC& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingHTLC* internal_default_instance() {
    return reinterpret_cast<const PendingHTLC*>(
        &_PendingHTLC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 94;
  friend void swap(PendingHTLC& a, PendingHTLC& b) { a.Swap(&b); }
  inline void Swap(PendingHTLC* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingHTLC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingHTLC* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingHTLC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingHTLC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingHTLC& from) { PendingHTLC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingHTLC* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingHTLC"; }

 protected:
  explicit PendingHTLC(::google::protobuf::Arena* arena);
  PendingHTLC(::google::protobuf::Arena* arena, const PendingHTLC& from);
  PendingHTLC(::google::protobuf::Arena* arena, PendingHTLC&& from) noexcept
      : PendingHTLC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutpointFieldNumber = 3,
    kAmountFieldNumber = 2,
    kIncomingFieldNumber = 1,
    kMaturityHeightFieldNumber = 4,
    kBlocksTilMaturityFieldNumber = 5,
    kStageFieldNumber = 6,
  };
  // string outpoint = 3;
  void clear_outpoint() ;
  const std::string& outpoint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_outpoint(Arg_&& arg, Args_... args);
  std::string* mutable_outpoint();
  PROTOBUF_NODISCARD std::string* release_outpoint();
  void set_allocated_outpoint(std::string* value);

  private:
  const std::string& _internal_outpoint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_outpoint(
      const std::string& value);
  std::string* _internal_mutable_outpoint();

  public:
  // int64 amount = 2;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // bool incoming = 1;
  void clear_incoming() ;
  bool incoming() const;
  void set_incoming(bool value);

  private:
  bool _internal_incoming() const;
  void _internal_set_incoming(bool value);

  public:
  // uint32 maturity_height = 4;
  void clear_maturity_height() ;
  ::uint32_t maturity_height() const;
  void set_maturity_height(::uint32_t value);

  private:
  ::uint32_t _internal_maturity_height() const;
  void _internal_set_maturity_height(::uint32_t value);

  public:
  // int32 blocks_til_maturity = 5;
  void clear_blocks_til_maturity() ;
  ::int32_t blocks_til_maturity() const;
  void set_blocks_til_maturity(::int32_t value);

  private:
  ::int32_t _internal_blocks_til_maturity() const;
  void _internal_set_blocks_til_maturity(::int32_t value);

  public:
  // uint32 stage = 6;
  void clear_stage() ;
  ::uint32_t stage() const;
  void set_stage(::uint32_t value);

  private:
  ::uint32_t _internal_stage() const;
  void _internal_set_stage(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingHTLC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      34, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingHTLC_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingHTLC& from_msg);
    ::google::protobuf::internal::ArenaStringPtr outpoint_;
    ::int64_t amount_;
    bool incoming_;
    ::uint32_t maturity_height_;
    ::int32_t blocks_til_maturity_;
    ::uint32_t stage_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse_PendingChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse.PendingChannel) */ {
 public:
  inline PendingChannelsResponse_PendingChannel() : PendingChannelsResponse_PendingChannel(nullptr) {}
  ~PendingChannelsResponse_PendingChannel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse_PendingChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse_PendingChannel(const PendingChannelsResponse_PendingChannel& from) : PendingChannelsResponse_PendingChannel(nullptr, from) {}
  inline PendingChannelsResponse_PendingChannel(PendingChannelsResponse_PendingChannel&& from) noexcept
      : PendingChannelsResponse_PendingChannel(nullptr, std::move(from)) {}
  inline PendingChannelsResponse_PendingChannel& operator=(const PendingChannelsResponse_PendingChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse_PendingChannel& operator=(PendingChannelsResponse_PendingChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse_PendingChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse_PendingChannel* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse_PendingChannel*>(
        &_PendingChannelsResponse_PendingChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 96;
  friend void swap(PendingChannelsResponse_PendingChannel& a, PendingChannelsResponse_PendingChannel& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse_PendingChannel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse_PendingChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse_PendingChannel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse_PendingChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse_PendingChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse_PendingChannel& from) { PendingChannelsResponse_PendingChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse_PendingChannel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse.PendingChannel"; }

 protected:
  explicit PendingChannelsResponse_PendingChannel(::google::protobuf::Arena* arena);
  PendingChannelsResponse_PendingChannel(::google::protobuf::Arena* arena, const PendingChannelsResponse_PendingChannel& from);
  PendingChannelsResponse_PendingChannel(::google::protobuf::Arena* arena, PendingChannelsResponse_PendingChannel&& from) noexcept
      : PendingChannelsResponse_PendingChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemoteNodePubFieldNumber = 1,
    kChannelPointFieldNumber = 2,
    kChanStatusFlagsFieldNumber = 11,
    kMemoFieldNumber = 13,
    kCustomChannelDataFieldNumber = 34,
    kCapacityFieldNumber = 3,
    kLocalBalanceFieldNumber = 4,
    kRemoteBalanceFieldNumber = 5,
    kLocalChanReserveSatFieldNumber = 6,
    kRemoteChanReserveSatFieldNumber = 7,
    kInitiatorFieldNumber = 8,
    kCommitmentTypeFieldNumber = 9,
    kNumForwardingPackagesFieldNumber = 10,
    kPrivateFieldNumber = 12,
  };
  // string remote_node_pub = 1;
  void clear_remote_node_pub() ;
  const std::string& remote_node_pub() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_node_pub(Arg_&& arg, Args_... args);
  std::string* mutable_remote_node_pub();
  PROTOBUF_NODISCARD std::string* release_remote_node_pub();
  void set_allocated_remote_node_pub(std::string* value);

  private:
  const std::string& _internal_remote_node_pub() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_node_pub(
      const std::string& value);
  std::string* _internal_mutable_remote_node_pub();

  public:
  // string channel_point = 2;
  void clear_channel_point() ;
  const std::string& channel_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_point(Arg_&& arg, Args_... args);
  std::string* mutable_channel_point();
  PROTOBUF_NODISCARD std::string* release_channel_point();
  void set_allocated_channel_point(std::string* value);

  private:
  const std::string& _internal_channel_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_point(
      const std::string& value);
  std::string* _internal_mutable_channel_point();

  public:
  // string chan_status_flags = 11;
  void clear_chan_status_flags() ;
  const std::string& chan_status_flags() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chan_status_flags(Arg_&& arg, Args_... args);
  std::string* mutable_chan_status_flags();
  PROTOBUF_NODISCARD std::string* release_chan_status_flags();
  void set_allocated_chan_status_flags(std::string* value);

  private:
  const std::string& _internal_chan_status_flags() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chan_status_flags(
      const std::string& value);
  std::string* _internal_mutable_chan_status_flags();

  public:
  // string memo = 13;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // bytes custom_channel_data = 34;
  void clear_custom_channel_data() ;
  const std::string& custom_channel_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_channel_data(Arg_&& arg, Args_... args);
  std::string* mutable_custom_channel_data();
  PROTOBUF_NODISCARD std::string* release_custom_channel_data();
  void set_allocated_custom_channel_data(std::string* value);

  private:
  const std::string& _internal_custom_channel_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_channel_data(
      const std::string& value);
  std::string* _internal_mutable_custom_channel_data();

  public:
  // int64 capacity = 3;
  void clear_capacity() ;
  ::int64_t capacity() const;
  void set_capacity(::int64_t value);

  private:
  ::int64_t _internal_capacity() const;
  void _internal_set_capacity(::int64_t value);

  public:
  // int64 local_balance = 4;
  void clear_local_balance() ;
  ::int64_t local_balance() const;
  void set_local_balance(::int64_t value);

  private:
  ::int64_t _internal_local_balance() const;
  void _internal_set_local_balance(::int64_t value);

  public:
  // int64 remote_balance = 5;
  void clear_remote_balance() ;
  ::int64_t remote_balance() const;
  void set_remote_balance(::int64_t value);

  private:
  ::int64_t _internal_remote_balance() const;
  void _internal_set_remote_balance(::int64_t value);

  public:
  // int64 local_chan_reserve_sat = 6;
  void clear_local_chan_reserve_sat() ;
  ::int64_t local_chan_reserve_sat() const;
  void set_local_chan_reserve_sat(::int64_t value);

  private:
  ::int64_t _internal_local_chan_reserve_sat() const;
  void _internal_set_local_chan_reserve_sat(::int64_t value);

  public:
  // int64 remote_chan_reserve_sat = 7;
  void clear_remote_chan_reserve_sat() ;
  ::int64_t remote_chan_reserve_sat() const;
  void set_remote_chan_reserve_sat(::int64_t value);

  private:
  ::int64_t _internal_remote_chan_reserve_sat() const;
  void _internal_set_remote_chan_reserve_sat(::int64_t value);

  public:
  // .lnrpc.Initiator initiator = 8;
  void clear_initiator() ;
  ::lnrpc::Initiator initiator() const;
  void set_initiator(::lnrpc::Initiator value);

  private:
  ::lnrpc::Initiator _internal_initiator() const;
  void _internal_set_initiator(::lnrpc::Initiator value);

  public:
  // .lnrpc.CommitmentType commitment_type = 9;
  void clear_commitment_type() ;
  ::lnrpc::CommitmentType commitment_type() const;
  void set_commitment_type(::lnrpc::CommitmentType value);

  private:
  ::lnrpc::CommitmentType _internal_commitment_type() const;
  void _internal_set_commitment_type(::lnrpc::CommitmentType value);

  public:
  // int64 num_forwarding_packages = 10;
  void clear_num_forwarding_packages() ;
  ::int64_t num_forwarding_packages() const;
  void set_num_forwarding_packages(::int64_t value);

  private:
  ::int64_t _internal_num_forwarding_packages() const;
  void _internal_set_num_forwarding_packages(::int64_t value);

  public:
  // bool private = 12;
  void clear_private_() ;
  bool private_() const;
  void set_private_(bool value);

  private:
  bool _internal_private_() const;
  void _internal_set_private_(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.PendingChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 0,
      110, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_PendingChannel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse_PendingChannel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr remote_node_pub_;
    ::google::protobuf::internal::ArenaStringPtr channel_point_;
    ::google::protobuf::internal::ArenaStringPtr chan_status_flags_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::google::protobuf::internal::ArenaStringPtr custom_channel_data_;
    ::int64_t capacity_;
    ::int64_t local_balance_;
    ::int64_t remote_balance_;
    ::int64_t local_chan_reserve_sat_;
    ::int64_t remote_chan_reserve_sat_;
    int initiator_;
    int commitment_type_;
    ::int64_t num_forwarding_packages_;
    bool private__;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse_Commitments final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse.Commitments) */ {
 public:
  inline PendingChannelsResponse_Commitments() : PendingChannelsResponse_Commitments(nullptr) {}
  ~PendingChannelsResponse_Commitments() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse_Commitments(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse_Commitments(const PendingChannelsResponse_Commitments& from) : PendingChannelsResponse_Commitments(nullptr, from) {}
  inline PendingChannelsResponse_Commitments(PendingChannelsResponse_Commitments&& from) noexcept
      : PendingChannelsResponse_Commitments(nullptr, std::move(from)) {}
  inline PendingChannelsResponse_Commitments& operator=(const PendingChannelsResponse_Commitments& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse_Commitments& operator=(PendingChannelsResponse_Commitments&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse_Commitments& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse_Commitments* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse_Commitments*>(
        &_PendingChannelsResponse_Commitments_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 99;
  friend void swap(PendingChannelsResponse_Commitments& a, PendingChannelsResponse_Commitments& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse_Commitments* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse_Commitments* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse_Commitments* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse_Commitments>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse_Commitments& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse_Commitments& from) { PendingChannelsResponse_Commitments::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse_Commitments* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse.Commitments"; }

 protected:
  explicit PendingChannelsResponse_Commitments(::google::protobuf::Arena* arena);
  PendingChannelsResponse_Commitments(::google::protobuf::Arena* arena, const PendingChannelsResponse_Commitments& from);
  PendingChannelsResponse_Commitments(::google::protobuf::Arena* arena, PendingChannelsResponse_Commitments&& from) noexcept
      : PendingChannelsResponse_Commitments(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLocalTxidFieldNumber = 1,
    kRemoteTxidFieldNumber = 2,
    kRemotePendingTxidFieldNumber = 3,
    kLocalCommitFeeSatFieldNumber = 4,
    kRemoteCommitFeeSatFieldNumber = 5,
    kRemotePendingCommitFeeSatFieldNumber = 6,
  };
  // string local_txid = 1;
  void clear_local_txid() ;
  const std::string& local_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_local_txid(Arg_&& arg, Args_... args);
  std::string* mutable_local_txid();
  PROTOBUF_NODISCARD std::string* release_local_txid();
  void set_allocated_local_txid(std::string* value);

  private:
  const std::string& _internal_local_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_local_txid(
      const std::string& value);
  std::string* _internal_mutable_local_txid();

  public:
  // string remote_txid = 2;
  void clear_remote_txid() ;
  const std::string& remote_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_txid(Arg_&& arg, Args_... args);
  std::string* mutable_remote_txid();
  PROTOBUF_NODISCARD std::string* release_remote_txid();
  void set_allocated_remote_txid(std::string* value);

  private:
  const std::string& _internal_remote_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_txid(
      const std::string& value);
  std::string* _internal_mutable_remote_txid();

  public:
  // string remote_pending_txid = 3;
  void clear_remote_pending_txid() ;
  const std::string& remote_pending_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_pending_txid(Arg_&& arg, Args_... args);
  std::string* mutable_remote_pending_txid();
  PROTOBUF_NODISCARD std::string* release_remote_pending_txid();
  void set_allocated_remote_pending_txid(std::string* value);

  private:
  const std::string& _internal_remote_pending_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_pending_txid(
      const std::string& value);
  std::string* _internal_mutable_remote_pending_txid();

  public:
  // uint64 local_commit_fee_sat = 4;
  void clear_local_commit_fee_sat() ;
  ::uint64_t local_commit_fee_sat() const;
  void set_local_commit_fee_sat(::uint64_t value);

  private:
  ::uint64_t _internal_local_commit_fee_sat() const;
  void _internal_set_local_commit_fee_sat(::uint64_t value);

  public:
  // uint64 remote_commit_fee_sat = 5;
  void clear_remote_commit_fee_sat() ;
  ::uint64_t remote_commit_fee_sat() const;
  void set_remote_commit_fee_sat(::uint64_t value);

  private:
  ::uint64_t _internal_remote_commit_fee_sat() const;
  void _internal_set_remote_commit_fee_sat(::uint64_t value);

  public:
  // uint64 remote_pending_commit_fee_sat = 6;
  void clear_remote_pending_commit_fee_sat() ;
  ::uint64_t remote_pending_commit_fee_sat() const;
  void set_remote_pending_commit_fee_sat(::uint64_t value);

  private:
  ::uint64_t _internal_remote_pending_commit_fee_sat() const;
  void _internal_set_remote_pending_commit_fee_sat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.Commitments)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      90, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_Commitments_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse_Commitments& from_msg);
    ::google::protobuf::internal::ArenaStringPtr local_txid_;
    ::google::protobuf::internal::ArenaStringPtr remote_txid_;
    ::google::protobuf::internal::ArenaStringPtr remote_pending_txid_;
    ::uint64_t local_commit_fee_sat_;
    ::uint64_t remote_commit_fee_sat_;
    ::uint64_t remote_pending_commit_fee_sat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsRequest) */ {
 public:
  inline PendingChannelsRequest() : PendingChannelsRequest(nullptr) {}
  ~PendingChannelsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsRequest(const PendingChannelsRequest& from) : PendingChannelsRequest(nullptr, from) {}
  inline PendingChannelsRequest(PendingChannelsRequest&& from) noexcept
      : PendingChannelsRequest(nullptr, std::move(from)) {}
  inline PendingChannelsRequest& operator=(const PendingChannelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsRequest& operator=(PendingChannelsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsRequest* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsRequest*>(
        &_PendingChannelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 95;
  friend void swap(PendingChannelsRequest& a, PendingChannelsRequest& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsRequest& from) { PendingChannelsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsRequest"; }

 protected:
  explicit PendingChannelsRequest(::google::protobuf::Arena* arena);
  PendingChannelsRequest(::google::protobuf::Arena* arena, const PendingChannelsRequest& from);
  PendingChannelsRequest(::google::protobuf::Arena* arena, PendingChannelsRequest&& from) noexcept
      : PendingChannelsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIncludeRawTxFieldNumber = 1,
  };
  // bool include_raw_tx = 1;
  void clear_include_raw_tx() ;
  bool include_raw_tx() const;
  void set_include_raw_tx(bool value);

  private:
  bool _internal_include_raw_tx() const;
  void _internal_set_include_raw_tx(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsRequest& from_msg);
    bool include_raw_tx_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PeerEventSubscription final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.PeerEventSubscription) */ {
 public:
  inline PeerEventSubscription() : PeerEventSubscription(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerEventSubscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerEventSubscription(const PeerEventSubscription& from) : PeerEventSubscription(nullptr, from) {}
  inline PeerEventSubscription(PeerEventSubscription&& from) noexcept
      : PeerEventSubscription(nullptr, std::move(from)) {}
  inline PeerEventSubscription& operator=(const PeerEventSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerEventSubscription& operator=(PeerEventSubscription&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerEventSubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerEventSubscription* internal_default_instance() {
    return reinterpret_cast<const PeerEventSubscription*>(
        &_PeerEventSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(PeerEventSubscription& a, PeerEventSubscription& b) { a.Swap(&b); }
  inline void Swap(PeerEventSubscription* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerEventSubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerEventSubscription* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PeerEventSubscription>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PeerEventSubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PeerEventSubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PeerEventSubscription"; }

 protected:
  explicit PeerEventSubscription(::google::protobuf::Arena* arena);
  PeerEventSubscription(::google::protobuf::Arena* arena, const PeerEventSubscription& from);
  PeerEventSubscription(::google::protobuf::Arena* arena, PeerEventSubscription&& from) noexcept
      : PeerEventSubscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.PeerEventSubscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerEventSubscription_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerEventSubscription& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PeerEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PeerEvent) */ {
 public:
  inline PeerEvent() : PeerEvent(nullptr) {}
  ~PeerEvent() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PeerEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline PeerEvent(const PeerEvent& from) : PeerEvent(nullptr, from) {}
  inline PeerEvent(PeerEvent&& from) noexcept
      : PeerEvent(nullptr, std::move(from)) {}
  inline PeerEvent& operator=(const PeerEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline PeerEvent& operator=(PeerEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PeerEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const PeerEvent* internal_default_instance() {
    return reinterpret_cast<const PeerEvent*>(
        &_PeerEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(PeerEvent& a, PeerEvent& b) { a.Swap(&b); }
  inline void Swap(PeerEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PeerEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PeerEvent* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PeerEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PeerEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PeerEvent& from) { PeerEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PeerEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PeerEvent"; }

 protected:
  explicit PeerEvent(::google::protobuf::Arena* arena);
  PeerEvent(::google::protobuf::Arena* arena, const PeerEvent& from);
  PeerEvent(::google::protobuf::Arena* arena, PeerEvent&& from) noexcept
      : PeerEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using EventType = PeerEvent_EventType;
  static constexpr EventType PEER_ONLINE = PeerEvent_EventType_PEER_ONLINE;
  static constexpr EventType PEER_OFFLINE = PeerEvent_EventType_PEER_OFFLINE;
  static inline bool EventType_IsValid(int value) {
    return PeerEvent_EventType_IsValid(value);
  }
  static constexpr EventType EventType_MIN = PeerEvent_EventType_EventType_MIN;
  static constexpr EventType EventType_MAX = PeerEvent_EventType_EventType_MAX;
  static constexpr int EventType_ARRAYSIZE = PeerEvent_EventType_EventType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
    return PeerEvent_EventType_descriptor();
  }
  template <typename T>
  static inline const std::string& EventType_Name(T value) {
    return PeerEvent_EventType_Name(value);
  }
  static inline bool EventType_Parse(absl::string_view name, EventType* value) {
    return PeerEvent_EventType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPubKeyFieldNumber = 1,
    kTypeFieldNumber = 2,
  };
  // string pub_key = 1;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // .lnrpc.PeerEvent.EventType type = 2;
  void clear_type() ;
  ::lnrpc::PeerEvent_EventType type() const;
  void set_type(::lnrpc::PeerEvent_EventType value);

  private:
  ::lnrpc::PeerEvent_EventType _internal_type() const;
  void _internal_set_type(::lnrpc::PeerEvent_EventType value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PeerEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PeerEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PeerEvent& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PaymentHash final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PaymentHash) */ {
 public:
  inline PaymentHash() : PaymentHash(nullptr) {}
  ~PaymentHash() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PaymentHash(
      ::google::protobuf::internal::ConstantInitialized);

  inline PaymentHash(const PaymentHash& from) : PaymentHash(nullptr, from) {}
  inline PaymentHash(PaymentHash&& from) noexcept
      : PaymentHash(nullptr, std::move(from)) {}
  inline PaymentHash& operator=(const PaymentHash& from) {
    CopyFrom(from);
    return *this;
  }
  inline PaymentHash& operator=(PaymentHash&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PaymentHash& default_instance() {
    return *internal_default_instance();
  }
  static inline const PaymentHash* internal_default_instance() {
    return reinterpret_cast<const PaymentHash*>(
        &_PaymentHash_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 164;
  friend void swap(PaymentHash& a, PaymentHash& b) { a.Swap(&b); }
  inline void Swap(PaymentHash* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PaymentHash* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PaymentHash* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PaymentHash>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PaymentHash& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PaymentHash& from) { PaymentHash::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PaymentHash* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PaymentHash"; }

 protected:
  explicit PaymentHash(::google::protobuf::Arena* arena);
  PaymentHash(::google::protobuf::Arena* arena, const PaymentHash& from);
  PaymentHash(::google::protobuf::Arena* arena, PaymentHash&& from) noexcept
      : PaymentHash(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRHashStrFieldNumber = 1,
    kRHashFieldNumber = 2,
  };
  // string r_hash_str = 1 [deprecated = true];
  [[deprecated]]  void clear_r_hash_str() ;
  [[deprecated]] const std::string& r_hash_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_r_hash_str(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_r_hash_str();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_r_hash_str();
  [[deprecated]] void set_allocated_r_hash_str(std::string* value);

  private:
  const std::string& _internal_r_hash_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_r_hash_str(
      const std::string& value);
  std::string* _internal_mutable_r_hash_str();

  public:
  // bytes r_hash = 2;
  void clear_r_hash() ;
  const std::string& r_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_hash(Arg_&& arg, Args_... args);
  std::string* mutable_r_hash();
  PROTOBUF_NODISCARD std::string* release_r_hash();
  void set_allocated_r_hash(std::string* value);

  private:
  const std::string& _internal_r_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_r_hash(
      const std::string& value);
  std::string* _internal_mutable_r_hash();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PaymentHash)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PaymentHash_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PaymentHash& from_msg);
    ::google::protobuf::internal::ArenaStringPtr r_hash_str_;
    ::google::protobuf::internal::ArenaStringPtr r_hash_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Payment_FirstHopCustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Payment_FirstHopCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Payment_FirstHopCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  Payment_FirstHopCustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Payment_FirstHopCustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Payment_FirstHopCustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Payment_FirstHopCustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Payment_FirstHopCustomRecordsEntry_DoNotUse*>(
        &_Payment_FirstHopCustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PayReqString final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PayReqString) */ {
 public:
  inline PayReqString() : PayReqString(nullptr) {}
  ~PayReqString() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PayReqString(
      ::google::protobuf::internal::ConstantInitialized);

  inline PayReqString(const PayReqString& from) : PayReqString(nullptr, from) {}
  inline PayReqString(PayReqString&& from) noexcept
      : PayReqString(nullptr, std::move(from)) {}
  inline PayReqString& operator=(const PayReqString& from) {
    CopyFrom(from);
    return *this;
  }
  inline PayReqString& operator=(PayReqString&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PayReqString& default_instance() {
    return *internal_default_instance();
  }
  static inline const PayReqString* internal_default_instance() {
    return reinterpret_cast<const PayReqString*>(
        &_PayReqString_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 181;
  friend void swap(PayReqString& a, PayReqString& b) { a.Swap(&b); }
  inline void Swap(PayReqString* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PayReqString* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PayReqString* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PayReqString>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PayReqString& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PayReqString& from) { PayReqString::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PayReqString* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PayReqString"; }

 protected:
  explicit PayReqString(::google::protobuf::Arena* arena);
  PayReqString(::google::protobuf::Arena* arena, const PayReqString& from);
  PayReqString(::google::protobuf::Arena* arena, PayReqString&& from) noexcept
      : PayReqString(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPayReqFieldNumber = 1,
  };
  // string pay_req = 1;
  void clear_pay_req() ;
  const std::string& pay_req() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pay_req(Arg_&& arg, Args_... args);
  std::string* mutable_pay_req();
  PROTOBUF_NODISCARD std::string* release_pay_req();
  void set_allocated_pay_req(std::string* value);

  private:
  const std::string& _internal_pay_req() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pay_req(
      const std::string& value);
  std::string* _internal_mutable_pay_req();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PayReqString)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      34, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PayReqString_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PayReqString& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pay_req_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class OutputDetail final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.OutputDetail) */ {
 public:
  inline OutputDetail() : OutputDetail(nullptr) {}
  ~OutputDetail() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OutputDetail(
      ::google::protobuf::internal::ConstantInitialized);

  inline OutputDetail(const OutputDetail& from) : OutputDetail(nullptr, from) {}
  inline OutputDetail(OutputDetail&& from) noexcept
      : OutputDetail(nullptr, std::move(from)) {}
  inline OutputDetail& operator=(const OutputDetail& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutputDetail& operator=(OutputDetail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OutputDetail& default_instance() {
    return *internal_default_instance();
  }
  static inline const OutputDetail* internal_default_instance() {
    return reinterpret_cast<const OutputDetail*>(
        &_OutputDetail_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(OutputDetail& a, OutputDetail& b) { a.Swap(&b); }
  inline void Swap(OutputDetail* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutputDetail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OutputDetail* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OutputDetail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OutputDetail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OutputDetail& from) { OutputDetail::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OutputDetail* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.OutputDetail"; }

 protected:
  explicit OutputDetail(::google::protobuf::Arena* arena);
  OutputDetail(::google::protobuf::Arena* arena, const OutputDetail& from);
  OutputDetail(::google::protobuf::Arena* arena, OutputDetail&& from) noexcept
      : OutputDetail(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 2,
    kPkScriptFieldNumber = 3,
    kOutputTypeFieldNumber = 1,
    kIsOurAddressFieldNumber = 6,
    kOutputIndexFieldNumber = 4,
    kAmountFieldNumber = 5,
  };
  // string address = 2;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // string pk_script = 3;
  void clear_pk_script() ;
  const std::string& pk_script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pk_script(Arg_&& arg, Args_... args);
  std::string* mutable_pk_script();
  PROTOBUF_NODISCARD std::string* release_pk_script();
  void set_allocated_pk_script(std::string* value);

  private:
  const std::string& _internal_pk_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pk_script(
      const std::string& value);
  std::string* _internal_mutable_pk_script();

  public:
  // .lnrpc.OutputScriptType output_type = 1;
  void clear_output_type() ;
  ::lnrpc::OutputScriptType output_type() const;
  void set_output_type(::lnrpc::OutputScriptType value);

  private:
  ::lnrpc::OutputScriptType _internal_output_type() const;
  void _internal_set_output_type(::lnrpc::OutputScriptType value);

  public:
  // bool is_our_address = 6;
  void clear_is_our_address() ;
  bool is_our_address() const;
  void set_is_our_address(bool value);

  private:
  bool _internal_is_our_address() const;
  void _internal_set_is_our_address(bool value);

  public:
  // int64 output_index = 4;
  void clear_output_index() ;
  ::int64_t output_index() const;
  void set_output_index(::int64_t value);

  private:
  ::int64_t _internal_output_index() const;
  void _internal_set_output_index(::int64_t value);

  public:
  // int64 amount = 5;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.OutputDetail)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OutputDetail_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OutputDetail& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr pk_script_;
    int output_type_;
    bool is_our_address_;
    ::int64_t output_index_;
    ::int64_t amount_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class OutPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.OutPoint) */ {
 public:
  inline OutPoint() : OutPoint(nullptr) {}
  ~OutPoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OutPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline OutPoint(const OutPoint& from) : OutPoint(nullptr, from) {}
  inline OutPoint(OutPoint&& from) noexcept
      : OutPoint(nullptr, std::move(from)) {}
  inline OutPoint& operator=(const OutPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline OutPoint& operator=(OutPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OutPoint& default_instance() {
    return *internal_default_instance();
  }
  static inline const OutPoint* internal_default_instance() {
    return reinterpret_cast<const OutPoint*>(
        &_OutPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(OutPoint& a, OutPoint& b) { a.Swap(&b); }
  inline void Swap(OutPoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OutPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OutPoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OutPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OutPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OutPoint& from) { OutPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OutPoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.OutPoint"; }

 protected:
  explicit OutPoint(::google::protobuf::Arena* arena);
  OutPoint(::google::protobuf::Arena* arena, const OutPoint& from);
  OutPoint(::google::protobuf::Arena* arena, OutPoint&& from) noexcept
      : OutPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidBytesFieldNumber = 1,
    kTxidStrFieldNumber = 2,
    kOutputIndexFieldNumber = 3,
  };
  // bytes txid_bytes = 1;
  void clear_txid_bytes() ;
  const std::string& txid_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_txid_bytes();
  PROTOBUF_NODISCARD std::string* release_txid_bytes();
  void set_allocated_txid_bytes(std::string* value);

  private:
  const std::string& _internal_txid_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid_bytes(
      const std::string& value);
  std::string* _internal_mutable_txid_bytes();

  public:
  // string txid_str = 2;
  void clear_txid_str() ;
  const std::string& txid_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid_str(Arg_&& arg, Args_... args);
  std::string* mutable_txid_str();
  PROTOBUF_NODISCARD std::string* release_txid_str();
  void set_allocated_txid_str(std::string* value);

  private:
  const std::string& _internal_txid_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid_str(
      const std::string& value);
  std::string* _internal_mutable_txid_str();

  public:
  // uint32 output_index = 3;
  void clear_output_index() ;
  ::uint32_t output_index() const;
  void set_output_index(::uint32_t value);

  private:
  ::uint32_t _internal_output_index() const;
  void _internal_set_output_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.OutPoint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OutPoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OutPoint& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_bytes_;
    ::google::protobuf::internal::ArenaStringPtr txid_str_;
    ::uint32_t output_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Op final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Op) */ {
 public:
  inline Op() : Op(nullptr) {}
  ~Op() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Op(
      ::google::protobuf::internal::ConstantInitialized);

  inline Op(const Op& from) : Op(nullptr, from) {}
  inline Op(Op&& from) noexcept
      : Op(nullptr, std::move(from)) {}
  inline Op& operator=(const Op& from) {
    CopyFrom(from);
    return *this;
  }
  inline Op& operator=(Op&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Op& default_instance() {
    return *internal_default_instance();
  }
  static inline const Op* internal_default_instance() {
    return reinterpret_cast<const Op*>(
        &_Op_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 219;
  friend void swap(Op& a, Op& b) { a.Swap(&b); }
  inline void Swap(Op* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Op* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Op* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Op>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Op& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Op& from) { Op::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Op* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Op"; }

 protected:
  explicit Op(::google::protobuf::Arena* arena);
  Op(::google::protobuf::Arena* arena, const Op& from);
  Op(::google::protobuf::Arena* arena, Op&& from) noexcept
      : Op(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActionsFieldNumber = 2,
    kEntityFieldNumber = 1,
  };
  // repeated string actions = 2;
  int actions_size() const;
  private:
  int _internal_actions_size() const;

  public:
  void clear_actions() ;
  const std::string& actions(int index) const;
  std::string* mutable_actions(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_actions(int index, Arg_&& value, Args_... args);
  std::string* add_actions();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_actions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& actions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_actions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_actions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_actions();

  public:
  // string entity = 1;
  void clear_entity() ;
  const std::string& entity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity(Arg_&& arg, Args_... args);
  std::string* mutable_entity();
  PROTOBUF_NODISCARD std::string* release_entity();
  void set_allocated_entity(std::string* value);

  private:
  const std::string& _internal_entity() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity(
      const std::string& value);
  std::string* _internal_mutable_entity();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Op)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      30, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Op_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Op& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> actions_;
    ::google::protobuf::internal::ArenaStringPtr entity_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodePair final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodePair) */ {
 public:
  inline NodePair() : NodePair(nullptr) {}
  ~NodePair() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodePair(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodePair(const NodePair& from) : NodePair(nullptr, from) {}
  inline NodePair(NodePair&& from) noexcept
      : NodePair(nullptr, std::move(from)) {}
  inline NodePair& operator=(const NodePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodePair& operator=(NodePair&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodePair& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodePair* internal_default_instance() {
    return reinterpret_cast<const NodePair*>(
        &_NodePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 114;
  friend void swap(NodePair& a, NodePair& b) { a.Swap(&b); }
  inline void Swap(NodePair* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodePair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodePair* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodePair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodePair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodePair& from) { NodePair::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodePair* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodePair"; }

 protected:
  explicit NodePair(::google::protobuf::Arena* arena);
  NodePair(::google::protobuf::Arena* arena, const NodePair& from);
  NodePair(::google::protobuf::Arena* arena, NodePair&& from) noexcept
      : NodePair(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFromFieldNumber = 1,
    kToFieldNumber = 2,
  };
  // bytes from = 1;
  void clear_from() ;
  const std::string& from() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_from(Arg_&& arg, Args_... args);
  std::string* mutable_from();
  PROTOBUF_NODISCARD std::string* release_from();
  void set_allocated_from(std::string* value);

  private:
  const std::string& _internal_from() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_from(
      const std::string& value);
  std::string* _internal_mutable_from();

  public:
  // bytes to = 2;
  void clear_to() ;
  const std::string& to() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to(Arg_&& arg, Args_... args);
  std::string* mutable_to();
  PROTOBUF_NODISCARD std::string* release_to();
  void set_allocated_to(std::string* value);

  private:
  const std::string& _internal_to() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to(
      const std::string& value);
  std::string* _internal_mutable_to();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodePair)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodePair_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodePair& from_msg);
    ::google::protobuf::internal::ArenaStringPtr from_;
    ::google::protobuf::internal::ArenaStringPtr to_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeMetricsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodeMetricsRequest) */ {
 public:
  inline NodeMetricsRequest() : NodeMetricsRequest(nullptr) {}
  ~NodeMetricsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeMetricsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeMetricsRequest(const NodeMetricsRequest& from) : NodeMetricsRequest(nullptr, from) {}
  inline NodeMetricsRequest(NodeMetricsRequest&& from) noexcept
      : NodeMetricsRequest(nullptr, std::move(from)) {}
  inline NodeMetricsRequest& operator=(const NodeMetricsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeMetricsRequest& operator=(NodeMetricsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeMetricsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeMetricsRequest* internal_default_instance() {
    return reinterpret_cast<const NodeMetricsRequest*>(
        &_NodeMetricsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 134;
  friend void swap(NodeMetricsRequest& a, NodeMetricsRequest& b) { a.Swap(&b); }
  inline void Swap(NodeMetricsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeMetricsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeMetricsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeMetricsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeMetricsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeMetricsRequest& from) { NodeMetricsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeMetricsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodeMetricsRequest"; }

 protected:
  explicit NodeMetricsRequest(::google::protobuf::Arena* arena);
  NodeMetricsRequest(::google::protobuf::Arena* arena, const NodeMetricsRequest& from);
  NodeMetricsRequest(::google::protobuf::Arena* arena, NodeMetricsRequest&& from) noexcept
      : NodeMetricsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTypesFieldNumber = 1,
  };
  // repeated .lnrpc.NodeMetricType types = 1;
  int types_size() const;
  private:
  int _internal_types_size() const;

  public:
  void clear_types() ;
  public:
  ::lnrpc::NodeMetricType types(int index) const;
  void set_types(int index, ::lnrpc::NodeMetricType value);
  void add_types(::lnrpc::NodeMetricType value);
  const ::google::protobuf::RepeatedField<int>& types() const;
  ::google::protobuf::RepeatedField<int>* mutable_types();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_types() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_types();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodeMetricsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeMetricsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeMetricsRequest& from_msg);
    ::google::protobuf::RepeatedField<int> types_;
    mutable ::google::protobuf::internal::CachedSize _types_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodeInfoRequest) */ {
 public:
  inline NodeInfoRequest() : NodeInfoRequest(nullptr) {}
  ~NodeInfoRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeInfoRequest(const NodeInfoRequest& from) : NodeInfoRequest(nullptr, from) {}
  inline NodeInfoRequest(NodeInfoRequest&& from) noexcept
      : NodeInfoRequest(nullptr, std::move(from)) {}
  inline NodeInfoRequest& operator=(const NodeInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeInfoRequest& operator=(NodeInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeInfoRequest* internal_default_instance() {
    return reinterpret_cast<const NodeInfoRequest*>(
        &_NodeInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 122;
  friend void swap(NodeInfoRequest& a, NodeInfoRequest& b) { a.Swap(&b); }
  inline void Swap(NodeInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeInfoRequest& from) { NodeInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeInfoRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodeInfoRequest"; }

 protected:
  explicit NodeInfoRequest(::google::protobuf::Arena* arena);
  NodeInfoRequest(::google::protobuf::Arena* arena, const NodeInfoRequest& from);
  NodeInfoRequest(::google::protobuf::Arena* arena, NodeInfoRequest&& from) noexcept
      : NodeInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPubKeyFieldNumber = 1,
    kIncludeChannelsFieldNumber = 2,
  };
  // string pub_key = 1;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // bool include_channels = 2;
  void clear_include_channels() ;
  bool include_channels() const;
  void set_include_channels(bool value);

  private:
  bool _internal_include_channels() const;
  void _internal_set_include_channels(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodeInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeInfoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    bool include_channels_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodeAddress) */ {
 public:
  inline NodeAddress() : NodeAddress(nullptr) {}
  ~NodeAddress() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeAddress(const NodeAddress& from) : NodeAddress(nullptr, from) {}
  inline NodeAddress(NodeAddress&& from) noexcept
      : NodeAddress(nullptr, std::move(from)) {}
  inline NodeAddress& operator=(const NodeAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeAddress& operator=(NodeAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeAddress* internal_default_instance() {
    return reinterpret_cast<const NodeAddress*>(
        &_NodeAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 127;
  friend void swap(NodeAddress& a, NodeAddress& b) { a.Swap(&b); }
  inline void Swap(NodeAddress* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeAddress* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeAddress& from) { NodeAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeAddress* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodeAddress"; }

 protected:
  explicit NodeAddress(::google::protobuf::Arena* arena);
  NodeAddress(::google::protobuf::Arena* arena, const NodeAddress& from);
  NodeAddress(::google::protobuf::Arena* arena, NodeAddress&& from) noexcept
      : NodeAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNetworkFieldNumber = 1,
    kAddrFieldNumber = 2,
  };
  // string network = 1;
  void clear_network() ;
  const std::string& network() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_network(Arg_&& arg, Args_... args);
  std::string* mutable_network();
  PROTOBUF_NODISCARD std::string* release_network();
  void set_allocated_network(std::string* value);

  private:
  const std::string& _internal_network() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_network(
      const std::string& value);
  std::string* _internal_mutable_network();

  public:
  // string addr = 2;
  void clear_addr() ;
  const std::string& addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addr(Arg_&& arg, Args_... args);
  std::string* mutable_addr();
  PROTOBUF_NODISCARD std::string* release_addr();
  void set_allocated_addr(std::string* value);

  private:
  const std::string& _internal_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addr(
      const std::string& value);
  std::string* _internal_mutable_addr();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodeAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeAddress_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeAddress& from_msg);
    ::google::protobuf::internal::ArenaStringPtr network_;
    ::google::protobuf::internal::ArenaStringPtr addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NewAddressResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NewAddressResponse) */ {
 public:
  inline NewAddressResponse() : NewAddressResponse(nullptr) {}
  ~NewAddressResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewAddressResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewAddressResponse(const NewAddressResponse& from) : NewAddressResponse(nullptr, from) {}
  inline NewAddressResponse(NewAddressResponse&& from) noexcept
      : NewAddressResponse(nullptr, std::move(from)) {}
  inline NewAddressResponse& operator=(const NewAddressResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewAddressResponse& operator=(NewAddressResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewAddressResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewAddressResponse* internal_default_instance() {
    return reinterpret_cast<const NewAddressResponse*>(
        &_NewAddressResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(NewAddressResponse& a, NewAddressResponse& b) { a.Swap(&b); }
  inline void Swap(NewAddressResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewAddressResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewAddressResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewAddressResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewAddressResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewAddressResponse& from) { NewAddressResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewAddressResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NewAddressResponse"; }

 protected:
  explicit NewAddressResponse(::google::protobuf::Arena* arena);
  NewAddressResponse(::google::protobuf::Arena* arena, const NewAddressResponse& from);
  NewAddressResponse(::google::protobuf::Arena* arena, NewAddressResponse&& from) noexcept
      : NewAddressResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
  };
  // string address = 1;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NewAddressResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NewAddressResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewAddressResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NewAddressRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NewAddressRequest) */ {
 public:
  inline NewAddressRequest() : NewAddressRequest(nullptr) {}
  ~NewAddressRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NewAddressRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NewAddressRequest(const NewAddressRequest& from) : NewAddressRequest(nullptr, from) {}
  inline NewAddressRequest(NewAddressRequest&& from) noexcept
      : NewAddressRequest(nullptr, std::move(from)) {}
  inline NewAddressRequest& operator=(const NewAddressRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NewAddressRequest& operator=(NewAddressRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NewAddressRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NewAddressRequest* internal_default_instance() {
    return reinterpret_cast<const NewAddressRequest*>(
        &_NewAddressRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(NewAddressRequest& a, NewAddressRequest& b) { a.Swap(&b); }
  inline void Swap(NewAddressRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NewAddressRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NewAddressRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NewAddressRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NewAddressRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NewAddressRequest& from) { NewAddressRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NewAddressRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NewAddressRequest"; }

 protected:
  explicit NewAddressRequest(::google::protobuf::Arena* arena);
  NewAddressRequest(::google::protobuf::Arena* arena, const NewAddressRequest& from);
  NewAddressRequest(::google::protobuf::Arena* arena, NewAddressRequest&& from) noexcept
      : NewAddressRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 2,
    kTypeFieldNumber = 1,
  };
  // string account = 2;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // .lnrpc.AddressType type = 1;
  void clear_type() ;
  ::lnrpc::AddressType type() const;
  void set_type(::lnrpc::AddressType value);

  private:
  ::lnrpc::AddressType _internal_type() const;
  void _internal_set_type(::lnrpc::AddressType value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NewAddressRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NewAddressRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NewAddressRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    int type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NetworkInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.NetworkInfoRequest) */ {
 public:
  inline NetworkInfoRequest() : NetworkInfoRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkInfoRequest(const NetworkInfoRequest& from) : NetworkInfoRequest(nullptr, from) {}
  inline NetworkInfoRequest(NetworkInfoRequest&& from) noexcept
      : NetworkInfoRequest(nullptr, std::move(from)) {}
  inline NetworkInfoRequest& operator=(const NetworkInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkInfoRequest& operator=(NetworkInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkInfoRequest* internal_default_instance() {
    return reinterpret_cast<const NetworkInfoRequest*>(
        &_NetworkInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 139;
  friend void swap(NetworkInfoRequest& a, NetworkInfoRequest& b) { a.Swap(&b); }
  inline void Swap(NetworkInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<NetworkInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const NetworkInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const NetworkInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NetworkInfoRequest"; }

 protected:
  explicit NetworkInfoRequest(::google::protobuf::Arena* arena);
  NetworkInfoRequest(::google::protobuf::Arena* arena, const NetworkInfoRequest& from);
  NetworkInfoRequest(::google::protobuf::Arena* arena, NetworkInfoRequest&& from) noexcept
      : NetworkInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.NetworkInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetworkInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NetworkInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NetworkInfo) */ {
 public:
  inline NetworkInfo() : NetworkInfo(nullptr) {}
  ~NetworkInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NetworkInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline NetworkInfo(const NetworkInfo& from) : NetworkInfo(nullptr, from) {}
  inline NetworkInfo(NetworkInfo&& from) noexcept
      : NetworkInfo(nullptr, std::move(from)) {}
  inline NetworkInfo& operator=(const NetworkInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline NetworkInfo& operator=(NetworkInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NetworkInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const NetworkInfo* internal_default_instance() {
    return reinterpret_cast<const NetworkInfo*>(
        &_NetworkInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 140;
  friend void swap(NetworkInfo& a, NetworkInfo& b) { a.Swap(&b); }
  inline void Swap(NetworkInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NetworkInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NetworkInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NetworkInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NetworkInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NetworkInfo& from) { NetworkInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NetworkInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NetworkInfo"; }

 protected:
  explicit NetworkInfo(::google::protobuf::Arena* arena);
  NetworkInfo(::google::protobuf::Arena* arena, const NetworkInfo& from);
  NetworkInfo(::google::protobuf::Arena* arena, NetworkInfo&& from) noexcept
      : NetworkInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAvgOutDegreeFieldNumber = 2,
    kGraphDiameterFieldNumber = 1,
    kMaxOutDegreeFieldNumber = 3,
    kNumNodesFieldNumber = 4,
    kNumChannelsFieldNumber = 5,
    kTotalNetworkCapacityFieldNumber = 6,
    kAvgChannelSizeFieldNumber = 7,
    kMinChannelSizeFieldNumber = 8,
    kMaxChannelSizeFieldNumber = 9,
    kMedianChannelSizeSatFieldNumber = 10,
    kNumZombieChansFieldNumber = 11,
  };
  // double avg_out_degree = 2;
  void clear_avg_out_degree() ;
  double avg_out_degree() const;
  void set_avg_out_degree(double value);

  private:
  double _internal_avg_out_degree() const;
  void _internal_set_avg_out_degree(double value);

  public:
  // uint32 graph_diameter = 1;
  void clear_graph_diameter() ;
  ::uint32_t graph_diameter() const;
  void set_graph_diameter(::uint32_t value);

  private:
  ::uint32_t _internal_graph_diameter() const;
  void _internal_set_graph_diameter(::uint32_t value);

  public:
  // uint32 max_out_degree = 3;
  void clear_max_out_degree() ;
  ::uint32_t max_out_degree() const;
  void set_max_out_degree(::uint32_t value);

  private:
  ::uint32_t _internal_max_out_degree() const;
  void _internal_set_max_out_degree(::uint32_t value);

  public:
  // uint32 num_nodes = 4;
  void clear_num_nodes() ;
  ::uint32_t num_nodes() const;
  void set_num_nodes(::uint32_t value);

  private:
  ::uint32_t _internal_num_nodes() const;
  void _internal_set_num_nodes(::uint32_t value);

  public:
  // uint32 num_channels = 5;
  void clear_num_channels() ;
  ::uint32_t num_channels() const;
  void set_num_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_channels() const;
  void _internal_set_num_channels(::uint32_t value);

  public:
  // int64 total_network_capacity = 6;
  void clear_total_network_capacity() ;
  ::int64_t total_network_capacity() const;
  void set_total_network_capacity(::int64_t value);

  private:
  ::int64_t _internal_total_network_capacity() const;
  void _internal_set_total_network_capacity(::int64_t value);

  public:
  // double avg_channel_size = 7;
  void clear_avg_channel_size() ;
  double avg_channel_size() const;
  void set_avg_channel_size(double value);

  private:
  double _internal_avg_channel_size() const;
  void _internal_set_avg_channel_size(double value);

  public:
  // int64 min_channel_size = 8;
  void clear_min_channel_size() ;
  ::int64_t min_channel_size() const;
  void set_min_channel_size(::int64_t value);

  private:
  ::int64_t _internal_min_channel_size() const;
  void _internal_set_min_channel_size(::int64_t value);

  public:
  // int64 max_channel_size = 9;
  void clear_max_channel_size() ;
  ::int64_t max_channel_size() const;
  void set_max_channel_size(::int64_t value);

  private:
  ::int64_t _internal_max_channel_size() const;
  void _internal_set_max_channel_size(::int64_t value);

  public:
  // int64 median_channel_size_sat = 10;
  void clear_median_channel_size_sat() ;
  ::int64_t median_channel_size_sat() const;
  void set_median_channel_size_sat(::int64_t value);

  private:
  ::int64_t _internal_median_channel_size_sat() const;
  void _internal_set_median_channel_size_sat(::int64_t value);

  public:
  // uint64 num_zombie_chans = 11;
  void clear_num_zombie_chans() ;
  ::uint64_t num_zombie_chans() const;
  void set_num_zombie_chans(::uint64_t value);

  private:
  ::uint64_t _internal_num_zombie_chans() const;
  void _internal_set_num_zombie_chans(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NetworkInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NetworkInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NetworkInfo& from_msg);
    double avg_out_degree_;
    ::uint32_t graph_diameter_;
    ::uint32_t max_out_degree_;
    ::uint32_t num_nodes_;
    ::uint32_t num_channels_;
    ::int64_t total_network_capacity_;
    double avg_channel_size_;
    ::int64_t min_channel_size_;
    ::int64_t max_channel_size_;
    ::int64_t median_channel_size_sat_;
    ::uint64_t num_zombie_chans_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class MiddlewareRegistration final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.MiddlewareRegistration) */ {
 public:
  inline MiddlewareRegistration() : MiddlewareRegistration(nullptr) {}
  ~MiddlewareRegistration() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MiddlewareRegistration(
      ::google::protobuf::internal::ConstantInitialized);

  inline MiddlewareRegistration(const MiddlewareRegistration& from) : MiddlewareRegistration(nullptr, from) {}
  inline MiddlewareRegistration(MiddlewareRegistration&& from) noexcept
      : MiddlewareRegistration(nullptr, std::move(from)) {}
  inline MiddlewareRegistration& operator=(const MiddlewareRegistration& from) {
    CopyFrom(from);
    return *this;
  }
  inline MiddlewareRegistration& operator=(MiddlewareRegistration&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MiddlewareRegistration& default_instance() {
    return *internal_default_instance();
  }
  static inline const MiddlewareRegistration* internal_default_instance() {
    return reinterpret_cast<const MiddlewareRegistration*>(
        &_MiddlewareRegistration_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 226;
  friend void swap(MiddlewareRegistration& a, MiddlewareRegistration& b) { a.Swap(&b); }
  inline void Swap(MiddlewareRegistration* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MiddlewareRegistration* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MiddlewareRegistration* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MiddlewareRegistration>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MiddlewareRegistration& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MiddlewareRegistration& from) { MiddlewareRegistration::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MiddlewareRegistration* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.MiddlewareRegistration"; }

 protected:
  explicit MiddlewareRegistration(::google::protobuf::Arena* arena);
  MiddlewareRegistration(::google::protobuf::Arena* arena, const MiddlewareRegistration& from);
  MiddlewareRegistration(::google::protobuf::Arena* arena, MiddlewareRegistration&& from) noexcept
      : MiddlewareRegistration(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMiddlewareNameFieldNumber = 1,
    kCustomMacaroonCaveatNameFieldNumber = 2,
    kReadOnlyModeFieldNumber = 3,
  };
  // string middleware_name = 1;
  void clear_middleware_name() ;
  const std::string& middleware_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_middleware_name(Arg_&& arg, Args_... args);
  std::string* mutable_middleware_name();
  PROTOBUF_NODISCARD std::string* release_middleware_name();
  void set_allocated_middleware_name(std::string* value);

  private:
  const std::string& _internal_middleware_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_middleware_name(
      const std::string& value);
  std::string* _internal_mutable_middleware_name();

  public:
  // string custom_macaroon_caveat_name = 2;
  void clear_custom_macaroon_caveat_name() ;
  const std::string& custom_macaroon_caveat_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_macaroon_caveat_name(Arg_&& arg, Args_... args);
  std::string* mutable_custom_macaroon_caveat_name();
  PROTOBUF_NODISCARD std::string* release_custom_macaroon_caveat_name();
  void set_allocated_custom_macaroon_caveat_name(std::string* value);

  private:
  const std::string& _internal_custom_macaroon_caveat_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_macaroon_caveat_name(
      const std::string& value);
  std::string* _internal_mutable_custom_macaroon_caveat_name();

  public:
  // bool read_only_mode = 3;
  void clear_read_only_mode() ;
  bool read_only_mode() const;
  void set_read_only_mode(bool value);

  private:
  bool _internal_read_only_mode() const;
  void _internal_set_read_only_mode(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.MiddlewareRegistration)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      79, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MiddlewareRegistration_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MiddlewareRegistration& from_msg);
    ::google::protobuf::internal::ArenaStringPtr middleware_name_;
    ::google::protobuf::internal::ArenaStringPtr custom_macaroon_caveat_name_;
    bool read_only_mode_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class MacaroonPermission final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.MacaroonPermission) */ {
 public:
  inline MacaroonPermission() : MacaroonPermission(nullptr) {}
  ~MacaroonPermission() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MacaroonPermission(
      ::google::protobuf::internal::ConstantInitialized);

  inline MacaroonPermission(const MacaroonPermission& from) : MacaroonPermission(nullptr, from) {}
  inline MacaroonPermission(MacaroonPermission&& from) noexcept
      : MacaroonPermission(nullptr, std::move(from)) {}
  inline MacaroonPermission& operator=(const MacaroonPermission& from) {
    CopyFrom(from);
    return *this;
  }
  inline MacaroonPermission& operator=(MacaroonPermission&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MacaroonPermission& default_instance() {
    return *internal_default_instance();
  }
  static inline const MacaroonPermission* internal_default_instance() {
    return reinterpret_cast<const MacaroonPermission*>(
        &_MacaroonPermission_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 205;
  friend void swap(MacaroonPermission& a, MacaroonPermission& b) { a.Swap(&b); }
  inline void Swap(MacaroonPermission* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MacaroonPermission* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MacaroonPermission* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MacaroonPermission>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MacaroonPermission& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MacaroonPermission& from) { MacaroonPermission::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MacaroonPermission* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.MacaroonPermission"; }

 protected:
  explicit MacaroonPermission(::google::protobuf::Arena* arena);
  MacaroonPermission(::google::protobuf::Arena* arena, const MacaroonPermission& from);
  MacaroonPermission(::google::protobuf::Arena* arena, MacaroonPermission&& from) noexcept
      : MacaroonPermission(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kEntityFieldNumber = 1,
    kActionFieldNumber = 2,
  };
  // string entity = 1;
  void clear_entity() ;
  const std::string& entity() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity(Arg_&& arg, Args_... args);
  std::string* mutable_entity();
  PROTOBUF_NODISCARD std::string* release_entity();
  void set_allocated_entity(std::string* value);

  private:
  const std::string& _internal_entity() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity(
      const std::string& value);
  std::string* _internal_mutable_entity();

  public:
  // string action = 2;
  void clear_action() ;
  const std::string& action() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  std::string* mutable_action();
  PROTOBUF_NODISCARD std::string* release_action();
  void set_allocated_action(std::string* value);

  private:
  const std::string& _internal_action() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_action(
      const std::string& value);
  std::string* _internal_mutable_action();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.MacaroonPermission)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MacaroonPermission_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MacaroonPermission& from_msg);
    ::google::protobuf::internal::ArenaStringPtr entity_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class MPPRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.MPPRecord) */ {
 public:
  inline MPPRecord() : MPPRecord(nullptr) {}
  ~MPPRecord() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MPPRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline MPPRecord(const MPPRecord& from) : MPPRecord(nullptr, from) {}
  inline MPPRecord(MPPRecord&& from) noexcept
      : MPPRecord(nullptr, std::move(from)) {}
  inline MPPRecord& operator=(const MPPRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline MPPRecord& operator=(MPPRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MPPRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const MPPRecord* internal_default_instance() {
    return reinterpret_cast<const MPPRecord*>(
        &_MPPRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 119;
  friend void swap(MPPRecord& a, MPPRecord& b) { a.Swap(&b); }
  inline void Swap(MPPRecord* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MPPRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MPPRecord* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MPPRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MPPRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MPPRecord& from) { MPPRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MPPRecord* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.MPPRecord"; }

 protected:
  explicit MPPRecord(::google::protobuf::Arena* arena);
  MPPRecord(::google::protobuf::Arena* arena, const MPPRecord& from);
  MPPRecord(::google::protobuf::Arena* arena, MPPRecord&& from) noexcept
      : MPPRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaymentAddrFieldNumber = 11,
    kTotalAmtMsatFieldNumber = 10,
  };
  // bytes payment_addr = 11;
  void clear_payment_addr() ;
  const std::string& payment_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_addr(Arg_&& arg, Args_... args);
  std::string* mutable_payment_addr();
  PROTOBUF_NODISCARD std::string* release_payment_addr();
  void set_allocated_payment_addr(std::string* value);

  private:
  const std::string& _internal_payment_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_addr(
      const std::string& value);
  std::string* _internal_mutable_payment_addr();

  public:
  // int64 total_amt_msat = 10;
  void clear_total_amt_msat() ;
  ::int64_t total_amt_msat() const;
  void set_total_amt_msat(::int64_t value);

  private:
  ::int64_t _internal_total_amt_msat() const;
  void _internal_set_total_amt_msat(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.MPPRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MPPRecord_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MPPRecord& from_msg);
    ::google::protobuf::internal::ArenaStringPtr payment_addr_;
    ::int64_t total_amt_msat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class LookupHtlcResolutionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.LookupHtlcResolutionResponse) */ {
 public:
  inline LookupHtlcResolutionResponse() : LookupHtlcResolutionResponse(nullptr) {}
  ~LookupHtlcResolutionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LookupHtlcResolutionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LookupHtlcResolutionResponse(const LookupHtlcResolutionResponse& from) : LookupHtlcResolutionResponse(nullptr, from) {}
  inline LookupHtlcResolutionResponse(LookupHtlcResolutionResponse&& from) noexcept
      : LookupHtlcResolutionResponse(nullptr, std::move(from)) {}
  inline LookupHtlcResolutionResponse& operator=(const LookupHtlcResolutionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LookupHtlcResolutionResponse& operator=(LookupHtlcResolutionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LookupHtlcResolutionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LookupHtlcResolutionResponse* internal_default_instance() {
    return reinterpret_cast<const LookupHtlcResolutionResponse*>(
        &_LookupHtlcResolutionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LookupHtlcResolutionResponse& a, LookupHtlcResolutionResponse& b) { a.Swap(&b); }
  inline void Swap(LookupHtlcResolutionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LookupHtlcResolutionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LookupHtlcResolutionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LookupHtlcResolutionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LookupHtlcResolutionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LookupHtlcResolutionResponse& from) { LookupHtlcResolutionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LookupHtlcResolutionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.LookupHtlcResolutionResponse"; }

 protected:
  explicit LookupHtlcResolutionResponse(::google::protobuf::Arena* arena);
  LookupHtlcResolutionResponse(::google::protobuf::Arena* arena, const LookupHtlcResolutionResponse& from);
  LookupHtlcResolutionResponse(::google::protobuf::Arena* arena, LookupHtlcResolutionResponse&& from) noexcept
      : LookupHtlcResolutionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettledFieldNumber = 1,
    kOffchainFieldNumber = 2,
  };
  // bool settled = 1;
  void clear_settled() ;
  bool settled() const;
  void set_settled(bool value);

  private:
  bool _internal_settled() const;
  void _internal_set_settled(bool value);

  public:
  // bool offchain = 2;
  void clear_offchain() ;
  bool offchain() const;
  void set_offchain(bool value);

  private:
  bool _internal_offchain() const;
  void _internal_set_offchain(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.LookupHtlcResolutionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LookupHtlcResolutionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LookupHtlcResolutionResponse& from_msg);
    bool settled_;
    bool offchain_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class LookupHtlcResolutionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.LookupHtlcResolutionRequest) */ {
 public:
  inline LookupHtlcResolutionRequest() : LookupHtlcResolutionRequest(nullptr) {}
  ~LookupHtlcResolutionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LookupHtlcResolutionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LookupHtlcResolutionRequest(const LookupHtlcResolutionRequest& from) : LookupHtlcResolutionRequest(nullptr, from) {}
  inline LookupHtlcResolutionRequest(LookupHtlcResolutionRequest&& from) noexcept
      : LookupHtlcResolutionRequest(nullptr, std::move(from)) {}
  inline LookupHtlcResolutionRequest& operator=(const LookupHtlcResolutionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LookupHtlcResolutionRequest& operator=(LookupHtlcResolutionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LookupHtlcResolutionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LookupHtlcResolutionRequest* internal_default_instance() {
    return reinterpret_cast<const LookupHtlcResolutionRequest*>(
        &_LookupHtlcResolutionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LookupHtlcResolutionRequest& a, LookupHtlcResolutionRequest& b) { a.Swap(&b); }
  inline void Swap(LookupHtlcResolutionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LookupHtlcResolutionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LookupHtlcResolutionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LookupHtlcResolutionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LookupHtlcResolutionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LookupHtlcResolutionRequest& from) { LookupHtlcResolutionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LookupHtlcResolutionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.LookupHtlcResolutionRequest"; }

 protected:
  explicit LookupHtlcResolutionRequest(::google::protobuf::Arena* arena);
  LookupHtlcResolutionRequest(::google::protobuf::Arena* arena, const LookupHtlcResolutionRequest& from);
  LookupHtlcResolutionRequest(::google::protobuf::Arena* arena, LookupHtlcResolutionRequest&& from) noexcept
      : LookupHtlcResolutionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanIdFieldNumber = 1,
    kHtlcIndexFieldNumber = 2,
  };
  // uint64 chan_id = 1;
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // uint64 htlc_index = 2;
  void clear_htlc_index() ;
  ::uint64_t htlc_index() const;
  void set_htlc_index(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_index() const;
  void _internal_set_htlc_index(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.LookupHtlcResolutionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LookupHtlcResolutionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LookupHtlcResolutionRequest& from_msg);
    ::uint64_t chan_id_;
    ::uint64_t htlc_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListUnspentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListUnspentRequest) */ {
 public:
  inline ListUnspentRequest() : ListUnspentRequest(nullptr) {}
  ~ListUnspentRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListUnspentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListUnspentRequest(const ListUnspentRequest& from) : ListUnspentRequest(nullptr, from) {}
  inline ListUnspentRequest(ListUnspentRequest&& from) noexcept
      : ListUnspentRequest(nullptr, std::move(from)) {}
  inline ListUnspentRequest& operator=(const ListUnspentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListUnspentRequest& operator=(ListUnspentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListUnspentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListUnspentRequest* internal_default_instance() {
    return reinterpret_cast<const ListUnspentRequest*>(
        &_ListUnspentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(ListUnspentRequest& a, ListUnspentRequest& b) { a.Swap(&b); }
  inline void Swap(ListUnspentRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListUnspentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListUnspentRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListUnspentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListUnspentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListUnspentRequest& from) { ListUnspentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListUnspentRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListUnspentRequest"; }

 protected:
  explicit ListUnspentRequest(::google::protobuf::Arena* arena);
  ListUnspentRequest(::google::protobuf::Arena* arena, const ListUnspentRequest& from);
  ListUnspentRequest(::google::protobuf::Arena* arena, ListUnspentRequest&& from) noexcept
      : ListUnspentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 3,
    kMinConfsFieldNumber = 1,
    kMaxConfsFieldNumber = 2,
  };
  // string account = 3;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // int32 min_confs = 1;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // int32 max_confs = 2;
  void clear_max_confs() ;
  ::int32_t max_confs() const;
  void set_max_confs(::int32_t value);

  private:
  ::int32_t _internal_max_confs() const;
  void _internal_set_max_confs(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListUnspentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListUnspentRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListUnspentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::int32_t min_confs_;
    ::int32_t max_confs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPermissionsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ListPermissionsRequest) */ {
 public:
  inline ListPermissionsRequest() : ListPermissionsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPermissionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPermissionsRequest(const ListPermissionsRequest& from) : ListPermissionsRequest(nullptr, from) {}
  inline ListPermissionsRequest(ListPermissionsRequest&& from) noexcept
      : ListPermissionsRequest(nullptr, std::move(from)) {}
  inline ListPermissionsRequest& operator=(const ListPermissionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPermissionsRequest& operator=(ListPermissionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPermissionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPermissionsRequest* internal_default_instance() {
    return reinterpret_cast<const ListPermissionsRequest*>(
        &_ListPermissionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 213;
  friend void swap(ListPermissionsRequest& a, ListPermissionsRequest& b) { a.Swap(&b); }
  inline void Swap(ListPermissionsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPermissionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPermissionsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListPermissionsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListPermissionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListPermissionsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListPermissionsRequest"; }

 protected:
  explicit ListPermissionsRequest(::google::protobuf::Arena* arena);
  ListPermissionsRequest(::google::protobuf::Arena* arena, const ListPermissionsRequest& from);
  ListPermissionsRequest(::google::protobuf::Arena* arena, ListPermissionsRequest&& from) noexcept
      : ListPermissionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ListPermissionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListPermissionsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPermissionsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPeersRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListPeersRequest) */ {
 public:
  inline ListPeersRequest() : ListPeersRequest(nullptr) {}
  ~ListPeersRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPeersRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPeersRequest(const ListPeersRequest& from) : ListPeersRequest(nullptr, from) {}
  inline ListPeersRequest(ListPeersRequest&& from) noexcept
      : ListPeersRequest(nullptr, std::move(from)) {}
  inline ListPeersRequest& operator=(const ListPeersRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPeersRequest& operator=(ListPeersRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPeersRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPeersRequest* internal_default_instance() {
    return reinterpret_cast<const ListPeersRequest*>(
        &_ListPeersRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(ListPeersRequest& a, ListPeersRequest& b) { a.Swap(&b); }
  inline void Swap(ListPeersRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPeersRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPeersRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListPeersRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPeersRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPeersRequest& from) { ListPeersRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListPeersRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListPeersRequest"; }

 protected:
  explicit ListPeersRequest(::google::protobuf::Arena* arena);
  ListPeersRequest(::google::protobuf::Arena* arena, const ListPeersRequest& from);
  ListPeersRequest(::google::protobuf::Arena* arena, ListPeersRequest&& from) noexcept
      : ListPeersRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLatestErrorFieldNumber = 1,
  };
  // bool latest_error = 1;
  void clear_latest_error() ;
  bool latest_error() const;
  void set_latest_error(bool value);

  private:
  bool _internal_latest_error() const;
  void _internal_set_latest_error(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListPeersRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListPeersRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPeersRequest& from_msg);
    bool latest_error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPaymentsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListPaymentsRequest) */ {
 public:
  inline ListPaymentsRequest() : ListPaymentsRequest(nullptr) {}
  ~ListPaymentsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPaymentsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPaymentsRequest(const ListPaymentsRequest& from) : ListPaymentsRequest(nullptr, from) {}
  inline ListPaymentsRequest(ListPaymentsRequest&& from) noexcept
      : ListPaymentsRequest(nullptr, std::move(from)) {}
  inline ListPaymentsRequest& operator=(const ListPaymentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPaymentsRequest& operator=(ListPaymentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPaymentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPaymentsRequest* internal_default_instance() {
    return reinterpret_cast<const ListPaymentsRequest*>(
        &_ListPaymentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 171;
  friend void swap(ListPaymentsRequest& a, ListPaymentsRequest& b) { a.Swap(&b); }
  inline void Swap(ListPaymentsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPaymentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPaymentsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListPaymentsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPaymentsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPaymentsRequest& from) { ListPaymentsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListPaymentsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListPaymentsRequest"; }

 protected:
  explicit ListPaymentsRequest(::google::protobuf::Arena* arena);
  ListPaymentsRequest(::google::protobuf::Arena* arena, const ListPaymentsRequest& from);
  ListPaymentsRequest(::google::protobuf::Arena* arena, ListPaymentsRequest&& from) noexcept
      : ListPaymentsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexOffsetFieldNumber = 2,
    kMaxPaymentsFieldNumber = 3,
    kCreationDateStartFieldNumber = 6,
    kCreationDateEndFieldNumber = 7,
    kIncludeIncompleteFieldNumber = 1,
    kReversedFieldNumber = 4,
    kCountTotalPaymentsFieldNumber = 5,
  };
  // uint64 index_offset = 2;
  void clear_index_offset() ;
  ::uint64_t index_offset() const;
  void set_index_offset(::uint64_t value);

  private:
  ::uint64_t _internal_index_offset() const;
  void _internal_set_index_offset(::uint64_t value);

  public:
  // uint64 max_payments = 3;
  void clear_max_payments() ;
  ::uint64_t max_payments() const;
  void set_max_payments(::uint64_t value);

  private:
  ::uint64_t _internal_max_payments() const;
  void _internal_set_max_payments(::uint64_t value);

  public:
  // uint64 creation_date_start = 6;
  void clear_creation_date_start() ;
  ::uint64_t creation_date_start() const;
  void set_creation_date_start(::uint64_t value);

  private:
  ::uint64_t _internal_creation_date_start() const;
  void _internal_set_creation_date_start(::uint64_t value);

  public:
  // uint64 creation_date_end = 7;
  void clear_creation_date_end() ;
  ::uint64_t creation_date_end() const;
  void set_creation_date_end(::uint64_t value);

  private:
  ::uint64_t _internal_creation_date_end() const;
  void _internal_set_creation_date_end(::uint64_t value);

  public:
  // bool include_incomplete = 1;
  void clear_include_incomplete() ;
  bool include_incomplete() const;
  void set_include_incomplete(bool value);

  private:
  bool _internal_include_incomplete() const;
  void _internal_set_include_incomplete(bool value);

  public:
  // bool reversed = 4;
  void clear_reversed() ;
  bool reversed() const;
  void set_reversed(bool value);

  private:
  bool _internal_reversed() const;
  void _internal_set_reversed(bool value);

  public:
  // bool count_total_payments = 5;
  void clear_count_total_payments() ;
  bool count_total_payments() const;
  void set_count_total_payments(bool value);

  private:
  bool _internal_count_total_payments() const;
  void _internal_set_count_total_payments(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListPaymentsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListPaymentsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPaymentsRequest& from_msg);
    ::uint64_t index_offset_;
    ::uint64_t max_payments_;
    ::uint64_t creation_date_start_;
    ::uint64_t creation_date_end_;
    bool include_incomplete_;
    bool reversed_;
    bool count_total_payments_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListMacaroonIDsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListMacaroonIDsResponse) */ {
 public:
  inline ListMacaroonIDsResponse() : ListMacaroonIDsResponse(nullptr) {}
  ~ListMacaroonIDsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMacaroonIDsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMacaroonIDsResponse(const ListMacaroonIDsResponse& from) : ListMacaroonIDsResponse(nullptr, from) {}
  inline ListMacaroonIDsResponse(ListMacaroonIDsResponse&& from) noexcept
      : ListMacaroonIDsResponse(nullptr, std::move(from)) {}
  inline ListMacaroonIDsResponse& operator=(const ListMacaroonIDsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMacaroonIDsResponse& operator=(ListMacaroonIDsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMacaroonIDsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMacaroonIDsResponse* internal_default_instance() {
    return reinterpret_cast<const ListMacaroonIDsResponse*>(
        &_ListMacaroonIDsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 209;
  friend void swap(ListMacaroonIDsResponse& a, ListMacaroonIDsResponse& b) { a.Swap(&b); }
  inline void Swap(ListMacaroonIDsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMacaroonIDsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMacaroonIDsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListMacaroonIDsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMacaroonIDsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMacaroonIDsResponse& from) { ListMacaroonIDsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListMacaroonIDsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListMacaroonIDsResponse"; }

 protected:
  explicit ListMacaroonIDsResponse(::google::protobuf::Arena* arena);
  ListMacaroonIDsResponse(::google::protobuf::Arena* arena, const ListMacaroonIDsResponse& from);
  ListMacaroonIDsResponse(::google::protobuf::Arena* arena, ListMacaroonIDsResponse&& from) noexcept
      : ListMacaroonIDsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRootKeyIdsFieldNumber = 1,
  };
  // repeated uint64 root_key_ids = 1;
  int root_key_ids_size() const;
  private:
  int _internal_root_key_ids_size() const;

  public:
  void clear_root_key_ids() ;
  ::uint64_t root_key_ids(int index) const;
  void set_root_key_ids(int index, ::uint64_t value);
  void add_root_key_ids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& root_key_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_root_key_ids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_root_key_ids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_root_key_ids();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListMacaroonIDsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListMacaroonIDsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMacaroonIDsResponse& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> root_key_ids_;
    mutable ::google::protobuf::internal::CachedSize _root_key_ids_cached_byte_size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListMacaroonIDsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ListMacaroonIDsRequest) */ {
 public:
  inline ListMacaroonIDsRequest() : ListMacaroonIDsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMacaroonIDsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMacaroonIDsRequest(const ListMacaroonIDsRequest& from) : ListMacaroonIDsRequest(nullptr, from) {}
  inline ListMacaroonIDsRequest(ListMacaroonIDsRequest&& from) noexcept
      : ListMacaroonIDsRequest(nullptr, std::move(from)) {}
  inline ListMacaroonIDsRequest& operator=(const ListMacaroonIDsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMacaroonIDsRequest& operator=(ListMacaroonIDsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMacaroonIDsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMacaroonIDsRequest* internal_default_instance() {
    return reinterpret_cast<const ListMacaroonIDsRequest*>(
        &_ListMacaroonIDsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 208;
  friend void swap(ListMacaroonIDsRequest& a, ListMacaroonIDsRequest& b) { a.Swap(&b); }
  inline void Swap(ListMacaroonIDsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMacaroonIDsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMacaroonIDsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListMacaroonIDsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListMacaroonIDsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListMacaroonIDsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListMacaroonIDsRequest"; }

 protected:
  explicit ListMacaroonIDsRequest(::google::protobuf::Arena* arena);
  ListMacaroonIDsRequest(::google::protobuf::Arena* arena, const ListMacaroonIDsRequest& from);
  ListMacaroonIDsRequest(::google::protobuf::Arena* arena, ListMacaroonIDsRequest&& from) noexcept
      : ListMacaroonIDsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ListMacaroonIDsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListMacaroonIDsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMacaroonIDsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListInvoiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListInvoiceRequest) */ {
 public:
  inline ListInvoiceRequest() : ListInvoiceRequest(nullptr) {}
  ~ListInvoiceRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListInvoiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListInvoiceRequest(const ListInvoiceRequest& from) : ListInvoiceRequest(nullptr, from) {}
  inline ListInvoiceRequest(ListInvoiceRequest&& from) noexcept
      : ListInvoiceRequest(nullptr, std::move(from)) {}
  inline ListInvoiceRequest& operator=(const ListInvoiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInvoiceRequest& operator=(ListInvoiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInvoiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInvoiceRequest* internal_default_instance() {
    return reinterpret_cast<const ListInvoiceRequest*>(
        &_ListInvoiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 165;
  friend void swap(ListInvoiceRequest& a, ListInvoiceRequest& b) { a.Swap(&b); }
  inline void Swap(ListInvoiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInvoiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInvoiceRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListInvoiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListInvoiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListInvoiceRequest& from) { ListInvoiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListInvoiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListInvoiceRequest"; }

 protected:
  explicit ListInvoiceRequest(::google::protobuf::Arena* arena);
  ListInvoiceRequest(::google::protobuf::Arena* arena, const ListInvoiceRequest& from);
  ListInvoiceRequest(::google::protobuf::Arena* arena, ListInvoiceRequest&& from) noexcept
      : ListInvoiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIndexOffsetFieldNumber = 4,
    kNumMaxInvoicesFieldNumber = 5,
    kCreationDateStartFieldNumber = 7,
    kCreationDateEndFieldNumber = 8,
    kPendingOnlyFieldNumber = 1,
    kReversedFieldNumber = 6,
  };
  // uint64 index_offset = 4;
  void clear_index_offset() ;
  ::uint64_t index_offset() const;
  void set_index_offset(::uint64_t value);

  private:
  ::uint64_t _internal_index_offset() const;
  void _internal_set_index_offset(::uint64_t value);

  public:
  // uint64 num_max_invoices = 5;
  void clear_num_max_invoices() ;
  ::uint64_t num_max_invoices() const;
  void set_num_max_invoices(::uint64_t value);

  private:
  ::uint64_t _internal_num_max_invoices() const;
  void _internal_set_num_max_invoices(::uint64_t value);

  public:
  // uint64 creation_date_start = 7;
  void clear_creation_date_start() ;
  ::uint64_t creation_date_start() const;
  void set_creation_date_start(::uint64_t value);

  private:
  ::uint64_t _internal_creation_date_start() const;
  void _internal_set_creation_date_start(::uint64_t value);

  public:
  // uint64 creation_date_end = 8;
  void clear_creation_date_end() ;
  ::uint64_t creation_date_end() const;
  void set_creation_date_end(::uint64_t value);

  private:
  ::uint64_t _internal_creation_date_end() const;
  void _internal_set_creation_date_end(::uint64_t value);

  public:
  // bool pending_only = 1;
  void clear_pending_only() ;
  bool pending_only() const;
  void set_pending_only(bool value);

  private:
  bool _internal_pending_only() const;
  void _internal_set_pending_only(bool value);

  public:
  // bool reversed = 6;
  void clear_reversed() ;
  bool reversed() const;
  void set_reversed(bool value);

  private:
  bool _internal_reversed() const;
  void _internal_set_reversed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListInvoiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListInvoiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListInvoiceRequest& from_msg);
    ::uint64_t index_offset_;
    ::uint64_t num_max_invoices_;
    ::uint64_t creation_date_start_;
    ::uint64_t creation_date_end_;
    bool pending_only_;
    bool reversed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListChannelsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListChannelsRequest) */ {
 public:
  inline ListChannelsRequest() : ListChannelsRequest(nullptr) {}
  ~ListChannelsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListChannelsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListChannelsRequest(const ListChannelsRequest& from) : ListChannelsRequest(nullptr, from) {}
  inline ListChannelsRequest(ListChannelsRequest&& from) noexcept
      : ListChannelsRequest(nullptr, std::move(from)) {}
  inline ListChannelsRequest& operator=(const ListChannelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListChannelsRequest& operator=(ListChannelsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListChannelsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListChannelsRequest* internal_default_instance() {
    return reinterpret_cast<const ListChannelsRequest*>(
        &_ListChannelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(ListChannelsRequest& a, ListChannelsRequest& b) { a.Swap(&b); }
  inline void Swap(ListChannelsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListChannelsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListChannelsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListChannelsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListChannelsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListChannelsRequest& from) { ListChannelsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListChannelsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListChannelsRequest"; }

 protected:
  explicit ListChannelsRequest(::google::protobuf::Arena* arena);
  ListChannelsRequest(::google::protobuf::Arena* arena, const ListChannelsRequest& from);
  ListChannelsRequest(::google::protobuf::Arena* arena, ListChannelsRequest&& from) noexcept
      : ListChannelsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerFieldNumber = 5,
    kActiveOnlyFieldNumber = 1,
    kInactiveOnlyFieldNumber = 2,
    kPublicOnlyFieldNumber = 3,
    kPrivateOnlyFieldNumber = 4,
    kPeerAliasLookupFieldNumber = 6,
  };
  // bytes peer = 5;
  void clear_peer() ;
  const std::string& peer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer(Arg_&& arg, Args_... args);
  std::string* mutable_peer();
  PROTOBUF_NODISCARD std::string* release_peer();
  void set_allocated_peer(std::string* value);

  private:
  const std::string& _internal_peer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer(
      const std::string& value);
  std::string* _internal_mutable_peer();

  public:
  // bool active_only = 1;
  void clear_active_only() ;
  bool active_only() const;
  void set_active_only(bool value);

  private:
  bool _internal_active_only() const;
  void _internal_set_active_only(bool value);

  public:
  // bool inactive_only = 2;
  void clear_inactive_only() ;
  bool inactive_only() const;
  void set_inactive_only(bool value);

  private:
  bool _internal_inactive_only() const;
  void _internal_set_inactive_only(bool value);

  public:
  // bool public_only = 3;
  void clear_public_only() ;
  bool public_only() const;
  void set_public_only(bool value);

  private:
  bool _internal_public_only() const;
  void _internal_set_public_only(bool value);

  public:
  // bool private_only = 4;
  void clear_private_only() ;
  bool private_only() const;
  void set_private_only(bool value);

  private:
  bool _internal_private_only() const;
  void _internal_set_private_only(bool value);

  public:
  // bool peer_alias_lookup = 6;
  void clear_peer_alias_lookup() ;
  bool peer_alias_lookup() const;
  void set_peer_alias_lookup(bool value);

  private:
  bool _internal_peer_alias_lookup() const;
  void _internal_set_peer_alias_lookup(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListChannelsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListChannelsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListChannelsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr peer_;
    bool active_only_;
    bool inactive_only_;
    bool public_only_;
    bool private_only_;
    bool peer_alias_lookup_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListAliasesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ListAliasesRequest) */ {
 public:
  inline ListAliasesRequest() : ListAliasesRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAliasesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAliasesRequest(const ListAliasesRequest& from) : ListAliasesRequest(nullptr, from) {}
  inline ListAliasesRequest(ListAliasesRequest&& from) noexcept
      : ListAliasesRequest(nullptr, std::move(from)) {}
  inline ListAliasesRequest& operator=(const ListAliasesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAliasesRequest& operator=(ListAliasesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAliasesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAliasesRequest* internal_default_instance() {
    return reinterpret_cast<const ListAliasesRequest*>(
        &_ListAliasesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(ListAliasesRequest& a, ListAliasesRequest& b) { a.Swap(&b); }
  inline void Swap(ListAliasesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAliasesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAliasesRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListAliasesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListAliasesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListAliasesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListAliasesRequest"; }

 protected:
  explicit ListAliasesRequest(::google::protobuf::Arena* arena);
  ListAliasesRequest(::google::protobuf::Arena* arena, const ListAliasesRequest& from);
  ListAliasesRequest(::google::protobuf::Arena* arena, ListAliasesRequest&& from) noexcept
      : ListAliasesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ListAliasesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAliasesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAliasesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class LightningNode_CustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LightningNode_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LightningNode_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  LightningNode_CustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightningNode_CustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LightningNode_CustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LightningNode_CustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LightningNode_CustomRecordsEntry_DoNotUse*>(
        &_LightningNode_CustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class LightningAddress final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.LightningAddress) */ {
 public:
  inline LightningAddress() : LightningAddress(nullptr) {}
  ~LightningAddress() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightningAddress(
      ::google::protobuf::internal::ConstantInitialized);

  inline LightningAddress(const LightningAddress& from) : LightningAddress(nullptr, from) {}
  inline LightningAddress(LightningAddress&& from) noexcept
      : LightningAddress(nullptr, std::move(from)) {}
  inline LightningAddress& operator=(const LightningAddress& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightningAddress& operator=(LightningAddress&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightningAddress& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightningAddress* internal_default_instance() {
    return reinterpret_cast<const LightningAddress*>(
        &_LightningAddress_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(LightningAddress& a, LightningAddress& b) { a.Swap(&b); }
  inline void Swap(LightningAddress* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightningAddress* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightningAddress* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LightningAddress>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightningAddress& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LightningAddress& from) { LightningAddress::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightningAddress* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.LightningAddress"; }

 protected:
  explicit LightningAddress(::google::protobuf::Arena* arena);
  LightningAddress(::google::protobuf::Arena* arena, const LightningAddress& from);
  LightningAddress(::google::protobuf::Arena* arena, LightningAddress&& from) noexcept
      : LightningAddress(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPubkeyFieldNumber = 1,
    kHostFieldNumber = 2,
  };
  // string pubkey = 1;
  void clear_pubkey() ;
  const std::string& pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_pubkey();
  PROTOBUF_NODISCARD std::string* release_pubkey();
  void set_allocated_pubkey(std::string* value);

  private:
  const std::string& _internal_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubkey(
      const std::string& value);
  std::string* _internal_mutable_pubkey();

  public:
  // string host = 2;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.LightningAddress)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LightningAddress_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LightningAddress& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pubkey_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class KeyLocator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.KeyLocator) */ {
 public:
  inline KeyLocator() : KeyLocator(nullptr) {}
  ~KeyLocator() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeyLocator(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeyLocator(const KeyLocator& from) : KeyLocator(nullptr, from) {}
  inline KeyLocator(KeyLocator&& from) noexcept
      : KeyLocator(nullptr, std::move(from)) {}
  inline KeyLocator& operator=(const KeyLocator& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyLocator& operator=(KeyLocator&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyLocator& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyLocator* internal_default_instance() {
    return reinterpret_cast<const KeyLocator*>(
        &_KeyLocator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 84;
  friend void swap(KeyLocator& a, KeyLocator& b) { a.Swap(&b); }
  inline void Swap(KeyLocator* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyLocator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyLocator* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KeyLocator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyLocator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeyLocator& from) { KeyLocator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeyLocator* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.KeyLocator"; }

 protected:
  explicit KeyLocator(::google::protobuf::Arena* arena);
  KeyLocator(::google::protobuf::Arena* arena, const KeyLocator& from);
  KeyLocator(::google::protobuf::Arena* arena, KeyLocator&& from) noexcept
      : KeyLocator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFamilyFieldNumber = 1,
    kKeyIndexFieldNumber = 2,
  };
  // int32 key_family = 1;
  void clear_key_family() ;
  ::int32_t key_family() const;
  void set_key_family(::int32_t value);

  private:
  ::int32_t _internal_key_family() const;
  void _internal_set_key_family(::int32_t value);

  public:
  // int32 key_index = 2;
  void clear_key_index() ;
  ::int32_t key_index() const;
  void set_key_index(::int32_t value);

  private:
  ::int32_t _internal_key_index() const;
  void _internal_set_key_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.KeyLocator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KeyLocator_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeyLocator& from_msg);
    ::int32_t key_family_;
    ::int32_t key_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class InvoiceSubscription final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.InvoiceSubscription) */ {
 public:
  inline InvoiceSubscription() : InvoiceSubscription(nullptr) {}
  ~InvoiceSubscription() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InvoiceSubscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline InvoiceSubscription(const InvoiceSubscription& from) : InvoiceSubscription(nullptr, from) {}
  inline InvoiceSubscription(InvoiceSubscription&& from) noexcept
      : InvoiceSubscription(nullptr, std::move(from)) {}
  inline InvoiceSubscription& operator=(const InvoiceSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvoiceSubscription& operator=(InvoiceSubscription&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvoiceSubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvoiceSubscription* internal_default_instance() {
    return reinterpret_cast<const InvoiceSubscription*>(
        &_InvoiceSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 167;
  friend void swap(InvoiceSubscription& a, InvoiceSubscription& b) { a.Swap(&b); }
  inline void Swap(InvoiceSubscription* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvoiceSubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvoiceSubscription* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InvoiceSubscription>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvoiceSubscription& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InvoiceSubscription& from) { InvoiceSubscription::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InvoiceSubscription* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.InvoiceSubscription"; }

 protected:
  explicit InvoiceSubscription(::google::protobuf::Arena* arena);
  InvoiceSubscription(::google::protobuf::Arena* arena, const InvoiceSubscription& from);
  InvoiceSubscription(::google::protobuf::Arena* arena, InvoiceSubscription&& from) noexcept
      : InvoiceSubscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddIndexFieldNumber = 1,
    kSettleIndexFieldNumber = 2,
  };
  // uint64 add_index = 1;
  void clear_add_index() ;
  ::uint64_t add_index() const;
  void set_add_index(::uint64_t value);

  private:
  ::uint64_t _internal_add_index() const;
  void _internal_set_add_index(::uint64_t value);

  public:
  // uint64 settle_index = 2;
  void clear_settle_index() ;
  ::uint64_t settle_index() const;
  void set_settle_index(::uint64_t value);

  private:
  ::uint64_t _internal_settle_index() const;
  void _internal_set_settle_index(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.InvoiceSubscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InvoiceSubscription_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InvoiceSubscription& from_msg);
    ::uint64_t add_index_;
    ::uint64_t settle_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class InvoiceHTLC_CustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          InvoiceHTLC_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      InvoiceHTLC_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  InvoiceHTLC_CustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InvoiceHTLC_CustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit InvoiceHTLC_CustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const InvoiceHTLC_CustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const InvoiceHTLC_CustomRecordsEntry_DoNotUse*>(
        &_InvoiceHTLC_CustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class InterceptFeedback final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.InterceptFeedback) */ {
 public:
  inline InterceptFeedback() : InterceptFeedback(nullptr) {}
  ~InterceptFeedback() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InterceptFeedback(
      ::google::protobuf::internal::ConstantInitialized);

  inline InterceptFeedback(const InterceptFeedback& from) : InterceptFeedback(nullptr, from) {}
  inline InterceptFeedback(InterceptFeedback&& from) noexcept
      : InterceptFeedback(nullptr, std::move(from)) {}
  inline InterceptFeedback& operator=(const InterceptFeedback& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterceptFeedback& operator=(InterceptFeedback&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterceptFeedback& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterceptFeedback* internal_default_instance() {
    return reinterpret_cast<const InterceptFeedback*>(
        &_InterceptFeedback_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 227;
  friend void swap(InterceptFeedback& a, InterceptFeedback& b) { a.Swap(&b); }
  inline void Swap(InterceptFeedback* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterceptFeedback* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterceptFeedback* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InterceptFeedback>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InterceptFeedback& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InterceptFeedback& from) { InterceptFeedback::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InterceptFeedback* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.InterceptFeedback"; }

 protected:
  explicit InterceptFeedback(::google::protobuf::Arena* arena);
  InterceptFeedback(::google::protobuf::Arena* arena, const InterceptFeedback& from);
  InterceptFeedback(::google::protobuf::Arena* arena, InterceptFeedback&& from) noexcept
      : InterceptFeedback(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrorFieldNumber = 1,
    kReplacementSerializedFieldNumber = 3,
    kReplaceResponseFieldNumber = 2,
  };
  // string error = 1;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // bytes replacement_serialized = 3;
  void clear_replacement_serialized() ;
  const std::string& replacement_serialized() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_replacement_serialized(Arg_&& arg, Args_... args);
  std::string* mutable_replacement_serialized();
  PROTOBUF_NODISCARD std::string* release_replacement_serialized();
  void set_allocated_replacement_serialized(std::string* value);

  private:
  const std::string& _internal_replacement_serialized() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_replacement_serialized(
      const std::string& value);
  std::string* _internal_mutable_replacement_serialized();

  public:
  // bool replace_response = 2;
  void clear_replace_response() ;
  bool replace_response() const;
  void set_replace_response(bool value);

  private:
  bool _internal_replace_response() const;
  void _internal_set_replace_response(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.InterceptFeedback)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InterceptFeedback_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InterceptFeedback& from_msg);
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::google::protobuf::internal::ArenaStringPtr replacement_serialized_;
    bool replace_response_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class InstantUpdate final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.InstantUpdate) */ {
 public:
  inline InstantUpdate() : InstantUpdate(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InstantUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline InstantUpdate(const InstantUpdate& from) : InstantUpdate(nullptr, from) {}
  inline InstantUpdate(InstantUpdate&& from) noexcept
      : InstantUpdate(nullptr, std::move(from)) {}
  inline InstantUpdate& operator=(const InstantUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline InstantUpdate& operator=(InstantUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InstantUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const InstantUpdate* internal_default_instance() {
    return reinterpret_cast<const InstantUpdate*>(
        &_InstantUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 77;
  friend void swap(InstantUpdate& a, InstantUpdate& b) { a.Swap(&b); }
  inline void Swap(InstantUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InstantUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InstantUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<InstantUpdate>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const InstantUpdate& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const InstantUpdate& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.InstantUpdate"; }

 protected:
  explicit InstantUpdate(::google::protobuf::Arena* arena);
  InstantUpdate(::google::protobuf::Arena* arena, const InstantUpdate& from);
  InstantUpdate(::google::protobuf::Arena* arena, InstantUpdate&& from) noexcept
      : InstantUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.InstantUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InstantUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InstantUpdate& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class InboundFee final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.InboundFee) */ {
 public:
  inline InboundFee() : InboundFee(nullptr) {}
  ~InboundFee() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InboundFee(
      ::google::protobuf::internal::ConstantInitialized);

  inline InboundFee(const InboundFee& from) : InboundFee(nullptr, from) {}
  inline InboundFee(InboundFee&& from) noexcept
      : InboundFee(nullptr, std::move(from)) {}
  inline InboundFee& operator=(const InboundFee& from) {
    CopyFrom(from);
    return *this;
  }
  inline InboundFee& operator=(InboundFee&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InboundFee& default_instance() {
    return *internal_default_instance();
  }
  static inline const InboundFee* internal_default_instance() {
    return reinterpret_cast<const InboundFee*>(
        &_InboundFee_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 188;
  friend void swap(InboundFee& a, InboundFee& b) { a.Swap(&b); }
  inline void Swap(InboundFee* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InboundFee* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InboundFee* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InboundFee>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InboundFee& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InboundFee& from) { InboundFee::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InboundFee* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.InboundFee"; }

 protected:
  explicit InboundFee(::google::protobuf::Arena* arena);
  InboundFee(::google::protobuf::Arena* arena, const InboundFee& from);
  InboundFee(::google::protobuf::Arena* arena, InboundFee&& from) noexcept
      : InboundFee(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBaseFeeMsatFieldNumber = 1,
    kFeeRatePpmFieldNumber = 2,
  };
  // int32 base_fee_msat = 1;
  void clear_base_fee_msat() ;
  ::int32_t base_fee_msat() const;
  void set_base_fee_msat(::int32_t value);

  private:
  ::int32_t _internal_base_fee_msat() const;
  void _internal_set_base_fee_msat(::int32_t value);

  public:
  // int32 fee_rate_ppm = 2;
  void clear_fee_rate_ppm() ;
  ::int32_t fee_rate_ppm() const;
  void set_fee_rate_ppm(::int32_t value);

  private:
  ::int32_t _internal_fee_rate_ppm() const;
  void _internal_set_fee_rate_ppm(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.InboundFee)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InboundFee_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InboundFee& from_msg);
    ::int32_t base_fee_msat_;
    ::int32_t fee_rate_ppm_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class HopHint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.HopHint) */ {
 public:
  inline HopHint() : HopHint(nullptr) {}
  ~HopHint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HopHint(
      ::google::protobuf::internal::ConstantInitialized);

  inline HopHint(const HopHint& from) : HopHint(nullptr, from) {}
  inline HopHint(HopHint&& from) noexcept
      : HopHint(nullptr, std::move(from)) {}
  inline HopHint& operator=(const HopHint& from) {
    CopyFrom(from);
    return *this;
  }
  inline HopHint& operator=(HopHint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HopHint& default_instance() {
    return *internal_default_instance();
  }
  static inline const HopHint* internal_default_instance() {
    return reinterpret_cast<const HopHint*>(
        &_HopHint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 149;
  friend void swap(HopHint& a, HopHint& b) { a.Swap(&b); }
  inline void Swap(HopHint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HopHint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HopHint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<HopHint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HopHint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HopHint& from) { HopHint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HopHint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.HopHint"; }

 protected:
  explicit HopHint(::google::protobuf::Arena* arena);
  HopHint(::google::protobuf::Arena* arena, const HopHint& from);
  HopHint(::google::protobuf::Arena* arena, HopHint&& from) noexcept
      : HopHint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeIdFieldNumber = 1,
    kChanIdFieldNumber = 2,
    kFeeBaseMsatFieldNumber = 3,
    kFeeProportionalMillionthsFieldNumber = 4,
    kCltvExpiryDeltaFieldNumber = 5,
  };
  // string node_id = 1;
  void clear_node_id() ;
  const std::string& node_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_id(Arg_&& arg, Args_... args);
  std::string* mutable_node_id();
  PROTOBUF_NODISCARD std::string* release_node_id();
  void set_allocated_node_id(std::string* value);

  private:
  const std::string& _internal_node_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_id(
      const std::string& value);
  std::string* _internal_mutable_node_id();

  public:
  // uint64 chan_id = 2 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // uint32 fee_base_msat = 3;
  void clear_fee_base_msat() ;
  ::uint32_t fee_base_msat() const;
  void set_fee_base_msat(::uint32_t value);

  private:
  ::uint32_t _internal_fee_base_msat() const;
  void _internal_set_fee_base_msat(::uint32_t value);

  public:
  // uint32 fee_proportional_millionths = 4;
  void clear_fee_proportional_millionths() ;
  ::uint32_t fee_proportional_millionths() const;
  void set_fee_proportional_millionths(::uint32_t value);

  private:
  ::uint32_t _internal_fee_proportional_millionths() const;
  void _internal_set_fee_proportional_millionths(::uint32_t value);

  public:
  // uint32 cltv_expiry_delta = 5;
  void clear_cltv_expiry_delta() ;
  ::uint32_t cltv_expiry_delta() const;
  void set_cltv_expiry_delta(::uint32_t value);

  private:
  ::uint32_t _internal_cltv_expiry_delta() const;
  void _internal_set_cltv_expiry_delta(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.HopHint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      29, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HopHint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HopHint& from_msg);
    ::google::protobuf::internal::ArenaStringPtr node_id_;
    ::uint64_t chan_id_;
    ::uint32_t fee_base_msat_;
    ::uint32_t fee_proportional_millionths_;
    ::uint32_t cltv_expiry_delta_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Hop_CustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Hop_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Hop_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  Hop_CustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Hop_CustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Hop_CustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Hop_CustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Hop_CustomRecordsEntry_DoNotUse*>(
        &_Hop_CustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class HTLC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.HTLC) */ {
 public:
  inline HTLC() : HTLC(nullptr) {}
  ~HTLC() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HTLC(
      ::google::protobuf::internal::ConstantInitialized);

  inline HTLC(const HTLC& from) : HTLC(nullptr, from) {}
  inline HTLC(HTLC&& from) noexcept
      : HTLC(nullptr, std::move(from)) {}
  inline HTLC& operator=(const HTLC& from) {
    CopyFrom(from);
    return *this;
  }
  inline HTLC& operator=(HTLC&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HTLC& default_instance() {
    return *internal_default_instance();
  }
  static inline const HTLC* internal_default_instance() {
    return reinterpret_cast<const HTLC*>(
        &_HTLC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(HTLC& a, HTLC& b) { a.Swap(&b); }
  inline void Swap(HTLC* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HTLC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HTLC* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<HTLC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HTLC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HTLC& from) { HTLC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HTLC* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.HTLC"; }

 protected:
  explicit HTLC(::google::protobuf::Arena* arena);
  HTLC(::google::protobuf::Arena* arena, const HTLC& from);
  HTLC(::google::protobuf::Arena* arena, HTLC&& from) noexcept
      : HTLC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHashLockFieldNumber = 3,
    kAmountFieldNumber = 2,
    kIncomingFieldNumber = 1,
    kExpirationHeightFieldNumber = 4,
    kHtlcIndexFieldNumber = 5,
    kForwardingChannelFieldNumber = 6,
    kForwardingHtlcIndexFieldNumber = 7,
  };
  // bytes hash_lock = 3;
  void clear_hash_lock() ;
  const std::string& hash_lock() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash_lock(Arg_&& arg, Args_... args);
  std::string* mutable_hash_lock();
  PROTOBUF_NODISCARD std::string* release_hash_lock();
  void set_allocated_hash_lock(std::string* value);

  private:
  const std::string& _internal_hash_lock() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash_lock(
      const std::string& value);
  std::string* _internal_mutable_hash_lock();

  public:
  // int64 amount = 2;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // bool incoming = 1;
  void clear_incoming() ;
  bool incoming() const;
  void set_incoming(bool value);

  private:
  bool _internal_incoming() const;
  void _internal_set_incoming(bool value);

  public:
  // uint32 expiration_height = 4;
  void clear_expiration_height() ;
  ::uint32_t expiration_height() const;
  void set_expiration_height(::uint32_t value);

  private:
  ::uint32_t _internal_expiration_height() const;
  void _internal_set_expiration_height(::uint32_t value);

  public:
  // uint64 htlc_index = 5;
  void clear_htlc_index() ;
  ::uint64_t htlc_index() const;
  void set_htlc_index(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_index() const;
  void _internal_set_htlc_index(::uint64_t value);

  public:
  // uint64 forwarding_channel = 6;
  void clear_forwarding_channel() ;
  ::uint64_t forwarding_channel() const;
  void set_forwarding_channel(::uint64_t value);

  private:
  ::uint64_t _internal_forwarding_channel() const;
  void _internal_set_forwarding_channel(::uint64_t value);

  public:
  // uint64 forwarding_htlc_index = 7;
  void clear_forwarding_htlc_index() ;
  ::uint64_t forwarding_htlc_index() const;
  void set_forwarding_htlc_index(::uint64_t value);

  private:
  ::uint64_t _internal_forwarding_htlc_index() const;
  void _internal_set_forwarding_htlc_index(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.HTLC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HTLC_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HTLC& from_msg);
    ::google::protobuf::internal::ArenaStringPtr hash_lock_;
    ::int64_t amount_;
    bool incoming_;
    ::uint32_t expiration_height_;
    ::uint64_t htlc_index_;
    ::uint64_t forwarding_channel_;
    ::uint64_t forwarding_htlc_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GraphTopologySubscription final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.GraphTopologySubscription) */ {
 public:
  inline GraphTopologySubscription() : GraphTopologySubscription(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTopologySubscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTopologySubscription(const GraphTopologySubscription& from) : GraphTopologySubscription(nullptr, from) {}
  inline GraphTopologySubscription(GraphTopologySubscription&& from) noexcept
      : GraphTopologySubscription(nullptr, std::move(from)) {}
  inline GraphTopologySubscription& operator=(const GraphTopologySubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTopologySubscription& operator=(GraphTopologySubscription&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTopologySubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTopologySubscription* internal_default_instance() {
    return reinterpret_cast<const GraphTopologySubscription*>(
        &_GraphTopologySubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 143;
  friend void swap(GraphTopologySubscription& a, GraphTopologySubscription& b) { a.Swap(&b); }
  inline void Swap(GraphTopologySubscription* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTopologySubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTopologySubscription* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GraphTopologySubscription>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GraphTopologySubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GraphTopologySubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GraphTopologySubscription"; }

 protected:
  explicit GraphTopologySubscription(::google::protobuf::Arena* arena);
  GraphTopologySubscription(::google::protobuf::Arena* arena, const GraphTopologySubscription& from);
  GraphTopologySubscription(::google::protobuf::Arena* arena, GraphTopologySubscription&& from) noexcept
      : GraphTopologySubscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.GraphTopologySubscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GraphTopologySubscription_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTopologySubscription& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.GetTransactionsRequest) */ {
 public:
  inline GetTransactionsRequest() : GetTransactionsRequest(nullptr) {}
  ~GetTransactionsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTransactionsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTransactionsRequest(const GetTransactionsRequest& from) : GetTransactionsRequest(nullptr, from) {}
  inline GetTransactionsRequest(GetTransactionsRequest&& from) noexcept
      : GetTransactionsRequest(nullptr, std::move(from)) {}
  inline GetTransactionsRequest& operator=(const GetTransactionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionsRequest& operator=(GetTransactionsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionsRequest* internal_default_instance() {
    return reinterpret_cast<const GetTransactionsRequest*>(
        &_GetTransactionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(GetTransactionsRequest& a, GetTransactionsRequest& b) { a.Swap(&b); }
  inline void Swap(GetTransactionsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTransactionsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetTransactionsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTransactionsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTransactionsRequest& from) { GetTransactionsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetTransactionsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetTransactionsRequest"; }

 protected:
  explicit GetTransactionsRequest(::google::protobuf::Arena* arena);
  GetTransactionsRequest(::google::protobuf::Arena* arena, const GetTransactionsRequest& from);
  GetTransactionsRequest(::google::protobuf::Arena* arena, GetTransactionsRequest&& from) noexcept
      : GetTransactionsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 3,
    kStartHeightFieldNumber = 1,
    kEndHeightFieldNumber = 2,
  };
  // string account = 3;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // int32 start_height = 1;
  void clear_start_height() ;
  ::int32_t start_height() const;
  void set_start_height(::int32_t value);

  private:
  ::int32_t _internal_start_height() const;
  void _internal_set_start_height(::int32_t value);

  public:
  // int32 end_height = 2;
  void clear_end_height() ;
  ::int32_t end_height() const;
  void set_end_height(::int32_t value);

  private:
  ::int32_t _internal_end_height() const;
  void _internal_set_end_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.GetTransactionsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetTransactionsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTransactionsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::int32_t start_height_;
    ::int32_t end_height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetRecoveryInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.GetRecoveryInfoResponse) */ {
 public:
  inline GetRecoveryInfoResponse() : GetRecoveryInfoResponse(nullptr) {}
  ~GetRecoveryInfoResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRecoveryInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRecoveryInfoResponse(const GetRecoveryInfoResponse& from) : GetRecoveryInfoResponse(nullptr, from) {}
  inline GetRecoveryInfoResponse(GetRecoveryInfoResponse&& from) noexcept
      : GetRecoveryInfoResponse(nullptr, std::move(from)) {}
  inline GetRecoveryInfoResponse& operator=(const GetRecoveryInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecoveryInfoResponse& operator=(GetRecoveryInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRecoveryInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRecoveryInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetRecoveryInfoResponse*>(
        &_GetRecoveryInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(GetRecoveryInfoResponse& a, GetRecoveryInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetRecoveryInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecoveryInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRecoveryInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetRecoveryInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRecoveryInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetRecoveryInfoResponse& from) { GetRecoveryInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetRecoveryInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetRecoveryInfoResponse"; }

 protected:
  explicit GetRecoveryInfoResponse(::google::protobuf::Arena* arena);
  GetRecoveryInfoResponse(::google::protobuf::Arena* arena, const GetRecoveryInfoResponse& from);
  GetRecoveryInfoResponse(::google::protobuf::Arena* arena, GetRecoveryInfoResponse&& from) noexcept
      : GetRecoveryInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kProgressFieldNumber = 3,
    kRecoveryModeFieldNumber = 1,
    kRecoveryFinishedFieldNumber = 2,
  };
  // double progress = 3;
  void clear_progress() ;
  double progress() const;
  void set_progress(double value);

  private:
  double _internal_progress() const;
  void _internal_set_progress(double value);

  public:
  // bool recovery_mode = 1;
  void clear_recovery_mode() ;
  bool recovery_mode() const;
  void set_recovery_mode(bool value);

  private:
  bool _internal_recovery_mode() const;
  void _internal_set_recovery_mode(bool value);

  public:
  // bool recovery_finished = 2;
  void clear_recovery_finished() ;
  bool recovery_finished() const;
  void set_recovery_finished(bool value);

  private:
  bool _internal_recovery_finished() const;
  void _internal_set_recovery_finished(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.GetRecoveryInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetRecoveryInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRecoveryInfoResponse& from_msg);
    double progress_;
    bool recovery_mode_;
    bool recovery_finished_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetRecoveryInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.GetRecoveryInfoRequest) */ {
 public:
  inline GetRecoveryInfoRequest() : GetRecoveryInfoRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetRecoveryInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetRecoveryInfoRequest(const GetRecoveryInfoRequest& from) : GetRecoveryInfoRequest(nullptr, from) {}
  inline GetRecoveryInfoRequest(GetRecoveryInfoRequest&& from) noexcept
      : GetRecoveryInfoRequest(nullptr, std::move(from)) {}
  inline GetRecoveryInfoRequest& operator=(const GetRecoveryInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecoveryInfoRequest& operator=(GetRecoveryInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRecoveryInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRecoveryInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetRecoveryInfoRequest*>(
        &_GetRecoveryInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(GetRecoveryInfoRequest& a, GetRecoveryInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetRecoveryInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecoveryInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRecoveryInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetRecoveryInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRecoveryInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRecoveryInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetRecoveryInfoRequest"; }

 protected:
  explicit GetRecoveryInfoRequest(::google::protobuf::Arena* arena);
  GetRecoveryInfoRequest(::google::protobuf::Arena* arena, const GetRecoveryInfoRequest& from);
  GetRecoveryInfoRequest(::google::protobuf::Arena* arena, GetRecoveryInfoRequest&& from) noexcept
      : GetRecoveryInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.GetRecoveryInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetRecoveryInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetRecoveryInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.GetInfoRequest) */ {
 public:
  inline GetInfoRequest() : GetInfoRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInfoRequest(const GetInfoRequest& from) : GetInfoRequest(nullptr, from) {}
  inline GetInfoRequest(GetInfoRequest&& from) noexcept
      : GetInfoRequest(nullptr, std::move(from)) {}
  inline GetInfoRequest& operator=(const GetInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInfoRequest& operator=(GetInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetInfoRequest*>(
        &_GetInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(GetInfoRequest& a, GetInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetInfoRequest"; }

 protected:
  explicit GetInfoRequest(::google::protobuf::Arena* arena);
  GetInfoRequest(::google::protobuf::Arena* arena, const GetInfoRequest& from);
  GetInfoRequest(::google::protobuf::Arena* arena, GetInfoRequest&& from) noexcept
      : GetInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.GetInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetDebugInfoResponse_ConfigEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetDebugInfoResponse_ConfigEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetDebugInfoResponse_ConfigEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  GetDebugInfoResponse_ConfigEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDebugInfoResponse_ConfigEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetDebugInfoResponse_ConfigEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetDebugInfoResponse_ConfigEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetDebugInfoResponse_ConfigEntry_DoNotUse*>(
        &_GetDebugInfoResponse_ConfigEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      55, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetDebugInfoRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.GetDebugInfoRequest) */ {
 public:
  inline GetDebugInfoRequest() : GetDebugInfoRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDebugInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetDebugInfoRequest(const GetDebugInfoRequest& from) : GetDebugInfoRequest(nullptr, from) {}
  inline GetDebugInfoRequest(GetDebugInfoRequest&& from) noexcept
      : GetDebugInfoRequest(nullptr, std::move(from)) {}
  inline GetDebugInfoRequest& operator=(const GetDebugInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDebugInfoRequest& operator=(GetDebugInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDebugInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDebugInfoRequest* internal_default_instance() {
    return reinterpret_cast<const GetDebugInfoRequest*>(
        &_GetDebugInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 64;
  friend void swap(GetDebugInfoRequest& a, GetDebugInfoRequest& b) { a.Swap(&b); }
  inline void Swap(GetDebugInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDebugInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDebugInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetDebugInfoRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetDebugInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetDebugInfoRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetDebugInfoRequest"; }

 protected:
  explicit GetDebugInfoRequest(::google::protobuf::Arena* arena);
  GetDebugInfoRequest(::google::protobuf::Arena* arena, const GetDebugInfoRequest& from);
  GetDebugInfoRequest(::google::protobuf::Arena* arena, GetDebugInfoRequest&& from) noexcept
      : GetDebugInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.GetDebugInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetDebugInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetDebugInfoRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FundingStateStepResp final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.FundingStateStepResp) */ {
 public:
  inline FundingStateStepResp() : FundingStateStepResp(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingStateStepResp(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingStateStepResp(const FundingStateStepResp& from) : FundingStateStepResp(nullptr, from) {}
  inline FundingStateStepResp(FundingStateStepResp&& from) noexcept
      : FundingStateStepResp(nullptr, std::move(from)) {}
  inline FundingStateStepResp& operator=(const FundingStateStepResp& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingStateStepResp& operator=(FundingStateStepResp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingStateStepResp& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingStateStepResp* internal_default_instance() {
    return reinterpret_cast<const FundingStateStepResp*>(
        &_FundingStateStepResp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 93;
  friend void swap(FundingStateStepResp& a, FundingStateStepResp& b) { a.Swap(&b); }
  inline void Swap(FundingStateStepResp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingStateStepResp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingStateStepResp* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<FundingStateStepResp>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FundingStateStepResp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FundingStateStepResp& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FundingStateStepResp"; }

 protected:
  explicit FundingStateStepResp(::google::protobuf::Arena* arena);
  FundingStateStepResp(::google::protobuf::Arena* arena, const FundingStateStepResp& from);
  FundingStateStepResp(::google::protobuf::Arena* arena, FundingStateStepResp&& from) noexcept
      : FundingStateStepResp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.FundingStateStepResp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundingStateStepResp_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingStateStepResp& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FundingShimCancel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FundingShimCancel) */ {
 public:
  inline FundingShimCancel() : FundingShimCancel(nullptr) {}
  ~FundingShimCancel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingShimCancel(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingShimCancel(const FundingShimCancel& from) : FundingShimCancel(nullptr, from) {}
  inline FundingShimCancel(FundingShimCancel&& from) noexcept
      : FundingShimCancel(nullptr, std::move(from)) {}
  inline FundingShimCancel& operator=(const FundingShimCancel& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingShimCancel& operator=(FundingShimCancel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingShimCancel& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingShimCancel* internal_default_instance() {
    return reinterpret_cast<const FundingShimCancel*>(
        &_FundingShimCancel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 89;
  friend void swap(FundingShimCancel& a, FundingShimCancel& b) { a.Swap(&b); }
  inline void Swap(FundingShimCancel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingShimCancel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingShimCancel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundingShimCancel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingShimCancel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingShimCancel& from) { FundingShimCancel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundingShimCancel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FundingShimCancel"; }

 protected:
  explicit FundingShimCancel(::google::protobuf::Arena* arena);
  FundingShimCancel(::google::protobuf::Arena* arena, const FundingShimCancel& from);
  FundingShimCancel(::google::protobuf::Arena* arena, FundingShimCancel&& from) noexcept
      : FundingShimCancel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingChanIdFieldNumber = 1,
  };
  // bytes pending_chan_id = 1;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.FundingShimCancel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundingShimCancel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingShimCancel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FundingPsbtVerify final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FundingPsbtVerify) */ {
 public:
  inline FundingPsbtVerify() : FundingPsbtVerify(nullptr) {}
  ~FundingPsbtVerify() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingPsbtVerify(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingPsbtVerify(const FundingPsbtVerify& from) : FundingPsbtVerify(nullptr, from) {}
  inline FundingPsbtVerify(FundingPsbtVerify&& from) noexcept
      : FundingPsbtVerify(nullptr, std::move(from)) {}
  inline FundingPsbtVerify& operator=(const FundingPsbtVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingPsbtVerify& operator=(FundingPsbtVerify&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingPsbtVerify& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingPsbtVerify* internal_default_instance() {
    return reinterpret_cast<const FundingPsbtVerify*>(
        &_FundingPsbtVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 90;
  friend void swap(FundingPsbtVerify& a, FundingPsbtVerify& b) { a.Swap(&b); }
  inline void Swap(FundingPsbtVerify* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingPsbtVerify* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingPsbtVerify* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundingPsbtVerify>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingPsbtVerify& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingPsbtVerify& from) { FundingPsbtVerify::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundingPsbtVerify* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FundingPsbtVerify"; }

 protected:
  explicit FundingPsbtVerify(::google::protobuf::Arena* arena);
  FundingPsbtVerify(::google::protobuf::Arena* arena, const FundingPsbtVerify& from);
  FundingPsbtVerify(::google::protobuf::Arena* arena, FundingPsbtVerify&& from) noexcept
      : FundingPsbtVerify(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundedPsbtFieldNumber = 1,
    kPendingChanIdFieldNumber = 2,
    kSkipFinalizeFieldNumber = 3,
  };
  // bytes funded_psbt = 1;
  void clear_funded_psbt() ;
  const std::string& funded_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funded_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_funded_psbt();
  PROTOBUF_NODISCARD std::string* release_funded_psbt();
  void set_allocated_funded_psbt(std::string* value);

  private:
  const std::string& _internal_funded_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funded_psbt(
      const std::string& value);
  std::string* _internal_mutable_funded_psbt();

  public:
  // bytes pending_chan_id = 2;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // bool skip_finalize = 3;
  void clear_skip_finalize() ;
  bool skip_finalize() const;
  void set_skip_finalize(bool value);

  private:
  bool _internal_skip_finalize() const;
  void _internal_set_skip_finalize(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.FundingPsbtVerify)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundingPsbtVerify_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingPsbtVerify& from_msg);
    ::google::protobuf::internal::ArenaStringPtr funded_psbt_;
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    bool skip_finalize_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FundingPsbtFinalize final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FundingPsbtFinalize) */ {
 public:
  inline FundingPsbtFinalize() : FundingPsbtFinalize(nullptr) {}
  ~FundingPsbtFinalize() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingPsbtFinalize(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingPsbtFinalize(const FundingPsbtFinalize& from) : FundingPsbtFinalize(nullptr, from) {}
  inline FundingPsbtFinalize(FundingPsbtFinalize&& from) noexcept
      : FundingPsbtFinalize(nullptr, std::move(from)) {}
  inline FundingPsbtFinalize& operator=(const FundingPsbtFinalize& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingPsbtFinalize& operator=(FundingPsbtFinalize&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingPsbtFinalize& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundingPsbtFinalize* internal_default_instance() {
    return reinterpret_cast<const FundingPsbtFinalize*>(
        &_FundingPsbtFinalize_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 91;
  friend void swap(FundingPsbtFinalize& a, FundingPsbtFinalize& b) { a.Swap(&b); }
  inline void Swap(FundingPsbtFinalize* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingPsbtFinalize* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingPsbtFinalize* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundingPsbtFinalize>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingPsbtFinalize& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingPsbtFinalize& from) { FundingPsbtFinalize::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundingPsbtFinalize* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FundingPsbtFinalize"; }

 protected:
  explicit FundingPsbtFinalize(::google::protobuf::Arena* arena);
  FundingPsbtFinalize(::google::protobuf::Arena* arena, const FundingPsbtFinalize& from);
  FundingPsbtFinalize(::google::protobuf::Arena* arena, FundingPsbtFinalize&& from) noexcept
      : FundingPsbtFinalize(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignedPsbtFieldNumber = 1,
    kPendingChanIdFieldNumber = 2,
    kFinalRawTxFieldNumber = 3,
  };
  // bytes signed_psbt = 1;
  void clear_signed_psbt() ;
  const std::string& signed_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signed_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_signed_psbt();
  PROTOBUF_NODISCARD std::string* release_signed_psbt();
  void set_allocated_signed_psbt(std::string* value);

  private:
  const std::string& _internal_signed_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signed_psbt(
      const std::string& value);
  std::string* _internal_mutable_signed_psbt();

  public:
  // bytes pending_chan_id = 2;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // bytes final_raw_tx = 3;
  void clear_final_raw_tx() ;
  const std::string& final_raw_tx() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_final_raw_tx(Arg_&& arg, Args_... args);
  std::string* mutable_final_raw_tx();
  PROTOBUF_NODISCARD std::string* release_final_raw_tx();
  void set_allocated_final_raw_tx(std::string* value);

  private:
  const std::string& _internal_final_raw_tx() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_final_raw_tx(
      const std::string& value);
  std::string* _internal_mutable_final_raw_tx();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.FundingPsbtFinalize)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundingPsbtFinalize_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingPsbtFinalize& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signed_psbt_;
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    ::google::protobuf::internal::ArenaStringPtr final_raw_tx_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ForwardingHistoryRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ForwardingHistoryRequest) */ {
 public:
  inline ForwardingHistoryRequest() : ForwardingHistoryRequest(nullptr) {}
  ~ForwardingHistoryRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForwardingHistoryRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ForwardingHistoryRequest(const ForwardingHistoryRequest& from) : ForwardingHistoryRequest(nullptr, from) {}
  inline ForwardingHistoryRequest(ForwardingHistoryRequest&& from) noexcept
      : ForwardingHistoryRequest(nullptr, std::move(from)) {}
  inline ForwardingHistoryRequest& operator=(const ForwardingHistoryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardingHistoryRequest& operator=(ForwardingHistoryRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForwardingHistoryRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForwardingHistoryRequest* internal_default_instance() {
    return reinterpret_cast<const ForwardingHistoryRequest*>(
        &_ForwardingHistoryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 192;
  friend void swap(ForwardingHistoryRequest& a, ForwardingHistoryRequest& b) { a.Swap(&b); }
  inline void Swap(ForwardingHistoryRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardingHistoryRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForwardingHistoryRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ForwardingHistoryRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ForwardingHistoryRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ForwardingHistoryRequest& from) { ForwardingHistoryRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ForwardingHistoryRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ForwardingHistoryRequest"; }

 protected:
  explicit ForwardingHistoryRequest(::google::protobuf::Arena* arena);
  ForwardingHistoryRequest(::google::protobuf::Arena* arena, const ForwardingHistoryRequest& from);
  ForwardingHistoryRequest(::google::protobuf::Arena* arena, ForwardingHistoryRequest&& from) noexcept
      : ForwardingHistoryRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartTimeFieldNumber = 1,
    kEndTimeFieldNumber = 2,
    kIndexOffsetFieldNumber = 3,
    kNumMaxEventsFieldNumber = 4,
    kPeerAliasLookupFieldNumber = 5,
  };
  // uint64 start_time = 1;
  void clear_start_time() ;
  ::uint64_t start_time() const;
  void set_start_time(::uint64_t value);

  private:
  ::uint64_t _internal_start_time() const;
  void _internal_set_start_time(::uint64_t value);

  public:
  // uint64 end_time = 2;
  void clear_end_time() ;
  ::uint64_t end_time() const;
  void set_end_time(::uint64_t value);

  private:
  ::uint64_t _internal_end_time() const;
  void _internal_set_end_time(::uint64_t value);

  public:
  // uint32 index_offset = 3;
  void clear_index_offset() ;
  ::uint32_t index_offset() const;
  void set_index_offset(::uint32_t value);

  private:
  ::uint32_t _internal_index_offset() const;
  void _internal_set_index_offset(::uint32_t value);

  public:
  // uint32 num_max_events = 4;
  void clear_num_max_events() ;
  ::uint32_t num_max_events() const;
  void set_num_max_events(::uint32_t value);

  private:
  ::uint32_t _internal_num_max_events() const;
  void _internal_set_num_max_events(::uint32_t value);

  public:
  // bool peer_alias_lookup = 5;
  void clear_peer_alias_lookup() ;
  bool peer_alias_lookup() const;
  void set_peer_alias_lookup(bool value);

  private:
  bool _internal_peer_alias_lookup() const;
  void _internal_set_peer_alias_lookup(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ForwardingHistoryRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ForwardingHistoryRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ForwardingHistoryRequest& from_msg);
    ::uint64_t start_time_;
    ::uint64_t end_time_;
    ::uint32_t index_offset_;
    ::uint32_t num_max_events_;
    bool peer_alias_lookup_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ForwardingEvent final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ForwardingEvent) */ {
 public:
  inline ForwardingEvent() : ForwardingEvent(nullptr) {}
  ~ForwardingEvent() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForwardingEvent(
      ::google::protobuf::internal::ConstantInitialized);

  inline ForwardingEvent(const ForwardingEvent& from) : ForwardingEvent(nullptr, from) {}
  inline ForwardingEvent(ForwardingEvent&& from) noexcept
      : ForwardingEvent(nullptr, std::move(from)) {}
  inline ForwardingEvent& operator=(const ForwardingEvent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardingEvent& operator=(ForwardingEvent&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForwardingEvent& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForwardingEvent* internal_default_instance() {
    return reinterpret_cast<const ForwardingEvent*>(
        &_ForwardingEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 193;
  friend void swap(ForwardingEvent& a, ForwardingEvent& b) { a.Swap(&b); }
  inline void Swap(ForwardingEvent* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardingEvent* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForwardingEvent* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ForwardingEvent>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ForwardingEvent& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ForwardingEvent& from) { ForwardingEvent::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ForwardingEvent* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ForwardingEvent"; }

 protected:
  explicit ForwardingEvent(::google::protobuf::Arena* arena);
  ForwardingEvent(::google::protobuf::Arena* arena, const ForwardingEvent& from);
  ForwardingEvent(::google::protobuf::Arena* arena, ForwardingEvent&& from) noexcept
      : ForwardingEvent(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerAliasInFieldNumber = 12,
    kPeerAliasOutFieldNumber = 13,
    kTimestampFieldNumber = 1,
    kChanIdInFieldNumber = 2,
    kChanIdOutFieldNumber = 4,
    kAmtInFieldNumber = 5,
    kAmtOutFieldNumber = 6,
    kFeeFieldNumber = 7,
    kFeeMsatFieldNumber = 8,
    kAmtInMsatFieldNumber = 9,
    kAmtOutMsatFieldNumber = 10,
    kTimestampNsFieldNumber = 11,
  };
  // string peer_alias_in = 12;
  void clear_peer_alias_in() ;
  const std::string& peer_alias_in() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer_alias_in(Arg_&& arg, Args_... args);
  std::string* mutable_peer_alias_in();
  PROTOBUF_NODISCARD std::string* release_peer_alias_in();
  void set_allocated_peer_alias_in(std::string* value);

  private:
  const std::string& _internal_peer_alias_in() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer_alias_in(
      const std::string& value);
  std::string* _internal_mutable_peer_alias_in();

  public:
  // string peer_alias_out = 13;
  void clear_peer_alias_out() ;
  const std::string& peer_alias_out() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer_alias_out(Arg_&& arg, Args_... args);
  std::string* mutable_peer_alias_out();
  PROTOBUF_NODISCARD std::string* release_peer_alias_out();
  void set_allocated_peer_alias_out(std::string* value);

  private:
  const std::string& _internal_peer_alias_out() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer_alias_out(
      const std::string& value);
  std::string* _internal_mutable_peer_alias_out();

  public:
  // uint64 timestamp = 1 [deprecated = true];
  [[deprecated]]  void clear_timestamp() ;
  [[deprecated]] ::uint64_t timestamp() const;
  [[deprecated]] void set_timestamp(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint64_t value);

  public:
  // uint64 chan_id_in = 2 [jstype = JS_STRING];
  void clear_chan_id_in() ;
  ::uint64_t chan_id_in() const;
  void set_chan_id_in(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id_in() const;
  void _internal_set_chan_id_in(::uint64_t value);

  public:
  // uint64 chan_id_out = 4 [jstype = JS_STRING];
  void clear_chan_id_out() ;
  ::uint64_t chan_id_out() const;
  void set_chan_id_out(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id_out() const;
  void _internal_set_chan_id_out(::uint64_t value);

  public:
  // uint64 amt_in = 5;
  void clear_amt_in() ;
  ::uint64_t amt_in() const;
  void set_amt_in(::uint64_t value);

  private:
  ::uint64_t _internal_amt_in() const;
  void _internal_set_amt_in(::uint64_t value);

  public:
  // uint64 amt_out = 6;
  void clear_amt_out() ;
  ::uint64_t amt_out() const;
  void set_amt_out(::uint64_t value);

  private:
  ::uint64_t _internal_amt_out() const;
  void _internal_set_amt_out(::uint64_t value);

  public:
  // uint64 fee = 7;
  void clear_fee() ;
  ::uint64_t fee() const;
  void set_fee(::uint64_t value);

  private:
  ::uint64_t _internal_fee() const;
  void _internal_set_fee(::uint64_t value);

  public:
  // uint64 fee_msat = 8;
  void clear_fee_msat() ;
  ::uint64_t fee_msat() const;
  void set_fee_msat(::uint64_t value);

  private:
  ::uint64_t _internal_fee_msat() const;
  void _internal_set_fee_msat(::uint64_t value);

  public:
  // uint64 amt_in_msat = 9;
  void clear_amt_in_msat() ;
  ::uint64_t amt_in_msat() const;
  void set_amt_in_msat(::uint64_t value);

  private:
  ::uint64_t _internal_amt_in_msat() const;
  void _internal_set_amt_in_msat(::uint64_t value);

  public:
  // uint64 amt_out_msat = 10;
  void clear_amt_out_msat() ;
  ::uint64_t amt_out_msat() const;
  void set_amt_out_msat(::uint64_t value);

  private:
  ::uint64_t _internal_amt_out_msat() const;
  void _internal_set_amt_out_msat(::uint64_t value);

  public:
  // uint64 timestamp_ns = 11;
  void clear_timestamp_ns() ;
  ::uint64_t timestamp_ns() const;
  void set_timestamp_ns(::uint64_t value);

  private:
  ::uint64_t _internal_timestamp_ns() const;
  void _internal_set_timestamp_ns(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ForwardingEvent)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ForwardingEvent_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ForwardingEvent& from_msg);
    ::google::protobuf::internal::ArenaStringPtr peer_alias_in_;
    ::google::protobuf::internal::ArenaStringPtr peer_alias_out_;
    ::uint64_t timestamp_;
    ::uint64_t chan_id_in_;
    ::uint64_t chan_id_out_;
    ::uint64_t amt_in_;
    ::uint64_t amt_out_;
    ::uint64_t fee_;
    ::uint64_t fee_msat_;
    ::uint64_t amt_in_msat_;
    ::uint64_t amt_out_msat_;
    ::uint64_t timestamp_ns_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FloatMetric final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FloatMetric) */ {
 public:
  inline FloatMetric() : FloatMetric(nullptr) {}
  ~FloatMetric() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FloatMetric(
      ::google::protobuf::internal::ConstantInitialized);

  inline FloatMetric(const FloatMetric& from) : FloatMetric(nullptr, from) {}
  inline FloatMetric(FloatMetric&& from) noexcept
      : FloatMetric(nullptr, std::move(from)) {}
  inline FloatMetric& operator=(const FloatMetric& from) {
    CopyFrom(from);
    return *this;
  }
  inline FloatMetric& operator=(FloatMetric&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FloatMetric& default_instance() {
    return *internal_default_instance();
  }
  static inline const FloatMetric* internal_default_instance() {
    return reinterpret_cast<const FloatMetric*>(
        &_FloatMetric_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 137;
  friend void swap(FloatMetric& a, FloatMetric& b) { a.Swap(&b); }
  inline void Swap(FloatMetric* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FloatMetric* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FloatMetric* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FloatMetric>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FloatMetric& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FloatMetric& from) { FloatMetric::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FloatMetric* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FloatMetric"; }

 protected:
  explicit FloatMetric(::google::protobuf::Arena* arena);
  FloatMetric(::google::protobuf::Arena* arena, const FloatMetric& from);
  FloatMetric(::google::protobuf::Arena* arena, FloatMetric&& from) noexcept
      : FloatMetric(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
    kNormalizedValueFieldNumber = 2,
  };
  // double value = 1;
  void clear_value() ;
  double value() const;
  void set_value(double value);

  private:
  double _internal_value() const;
  void _internal_set_value(double value);

  public:
  // double normalized_value = 2;
  void clear_normalized_value() ;
  double normalized_value() const;
  void set_normalized_value(double value);

  private:
  double _internal_normalized_value() const;
  void _internal_set_normalized_value(double value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.FloatMetric)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FloatMetric_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FloatMetric& from_msg);
    double value_;
    double normalized_value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FeeReportRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.FeeReportRequest) */ {
 public:
  inline FeeReportRequest() : FeeReportRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeeReportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FeeReportRequest(const FeeReportRequest& from) : FeeReportRequest(nullptr, from) {}
  inline FeeReportRequest(FeeReportRequest&& from) noexcept
      : FeeReportRequest(nullptr, std::move(from)) {}
  inline FeeReportRequest& operator=(const FeeReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeeReportRequest& operator=(FeeReportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeeReportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FeeReportRequest* internal_default_instance() {
    return reinterpret_cast<const FeeReportRequest*>(
        &_FeeReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 185;
  friend void swap(FeeReportRequest& a, FeeReportRequest& b) { a.Swap(&b); }
  inline void Swap(FeeReportRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeeReportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeeReportRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<FeeReportRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const FeeReportRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const FeeReportRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FeeReportRequest"; }

 protected:
  explicit FeeReportRequest(::google::protobuf::Arena* arena);
  FeeReportRequest(::google::protobuf::Arena* arena, const FeeReportRequest& from);
  FeeReportRequest(::google::protobuf::Arena* arena, FeeReportRequest&& from) noexcept
      : FeeReportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.FeeReportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FeeReportRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FeeReportRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FeeLimit final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FeeLimit) */ {
 public:
  inline FeeLimit() : FeeLimit(nullptr) {}
  ~FeeLimit() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeeLimit(
      ::google::protobuf::internal::ConstantInitialized);

  inline FeeLimit(const FeeLimit& from) : FeeLimit(nullptr, from) {}
  inline FeeLimit(FeeLimit&& from) noexcept
      : FeeLimit(nullptr, std::move(from)) {}
  inline FeeLimit& operator=(const FeeLimit& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeeLimit& operator=(FeeLimit&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeeLimit& default_instance() {
    return *internal_default_instance();
  }
  enum LimitCase {
    kFixed = 1,
    kFixedMsat = 3,
    kPercent = 2,
    LIMIT_NOT_SET = 0,
  };
  static inline const FeeLimit* internal_default_instance() {
    return reinterpret_cast<const FeeLimit*>(
        &_FeeLimit_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(FeeLimit& a, FeeLimit& b) { a.Swap(&b); }
  inline void Swap(FeeLimit* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeeLimit* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeeLimit* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FeeLimit>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FeeLimit& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FeeLimit& from) { FeeLimit::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FeeLimit* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FeeLimit"; }

 protected:
  explicit FeeLimit(::google::protobuf::Arena* arena);
  FeeLimit(::google::protobuf::Arena* arena, const FeeLimit& from);
  FeeLimit(::google::protobuf::Arena* arena, FeeLimit&& from) noexcept
      : FeeLimit(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFixedFieldNumber = 1,
    kFixedMsatFieldNumber = 3,
    kPercentFieldNumber = 2,
  };
  // int64 fixed = 1;
  bool has_fixed() const;
  void clear_fixed() ;
  ::int64_t fixed() const;
  void set_fixed(::int64_t value);

  private:
  ::int64_t _internal_fixed() const;
  void _internal_set_fixed(::int64_t value);

  public:
  // int64 fixed_msat = 3;
  bool has_fixed_msat() const;
  void clear_fixed_msat() ;
  ::int64_t fixed_msat() const;
  void set_fixed_msat(::int64_t value);

  private:
  ::int64_t _internal_fixed_msat() const;
  void _internal_set_fixed_msat(::int64_t value);

  public:
  // int64 percent = 2;
  bool has_percent() const;
  void clear_percent() ;
  ::int64_t percent() const;
  void set_percent(::int64_t value);

  private:
  ::int64_t _internal_percent() const;
  void _internal_set_percent(::int64_t value);

  public:
  void clear_limit();
  LimitCase limit_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.FeeLimit)
 private:
  class _Internal;
  void set_has_fixed();
  void set_has_fixed_msat();
  void set_has_percent();
  inline bool has_limit() const;
  inline void clear_has_limit();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FeeLimit_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FeeLimit& from_msg);
    union LimitUnion {
      constexpr LimitUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int64_t fixed_;
      ::int64_t fixed_msat_;
      ::int64_t percent_;
    } limit_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Feature final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Feature) */ {
 public:
  inline Feature() : Feature(nullptr) {}
  ~Feature() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Feature(
      ::google::protobuf::internal::ConstantInitialized);

  inline Feature(const Feature& from) : Feature(nullptr, from) {}
  inline Feature(Feature&& from) noexcept
      : Feature(nullptr, std::move(from)) {}
  inline Feature& operator=(const Feature& from) {
    CopyFrom(from);
    return *this;
  }
  inline Feature& operator=(Feature&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Feature& default_instance() {
    return *internal_default_instance();
  }
  static inline const Feature* internal_default_instance() {
    return reinterpret_cast<const Feature*>(
        &_Feature_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 184;
  friend void swap(Feature& a, Feature& b) { a.Swap(&b); }
  inline void Swap(Feature* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Feature* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Feature* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Feature>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Feature& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Feature& from) { Feature::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Feature* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Feature"; }

 protected:
  explicit Feature(::google::protobuf::Arena* arena);
  Feature(::google::protobuf::Arena* arena, const Feature& from);
  Feature(::google::protobuf::Arena* arena, Feature&& from) noexcept
      : Feature(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 2,
    kIsRequiredFieldNumber = 3,
    kIsKnownFieldNumber = 4,
  };
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // bool is_required = 3;
  void clear_is_required() ;
  bool is_required() const;
  void set_is_required(bool value);

  private:
  bool _internal_is_required() const;
  void _internal_set_is_required(bool value);

  public:
  // bool is_known = 4;
  void clear_is_known() ;
  bool is_known() const;
  void set_is_known(bool value);

  private:
  bool _internal_is_known() const;
  void _internal_set_is_known(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Feature)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      26, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Feature_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Feature& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    bool is_required_;
    bool is_known_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class EstimateFeeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.EstimateFeeResponse) */ {
 public:
  inline EstimateFeeResponse() : EstimateFeeResponse(nullptr) {}
  ~EstimateFeeResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EstimateFeeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EstimateFeeResponse(const EstimateFeeResponse& from) : EstimateFeeResponse(nullptr, from) {}
  inline EstimateFeeResponse(EstimateFeeResponse&& from) noexcept
      : EstimateFeeResponse(nullptr, std::move(from)) {}
  inline EstimateFeeResponse& operator=(const EstimateFeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EstimateFeeResponse& operator=(EstimateFeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EstimateFeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EstimateFeeResponse* internal_default_instance() {
    return reinterpret_cast<const EstimateFeeResponse*>(
        &_EstimateFeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(EstimateFeeResponse& a, EstimateFeeResponse& b) { a.Swap(&b); }
  inline void Swap(EstimateFeeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EstimateFeeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EstimateFeeResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EstimateFeeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EstimateFeeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EstimateFeeResponse& from) { EstimateFeeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EstimateFeeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.EstimateFeeResponse"; }

 protected:
  explicit EstimateFeeResponse(::google::protobuf::Arena* arena);
  EstimateFeeResponse(::google::protobuf::Arena* arena, const EstimateFeeResponse& from);
  EstimateFeeResponse(::google::protobuf::Arena* arena, EstimateFeeResponse&& from) noexcept
      : EstimateFeeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeeSatFieldNumber = 1,
    kFeerateSatPerByteFieldNumber = 2,
    kSatPerVbyteFieldNumber = 3,
  };
  // int64 fee_sat = 1;
  void clear_fee_sat() ;
  ::int64_t fee_sat() const;
  void set_fee_sat(::int64_t value);

  private:
  ::int64_t _internal_fee_sat() const;
  void _internal_set_fee_sat(::int64_t value);

  public:
  // int64 feerate_sat_per_byte = 2 [deprecated = true];
  [[deprecated]]  void clear_feerate_sat_per_byte() ;
  [[deprecated]] ::int64_t feerate_sat_per_byte() const;
  [[deprecated]] void set_feerate_sat_per_byte(::int64_t value);

  private:
  ::int64_t _internal_feerate_sat_per_byte() const;
  void _internal_set_feerate_sat_per_byte(::int64_t value);

  public:
  // uint64 sat_per_vbyte = 3;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.EstimateFeeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EstimateFeeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EstimateFeeResponse& from_msg);
    ::int64_t fee_sat_;
    ::int64_t feerate_sat_per_byte_;
    ::uint64_t sat_per_vbyte_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class EstimateFeeRequest_AddrToAmountEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          EstimateFeeRequest_AddrToAmountEntry_DoNotUse, std::string, ::int64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_INT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      EstimateFeeRequest_AddrToAmountEntry_DoNotUse, std::string, ::int64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>;
  EstimateFeeRequest_AddrToAmountEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EstimateFeeRequest_AddrToAmountEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit EstimateFeeRequest_AddrToAmountEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const EstimateFeeRequest_AddrToAmountEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const EstimateFeeRequest_AddrToAmountEntry_DoNotUse*>(
        &_EstimateFeeRequest_AddrToAmountEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class EdgeLocator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.EdgeLocator) */ {
 public:
  inline EdgeLocator() : EdgeLocator(nullptr) {}
  ~EdgeLocator() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EdgeLocator(
      ::google::protobuf::internal::ConstantInitialized);

  inline EdgeLocator(const EdgeLocator& from) : EdgeLocator(nullptr, from) {}
  inline EdgeLocator(EdgeLocator&& from) noexcept
      : EdgeLocator(nullptr, std::move(from)) {}
  inline EdgeLocator& operator=(const EdgeLocator& from) {
    CopyFrom(from);
    return *this;
  }
  inline EdgeLocator& operator=(EdgeLocator&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EdgeLocator& default_instance() {
    return *internal_default_instance();
  }
  static inline const EdgeLocator* internal_default_instance() {
    return reinterpret_cast<const EdgeLocator*>(
        &_EdgeLocator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 115;
  friend void swap(EdgeLocator& a, EdgeLocator& b) { a.Swap(&b); }
  inline void Swap(EdgeLocator* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EdgeLocator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EdgeLocator* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EdgeLocator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EdgeLocator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EdgeLocator& from) { EdgeLocator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EdgeLocator* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.EdgeLocator"; }

 protected:
  explicit EdgeLocator(::google::protobuf::Arena* arena);
  EdgeLocator(::google::protobuf::Arena* arena, const EdgeLocator& from);
  EdgeLocator(::google::protobuf::Arena* arena, EdgeLocator&& from) noexcept
      : EdgeLocator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelIdFieldNumber = 1,
    kDirectionReverseFieldNumber = 2,
  };
  // uint64 channel_id = 1 [jstype = JS_STRING];
  void clear_channel_id() ;
  ::uint64_t channel_id() const;
  void set_channel_id(::uint64_t value);

  private:
  ::uint64_t _internal_channel_id() const;
  void _internal_set_channel_id(::uint64_t value);

  public:
  // bool direction_reverse = 2;
  void clear_direction_reverse() ;
  bool direction_reverse() const;
  void set_direction_reverse(bool value);

  private:
  bool _internal_direction_reverse() const;
  void _internal_set_direction_reverse(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.EdgeLocator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EdgeLocator_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EdgeLocator& from_msg);
    ::uint64_t channel_id_;
    bool direction_reverse_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DisconnectPeerResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.DisconnectPeerResponse) */ {
 public:
  inline DisconnectPeerResponse() : DisconnectPeerResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisconnectPeerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisconnectPeerResponse(const DisconnectPeerResponse& from) : DisconnectPeerResponse(nullptr, from) {}
  inline DisconnectPeerResponse(DisconnectPeerResponse&& from) noexcept
      : DisconnectPeerResponse(nullptr, std::move(from)) {}
  inline DisconnectPeerResponse& operator=(const DisconnectPeerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisconnectPeerResponse& operator=(DisconnectPeerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisconnectPeerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisconnectPeerResponse* internal_default_instance() {
    return reinterpret_cast<const DisconnectPeerResponse*>(
        &_DisconnectPeerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(DisconnectPeerResponse& a, DisconnectPeerResponse& b) { a.Swap(&b); }
  inline void Swap(DisconnectPeerResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisconnectPeerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisconnectPeerResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DisconnectPeerResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DisconnectPeerResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DisconnectPeerResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DisconnectPeerResponse"; }

 protected:
  explicit DisconnectPeerResponse(::google::protobuf::Arena* arena);
  DisconnectPeerResponse(::google::protobuf::Arena* arena, const DisconnectPeerResponse& from);
  DisconnectPeerResponse(::google::protobuf::Arena* arena, DisconnectPeerResponse&& from) noexcept
      : DisconnectPeerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.DisconnectPeerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DisconnectPeerResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisconnectPeerResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DisconnectPeerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DisconnectPeerRequest) */ {
 public:
  inline DisconnectPeerRequest() : DisconnectPeerRequest(nullptr) {}
  ~DisconnectPeerRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisconnectPeerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DisconnectPeerRequest(const DisconnectPeerRequest& from) : DisconnectPeerRequest(nullptr, from) {}
  inline DisconnectPeerRequest(DisconnectPeerRequest&& from) noexcept
      : DisconnectPeerRequest(nullptr, std::move(from)) {}
  inline DisconnectPeerRequest& operator=(const DisconnectPeerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisconnectPeerRequest& operator=(DisconnectPeerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisconnectPeerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DisconnectPeerRequest* internal_default_instance() {
    return reinterpret_cast<const DisconnectPeerRequest*>(
        &_DisconnectPeerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(DisconnectPeerRequest& a, DisconnectPeerRequest& b) { a.Swap(&b); }
  inline void Swap(DisconnectPeerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisconnectPeerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisconnectPeerRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DisconnectPeerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DisconnectPeerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DisconnectPeerRequest& from) { DisconnectPeerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DisconnectPeerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DisconnectPeerRequest"; }

 protected:
  explicit DisconnectPeerRequest(::google::protobuf::Arena* arena);
  DisconnectPeerRequest(::google::protobuf::Arena* arena, const DisconnectPeerRequest& from);
  DisconnectPeerRequest(::google::protobuf::Arena* arena, DisconnectPeerRequest&& from) noexcept
      : DisconnectPeerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPubKeyFieldNumber = 1,
  };
  // string pub_key = 1;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DisconnectPeerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DisconnectPeerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DisconnectPeerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DeletePaymentResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.DeletePaymentResponse) */ {
 public:
  inline DeletePaymentResponse() : DeletePaymentResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeletePaymentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeletePaymentResponse(const DeletePaymentResponse& from) : DeletePaymentResponse(nullptr, from) {}
  inline DeletePaymentResponse(DeletePaymentResponse&& from) noexcept
      : DeletePaymentResponse(nullptr, std::move(from)) {}
  inline DeletePaymentResponse& operator=(const DeletePaymentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletePaymentResponse& operator=(DeletePaymentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeletePaymentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeletePaymentResponse* internal_default_instance() {
    return reinterpret_cast<const DeletePaymentResponse*>(
        &_DeletePaymentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 175;
  friend void swap(DeletePaymentResponse& a, DeletePaymentResponse& b) { a.Swap(&b); }
  inline void Swap(DeletePaymentResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletePaymentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeletePaymentResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeletePaymentResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeletePaymentResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeletePaymentResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DeletePaymentResponse"; }

 protected:
  explicit DeletePaymentResponse(::google::protobuf::Arena* arena);
  DeletePaymentResponse(::google::protobuf::Arena* arena, const DeletePaymentResponse& from);
  DeletePaymentResponse(::google::protobuf::Arena* arena, DeletePaymentResponse&& from) noexcept
      : DeletePaymentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.DeletePaymentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeletePaymentResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeletePaymentResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DeletePaymentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DeletePaymentRequest) */ {
 public:
  inline DeletePaymentRequest() : DeletePaymentRequest(nullptr) {}
  ~DeletePaymentRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeletePaymentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeletePaymentRequest(const DeletePaymentRequest& from) : DeletePaymentRequest(nullptr, from) {}
  inline DeletePaymentRequest(DeletePaymentRequest&& from) noexcept
      : DeletePaymentRequest(nullptr, std::move(from)) {}
  inline DeletePaymentRequest& operator=(const DeletePaymentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeletePaymentRequest& operator=(DeletePaymentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeletePaymentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeletePaymentRequest* internal_default_instance() {
    return reinterpret_cast<const DeletePaymentRequest*>(
        &_DeletePaymentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 173;
  friend void swap(DeletePaymentRequest& a, DeletePaymentRequest& b) { a.Swap(&b); }
  inline void Swap(DeletePaymentRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeletePaymentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeletePaymentRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeletePaymentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeletePaymentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeletePaymentRequest& from) { DeletePaymentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeletePaymentRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DeletePaymentRequest"; }

 protected:
  explicit DeletePaymentRequest(::google::protobuf::Arena* arena);
  DeletePaymentRequest(::google::protobuf::Arena* arena, const DeletePaymentRequest& from);
  DeletePaymentRequest(::google::protobuf::Arena* arena, DeletePaymentRequest&& from) noexcept
      : DeletePaymentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaymentHashFieldNumber = 1,
    kFailedHtlcsOnlyFieldNumber = 2,
  };
  // bytes payment_hash = 1;
  void clear_payment_hash() ;
  const std::string& payment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_payment_hash();
  PROTOBUF_NODISCARD std::string* release_payment_hash();
  void set_allocated_payment_hash(std::string* value);

  private:
  const std::string& _internal_payment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash(
      const std::string& value);
  std::string* _internal_mutable_payment_hash();

  public:
  // bool failed_htlcs_only = 2;
  void clear_failed_htlcs_only() ;
  bool failed_htlcs_only() const;
  void set_failed_htlcs_only(bool value);

  private:
  bool _internal_failed_htlcs_only() const;
  void _internal_set_failed_htlcs_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DeletePaymentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeletePaymentRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeletePaymentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr payment_hash_;
    bool failed_htlcs_only_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DeleteMacaroonIDResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DeleteMacaroonIDResponse) */ {
 public:
  inline DeleteMacaroonIDResponse() : DeleteMacaroonIDResponse(nullptr) {}
  ~DeleteMacaroonIDResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMacaroonIDResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMacaroonIDResponse(const DeleteMacaroonIDResponse& from) : DeleteMacaroonIDResponse(nullptr, from) {}
  inline DeleteMacaroonIDResponse(DeleteMacaroonIDResponse&& from) noexcept
      : DeleteMacaroonIDResponse(nullptr, std::move(from)) {}
  inline DeleteMacaroonIDResponse& operator=(const DeleteMacaroonIDResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMacaroonIDResponse& operator=(DeleteMacaroonIDResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMacaroonIDResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMacaroonIDResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteMacaroonIDResponse*>(
        &_DeleteMacaroonIDResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 211;
  friend void swap(DeleteMacaroonIDResponse& a, DeleteMacaroonIDResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteMacaroonIDResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMacaroonIDResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMacaroonIDResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteMacaroonIDResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteMacaroonIDResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteMacaroonIDResponse& from) { DeleteMacaroonIDResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteMacaroonIDResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DeleteMacaroonIDResponse"; }

 protected:
  explicit DeleteMacaroonIDResponse(::google::protobuf::Arena* arena);
  DeleteMacaroonIDResponse(::google::protobuf::Arena* arena, const DeleteMacaroonIDResponse& from);
  DeleteMacaroonIDResponse(::google::protobuf::Arena* arena, DeleteMacaroonIDResponse&& from) noexcept
      : DeleteMacaroonIDResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeletedFieldNumber = 1,
  };
  // bool deleted = 1;
  void clear_deleted() ;
  bool deleted() const;
  void set_deleted(bool value);

  private:
  bool _internal_deleted() const;
  void _internal_set_deleted(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DeleteMacaroonIDResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteMacaroonIDResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMacaroonIDResponse& from_msg);
    bool deleted_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DeleteMacaroonIDRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DeleteMacaroonIDRequest) */ {
 public:
  inline DeleteMacaroonIDRequest() : DeleteMacaroonIDRequest(nullptr) {}
  ~DeleteMacaroonIDRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteMacaroonIDRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteMacaroonIDRequest(const DeleteMacaroonIDRequest& from) : DeleteMacaroonIDRequest(nullptr, from) {}
  inline DeleteMacaroonIDRequest(DeleteMacaroonIDRequest&& from) noexcept
      : DeleteMacaroonIDRequest(nullptr, std::move(from)) {}
  inline DeleteMacaroonIDRequest& operator=(const DeleteMacaroonIDRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteMacaroonIDRequest& operator=(DeleteMacaroonIDRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteMacaroonIDRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteMacaroonIDRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteMacaroonIDRequest*>(
        &_DeleteMacaroonIDRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 210;
  friend void swap(DeleteMacaroonIDRequest& a, DeleteMacaroonIDRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteMacaroonIDRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteMacaroonIDRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteMacaroonIDRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteMacaroonIDRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteMacaroonIDRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteMacaroonIDRequest& from) { DeleteMacaroonIDRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteMacaroonIDRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DeleteMacaroonIDRequest"; }

 protected:
  explicit DeleteMacaroonIDRequest(::google::protobuf::Arena* arena);
  DeleteMacaroonIDRequest(::google::protobuf::Arena* arena, const DeleteMacaroonIDRequest& from);
  DeleteMacaroonIDRequest(::google::protobuf::Arena* arena, DeleteMacaroonIDRequest&& from) noexcept
      : DeleteMacaroonIDRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRootKeyIdFieldNumber = 1,
  };
  // uint64 root_key_id = 1;
  void clear_root_key_id() ;
  ::uint64_t root_key_id() const;
  void set_root_key_id(::uint64_t value);

  private:
  ::uint64_t _internal_root_key_id() const;
  void _internal_set_root_key_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DeleteMacaroonIDRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteMacaroonIDRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteMacaroonIDRequest& from_msg);
    ::uint64_t root_key_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DeleteAllPaymentsResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.DeleteAllPaymentsResponse) */ {
 public:
  inline DeleteAllPaymentsResponse() : DeleteAllPaymentsResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAllPaymentsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAllPaymentsResponse(const DeleteAllPaymentsResponse& from) : DeleteAllPaymentsResponse(nullptr, from) {}
  inline DeleteAllPaymentsResponse(DeleteAllPaymentsResponse&& from) noexcept
      : DeleteAllPaymentsResponse(nullptr, std::move(from)) {}
  inline DeleteAllPaymentsResponse& operator=(const DeleteAllPaymentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAllPaymentsResponse& operator=(DeleteAllPaymentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAllPaymentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAllPaymentsResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteAllPaymentsResponse*>(
        &_DeleteAllPaymentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 176;
  friend void swap(DeleteAllPaymentsResponse& a, DeleteAllPaymentsResponse& b) { a.Swap(&b); }
  inline void Swap(DeleteAllPaymentsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAllPaymentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAllPaymentsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DeleteAllPaymentsResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DeleteAllPaymentsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DeleteAllPaymentsResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DeleteAllPaymentsResponse"; }

 protected:
  explicit DeleteAllPaymentsResponse(::google::protobuf::Arena* arena);
  DeleteAllPaymentsResponse(::google::protobuf::Arena* arena, const DeleteAllPaymentsResponse& from);
  DeleteAllPaymentsResponse(::google::protobuf::Arena* arena, DeleteAllPaymentsResponse&& from) noexcept
      : DeleteAllPaymentsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.DeleteAllPaymentsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteAllPaymentsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAllPaymentsResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DeleteAllPaymentsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DeleteAllPaymentsRequest) */ {
 public:
  inline DeleteAllPaymentsRequest() : DeleteAllPaymentsRequest(nullptr) {}
  ~DeleteAllPaymentsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteAllPaymentsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DeleteAllPaymentsRequest(const DeleteAllPaymentsRequest& from) : DeleteAllPaymentsRequest(nullptr, from) {}
  inline DeleteAllPaymentsRequest(DeleteAllPaymentsRequest&& from) noexcept
      : DeleteAllPaymentsRequest(nullptr, std::move(from)) {}
  inline DeleteAllPaymentsRequest& operator=(const DeleteAllPaymentsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteAllPaymentsRequest& operator=(DeleteAllPaymentsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteAllPaymentsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteAllPaymentsRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteAllPaymentsRequest*>(
        &_DeleteAllPaymentsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 174;
  friend void swap(DeleteAllPaymentsRequest& a, DeleteAllPaymentsRequest& b) { a.Swap(&b); }
  inline void Swap(DeleteAllPaymentsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteAllPaymentsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteAllPaymentsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DeleteAllPaymentsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteAllPaymentsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DeleteAllPaymentsRequest& from) { DeleteAllPaymentsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteAllPaymentsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DeleteAllPaymentsRequest"; }

 protected:
  explicit DeleteAllPaymentsRequest(::google::protobuf::Arena* arena);
  DeleteAllPaymentsRequest(::google::protobuf::Arena* arena, const DeleteAllPaymentsRequest& from);
  DeleteAllPaymentsRequest(::google::protobuf::Arena* arena, DeleteAllPaymentsRequest&& from) noexcept
      : DeleteAllPaymentsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFailedPaymentsOnlyFieldNumber = 1,
    kFailedHtlcsOnlyFieldNumber = 2,
    kAllPaymentsFieldNumber = 3,
  };
  // bool failed_payments_only = 1;
  void clear_failed_payments_only() ;
  bool failed_payments_only() const;
  void set_failed_payments_only(bool value);

  private:
  bool _internal_failed_payments_only() const;
  void _internal_set_failed_payments_only(bool value);

  public:
  // bool failed_htlcs_only = 2;
  void clear_failed_htlcs_only() ;
  bool failed_htlcs_only() const;
  void set_failed_htlcs_only(bool value);

  private:
  bool _internal_failed_htlcs_only() const;
  void _internal_set_failed_htlcs_only(bool value);

  public:
  // bool all_payments = 3;
  void clear_all_payments() ;
  bool all_payments() const;
  void set_all_payments(bool value);

  private:
  bool _internal_all_payments() const;
  void _internal_set_all_payments(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DeleteAllPaymentsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DeleteAllPaymentsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DeleteAllPaymentsRequest& from_msg);
    bool failed_payments_only_;
    bool failed_htlcs_only_;
    bool all_payments_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DebugLevelResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DebugLevelResponse) */ {
 public:
  inline DebugLevelResponse() : DebugLevelResponse(nullptr) {}
  ~DebugLevelResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DebugLevelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline DebugLevelResponse(const DebugLevelResponse& from) : DebugLevelResponse(nullptr, from) {}
  inline DebugLevelResponse(DebugLevelResponse&& from) noexcept
      : DebugLevelResponse(nullptr, std::move(from)) {}
  inline DebugLevelResponse& operator=(const DebugLevelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DebugLevelResponse& operator=(DebugLevelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DebugLevelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DebugLevelResponse* internal_default_instance() {
    return reinterpret_cast<const DebugLevelResponse*>(
        &_DebugLevelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 180;
  friend void swap(DebugLevelResponse& a, DebugLevelResponse& b) { a.Swap(&b); }
  inline void Swap(DebugLevelResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DebugLevelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DebugLevelResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DebugLevelResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DebugLevelResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DebugLevelResponse& from) { DebugLevelResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DebugLevelResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DebugLevelResponse"; }

 protected:
  explicit DebugLevelResponse(::google::protobuf::Arena* arena);
  DebugLevelResponse(::google::protobuf::Arena* arena, const DebugLevelResponse& from);
  DebugLevelResponse(::google::protobuf::Arena* arena, DebugLevelResponse&& from) noexcept
      : DebugLevelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubSystemsFieldNumber = 1,
  };
  // string sub_systems = 1;
  void clear_sub_systems() ;
  const std::string& sub_systems() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sub_systems(Arg_&& arg, Args_... args);
  std::string* mutable_sub_systems();
  PROTOBUF_NODISCARD std::string* release_sub_systems();
  void set_allocated_sub_systems(std::string* value);

  private:
  const std::string& _internal_sub_systems() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sub_systems(
      const std::string& value);
  std::string* _internal_mutable_sub_systems();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DebugLevelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DebugLevelResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DebugLevelResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr sub_systems_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class DebugLevelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.DebugLevelRequest) */ {
 public:
  inline DebugLevelRequest() : DebugLevelRequest(nullptr) {}
  ~DebugLevelRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DebugLevelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline DebugLevelRequest(const DebugLevelRequest& from) : DebugLevelRequest(nullptr, from) {}
  inline DebugLevelRequest(DebugLevelRequest&& from) noexcept
      : DebugLevelRequest(nullptr, std::move(from)) {}
  inline DebugLevelRequest& operator=(const DebugLevelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DebugLevelRequest& operator=(DebugLevelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DebugLevelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DebugLevelRequest* internal_default_instance() {
    return reinterpret_cast<const DebugLevelRequest*>(
        &_DebugLevelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 179;
  friend void swap(DebugLevelRequest& a, DebugLevelRequest& b) { a.Swap(&b); }
  inline void Swap(DebugLevelRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DebugLevelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DebugLevelRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<DebugLevelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DebugLevelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DebugLevelRequest& from) { DebugLevelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DebugLevelRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.DebugLevelRequest"; }

 protected:
  explicit DebugLevelRequest(::google::protobuf::Arena* arena);
  DebugLevelRequest(::google::protobuf::Arena* arena, const DebugLevelRequest& from);
  DebugLevelRequest(::google::protobuf::Arena* arena, DebugLevelRequest&& from) noexcept
      : DebugLevelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLevelSpecFieldNumber = 2,
    kShowFieldNumber = 1,
  };
  // string level_spec = 2;
  void clear_level_spec() ;
  const std::string& level_spec() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_level_spec(Arg_&& arg, Args_... args);
  std::string* mutable_level_spec();
  PROTOBUF_NODISCARD std::string* release_level_spec();
  void set_allocated_level_spec(std::string* value);

  private:
  const std::string& _internal_level_spec() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_level_spec(
      const std::string& value);
  std::string* _internal_mutable_level_spec();

  public:
  // bool show = 1;
  void clear_show() ;
  bool show() const;
  void set_show(bool value);

  private:
  bool _internal_show() const;
  void _internal_set_show(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.DebugLevelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_DebugLevelRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const DebugLevelRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr level_spec_;
    bool show_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class CustomMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.CustomMessage) */ {
 public:
  inline CustomMessage() : CustomMessage(nullptr) {}
  ~CustomMessage() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CustomMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline CustomMessage(const CustomMessage& from) : CustomMessage(nullptr, from) {}
  inline CustomMessage(CustomMessage&& from) noexcept
      : CustomMessage(nullptr, std::move(from)) {}
  inline CustomMessage& operator=(const CustomMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline CustomMessage& operator=(CustomMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CustomMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const CustomMessage* internal_default_instance() {
    return reinterpret_cast<const CustomMessage*>(
        &_CustomMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(CustomMessage& a, CustomMessage& b) { a.Swap(&b); }
  inline void Swap(CustomMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CustomMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CustomMessage* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CustomMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CustomMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CustomMessage& from) { CustomMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CustomMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.CustomMessage"; }

 protected:
  explicit CustomMessage(::google::protobuf::Arena* arena);
  CustomMessage(::google::protobuf::Arena* arena, const CustomMessage& from);
  CustomMessage(::google::protobuf::Arena* arena, CustomMessage&& from) noexcept
      : CustomMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeerFieldNumber = 1,
    kDataFieldNumber = 3,
    kTypeFieldNumber = 2,
  };
  // bytes peer = 1;
  void clear_peer() ;
  const std::string& peer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer(Arg_&& arg, Args_... args);
  std::string* mutable_peer();
  PROTOBUF_NODISCARD std::string* release_peer();
  void set_allocated_peer(std::string* value);

  private:
  const std::string& _internal_peer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer(
      const std::string& value);
  std::string* _internal_mutable_peer();

  public:
  // bytes data = 3;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // uint32 type = 2;
  void clear_type() ;
  ::uint32_t type() const;
  void set_type(::uint32_t value);

  private:
  ::uint32_t _internal_type() const;
  void _internal_set_type(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.CustomMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CustomMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CustomMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr peer_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::uint32_t type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ConnectPeerResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ConnectPeerResponse) */ {
 public:
  inline ConnectPeerResponse() : ConnectPeerResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectPeerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectPeerResponse(const ConnectPeerResponse& from) : ConnectPeerResponse(nullptr, from) {}
  inline ConnectPeerResponse(ConnectPeerResponse&& from) noexcept
      : ConnectPeerResponse(nullptr, std::move(from)) {}
  inline ConnectPeerResponse& operator=(const ConnectPeerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectPeerResponse& operator=(ConnectPeerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectPeerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectPeerResponse* internal_default_instance() {
    return reinterpret_cast<const ConnectPeerResponse*>(
        &_ConnectPeerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(ConnectPeerResponse& a, ConnectPeerResponse& b) { a.Swap(&b); }
  inline void Swap(ConnectPeerResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectPeerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectPeerResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ConnectPeerResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ConnectPeerResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ConnectPeerResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ConnectPeerResponse"; }

 protected:
  explicit ConnectPeerResponse(::google::protobuf::Arena* arena);
  ConnectPeerResponse(::google::protobuf::Arena* arena, const ConnectPeerResponse& from);
  ConnectPeerResponse(::google::protobuf::Arena* arena, ConnectPeerResponse&& from) noexcept
      : ConnectPeerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ConnectPeerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectPeerResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectPeerResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ConfirmationUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ConfirmationUpdate) */ {
 public:
  inline ConfirmationUpdate() : ConfirmationUpdate(nullptr) {}
  ~ConfirmationUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConfirmationUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConfirmationUpdate(const ConfirmationUpdate& from) : ConfirmationUpdate(nullptr, from) {}
  inline ConfirmationUpdate(ConfirmationUpdate&& from) noexcept
      : ConfirmationUpdate(nullptr, std::move(from)) {}
  inline ConfirmationUpdate& operator=(const ConfirmationUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConfirmationUpdate& operator=(ConfirmationUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConfirmationUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConfirmationUpdate* internal_default_instance() {
    return reinterpret_cast<const ConfirmationUpdate*>(
        &_ConfirmationUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(ConfirmationUpdate& a, ConfirmationUpdate& b) { a.Swap(&b); }
  inline void Swap(ConfirmationUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConfirmationUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConfirmationUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConfirmationUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConfirmationUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConfirmationUpdate& from) { ConfirmationUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConfirmationUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ConfirmationUpdate"; }

 protected:
  explicit ConfirmationUpdate(::google::protobuf::Arena* arena);
  ConfirmationUpdate(::google::protobuf::Arena* arena, const ConfirmationUpdate& from);
  ConfirmationUpdate(::google::protobuf::Arena* arena, ConfirmationUpdate&& from) noexcept
      : ConfirmationUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockShaFieldNumber = 1,
    kBlockHeightFieldNumber = 2,
    kNumConfsLeftFieldNumber = 3,
  };
  // bytes block_sha = 1;
  void clear_block_sha() ;
  const std::string& block_sha() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_sha(Arg_&& arg, Args_... args);
  std::string* mutable_block_sha();
  PROTOBUF_NODISCARD std::string* release_block_sha();
  void set_allocated_block_sha(std::string* value);

  private:
  const std::string& _internal_block_sha() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_sha(
      const std::string& value);
  std::string* _internal_mutable_block_sha();

  public:
  // int32 block_height = 2;
  void clear_block_height() ;
  ::int32_t block_height() const;
  void set_block_height(::int32_t value);

  private:
  ::int32_t _internal_block_height() const;
  void _internal_set_block_height(::int32_t value);

  public:
  // uint32 num_confs_left = 3;
  void clear_num_confs_left() ;
  ::uint32_t num_confs_left() const;
  void set_num_confs_left(::uint32_t value);

  private:
  ::uint32_t _internal_num_confs_left() const;
  void _internal_set_num_confs_left(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ConfirmationUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConfirmationUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConfirmationUpdate& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_sha_;
    ::int32_t block_height_;
    ::uint32_t num_confs_left_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ClosedChannelsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ClosedChannelsRequest) */ {
 public:
  inline ClosedChannelsRequest() : ClosedChannelsRequest(nullptr) {}
  ~ClosedChannelsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClosedChannelsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClosedChannelsRequest(const ClosedChannelsRequest& from) : ClosedChannelsRequest(nullptr, from) {}
  inline ClosedChannelsRequest(ClosedChannelsRequest&& from) noexcept
      : ClosedChannelsRequest(nullptr, std::move(from)) {}
  inline ClosedChannelsRequest& operator=(const ClosedChannelsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClosedChannelsRequest& operator=(ClosedChannelsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClosedChannelsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClosedChannelsRequest* internal_default_instance() {
    return reinterpret_cast<const ClosedChannelsRequest*>(
        &_ClosedChannelsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(ClosedChannelsRequest& a, ClosedChannelsRequest& b) { a.Swap(&b); }
  inline void Swap(ClosedChannelsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClosedChannelsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClosedChannelsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ClosedChannelsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClosedChannelsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClosedChannelsRequest& from) { ClosedChannelsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClosedChannelsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ClosedChannelsRequest"; }

 protected:
  explicit ClosedChannelsRequest(::google::protobuf::Arena* arena);
  ClosedChannelsRequest(::google::protobuf::Arena* arena, const ClosedChannelsRequest& from);
  ClosedChannelsRequest(::google::protobuf::Arena* arena, ClosedChannelsRequest&& from) noexcept
      : ClosedChannelsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCooperativeFieldNumber = 1,
    kLocalForceFieldNumber = 2,
    kRemoteForceFieldNumber = 3,
    kBreachFieldNumber = 4,
    kFundingCanceledFieldNumber = 5,
    kAbandonedFieldNumber = 6,
  };
  // bool cooperative = 1;
  void clear_cooperative() ;
  bool cooperative() const;
  void set_cooperative(bool value);

  private:
  bool _internal_cooperative() const;
  void _internal_set_cooperative(bool value);

  public:
  // bool local_force = 2;
  void clear_local_force() ;
  bool local_force() const;
  void set_local_force(bool value);

  private:
  bool _internal_local_force() const;
  void _internal_set_local_force(bool value);

  public:
  // bool remote_force = 3;
  void clear_remote_force() ;
  bool remote_force() const;
  void set_remote_force(bool value);

  private:
  bool _internal_remote_force() const;
  void _internal_set_remote_force(bool value);

  public:
  // bool breach = 4;
  void clear_breach() ;
  bool breach() const;
  void set_breach(bool value);

  private:
  bool _internal_breach() const;
  void _internal_set_breach(bool value);

  public:
  // bool funding_canceled = 5;
  void clear_funding_canceled() ;
  bool funding_canceled() const;
  void set_funding_canceled(bool value);

  private:
  bool _internal_funding_canceled() const;
  void _internal_set_funding_canceled(bool value);

  public:
  // bool abandoned = 6;
  void clear_abandoned() ;
  bool abandoned() const;
  void set_abandoned(bool value);

  private:
  bool _internal_abandoned() const;
  void _internal_set_abandoned(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ClosedChannelsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClosedChannelsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClosedChannelsRequest& from_msg);
    bool cooperative_;
    bool local_force_;
    bool remote_force_;
    bool breach_;
    bool funding_canceled_;
    bool abandoned_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class CloseOutput final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.CloseOutput) */ {
 public:
  inline CloseOutput() : CloseOutput(nullptr) {}
  ~CloseOutput() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloseOutput(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloseOutput(const CloseOutput& from) : CloseOutput(nullptr, from) {}
  inline CloseOutput(CloseOutput&& from) noexcept
      : CloseOutput(nullptr, std::move(from)) {}
  inline CloseOutput& operator=(const CloseOutput& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseOutput& operator=(CloseOutput&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseOutput& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloseOutput* internal_default_instance() {
    return reinterpret_cast<const CloseOutput*>(
        &_CloseOutput_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(CloseOutput& a, CloseOutput& b) { a.Swap(&b); }
  inline void Swap(CloseOutput* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseOutput* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseOutput* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CloseOutput>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloseOutput& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CloseOutput& from) { CloseOutput::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CloseOutput* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.CloseOutput"; }

 protected:
  explicit CloseOutput(::google::protobuf::Arena* arena);
  CloseOutput(::google::protobuf::Arena* arena, const CloseOutput& from);
  CloseOutput(::google::protobuf::Arena* arena, CloseOutput&& from) noexcept
      : CloseOutput(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPkScriptFieldNumber = 2,
    kCustomChannelDataFieldNumber = 4,
    kAmountSatFieldNumber = 1,
    kIsLocalFieldNumber = 3,
  };
  // bytes pk_script = 2;
  void clear_pk_script() ;
  const std::string& pk_script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pk_script(Arg_&& arg, Args_... args);
  std::string* mutable_pk_script();
  PROTOBUF_NODISCARD std::string* release_pk_script();
  void set_allocated_pk_script(std::string* value);

  private:
  const std::string& _internal_pk_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pk_script(
      const std::string& value);
  std::string* _internal_mutable_pk_script();

  public:
  // bytes custom_channel_data = 4;
  void clear_custom_channel_data() ;
  const std::string& custom_channel_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_channel_data(Arg_&& arg, Args_... args);
  std::string* mutable_custom_channel_data();
  PROTOBUF_NODISCARD std::string* release_custom_channel_data();
  void set_allocated_custom_channel_data(std::string* value);

  private:
  const std::string& _internal_custom_channel_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_channel_data(
      const std::string& value);
  std::string* _internal_mutable_custom_channel_data();

  public:
  // int64 amount_sat = 1;
  void clear_amount_sat() ;
  ::int64_t amount_sat() const;
  void set_amount_sat(::int64_t value);

  private:
  ::int64_t _internal_amount_sat() const;
  void _internal_set_amount_sat(::int64_t value);

  public:
  // bool is_local = 3;
  void clear_is_local() ;
  bool is_local() const;
  void set_is_local(bool value);

  private:
  bool _internal_is_local() const;
  void _internal_set_is_local(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.CloseOutput)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CloseOutput_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloseOutput& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pk_script_;
    ::google::protobuf::internal::ArenaStringPtr custom_channel_data_;
    ::int64_t amount_sat_;
    bool is_local_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class CheckMacPermResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.CheckMacPermResponse) */ {
 public:
  inline CheckMacPermResponse() : CheckMacPermResponse(nullptr) {}
  ~CheckMacPermResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckMacPermResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline CheckMacPermResponse(const CheckMacPermResponse& from) : CheckMacPermResponse(nullptr, from) {}
  inline CheckMacPermResponse(CheckMacPermResponse&& from) noexcept
      : CheckMacPermResponse(nullptr, std::move(from)) {}
  inline CheckMacPermResponse& operator=(const CheckMacPermResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckMacPermResponse& operator=(CheckMacPermResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckMacPermResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckMacPermResponse* internal_default_instance() {
    return reinterpret_cast<const CheckMacPermResponse*>(
        &_CheckMacPermResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 221;
  friend void swap(CheckMacPermResponse& a, CheckMacPermResponse& b) { a.Swap(&b); }
  inline void Swap(CheckMacPermResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckMacPermResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckMacPermResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CheckMacPermResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckMacPermResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckMacPermResponse& from) { CheckMacPermResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CheckMacPermResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.CheckMacPermResponse"; }

 protected:
  explicit CheckMacPermResponse(::google::protobuf::Arena* arena);
  CheckMacPermResponse(::google::protobuf::Arena* arena, const CheckMacPermResponse& from);
  CheckMacPermResponse(::google::protobuf::Arena* arena, CheckMacPermResponse&& from) noexcept
      : CheckMacPermResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValidFieldNumber = 1,
  };
  // bool valid = 1;
  void clear_valid() ;
  bool valid() const;
  void set_valid(bool value);

  private:
  bool _internal_valid() const;
  void _internal_set_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.CheckMacPermResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CheckMacPermResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CheckMacPermResponse& from_msg);
    bool valid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelUpdate) */ {
 public:
  inline ChannelUpdate() : ChannelUpdate(nullptr) {}
  ~ChannelUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelUpdate(const ChannelUpdate& from) : ChannelUpdate(nullptr, from) {}
  inline ChannelUpdate(ChannelUpdate&& from) noexcept
      : ChannelUpdate(nullptr, std::move(from)) {}
  inline ChannelUpdate& operator=(const ChannelUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelUpdate& operator=(ChannelUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelUpdate* internal_default_instance() {
    return reinterpret_cast<const ChannelUpdate*>(
        &_ChannelUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 217;
  friend void swap(ChannelUpdate& a, ChannelUpdate& b) { a.Swap(&b); }
  inline void Swap(ChannelUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelUpdate& from) { ChannelUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelUpdate"; }

 protected:
  explicit ChannelUpdate(::google::protobuf::Arena* arena);
  ChannelUpdate(::google::protobuf::Arena* arena, const ChannelUpdate& from);
  ChannelUpdate(::google::protobuf::Arena* arena, ChannelUpdate&& from) noexcept
      : ChannelUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 1,
    kChainHashFieldNumber = 2,
    kExtraOpaqueDataFieldNumber = 12,
    kChanIdFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kChannelFlagsFieldNumber = 5,
    kHtlcMinimumMsatFieldNumber = 7,
    kTimeLockDeltaFieldNumber = 6,
    kBaseFeeFieldNumber = 8,
    kFeeRateFieldNumber = 9,
    kMessageFlagsFieldNumber = 10,
    kHtlcMaximumMsatFieldNumber = 11,
  };
  // bytes signature = 1;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // bytes chain_hash = 2;
  void clear_chain_hash() ;
  const std::string& chain_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chain_hash(Arg_&& arg, Args_... args);
  std::string* mutable_chain_hash();
  PROTOBUF_NODISCARD std::string* release_chain_hash();
  void set_allocated_chain_hash(std::string* value);

  private:
  const std::string& _internal_chain_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chain_hash(
      const std::string& value);
  std::string* _internal_mutable_chain_hash();

  public:
  // bytes extra_opaque_data = 12;
  void clear_extra_opaque_data() ;
  const std::string& extra_opaque_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_extra_opaque_data(Arg_&& arg, Args_... args);
  std::string* mutable_extra_opaque_data();
  PROTOBUF_NODISCARD std::string* release_extra_opaque_data();
  void set_allocated_extra_opaque_data(std::string* value);

  private:
  const std::string& _internal_extra_opaque_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extra_opaque_data(
      const std::string& value);
  std::string* _internal_mutable_extra_opaque_data();

  public:
  // uint64 chan_id = 3 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // uint32 timestamp = 4;
  void clear_timestamp() ;
  ::uint32_t timestamp() const;
  void set_timestamp(::uint32_t value);

  private:
  ::uint32_t _internal_timestamp() const;
  void _internal_set_timestamp(::uint32_t value);

  public:
  // uint32 channel_flags = 5;
  void clear_channel_flags() ;
  ::uint32_t channel_flags() const;
  void set_channel_flags(::uint32_t value);

  private:
  ::uint32_t _internal_channel_flags() const;
  void _internal_set_channel_flags(::uint32_t value);

  public:
  // uint64 htlc_minimum_msat = 7;
  void clear_htlc_minimum_msat() ;
  ::uint64_t htlc_minimum_msat() const;
  void set_htlc_minimum_msat(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_minimum_msat() const;
  void _internal_set_htlc_minimum_msat(::uint64_t value);

  public:
  // uint32 time_lock_delta = 6;
  void clear_time_lock_delta() ;
  ::uint32_t time_lock_delta() const;
  void set_time_lock_delta(::uint32_t value);

  private:
  ::uint32_t _internal_time_lock_delta() const;
  void _internal_set_time_lock_delta(::uint32_t value);

  public:
  // uint32 base_fee = 8;
  void clear_base_fee() ;
  ::uint32_t base_fee() const;
  void set_base_fee(::uint32_t value);

  private:
  ::uint32_t _internal_base_fee() const;
  void _internal_set_base_fee(::uint32_t value);

  public:
  // uint32 fee_rate = 9;
  void clear_fee_rate() ;
  ::uint32_t fee_rate() const;
  void set_fee_rate(::uint32_t value);

  private:
  ::uint32_t _internal_fee_rate() const;
  void _internal_set_fee_rate(::uint32_t value);

  public:
  // uint32 message_flags = 10;
  void clear_message_flags() ;
  ::uint32_t message_flags() const;
  void set_message_flags(::uint32_t value);

  private:
  ::uint32_t _internal_message_flags() const;
  void _internal_set_message_flags(::uint32_t value);

  public:
  // uint64 htlc_maximum_msat = 11;
  void clear_htlc_maximum_msat() ;
  ::uint64_t htlc_maximum_msat() const;
  void set_htlc_maximum_msat(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_maximum_msat() const;
  void _internal_set_htlc_maximum_msat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelUpdate& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::google::protobuf::internal::ArenaStringPtr chain_hash_;
    ::google::protobuf::internal::ArenaStringPtr extra_opaque_data_;
    ::uint64_t chan_id_;
    ::uint32_t timestamp_;
    ::uint32_t channel_flags_;
    ::uint64_t htlc_minimum_msat_;
    ::uint32_t time_lock_delta_;
    ::uint32_t base_fee_;
    ::uint32_t fee_rate_;
    ::uint32_t message_flags_;
    ::uint64_t htlc_maximum_msat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelPoint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelPoint) */ {
 public:
  inline ChannelPoint() : ChannelPoint(nullptr) {}
  ~ChannelPoint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelPoint(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelPoint(const ChannelPoint& from) : ChannelPoint(nullptr, from) {}
  inline ChannelPoint(ChannelPoint&& from) noexcept
      : ChannelPoint(nullptr, std::move(from)) {}
  inline ChannelPoint& operator=(const ChannelPoint& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelPoint& operator=(ChannelPoint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelPoint& default_instance() {
    return *internal_default_instance();
  }
  enum FundingTxidCase {
    kFundingTxidBytes = 1,
    kFundingTxidStr = 2,
    FUNDING_TXID_NOT_SET = 0,
  };
  static inline const ChannelPoint* internal_default_instance() {
    return reinterpret_cast<const ChannelPoint*>(
        &_ChannelPoint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(ChannelPoint& a, ChannelPoint& b) { a.Swap(&b); }
  inline void Swap(ChannelPoint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelPoint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelPoint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelPoint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelPoint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelPoint& from) { ChannelPoint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelPoint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelPoint"; }

 protected:
  explicit ChannelPoint(::google::protobuf::Arena* arena);
  ChannelPoint(::google::protobuf::Arena* arena, const ChannelPoint& from);
  ChannelPoint(::google::protobuf::Arena* arena, ChannelPoint&& from) noexcept
      : ChannelPoint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputIndexFieldNumber = 3,
    kFundingTxidBytesFieldNumber = 1,
    kFundingTxidStrFieldNumber = 2,
  };
  // uint32 output_index = 3;
  void clear_output_index() ;
  ::uint32_t output_index() const;
  void set_output_index(::uint32_t value);

  private:
  ::uint32_t _internal_output_index() const;
  void _internal_set_output_index(::uint32_t value);

  public:
  // bytes funding_txid_bytes = 1;
  bool has_funding_txid_bytes() const;
  void clear_funding_txid_bytes() ;
  const std::string& funding_txid_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funding_txid_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_funding_txid_bytes();
  PROTOBUF_NODISCARD std::string* release_funding_txid_bytes();
  void set_allocated_funding_txid_bytes(std::string* value);

  private:
  const std::string& _internal_funding_txid_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funding_txid_bytes(
      const std::string& value);
  std::string* _internal_mutable_funding_txid_bytes();

  public:
  // string funding_txid_str = 2;
  bool has_funding_txid_str() const;
  void clear_funding_txid_str() ;
  const std::string& funding_txid_str() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funding_txid_str(Arg_&& arg, Args_... args);
  std::string* mutable_funding_txid_str();
  PROTOBUF_NODISCARD std::string* release_funding_txid_str();
  void set_allocated_funding_txid_str(std::string* value);

  private:
  const std::string& _internal_funding_txid_str() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funding_txid_str(
      const std::string& value);
  std::string* _internal_mutable_funding_txid_str();

  public:
  void clear_funding_txid();
  FundingTxidCase funding_txid_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelPoint)
 private:
  class _Internal;
  void set_has_funding_txid_bytes();
  void set_has_funding_txid_str();
  inline bool has_funding_txid() const;
  inline void clear_has_funding_txid();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelPoint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelPoint& from_msg);
    ::uint32_t output_index_;
    union FundingTxidUnion {
      constexpr FundingTxidUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr funding_txid_bytes_;
      ::google::protobuf::internal::ArenaStringPtr funding_txid_str_;
    } funding_txid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelGraphRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelGraphRequest) */ {
 public:
  inline ChannelGraphRequest() : ChannelGraphRequest(nullptr) {}
  ~ChannelGraphRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelGraphRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelGraphRequest(const ChannelGraphRequest& from) : ChannelGraphRequest(nullptr, from) {}
  inline ChannelGraphRequest(ChannelGraphRequest&& from) noexcept
      : ChannelGraphRequest(nullptr, std::move(from)) {}
  inline ChannelGraphRequest& operator=(const ChannelGraphRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelGraphRequest& operator=(ChannelGraphRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelGraphRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelGraphRequest* internal_default_instance() {
    return reinterpret_cast<const ChannelGraphRequest*>(
        &_ChannelGraphRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 132;
  friend void swap(ChannelGraphRequest& a, ChannelGraphRequest& b) { a.Swap(&b); }
  inline void Swap(ChannelGraphRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelGraphRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelGraphRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelGraphRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelGraphRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelGraphRequest& from) { ChannelGraphRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelGraphRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelGraphRequest"; }

 protected:
  explicit ChannelGraphRequest(::google::protobuf::Arena* arena);
  ChannelGraphRequest(::google::protobuf::Arena* arena, const ChannelGraphRequest& from);
  ChannelGraphRequest(::google::protobuf::Arena* arena, ChannelGraphRequest&& from) noexcept
      : ChannelGraphRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIncludeUnannouncedFieldNumber = 1,
  };
  // bool include_unannounced = 1;
  void clear_include_unannounced() ;
  bool include_unannounced() const;
  void set_include_unannounced(bool value);

  private:
  bool _internal_include_unannounced() const;
  void _internal_set_include_unannounced(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelGraphRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelGraphRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelGraphRequest& from_msg);
    bool include_unannounced_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelFeeReport final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelFeeReport) */ {
 public:
  inline ChannelFeeReport() : ChannelFeeReport(nullptr) {}
  ~ChannelFeeReport() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelFeeReport(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelFeeReport(const ChannelFeeReport& from) : ChannelFeeReport(nullptr, from) {}
  inline ChannelFeeReport(ChannelFeeReport&& from) noexcept
      : ChannelFeeReport(nullptr, std::move(from)) {}
  inline ChannelFeeReport& operator=(const ChannelFeeReport& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelFeeReport& operator=(ChannelFeeReport&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelFeeReport& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelFeeReport* internal_default_instance() {
    return reinterpret_cast<const ChannelFeeReport*>(
        &_ChannelFeeReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 186;
  friend void swap(ChannelFeeReport& a, ChannelFeeReport& b) { a.Swap(&b); }
  inline void Swap(ChannelFeeReport* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelFeeReport* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelFeeReport* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelFeeReport>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelFeeReport& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelFeeReport& from) { ChannelFeeReport::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelFeeReport* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelFeeReport"; }

 protected:
  explicit ChannelFeeReport(::google::protobuf::Arena* arena);
  ChannelFeeReport(::google::protobuf::Arena* arena, const ChannelFeeReport& from);
  ChannelFeeReport(::google::protobuf::Arena* arena, ChannelFeeReport&& from) noexcept
      : ChannelFeeReport(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelPointFieldNumber = 1,
    kBaseFeeMsatFieldNumber = 2,
    kFeePerMilFieldNumber = 3,
    kFeeRateFieldNumber = 4,
    kChanIdFieldNumber = 5,
    kInboundBaseFeeMsatFieldNumber = 6,
    kInboundFeePerMilFieldNumber = 7,
  };
  // string channel_point = 1;
  void clear_channel_point() ;
  const std::string& channel_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_point(Arg_&& arg, Args_... args);
  std::string* mutable_channel_point();
  PROTOBUF_NODISCARD std::string* release_channel_point();
  void set_allocated_channel_point(std::string* value);

  private:
  const std::string& _internal_channel_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_point(
      const std::string& value);
  std::string* _internal_mutable_channel_point();

  public:
  // int64 base_fee_msat = 2;
  void clear_base_fee_msat() ;
  ::int64_t base_fee_msat() const;
  void set_base_fee_msat(::int64_t value);

  private:
  ::int64_t _internal_base_fee_msat() const;
  void _internal_set_base_fee_msat(::int64_t value);

  public:
  // int64 fee_per_mil = 3;
  void clear_fee_per_mil() ;
  ::int64_t fee_per_mil() const;
  void set_fee_per_mil(::int64_t value);

  private:
  ::int64_t _internal_fee_per_mil() const;
  void _internal_set_fee_per_mil(::int64_t value);

  public:
  // double fee_rate = 4;
  void clear_fee_rate() ;
  double fee_rate() const;
  void set_fee_rate(double value);

  private:
  double _internal_fee_rate() const;
  void _internal_set_fee_rate(double value);

  public:
  // uint64 chan_id = 5 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // int32 inbound_base_fee_msat = 6;
  void clear_inbound_base_fee_msat() ;
  ::int32_t inbound_base_fee_msat() const;
  void set_inbound_base_fee_msat(::int32_t value);

  private:
  ::int32_t _internal_inbound_base_fee_msat() const;
  void _internal_set_inbound_base_fee_msat(::int32_t value);

  public:
  // int32 inbound_fee_per_mil = 7;
  void clear_inbound_fee_per_mil() ;
  ::int32_t inbound_fee_per_mil() const;
  void set_inbound_fee_per_mil(::int32_t value);

  private:
  ::int32_t _internal_inbound_fee_per_mil() const;
  void _internal_set_inbound_fee_per_mil(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelFeeReport)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelFeeReport_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelFeeReport& from_msg);
    ::google::protobuf::internal::ArenaStringPtr channel_point_;
    ::int64_t base_fee_msat_;
    ::int64_t fee_per_mil_;
    double fee_rate_;
    ::uint64_t chan_id_;
    ::int32_t inbound_base_fee_msat_;
    ::int32_t inbound_fee_per_mil_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelEventSubscription final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelEventSubscription) */ {
 public:
  inline ChannelEventSubscription() : ChannelEventSubscription(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelEventSubscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelEventSubscription(const ChannelEventSubscription& from) : ChannelEventSubscription(nullptr, from) {}
  inline ChannelEventSubscription(ChannelEventSubscription&& from) noexcept
      : ChannelEventSubscription(nullptr, std::move(from)) {}
  inline ChannelEventSubscription& operator=(const ChannelEventSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelEventSubscription& operator=(ChannelEventSubscription&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelEventSubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelEventSubscription* internal_default_instance() {
    return reinterpret_cast<const ChannelEventSubscription*>(
        &_ChannelEventSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 103;
  friend void swap(ChannelEventSubscription& a, ChannelEventSubscription& b) { a.Swap(&b); }
  inline void Swap(ChannelEventSubscription* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelEventSubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelEventSubscription* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ChannelEventSubscription>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ChannelEventSubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ChannelEventSubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelEventSubscription"; }

 protected:
  explicit ChannelEventSubscription(::google::protobuf::Arena* arena);
  ChannelEventSubscription(::google::protobuf::Arena* arena, const ChannelEventSubscription& from);
  ChannelEventSubscription(::google::protobuf::Arena* arena, ChannelEventSubscription&& from) noexcept
      : ChannelEventSubscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelEventSubscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelEventSubscription_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelEventSubscription& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelEdge_CustomRecordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ChannelEdge_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ChannelEdge_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  ChannelEdge_CustomRecordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelEdge_CustomRecordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ChannelEdge_CustomRecordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ChannelEdge_CustomRecordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ChannelEdge_CustomRecordsEntry_DoNotUse*>(
        &_ChannelEdge_CustomRecordsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelConstraints final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelConstraints) */ {
 public:
  inline ChannelConstraints() : ChannelConstraints(nullptr) {}
  ~ChannelConstraints() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelConstraints(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelConstraints(const ChannelConstraints& from) : ChannelConstraints(nullptr, from) {}
  inline ChannelConstraints(ChannelConstraints&& from) noexcept
      : ChannelConstraints(nullptr, std::move(from)) {}
  inline ChannelConstraints& operator=(const ChannelConstraints& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelConstraints& operator=(ChannelConstraints&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelConstraints& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelConstraints* internal_default_instance() {
    return reinterpret_cast<const ChannelConstraints*>(
        &_ChannelConstraints_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(ChannelConstraints& a, ChannelConstraints& b) { a.Swap(&b); }
  inline void Swap(ChannelConstraints* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelConstraints* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelConstraints* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelConstraints>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelConstraints& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelConstraints& from) { ChannelConstraints::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelConstraints* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelConstraints"; }

 protected:
  explicit ChannelConstraints(::google::protobuf::Arena* arena);
  ChannelConstraints(::google::protobuf::Arena* arena, const ChannelConstraints& from);
  ChannelConstraints(::google::protobuf::Arena* arena, ChannelConstraints&& from) noexcept
      : ChannelConstraints(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanReserveSatFieldNumber = 2,
    kDustLimitSatFieldNumber = 3,
    kCsvDelayFieldNumber = 1,
    kMaxAcceptedHtlcsFieldNumber = 6,
    kMaxPendingAmtMsatFieldNumber = 4,
    kMinHtlcMsatFieldNumber = 5,
  };
  // uint64 chan_reserve_sat = 2;
  void clear_chan_reserve_sat() ;
  ::uint64_t chan_reserve_sat() const;
  void set_chan_reserve_sat(::uint64_t value);

  private:
  ::uint64_t _internal_chan_reserve_sat() const;
  void _internal_set_chan_reserve_sat(::uint64_t value);

  public:
  // uint64 dust_limit_sat = 3;
  void clear_dust_limit_sat() ;
  ::uint64_t dust_limit_sat() const;
  void set_dust_limit_sat(::uint64_t value);

  private:
  ::uint64_t _internal_dust_limit_sat() const;
  void _internal_set_dust_limit_sat(::uint64_t value);

  public:
  // uint32 csv_delay = 1;
  void clear_csv_delay() ;
  ::uint32_t csv_delay() const;
  void set_csv_delay(::uint32_t value);

  private:
  ::uint32_t _internal_csv_delay() const;
  void _internal_set_csv_delay(::uint32_t value);

  public:
  // uint32 max_accepted_htlcs = 6;
  void clear_max_accepted_htlcs() ;
  ::uint32_t max_accepted_htlcs() const;
  void set_max_accepted_htlcs(::uint32_t value);

  private:
  ::uint32_t _internal_max_accepted_htlcs() const;
  void _internal_set_max_accepted_htlcs(::uint32_t value);

  public:
  // uint64 max_pending_amt_msat = 4;
  void clear_max_pending_amt_msat() ;
  ::uint64_t max_pending_amt_msat() const;
  void set_max_pending_amt_msat(::uint64_t value);

  private:
  ::uint64_t _internal_max_pending_amt_msat() const;
  void _internal_set_max_pending_amt_msat(::uint64_t value);

  public:
  // uint64 min_htlc_msat = 5;
  void clear_min_htlc_msat() ;
  ::uint64_t min_htlc_msat() const;
  void set_min_htlc_msat(::uint64_t value);

  private:
  ::uint64_t _internal_min_htlc_msat() const;
  void _internal_set_min_htlc_msat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelConstraints)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelConstraints_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelConstraints& from_msg);
    ::uint64_t chan_reserve_sat_;
    ::uint64_t dust_limit_sat_;
    ::uint32_t csv_delay_;
    ::uint32_t max_accepted_htlcs_;
    ::uint64_t max_pending_amt_msat_;
    ::uint64_t min_htlc_msat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelBalanceRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelBalanceRequest) */ {
 public:
  inline ChannelBalanceRequest() : ChannelBalanceRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelBalanceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelBalanceRequest(const ChannelBalanceRequest& from) : ChannelBalanceRequest(nullptr, from) {}
  inline ChannelBalanceRequest(ChannelBalanceRequest&& from) noexcept
      : ChannelBalanceRequest(nullptr, std::move(from)) {}
  inline ChannelBalanceRequest& operator=(const ChannelBalanceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelBalanceRequest& operator=(ChannelBalanceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelBalanceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelBalanceRequest* internal_default_instance() {
    return reinterpret_cast<const ChannelBalanceRequest*>(
        &_ChannelBalanceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 110;
  friend void swap(ChannelBalanceRequest& a, ChannelBalanceRequest& b) { a.Swap(&b); }
  inline void Swap(ChannelBalanceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelBalanceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelBalanceRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ChannelBalanceRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ChannelBalanceRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ChannelBalanceRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelBalanceRequest"; }

 protected:
  explicit ChannelBalanceRequest(::google::protobuf::Arena* arena);
  ChannelBalanceRequest(::google::protobuf::Arena* arena, const ChannelBalanceRequest& from);
  ChannelBalanceRequest(::google::protobuf::Arena* arena, ChannelBalanceRequest&& from) noexcept
      : ChannelBalanceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelBalanceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelBalanceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelBalanceRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelBackupSubscription final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelBackupSubscription) */ {
 public:
  inline ChannelBackupSubscription() : ChannelBackupSubscription(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelBackupSubscription(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelBackupSubscription(const ChannelBackupSubscription& from) : ChannelBackupSubscription(nullptr, from) {}
  inline ChannelBackupSubscription(ChannelBackupSubscription&& from) noexcept
      : ChannelBackupSubscription(nullptr, std::move(from)) {}
  inline ChannelBackupSubscription& operator=(const ChannelBackupSubscription& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelBackupSubscription& operator=(ChannelBackupSubscription&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelBackupSubscription& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelBackupSubscription* internal_default_instance() {
    return reinterpret_cast<const ChannelBackupSubscription*>(
        &_ChannelBackupSubscription_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 203;
  friend void swap(ChannelBackupSubscription& a, ChannelBackupSubscription& b) { a.Swap(&b); }
  inline void Swap(ChannelBackupSubscription* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelBackupSubscription* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelBackupSubscription* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ChannelBackupSubscription>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ChannelBackupSubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ChannelBackupSubscription& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelBackupSubscription"; }

 protected:
  explicit ChannelBackupSubscription(::google::protobuf::Arena* arena);
  ChannelBackupSubscription(::google::protobuf::Arena* arena, const ChannelBackupSubscription& from);
  ChannelBackupSubscription(::google::protobuf::Arena* arena, ChannelBackupSubscription&& from) noexcept
      : ChannelBackupSubscription(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelBackupSubscription)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelBackupSubscription_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelBackupSubscription& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelAcceptResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelAcceptResponse) */ {
 public:
  inline ChannelAcceptResponse() : ChannelAcceptResponse(nullptr) {}
  ~ChannelAcceptResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelAcceptResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelAcceptResponse(const ChannelAcceptResponse& from) : ChannelAcceptResponse(nullptr, from) {}
  inline ChannelAcceptResponse(ChannelAcceptResponse&& from) noexcept
      : ChannelAcceptResponse(nullptr, std::move(from)) {}
  inline ChannelAcceptResponse& operator=(const ChannelAcceptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelAcceptResponse& operator=(ChannelAcceptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelAcceptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelAcceptResponse* internal_default_instance() {
    return reinterpret_cast<const ChannelAcceptResponse*>(
        &_ChannelAcceptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(ChannelAcceptResponse& a, ChannelAcceptResponse& b) { a.Swap(&b); }
  inline void Swap(ChannelAcceptResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelAcceptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelAcceptResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelAcceptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelAcceptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelAcceptResponse& from) { ChannelAcceptResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelAcceptResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelAcceptResponse"; }

 protected:
  explicit ChannelAcceptResponse(::google::protobuf::Arena* arena);
  ChannelAcceptResponse(::google::protobuf::Arena* arena, const ChannelAcceptResponse& from);
  ChannelAcceptResponse(::google::protobuf::Arena* arena, ChannelAcceptResponse&& from) noexcept
      : ChannelAcceptResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingChanIdFieldNumber = 2,
    kErrorFieldNumber = 3,
    kUpfrontShutdownFieldNumber = 4,
    kCsvDelayFieldNumber = 5,
    kAcceptFieldNumber = 1,
    kZeroConfFieldNumber = 11,
    kReserveSatFieldNumber = 6,
    kInFlightMaxMsatFieldNumber = 7,
    kMinHtlcInFieldNumber = 9,
    kMaxHtlcCountFieldNumber = 8,
    kMinAcceptDepthFieldNumber = 10,
  };
  // bytes pending_chan_id = 2;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // string error = 3;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // string upfront_shutdown = 4;
  void clear_upfront_shutdown() ;
  const std::string& upfront_shutdown() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_upfront_shutdown(Arg_&& arg, Args_... args);
  std::string* mutable_upfront_shutdown();
  PROTOBUF_NODISCARD std::string* release_upfront_shutdown();
  void set_allocated_upfront_shutdown(std::string* value);

  private:
  const std::string& _internal_upfront_shutdown() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_upfront_shutdown(
      const std::string& value);
  std::string* _internal_mutable_upfront_shutdown();

  public:
  // uint32 csv_delay = 5;
  void clear_csv_delay() ;
  ::uint32_t csv_delay() const;
  void set_csv_delay(::uint32_t value);

  private:
  ::uint32_t _internal_csv_delay() const;
  void _internal_set_csv_delay(::uint32_t value);

  public:
  // bool accept = 1;
  void clear_accept() ;
  bool accept() const;
  void set_accept(bool value);

  private:
  bool _internal_accept() const;
  void _internal_set_accept(bool value);

  public:
  // bool zero_conf = 11;
  void clear_zero_conf() ;
  bool zero_conf() const;
  void set_zero_conf(bool value);

  private:
  bool _internal_zero_conf() const;
  void _internal_set_zero_conf(bool value);

  public:
  // uint64 reserve_sat = 6;
  void clear_reserve_sat() ;
  ::uint64_t reserve_sat() const;
  void set_reserve_sat(::uint64_t value);

  private:
  ::uint64_t _internal_reserve_sat() const;
  void _internal_set_reserve_sat(::uint64_t value);

  public:
  // uint64 in_flight_max_msat = 7;
  void clear_in_flight_max_msat() ;
  ::uint64_t in_flight_max_msat() const;
  void set_in_flight_max_msat(::uint64_t value);

  private:
  ::uint64_t _internal_in_flight_max_msat() const;
  void _internal_set_in_flight_max_msat(::uint64_t value);

  public:
  // uint64 min_htlc_in = 9;
  void clear_min_htlc_in() ;
  ::uint64_t min_htlc_in() const;
  void set_min_htlc_in(::uint64_t value);

  private:
  ::uint64_t _internal_min_htlc_in() const;
  void _internal_set_min_htlc_in(::uint64_t value);

  public:
  // uint32 max_htlc_count = 8;
  void clear_max_htlc_count() ;
  ::uint32_t max_htlc_count() const;
  void set_max_htlc_count(::uint32_t value);

  private:
  ::uint32_t _internal_max_htlc_count() const;
  void _internal_set_max_htlc_count(::uint32_t value);

  public:
  // uint32 min_accept_depth = 10;
  void clear_min_accept_depth() ;
  ::uint32_t min_accept_depth() const;
  void set_min_accept_depth(::uint32_t value);

  private:
  ::uint32_t _internal_min_accept_depth() const;
  void _internal_set_min_accept_depth(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelAcceptResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      65, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelAcceptResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelAcceptResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::google::protobuf::internal::ArenaStringPtr upfront_shutdown_;
    ::uint32_t csv_delay_;
    bool accept_;
    bool zero_conf_;
    ::uint64_t reserve_sat_;
    ::uint64_t in_flight_max_msat_;
    ::uint64_t min_htlc_in_;
    ::uint32_t max_htlc_count_;
    ::uint32_t min_accept_depth_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelAcceptRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelAcceptRequest) */ {
 public:
  inline ChannelAcceptRequest() : ChannelAcceptRequest(nullptr) {}
  ~ChannelAcceptRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelAcceptRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelAcceptRequest(const ChannelAcceptRequest& from) : ChannelAcceptRequest(nullptr, from) {}
  inline ChannelAcceptRequest(ChannelAcceptRequest&& from) noexcept
      : ChannelAcceptRequest(nullptr, std::move(from)) {}
  inline ChannelAcceptRequest& operator=(const ChannelAcceptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelAcceptRequest& operator=(ChannelAcceptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelAcceptRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelAcceptRequest* internal_default_instance() {
    return reinterpret_cast<const ChannelAcceptRequest*>(
        &_ChannelAcceptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(ChannelAcceptRequest& a, ChannelAcceptRequest& b) { a.Swap(&b); }
  inline void Swap(ChannelAcceptRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelAcceptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelAcceptRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelAcceptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelAcceptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelAcceptRequest& from) { ChannelAcceptRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelAcceptRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelAcceptRequest"; }

 protected:
  explicit ChannelAcceptRequest(::google::protobuf::Arena* arena);
  ChannelAcceptRequest(::google::protobuf::Arena* arena, const ChannelAcceptRequest& from);
  ChannelAcceptRequest(::google::protobuf::Arena* arena, ChannelAcceptRequest&& from) noexcept
      : ChannelAcceptRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodePubkeyFieldNumber = 1,
    kChainHashFieldNumber = 2,
    kPendingChanIdFieldNumber = 3,
    kFundingAmtFieldNumber = 4,
    kPushAmtFieldNumber = 5,
    kDustLimitFieldNumber = 6,
    kMaxValueInFlightFieldNumber = 7,
    kChannelReserveFieldNumber = 8,
    kMinHtlcFieldNumber = 9,
    kFeePerKwFieldNumber = 10,
    kCsvDelayFieldNumber = 11,
    kMaxAcceptedHtlcsFieldNumber = 12,
    kChannelFlagsFieldNumber = 13,
    kCommitmentTypeFieldNumber = 14,
    kWantsZeroConfFieldNumber = 15,
    kWantsScidAliasFieldNumber = 16,
  };
  // bytes node_pubkey = 1;
  void clear_node_pubkey() ;
  const std::string& node_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_node_pubkey();
  PROTOBUF_NODISCARD std::string* release_node_pubkey();
  void set_allocated_node_pubkey(std::string* value);

  private:
  const std::string& _internal_node_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_pubkey(
      const std::string& value);
  std::string* _internal_mutable_node_pubkey();

  public:
  // bytes chain_hash = 2;
  void clear_chain_hash() ;
  const std::string& chain_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chain_hash(Arg_&& arg, Args_... args);
  std::string* mutable_chain_hash();
  PROTOBUF_NODISCARD std::string* release_chain_hash();
  void set_allocated_chain_hash(std::string* value);

  private:
  const std::string& _internal_chain_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chain_hash(
      const std::string& value);
  std::string* _internal_mutable_chain_hash();

  public:
  // bytes pending_chan_id = 3;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // uint64 funding_amt = 4;
  void clear_funding_amt() ;
  ::uint64_t funding_amt() const;
  void set_funding_amt(::uint64_t value);

  private:
  ::uint64_t _internal_funding_amt() const;
  void _internal_set_funding_amt(::uint64_t value);

  public:
  // uint64 push_amt = 5;
  void clear_push_amt() ;
  ::uint64_t push_amt() const;
  void set_push_amt(::uint64_t value);

  private:
  ::uint64_t _internal_push_amt() const;
  void _internal_set_push_amt(::uint64_t value);

  public:
  // uint64 dust_limit = 6;
  void clear_dust_limit() ;
  ::uint64_t dust_limit() const;
  void set_dust_limit(::uint64_t value);

  private:
  ::uint64_t _internal_dust_limit() const;
  void _internal_set_dust_limit(::uint64_t value);

  public:
  // uint64 max_value_in_flight = 7;
  void clear_max_value_in_flight() ;
  ::uint64_t max_value_in_flight() const;
  void set_max_value_in_flight(::uint64_t value);

  private:
  ::uint64_t _internal_max_value_in_flight() const;
  void _internal_set_max_value_in_flight(::uint64_t value);

  public:
  // uint64 channel_reserve = 8;
  void clear_channel_reserve() ;
  ::uint64_t channel_reserve() const;
  void set_channel_reserve(::uint64_t value);

  private:
  ::uint64_t _internal_channel_reserve() const;
  void _internal_set_channel_reserve(::uint64_t value);

  public:
  // uint64 min_htlc = 9;
  void clear_min_htlc() ;
  ::uint64_t min_htlc() const;
  void set_min_htlc(::uint64_t value);

  private:
  ::uint64_t _internal_min_htlc() const;
  void _internal_set_min_htlc(::uint64_t value);

  public:
  // uint64 fee_per_kw = 10;
  void clear_fee_per_kw() ;
  ::uint64_t fee_per_kw() const;
  void set_fee_per_kw(::uint64_t value);

  private:
  ::uint64_t _internal_fee_per_kw() const;
  void _internal_set_fee_per_kw(::uint64_t value);

  public:
  // uint32 csv_delay = 11;
  void clear_csv_delay() ;
  ::uint32_t csv_delay() const;
  void set_csv_delay(::uint32_t value);

  private:
  ::uint32_t _internal_csv_delay() const;
  void _internal_set_csv_delay(::uint32_t value);

  public:
  // uint32 max_accepted_htlcs = 12;
  void clear_max_accepted_htlcs() ;
  ::uint32_t max_accepted_htlcs() const;
  void set_max_accepted_htlcs(::uint32_t value);

  private:
  ::uint32_t _internal_max_accepted_htlcs() const;
  void _internal_set_max_accepted_htlcs(::uint32_t value);

  public:
  // uint32 channel_flags = 13;
  void clear_channel_flags() ;
  ::uint32_t channel_flags() const;
  void set_channel_flags(::uint32_t value);

  private:
  ::uint32_t _internal_channel_flags() const;
  void _internal_set_channel_flags(::uint32_t value);

  public:
  // .lnrpc.CommitmentType commitment_type = 14;
  void clear_commitment_type() ;
  ::lnrpc::CommitmentType commitment_type() const;
  void set_commitment_type(::lnrpc::CommitmentType value);

  private:
  ::lnrpc::CommitmentType _internal_commitment_type() const;
  void _internal_set_commitment_type(::lnrpc::CommitmentType value);

  public:
  // bool wants_zero_conf = 15;
  void clear_wants_zero_conf() ;
  bool wants_zero_conf() const;
  void set_wants_zero_conf(bool value);

  private:
  bool _internal_wants_zero_conf() const;
  void _internal_set_wants_zero_conf(bool value);

  public:
  // bool wants_scid_alias = 16;
  void clear_wants_scid_alias() ;
  bool wants_scid_alias() const;
  void set_wants_scid_alias(bool value);

  private:
  bool _internal_wants_scid_alias() const;
  void _internal_set_wants_scid_alias(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelAcceptRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelAcceptRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelAcceptRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr node_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr chain_hash_;
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    ::uint64_t funding_amt_;
    ::uint64_t push_amt_;
    ::uint64_t dust_limit_;
    ::uint64_t max_value_in_flight_;
    ::uint64_t channel_reserve_;
    ::uint64_t min_htlc_;
    ::uint64_t fee_per_kw_;
    ::uint32_t csv_delay_;
    ::uint32_t max_accepted_htlcs_;
    ::uint32_t channel_flags_;
    int commitment_type_;
    bool wants_zero_conf_;
    bool wants_scid_alias_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChanInfoRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChanInfoRequest) */ {
 public:
  inline ChanInfoRequest() : ChanInfoRequest(nullptr) {}
  ~ChanInfoRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChanInfoRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChanInfoRequest(const ChanInfoRequest& from) : ChanInfoRequest(nullptr, from) {}
  inline ChanInfoRequest(ChanInfoRequest&& from) noexcept
      : ChanInfoRequest(nullptr, std::move(from)) {}
  inline ChanInfoRequest& operator=(const ChanInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChanInfoRequest& operator=(ChanInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChanInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChanInfoRequest* internal_default_instance() {
    return reinterpret_cast<const ChanInfoRequest*>(
        &_ChanInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 138;
  friend void swap(ChanInfoRequest& a, ChanInfoRequest& b) { a.Swap(&b); }
  inline void Swap(ChanInfoRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChanInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChanInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChanInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChanInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChanInfoRequest& from) { ChanInfoRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChanInfoRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChanInfoRequest"; }

 protected:
  explicit ChanInfoRequest(::google::protobuf::Arena* arena);
  ChanInfoRequest(::google::protobuf::Arena* arena, const ChanInfoRequest& from);
  ChanInfoRequest(::google::protobuf::Arena* arena, ChanInfoRequest&& from) noexcept
      : ChanInfoRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanPointFieldNumber = 2,
    kChanIdFieldNumber = 1,
  };
  // string chan_point = 2;
  void clear_chan_point() ;
  const std::string& chan_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chan_point(Arg_&& arg, Args_... args);
  std::string* mutable_chan_point();
  PROTOBUF_NODISCARD std::string* release_chan_point();
  void set_allocated_chan_point(std::string* value);

  private:
  const std::string& _internal_chan_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chan_point(
      const std::string& value);
  std::string* _internal_mutable_chan_point();

  public:
  // uint64 chan_id = 1 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChanInfoRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChanInfoRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChanInfoRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr chan_point_;
    ::uint64_t chan_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChanBackupExportRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.ChanBackupExportRequest) */ {
 public:
  inline ChanBackupExportRequest() : ChanBackupExportRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChanBackupExportRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChanBackupExportRequest(const ChanBackupExportRequest& from) : ChanBackupExportRequest(nullptr, from) {}
  inline ChanBackupExportRequest(ChanBackupExportRequest&& from) noexcept
      : ChanBackupExportRequest(nullptr, std::move(from)) {}
  inline ChanBackupExportRequest& operator=(const ChanBackupExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChanBackupExportRequest& operator=(ChanBackupExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChanBackupExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChanBackupExportRequest* internal_default_instance() {
    return reinterpret_cast<const ChanBackupExportRequest*>(
        &_ChanBackupExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 198;
  friend void swap(ChanBackupExportRequest& a, ChanBackupExportRequest& b) { a.Swap(&b); }
  inline void Swap(ChanBackupExportRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChanBackupExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChanBackupExportRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ChanBackupExportRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ChanBackupExportRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ChanBackupExportRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChanBackupExportRequest"; }

 protected:
  explicit ChanBackupExportRequest(::google::protobuf::Arena* arena);
  ChanBackupExportRequest(::google::protobuf::Arena* arena, const ChanBackupExportRequest& from);
  ChanBackupExportRequest(::google::protobuf::Arena* arena, ChanBackupExportRequest&& from) noexcept
      : ChanBackupExportRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.ChanBackupExportRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChanBackupExportRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChanBackupExportRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Chain final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Chain) */ {
 public:
  inline Chain() : Chain(nullptr) {}
  ~Chain() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Chain(
      ::google::protobuf::internal::ConstantInitialized);

  inline Chain(const Chain& from) : Chain(nullptr, from) {}
  inline Chain(Chain&& from) noexcept
      : Chain(nullptr, std::move(from)) {}
  inline Chain& operator=(const Chain& from) {
    CopyFrom(from);
    return *this;
  }
  inline Chain& operator=(Chain&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Chain& default_instance() {
    return *internal_default_instance();
  }
  static inline const Chain* internal_default_instance() {
    return reinterpret_cast<const Chain*>(
        &_Chain_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(Chain& a, Chain& b) { a.Swap(&b); }
  inline void Swap(Chain* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Chain* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Chain* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Chain>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Chain& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Chain& from) { Chain::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Chain* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Chain"; }

 protected:
  explicit Chain(::google::protobuf::Arena* arena);
  Chain(::google::protobuf::Arena* arena, const Chain& from);
  Chain(::google::protobuf::Arena* arena, Chain&& from) noexcept
      : Chain(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChainFieldNumber = 1,
    kNetworkFieldNumber = 2,
  };
  // string chain = 1 [deprecated = true];
  [[deprecated]]  void clear_chain() ;
  [[deprecated]] const std::string& chain() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_chain(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_chain();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_chain();
  [[deprecated]] void set_allocated_chain(std::string* value);

  private:
  const std::string& _internal_chain() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chain(
      const std::string& value);
  std::string* _internal_mutable_chain();

  public:
  // string network = 2;
  void clear_network() ;
  const std::string& network() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_network(Arg_&& arg, Args_... args);
  std::string* mutable_network();
  PROTOBUF_NODISCARD std::string* release_network();
  void set_allocated_network(std::string* value);

  private:
  const std::string& _internal_network() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_network(
      const std::string& value);
  std::string* _internal_mutable_network();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Chain)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Chain_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Chain& from_msg);
    ::google::protobuf::internal::ArenaStringPtr chain_;
    ::google::protobuf::internal::ArenaStringPtr network_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BlindedPathConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BlindedPathConfig) */ {
 public:
  inline BlindedPathConfig() : BlindedPathConfig(nullptr) {}
  ~BlindedPathConfig() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlindedPathConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlindedPathConfig(const BlindedPathConfig& from) : BlindedPathConfig(nullptr, from) {}
  inline BlindedPathConfig(BlindedPathConfig&& from) noexcept
      : BlindedPathConfig(nullptr, std::move(from)) {}
  inline BlindedPathConfig& operator=(const BlindedPathConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlindedPathConfig& operator=(BlindedPathConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlindedPathConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlindedPathConfig* internal_default_instance() {
    return reinterpret_cast<const BlindedPathConfig*>(
        &_BlindedPathConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 159;
  friend void swap(BlindedPathConfig& a, BlindedPathConfig& b) { a.Swap(&b); }
  inline void Swap(BlindedPathConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlindedPathConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlindedPathConfig* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BlindedPathConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlindedPathConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlindedPathConfig& from) { BlindedPathConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlindedPathConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BlindedPathConfig"; }

 protected:
  explicit BlindedPathConfig(::google::protobuf::Arena* arena);
  BlindedPathConfig(::google::protobuf::Arena* arena, const BlindedPathConfig& from);
  BlindedPathConfig(::google::protobuf::Arena* arena, BlindedPathConfig&& from) noexcept
      : BlindedPathConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeOmissionListFieldNumber = 4,
    kMinNumRealHopsFieldNumber = 1,
    kNumHopsFieldNumber = 2,
    kMaxNumPathsFieldNumber = 3,
  };
  // repeated bytes node_omission_list = 4;
  int node_omission_list_size() const;
  private:
  int _internal_node_omission_list_size() const;

  public:
  void clear_node_omission_list() ;
  const std::string& node_omission_list(int index) const;
  std::string* mutable_node_omission_list(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_omission_list(int index, Arg_&& value, Args_... args);
  std::string* add_node_omission_list();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_node_omission_list(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& node_omission_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_node_omission_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_node_omission_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_node_omission_list();

  public:
  // optional uint32 min_num_real_hops = 1;
  bool has_min_num_real_hops() const;
  void clear_min_num_real_hops() ;
  ::uint32_t min_num_real_hops() const;
  void set_min_num_real_hops(::uint32_t value);

  private:
  ::uint32_t _internal_min_num_real_hops() const;
  void _internal_set_min_num_real_hops(::uint32_t value);

  public:
  // optional uint32 num_hops = 2;
  bool has_num_hops() const;
  void clear_num_hops() ;
  ::uint32_t num_hops() const;
  void set_num_hops(::uint32_t value);

  private:
  ::uint32_t _internal_num_hops() const;
  void _internal_set_num_hops(::uint32_t value);

  public:
  // optional uint32 max_num_paths = 3;
  bool has_max_num_paths() const;
  void clear_max_num_paths() ;
  ::uint32_t max_num_paths() const;
  void set_max_num_paths(::uint32_t value);

  private:
  ::uint32_t _internal_max_num_paths() const;
  void _internal_set_max_num_paths(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BlindedPathConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlindedPathConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlindedPathConfig& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> node_omission_list_;
    ::uint32_t min_num_real_hops_;
    ::uint32_t num_hops_;
    ::uint32_t max_num_paths_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BlindedHop final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BlindedHop) */ {
 public:
  inline BlindedHop() : BlindedHop(nullptr) {}
  ~BlindedHop() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlindedHop(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlindedHop(const BlindedHop& from) : BlindedHop(nullptr, from) {}
  inline BlindedHop(BlindedHop&& from) noexcept
      : BlindedHop(nullptr, std::move(from)) {}
  inline BlindedHop& operator=(const BlindedHop& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlindedHop& operator=(BlindedHop&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlindedHop& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlindedHop* internal_default_instance() {
    return reinterpret_cast<const BlindedHop*>(
        &_BlindedHop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 154;
  friend void swap(BlindedHop& a, BlindedHop& b) { a.Swap(&b); }
  inline void Swap(BlindedHop* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlindedHop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlindedHop* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BlindedHop>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlindedHop& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlindedHop& from) { BlindedHop::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlindedHop* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BlindedHop"; }

 protected:
  explicit BlindedHop(::google::protobuf::Arena* arena);
  BlindedHop(::google::protobuf::Arena* arena, const BlindedHop& from);
  BlindedHop(::google::protobuf::Arena* arena, BlindedHop&& from) noexcept
      : BlindedHop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlindedNodeFieldNumber = 1,
    kEncryptedDataFieldNumber = 2,
  };
  // bytes blinded_node = 1;
  void clear_blinded_node() ;
  const std::string& blinded_node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_blinded_node(Arg_&& arg, Args_... args);
  std::string* mutable_blinded_node();
  PROTOBUF_NODISCARD std::string* release_blinded_node();
  void set_allocated_blinded_node(std::string* value);

  private:
  const std::string& _internal_blinded_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_blinded_node(
      const std::string& value);
  std::string* _internal_mutable_blinded_node();

  public:
  // bytes encrypted_data = 2;
  void clear_encrypted_data() ;
  const std::string& encrypted_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encrypted_data(Arg_&& arg, Args_... args);
  std::string* mutable_encrypted_data();
  PROTOBUF_NODISCARD std::string* release_encrypted_data();
  void set_allocated_encrypted_data(std::string* value);

  private:
  const std::string& _internal_encrypted_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encrypted_data(
      const std::string& value);
  std::string* _internal_mutable_encrypted_data();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BlindedHop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlindedHop_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlindedHop& from_msg);
    ::google::protobuf::internal::ArenaStringPtr blinded_node_;
    ::google::protobuf::internal::ArenaStringPtr encrypted_data_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BatchOpenChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BatchOpenChannel) */ {
 public:
  inline BatchOpenChannel() : BatchOpenChannel(nullptr) {}
  ~BatchOpenChannel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchOpenChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchOpenChannel(const BatchOpenChannel& from) : BatchOpenChannel(nullptr, from) {}
  inline BatchOpenChannel(BatchOpenChannel&& from) noexcept
      : BatchOpenChannel(nullptr, std::move(from)) {}
  inline BatchOpenChannel& operator=(const BatchOpenChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchOpenChannel& operator=(BatchOpenChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchOpenChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchOpenChannel* internal_default_instance() {
    return reinterpret_cast<const BatchOpenChannel*>(
        &_BatchOpenChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 80;
  friend void swap(BatchOpenChannel& a, BatchOpenChannel& b) { a.Swap(&b); }
  inline void Swap(BatchOpenChannel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchOpenChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchOpenChannel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BatchOpenChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchOpenChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchOpenChannel& from) { BatchOpenChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchOpenChannel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BatchOpenChannel"; }

 protected:
  explicit BatchOpenChannel(::google::protobuf::Arena* arena);
  BatchOpenChannel(::google::protobuf::Arena* arena, const BatchOpenChannel& from);
  BatchOpenChannel(::google::protobuf::Arena* arena, BatchOpenChannel&& from) noexcept
      : BatchOpenChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodePubkeyFieldNumber = 1,
    kCloseAddressFieldNumber = 7,
    kPendingChanIdFieldNumber = 8,
    kMemoFieldNumber = 20,
    kLocalFundingAmountFieldNumber = 2,
    kPushSatFieldNumber = 3,
    kMinHtlcMsatFieldNumber = 5,
    kRemoteCsvDelayFieldNumber = 6,
    kCommitmentTypeFieldNumber = 9,
    kRemoteMaxValueInFlightMsatFieldNumber = 10,
    kRemoteMaxHtlcsFieldNumber = 11,
    kMaxLocalCsvFieldNumber = 12,
    kPrivateFieldNumber = 4,
    kZeroConfFieldNumber = 13,
    kScidAliasFieldNumber = 14,
    kUseBaseFeeFieldNumber = 17,
    kUseFeeRateFieldNumber = 18,
    kBaseFeeFieldNumber = 15,
    kFeeRateFieldNumber = 16,
    kRemoteChanReserveSatFieldNumber = 19,
  };
  // bytes node_pubkey = 1;
  void clear_node_pubkey() ;
  const std::string& node_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_node_pubkey();
  PROTOBUF_NODISCARD std::string* release_node_pubkey();
  void set_allocated_node_pubkey(std::string* value);

  private:
  const std::string& _internal_node_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_pubkey(
      const std::string& value);
  std::string* _internal_mutable_node_pubkey();

  public:
  // string close_address = 7;
  void clear_close_address() ;
  const std::string& close_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_close_address(Arg_&& arg, Args_... args);
  std::string* mutable_close_address();
  PROTOBUF_NODISCARD std::string* release_close_address();
  void set_allocated_close_address(std::string* value);

  private:
  const std::string& _internal_close_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_close_address(
      const std::string& value);
  std::string* _internal_mutable_close_address();

  public:
  // bytes pending_chan_id = 8;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // string memo = 20;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // int64 local_funding_amount = 2;
  void clear_local_funding_amount() ;
  ::int64_t local_funding_amount() const;
  void set_local_funding_amount(::int64_t value);

  private:
  ::int64_t _internal_local_funding_amount() const;
  void _internal_set_local_funding_amount(::int64_t value);

  public:
  // int64 push_sat = 3;
  void clear_push_sat() ;
  ::int64_t push_sat() const;
  void set_push_sat(::int64_t value);

  private:
  ::int64_t _internal_push_sat() const;
  void _internal_set_push_sat(::int64_t value);

  public:
  // int64 min_htlc_msat = 5;
  void clear_min_htlc_msat() ;
  ::int64_t min_htlc_msat() const;
  void set_min_htlc_msat(::int64_t value);

  private:
  ::int64_t _internal_min_htlc_msat() const;
  void _internal_set_min_htlc_msat(::int64_t value);

  public:
  // uint32 remote_csv_delay = 6;
  void clear_remote_csv_delay() ;
  ::uint32_t remote_csv_delay() const;
  void set_remote_csv_delay(::uint32_t value);

  private:
  ::uint32_t _internal_remote_csv_delay() const;
  void _internal_set_remote_csv_delay(::uint32_t value);

  public:
  // .lnrpc.CommitmentType commitment_type = 9;
  void clear_commitment_type() ;
  ::lnrpc::CommitmentType commitment_type() const;
  void set_commitment_type(::lnrpc::CommitmentType value);

  private:
  ::lnrpc::CommitmentType _internal_commitment_type() const;
  void _internal_set_commitment_type(::lnrpc::CommitmentType value);

  public:
  // uint64 remote_max_value_in_flight_msat = 10;
  void clear_remote_max_value_in_flight_msat() ;
  ::uint64_t remote_max_value_in_flight_msat() const;
  void set_remote_max_value_in_flight_msat(::uint64_t value);

  private:
  ::uint64_t _internal_remote_max_value_in_flight_msat() const;
  void _internal_set_remote_max_value_in_flight_msat(::uint64_t value);

  public:
  // uint32 remote_max_htlcs = 11;
  void clear_remote_max_htlcs() ;
  ::uint32_t remote_max_htlcs() const;
  void set_remote_max_htlcs(::uint32_t value);

  private:
  ::uint32_t _internal_remote_max_htlcs() const;
  void _internal_set_remote_max_htlcs(::uint32_t value);

  public:
  // uint32 max_local_csv = 12;
  void clear_max_local_csv() ;
  ::uint32_t max_local_csv() const;
  void set_max_local_csv(::uint32_t value);

  private:
  ::uint32_t _internal_max_local_csv() const;
  void _internal_set_max_local_csv(::uint32_t value);

  public:
  // bool private = 4;
  void clear_private_() ;
  bool private_() const;
  void set_private_(bool value);

  private:
  bool _internal_private_() const;
  void _internal_set_private_(bool value);

  public:
  // bool zero_conf = 13;
  void clear_zero_conf() ;
  bool zero_conf() const;
  void set_zero_conf(bool value);

  private:
  bool _internal_zero_conf() const;
  void _internal_set_zero_conf(bool value);

  public:
  // bool scid_alias = 14;
  void clear_scid_alias() ;
  bool scid_alias() const;
  void set_scid_alias(bool value);

  private:
  bool _internal_scid_alias() const;
  void _internal_set_scid_alias(bool value);

  public:
  // bool use_base_fee = 17;
  void clear_use_base_fee() ;
  bool use_base_fee() const;
  void set_use_base_fee(bool value);

  private:
  bool _internal_use_base_fee() const;
  void _internal_set_use_base_fee(bool value);

  public:
  // bool use_fee_rate = 18;
  void clear_use_fee_rate() ;
  bool use_fee_rate() const;
  void set_use_fee_rate(bool value);

  private:
  bool _internal_use_fee_rate() const;
  void _internal_set_use_fee_rate(bool value);

  public:
  // uint64 base_fee = 15;
  void clear_base_fee() ;
  ::uint64_t base_fee() const;
  void set_base_fee(::uint64_t value);

  private:
  ::uint64_t _internal_base_fee() const;
  void _internal_set_base_fee(::uint64_t value);

  public:
  // uint64 fee_rate = 16;
  void clear_fee_rate() ;
  ::uint64_t fee_rate() const;
  void set_fee_rate(::uint64_t value);

  private:
  ::uint64_t _internal_fee_rate() const;
  void _internal_set_fee_rate(::uint64_t value);

  public:
  // uint64 remote_chan_reserve_sat = 19;
  void clear_remote_chan_reserve_sat() ;
  ::uint64_t remote_chan_reserve_sat() const;
  void set_remote_chan_reserve_sat(::uint64_t value);

  private:
  ::uint64_t _internal_remote_chan_reserve_sat() const;
  void _internal_set_remote_chan_reserve_sat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BatchOpenChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 0,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchOpenChannel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchOpenChannel& from_msg);
    ::google::protobuf::internal::ArenaStringPtr node_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr close_address_;
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::int64_t local_funding_amount_;
    ::int64_t push_sat_;
    ::int64_t min_htlc_msat_;
    ::uint32_t remote_csv_delay_;
    int commitment_type_;
    ::uint64_t remote_max_value_in_flight_msat_;
    ::uint32_t remote_max_htlcs_;
    ::uint32_t max_local_csv_;
    bool private__;
    bool zero_conf_;
    bool scid_alias_;
    bool use_base_fee_;
    bool use_fee_rate_;
    ::uint64_t base_fee_;
    ::uint64_t fee_rate_;
    ::uint64_t remote_chan_reserve_sat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BakeMacaroonResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BakeMacaroonResponse) */ {
 public:
  inline BakeMacaroonResponse() : BakeMacaroonResponse(nullptr) {}
  ~BakeMacaroonResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BakeMacaroonResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BakeMacaroonResponse(const BakeMacaroonResponse& from) : BakeMacaroonResponse(nullptr, from) {}
  inline BakeMacaroonResponse(BakeMacaroonResponse&& from) noexcept
      : BakeMacaroonResponse(nullptr, std::move(from)) {}
  inline BakeMacaroonResponse& operator=(const BakeMacaroonResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BakeMacaroonResponse& operator=(BakeMacaroonResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BakeMacaroonResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BakeMacaroonResponse* internal_default_instance() {
    return reinterpret_cast<const BakeMacaroonResponse*>(
        &_BakeMacaroonResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 207;
  friend void swap(BakeMacaroonResponse& a, BakeMacaroonResponse& b) { a.Swap(&b); }
  inline void Swap(BakeMacaroonResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BakeMacaroonResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BakeMacaroonResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BakeMacaroonResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BakeMacaroonResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BakeMacaroonResponse& from) { BakeMacaroonResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BakeMacaroonResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BakeMacaroonResponse"; }

 protected:
  explicit BakeMacaroonResponse(::google::protobuf::Arena* arena);
  BakeMacaroonResponse(::google::protobuf::Arena* arena, const BakeMacaroonResponse& from);
  BakeMacaroonResponse(::google::protobuf::Arena* arena, BakeMacaroonResponse&& from) noexcept
      : BakeMacaroonResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMacaroonFieldNumber = 1,
  };
  // string macaroon = 1;
  void clear_macaroon() ;
  const std::string& macaroon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_macaroon(Arg_&& arg, Args_... args);
  std::string* mutable_macaroon();
  PROTOBUF_NODISCARD std::string* release_macaroon();
  void set_allocated_macaroon(std::string* value);

  private:
  const std::string& _internal_macaroon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_macaroon(
      const std::string& value);
  std::string* _internal_mutable_macaroon();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BakeMacaroonResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BakeMacaroonResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BakeMacaroonResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr macaroon_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Amount final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Amount) */ {
 public:
  inline Amount() : Amount(nullptr) {}
  ~Amount() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Amount(
      ::google::protobuf::internal::ConstantInitialized);

  inline Amount(const Amount& from) : Amount(nullptr, from) {}
  inline Amount(Amount&& from) noexcept
      : Amount(nullptr, std::move(from)) {}
  inline Amount& operator=(const Amount& from) {
    CopyFrom(from);
    return *this;
  }
  inline Amount& operator=(Amount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Amount& default_instance() {
    return *internal_default_instance();
  }
  static inline const Amount* internal_default_instance() {
    return reinterpret_cast<const Amount*>(
        &_Amount_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 109;
  friend void swap(Amount& a, Amount& b) { a.Swap(&b); }
  inline void Swap(Amount* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Amount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Amount* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Amount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Amount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Amount& from) { Amount::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Amount* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Amount"; }

 protected:
  explicit Amount(::google::protobuf::Arena* arena);
  Amount(::google::protobuf::Arena* arena, const Amount& from);
  Amount(::google::protobuf::Arena* arena, Amount&& from) noexcept
      : Amount(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSatFieldNumber = 1,
    kMsatFieldNumber = 2,
  };
  // uint64 sat = 1;
  void clear_sat() ;
  ::uint64_t sat() const;
  void set_sat(::uint64_t value);

  private:
  ::uint64_t _internal_sat() const;
  void _internal_set_sat(::uint64_t value);

  public:
  // uint64 msat = 2;
  void clear_msat() ;
  ::uint64_t msat() const;
  void set_msat(::uint64_t value);

  private:
  ::uint64_t _internal_msat() const;
  void _internal_set_msat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Amount)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Amount_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Amount& from_msg);
    ::uint64_t sat_;
    ::uint64_t msat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AliasMap final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.AliasMap) */ {
 public:
  inline AliasMap() : AliasMap(nullptr) {}
  ~AliasMap() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AliasMap(
      ::google::protobuf::internal::ConstantInitialized);

  inline AliasMap(const AliasMap& from) : AliasMap(nullptr, from) {}
  inline AliasMap(AliasMap&& from) noexcept
      : AliasMap(nullptr, std::move(from)) {}
  inline AliasMap& operator=(const AliasMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline AliasMap& operator=(AliasMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AliasMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const AliasMap* internal_default_instance() {
    return reinterpret_cast<const AliasMap*>(
        &_AliasMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(AliasMap& a, AliasMap& b) { a.Swap(&b); }
  inline void Swap(AliasMap* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AliasMap* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AliasMap* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AliasMap>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AliasMap& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AliasMap& from) { AliasMap::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AliasMap* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AliasMap"; }

 protected:
  explicit AliasMap(::google::protobuf::Arena* arena);
  AliasMap(::google::protobuf::Arena* arena, const AliasMap& from);
  AliasMap(::google::protobuf::Arena* arena, AliasMap&& from) noexcept
      : AliasMap(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAliasesFieldNumber = 2,
    kBaseScidFieldNumber = 1,
  };
  // repeated uint64 aliases = 2;
  int aliases_size() const;
  private:
  int _internal_aliases_size() const;

  public:
  void clear_aliases() ;
  ::uint64_t aliases(int index) const;
  void set_aliases(int index, ::uint64_t value);
  void add_aliases(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& aliases() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_aliases();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_aliases() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_aliases();

  public:
  // uint64 base_scid = 1;
  void clear_base_scid() ;
  ::uint64_t base_scid() const;
  void set_base_scid(::uint64_t value);

  private:
  ::uint64_t _internal_base_scid() const;
  void _internal_set_base_scid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.AliasMap)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AliasMap_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AliasMap& from_msg);
    ::google::protobuf::RepeatedField<::uint64_t> aliases_;
    mutable ::google::protobuf::internal::CachedSize _aliases_cached_byte_size_;
    ::uint64_t base_scid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AddInvoiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.AddInvoiceResponse) */ {
 public:
  inline AddInvoiceResponse() : AddInvoiceResponse(nullptr) {}
  ~AddInvoiceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddInvoiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddInvoiceResponse(const AddInvoiceResponse& from) : AddInvoiceResponse(nullptr, from) {}
  inline AddInvoiceResponse(AddInvoiceResponse&& from) noexcept
      : AddInvoiceResponse(nullptr, std::move(from)) {}
  inline AddInvoiceResponse& operator=(const AddInvoiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddInvoiceResponse& operator=(AddInvoiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddInvoiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddInvoiceResponse* internal_default_instance() {
    return reinterpret_cast<const AddInvoiceResponse*>(
        &_AddInvoiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 163;
  friend void swap(AddInvoiceResponse& a, AddInvoiceResponse& b) { a.Swap(&b); }
  inline void Swap(AddInvoiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddInvoiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddInvoiceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AddInvoiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddInvoiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddInvoiceResponse& from) { AddInvoiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddInvoiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AddInvoiceResponse"; }

 protected:
  explicit AddInvoiceResponse(::google::protobuf::Arena* arena);
  AddInvoiceResponse(::google::protobuf::Arena* arena, const AddInvoiceResponse& from);
  AddInvoiceResponse(::google::protobuf::Arena* arena, AddInvoiceResponse&& from) noexcept
      : AddInvoiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRHashFieldNumber = 1,
    kPaymentRequestFieldNumber = 2,
    kPaymentAddrFieldNumber = 17,
    kAddIndexFieldNumber = 16,
  };
  // bytes r_hash = 1;
  void clear_r_hash() ;
  const std::string& r_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_hash(Arg_&& arg, Args_... args);
  std::string* mutable_r_hash();
  PROTOBUF_NODISCARD std::string* release_r_hash();
  void set_allocated_r_hash(std::string* value);

  private:
  const std::string& _internal_r_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_r_hash(
      const std::string& value);
  std::string* _internal_mutable_r_hash();

  public:
  // string payment_request = 2;
  void clear_payment_request() ;
  const std::string& payment_request() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_request(Arg_&& arg, Args_... args);
  std::string* mutable_payment_request();
  PROTOBUF_NODISCARD std::string* release_payment_request();
  void set_allocated_payment_request(std::string* value);

  private:
  const std::string& _internal_payment_request() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_request(
      const std::string& value);
  std::string* _internal_mutable_payment_request();

  public:
  // bytes payment_addr = 17;
  void clear_payment_addr() ;
  const std::string& payment_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_addr(Arg_&& arg, Args_... args);
  std::string* mutable_payment_addr();
  PROTOBUF_NODISCARD std::string* release_payment_addr();
  void set_allocated_payment_addr(std::string* value);

  private:
  const std::string& _internal_payment_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_addr(
      const std::string& value);
  std::string* _internal_mutable_payment_addr();

  public:
  // uint64 add_index = 16;
  void clear_add_index() ;
  ::uint64_t add_index() const;
  void set_add_index(::uint64_t value);

  private:
  ::uint64_t _internal_add_index() const;
  void _internal_set_add_index(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.AddInvoiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddInvoiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddInvoiceResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr r_hash_;
    ::google::protobuf::internal::ArenaStringPtr payment_request_;
    ::google::protobuf::internal::ArenaStringPtr payment_addr_;
    ::uint64_t add_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AbandonChannelResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:lnrpc.AbandonChannelResponse) */ {
 public:
  inline AbandonChannelResponse() : AbandonChannelResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AbandonChannelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AbandonChannelResponse(const AbandonChannelResponse& from) : AbandonChannelResponse(nullptr, from) {}
  inline AbandonChannelResponse(AbandonChannelResponse&& from) noexcept
      : AbandonChannelResponse(nullptr, std::move(from)) {}
  inline AbandonChannelResponse& operator=(const AbandonChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbandonChannelResponse& operator=(AbandonChannelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AbandonChannelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AbandonChannelResponse* internal_default_instance() {
    return reinterpret_cast<const AbandonChannelResponse*>(
        &_AbandonChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 178;
  friend void swap(AbandonChannelResponse& a, AbandonChannelResponse& b) { a.Swap(&b); }
  inline void Swap(AbandonChannelResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbandonChannelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AbandonChannelResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<AbandonChannelResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const AbandonChannelResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const AbandonChannelResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AbandonChannelResponse"; }

 protected:
  explicit AbandonChannelResponse(::google::protobuf::Arena* arena);
  AbandonChannelResponse(::google::protobuf::Arena* arena, const AbandonChannelResponse& from);
  AbandonChannelResponse(::google::protobuf::Arena* arena, AbandonChannelResponse&& from) noexcept
      : AbandonChannelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:lnrpc.AbandonChannelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AbandonChannelResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AbandonChannelResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AMPRecord final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.AMPRecord) */ {
 public:
  inline AMPRecord() : AMPRecord(nullptr) {}
  ~AMPRecord() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AMPRecord(
      ::google::protobuf::internal::ConstantInitialized);

  inline AMPRecord(const AMPRecord& from) : AMPRecord(nullptr, from) {}
  inline AMPRecord(AMPRecord&& from) noexcept
      : AMPRecord(nullptr, std::move(from)) {}
  inline AMPRecord& operator=(const AMPRecord& from) {
    CopyFrom(from);
    return *this;
  }
  inline AMPRecord& operator=(AMPRecord&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AMPRecord& default_instance() {
    return *internal_default_instance();
  }
  static inline const AMPRecord* internal_default_instance() {
    return reinterpret_cast<const AMPRecord*>(
        &_AMPRecord_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 120;
  friend void swap(AMPRecord& a, AMPRecord& b) { a.Swap(&b); }
  inline void Swap(AMPRecord* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AMPRecord* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AMPRecord* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AMPRecord>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AMPRecord& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AMPRecord& from) { AMPRecord::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AMPRecord* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AMPRecord"; }

 protected:
  explicit AMPRecord(::google::protobuf::Arena* arena);
  AMPRecord(::google::protobuf::Arena* arena, const AMPRecord& from);
  AMPRecord(::google::protobuf::Arena* arena, AMPRecord&& from) noexcept
      : AMPRecord(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRootShareFieldNumber = 1,
    kSetIdFieldNumber = 2,
    kChildIndexFieldNumber = 3,
  };
  // bytes root_share = 1;
  void clear_root_share() ;
  const std::string& root_share() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_root_share(Arg_&& arg, Args_... args);
  std::string* mutable_root_share();
  PROTOBUF_NODISCARD std::string* release_root_share();
  void set_allocated_root_share(std::string* value);

  private:
  const std::string& _internal_root_share() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_root_share(
      const std::string& value);
  std::string* _internal_mutable_root_share();

  public:
  // bytes set_id = 2;
  void clear_set_id() ;
  const std::string& set_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_set_id(Arg_&& arg, Args_... args);
  std::string* mutable_set_id();
  PROTOBUF_NODISCARD std::string* release_set_id();
  void set_allocated_set_id(std::string* value);

  private:
  const std::string& _internal_set_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_set_id(
      const std::string& value);
  std::string* _internal_mutable_set_id();

  public:
  // uint32 child_index = 3;
  void clear_child_index() ;
  ::uint32_t child_index() const;
  void set_child_index(::uint32_t value);

  private:
  ::uint32_t _internal_child_index() const;
  void _internal_set_child_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.AMPRecord)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AMPRecord_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AMPRecord& from_msg);
    ::google::protobuf::internal::ArenaStringPtr root_share_;
    ::google::protobuf::internal::ArenaStringPtr set_id_;
    ::uint32_t child_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AMPInvoiceState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.AMPInvoiceState) */ {
 public:
  inline AMPInvoiceState() : AMPInvoiceState(nullptr) {}
  ~AMPInvoiceState() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AMPInvoiceState(
      ::google::protobuf::internal::ConstantInitialized);

  inline AMPInvoiceState(const AMPInvoiceState& from) : AMPInvoiceState(nullptr, from) {}
  inline AMPInvoiceState(AMPInvoiceState&& from) noexcept
      : AMPInvoiceState(nullptr, std::move(from)) {}
  inline AMPInvoiceState& operator=(const AMPInvoiceState& from) {
    CopyFrom(from);
    return *this;
  }
  inline AMPInvoiceState& operator=(AMPInvoiceState&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AMPInvoiceState& default_instance() {
    return *internal_default_instance();
  }
  static inline const AMPInvoiceState* internal_default_instance() {
    return reinterpret_cast<const AMPInvoiceState*>(
        &_AMPInvoiceState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 155;
  friend void swap(AMPInvoiceState& a, AMPInvoiceState& b) { a.Swap(&b); }
  inline void Swap(AMPInvoiceState* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AMPInvoiceState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AMPInvoiceState* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AMPInvoiceState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AMPInvoiceState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AMPInvoiceState& from) { AMPInvoiceState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AMPInvoiceState* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AMPInvoiceState"; }

 protected:
  explicit AMPInvoiceState(::google::protobuf::Arena* arena);
  AMPInvoiceState(::google::protobuf::Arena* arena, const AMPInvoiceState& from);
  AMPInvoiceState(::google::protobuf::Arena* arena, AMPInvoiceState&& from) noexcept
      : AMPInvoiceState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSettleIndexFieldNumber = 2,
    kSettleTimeFieldNumber = 3,
    kAmtPaidMsatFieldNumber = 5,
    kStateFieldNumber = 1,
  };
  // uint64 settle_index = 2;
  void clear_settle_index() ;
  ::uint64_t settle_index() const;
  void set_settle_index(::uint64_t value);

  private:
  ::uint64_t _internal_settle_index() const;
  void _internal_set_settle_index(::uint64_t value);

  public:
  // int64 settle_time = 3;
  void clear_settle_time() ;
  ::int64_t settle_time() const;
  void set_settle_time(::int64_t value);

  private:
  ::int64_t _internal_settle_time() const;
  void _internal_set_settle_time(::int64_t value);

  public:
  // int64 amt_paid_msat = 5;
  void clear_amt_paid_msat() ;
  ::int64_t amt_paid_msat() const;
  void set_amt_paid_msat(::int64_t value);

  private:
  ::int64_t _internal_amt_paid_msat() const;
  void _internal_set_amt_paid_msat(::int64_t value);

  public:
  // .lnrpc.InvoiceHTLCState state = 1;
  void clear_state() ;
  ::lnrpc::InvoiceHTLCState state() const;
  void set_state(::lnrpc::InvoiceHTLCState value);

  private:
  ::lnrpc::InvoiceHTLCState _internal_state() const;
  void _internal_set_state(::lnrpc::InvoiceHTLCState value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.AMPInvoiceState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AMPInvoiceState_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AMPInvoiceState& from_msg);
    ::uint64_t settle_index_;
    ::int64_t settle_time_;
    ::int64_t amt_paid_msat_;
    int state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AMP final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.AMP) */ {
 public:
  inline AMP() : AMP(nullptr) {}
  ~AMP() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AMP(
      ::google::protobuf::internal::ConstantInitialized);

  inline AMP(const AMP& from) : AMP(nullptr, from) {}
  inline AMP(AMP&& from) noexcept
      : AMP(nullptr, std::move(from)) {}
  inline AMP& operator=(const AMP& from) {
    CopyFrom(from);
    return *this;
  }
  inline AMP& operator=(AMP&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AMP& default_instance() {
    return *internal_default_instance();
  }
  static inline const AMP* internal_default_instance() {
    return reinterpret_cast<const AMP*>(
        &_AMP_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 162;
  friend void swap(AMP& a, AMP& b) { a.Swap(&b); }
  inline void Swap(AMP* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AMP* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AMP* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AMP>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AMP& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AMP& from) { AMP::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AMP* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AMP"; }

 protected:
  explicit AMP(::google::protobuf::Arena* arena);
  AMP(::google::protobuf::Arena* arena, const AMP& from);
  AMP(::google::protobuf::Arena* arena, AMP&& from) noexcept
      : AMP(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRootShareFieldNumber = 1,
    kSetIdFieldNumber = 2,
    kHashFieldNumber = 4,
    kPreimageFieldNumber = 5,
    kChildIndexFieldNumber = 3,
  };
  // bytes root_share = 1;
  void clear_root_share() ;
  const std::string& root_share() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_root_share(Arg_&& arg, Args_... args);
  std::string* mutable_root_share();
  PROTOBUF_NODISCARD std::string* release_root_share();
  void set_allocated_root_share(std::string* value);

  private:
  const std::string& _internal_root_share() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_root_share(
      const std::string& value);
  std::string* _internal_mutable_root_share();

  public:
  // bytes set_id = 2;
  void clear_set_id() ;
  const std::string& set_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_set_id(Arg_&& arg, Args_... args);
  std::string* mutable_set_id();
  PROTOBUF_NODISCARD std::string* release_set_id();
  void set_allocated_set_id(std::string* value);

  private:
  const std::string& _internal_set_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_set_id(
      const std::string& value);
  std::string* _internal_mutable_set_id();

  public:
  // bytes hash = 4;
  void clear_hash() ;
  const std::string& hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_hash(Arg_&& arg, Args_... args);
  std::string* mutable_hash();
  PROTOBUF_NODISCARD std::string* release_hash();
  void set_allocated_hash(std::string* value);

  private:
  const std::string& _internal_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_hash(
      const std::string& value);
  std::string* _internal_mutable_hash();

  public:
  // bytes preimage = 5;
  void clear_preimage() ;
  const std::string& preimage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_preimage(Arg_&& arg, Args_... args);
  std::string* mutable_preimage();
  PROTOBUF_NODISCARD std::string* release_preimage();
  void set_allocated_preimage(std::string* value);

  private:
  const std::string& _internal_preimage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_preimage(
      const std::string& value);
  std::string* _internal_mutable_preimage();

  public:
  // uint32 child_index = 3;
  void clear_child_index() ;
  ::uint32_t child_index() const;
  void set_child_index(::uint32_t value);

  private:
  ::uint32_t _internal_child_index() const;
  void _internal_set_child_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.AMP)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AMP_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AMP& from_msg);
    ::google::protobuf::internal::ArenaStringPtr root_share_;
    ::google::protobuf::internal::ArenaStringPtr set_id_;
    ::google::protobuf::internal::ArenaStringPtr hash_;
    ::google::protobuf::internal::ArenaStringPtr preimage_;
    ::uint32_t child_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class WalletBalanceResponse_AccountBalanceEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          WalletBalanceResponse_AccountBalanceEntry_DoNotUse, std::string, ::lnrpc::WalletAccountBalance,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      WalletBalanceResponse_AccountBalanceEntry_DoNotUse, std::string, ::lnrpc::WalletAccountBalance,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  WalletBalanceResponse_AccountBalanceEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WalletBalanceResponse_AccountBalanceEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit WalletBalanceResponse_AccountBalanceEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const WalletBalanceResponse_AccountBalanceEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const WalletBalanceResponse_AccountBalanceEntry_DoNotUse*>(
        &_WalletBalanceResponse_AccountBalanceEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      59, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Utxo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Utxo) */ {
 public:
  inline Utxo() : Utxo(nullptr) {}
  ~Utxo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Utxo(
      ::google::protobuf::internal::ConstantInitialized);

  inline Utxo(const Utxo& from) : Utxo(nullptr, from) {}
  inline Utxo(Utxo&& from) noexcept
      : Utxo(nullptr, std::move(from)) {}
  inline Utxo& operator=(const Utxo& from) {
    CopyFrom(from);
    return *this;
  }
  inline Utxo& operator=(Utxo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Utxo& default_instance() {
    return *internal_default_instance();
  }
  static inline const Utxo* internal_default_instance() {
    return reinterpret_cast<const Utxo*>(
        &_Utxo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(Utxo& a, Utxo& b) { a.Swap(&b); }
  inline void Swap(Utxo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Utxo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Utxo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Utxo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Utxo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Utxo& from) { Utxo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Utxo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Utxo"; }

 protected:
  explicit Utxo(::google::protobuf::Arena* arena);
  Utxo(::google::protobuf::Arena* arena, const Utxo& from);
  Utxo(::google::protobuf::Arena* arena, Utxo&& from) noexcept
      : Utxo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 2,
    kPkScriptFieldNumber = 4,
    kOutpointFieldNumber = 5,
    kAmountSatFieldNumber = 3,
    kConfirmationsFieldNumber = 6,
    kAddressTypeFieldNumber = 1,
  };
  // string address = 2;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // string pk_script = 4;
  void clear_pk_script() ;
  const std::string& pk_script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pk_script(Arg_&& arg, Args_... args);
  std::string* mutable_pk_script();
  PROTOBUF_NODISCARD std::string* release_pk_script();
  void set_allocated_pk_script(std::string* value);

  private:
  const std::string& _internal_pk_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pk_script(
      const std::string& value);
  std::string* _internal_mutable_pk_script();

  public:
  // .lnrpc.OutPoint outpoint = 5;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // int64 amount_sat = 3;
  void clear_amount_sat() ;
  ::int64_t amount_sat() const;
  void set_amount_sat(::int64_t value);

  private:
  ::int64_t _internal_amount_sat() const;
  void _internal_set_amount_sat(::int64_t value);

  public:
  // int64 confirmations = 6;
  void clear_confirmations() ;
  ::int64_t confirmations() const;
  void set_confirmations(::int64_t value);

  private:
  ::int64_t _internal_confirmations() const;
  void _internal_set_confirmations(::int64_t value);

  public:
  // .lnrpc.AddressType address_type = 1;
  void clear_address_type() ;
  ::lnrpc::AddressType address_type() const;
  void set_address_type(::lnrpc::AddressType value);

  private:
  ::lnrpc::AddressType _internal_address_type() const;
  void _internal_set_address_type(::lnrpc::AddressType value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Utxo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Utxo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Utxo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr pk_script_;
    ::lnrpc::OutPoint* outpoint_;
    ::int64_t amount_sat_;
    ::int64_t confirmations_;
    int address_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Transaction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Transaction) */ {
 public:
  inline Transaction() : Transaction(nullptr) {}
  ~Transaction() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Transaction(
      ::google::protobuf::internal::ConstantInitialized);

  inline Transaction(const Transaction& from) : Transaction(nullptr, from) {}
  inline Transaction(Transaction&& from) noexcept
      : Transaction(nullptr, std::move(from)) {}
  inline Transaction& operator=(const Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transaction& operator=(Transaction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transaction& default_instance() {
    return *internal_default_instance();
  }
  static inline const Transaction* internal_default_instance() {
    return reinterpret_cast<const Transaction*>(
        &_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(Transaction& a, Transaction& b) { a.Swap(&b); }
  inline void Swap(Transaction* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transaction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transaction* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Transaction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transaction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Transaction& from) { Transaction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Transaction* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Transaction"; }

 protected:
  explicit Transaction(::google::protobuf::Arena* arena);
  Transaction(::google::protobuf::Arena* arena, const Transaction& from);
  Transaction(::google::protobuf::Arena* arena, Transaction&& from) noexcept
      : Transaction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDestAddressesFieldNumber = 8,
    kOutputDetailsFieldNumber = 11,
    kPreviousOutpointsFieldNumber = 12,
    kTxHashFieldNumber = 1,
    kBlockHashFieldNumber = 4,
    kRawTxHexFieldNumber = 9,
    kLabelFieldNumber = 10,
    kAmountFieldNumber = 2,
    kNumConfirmationsFieldNumber = 3,
    kBlockHeightFieldNumber = 5,
    kTimeStampFieldNumber = 6,
    kTotalFeesFieldNumber = 7,
  };
  // repeated string dest_addresses = 8 [deprecated = true];
  [[deprecated]]  int dest_addresses_size() const;
  private:
  int _internal_dest_addresses_size() const;

  public:
  [[deprecated]]  void clear_dest_addresses() ;
  [[deprecated]] const std::string& dest_addresses(int index) const;
  [[deprecated]] std::string* mutable_dest_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_dest_addresses(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_dest_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_dest_addresses(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& dest_addresses() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_dest_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dest_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dest_addresses();

  public:
  // repeated .lnrpc.OutputDetail output_details = 11;
  int output_details_size() const;
  private:
  int _internal_output_details_size() const;

  public:
  void clear_output_details() ;
  ::lnrpc::OutputDetail* mutable_output_details(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>* mutable_output_details();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>& _internal_output_details() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>* _internal_mutable_output_details();
  public:
  const ::lnrpc::OutputDetail& output_details(int index) const;
  ::lnrpc::OutputDetail* add_output_details();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>& output_details() const;
  // repeated .lnrpc.PreviousOutPoint previous_outpoints = 12;
  int previous_outpoints_size() const;
  private:
  int _internal_previous_outpoints_size() const;

  public:
  void clear_previous_outpoints() ;
  ::lnrpc::PreviousOutPoint* mutable_previous_outpoints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>* mutable_previous_outpoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>& _internal_previous_outpoints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>* _internal_mutable_previous_outpoints();
  public:
  const ::lnrpc::PreviousOutPoint& previous_outpoints(int index) const;
  ::lnrpc::PreviousOutPoint* add_previous_outpoints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>& previous_outpoints() const;
  // string tx_hash = 1;
  void clear_tx_hash() ;
  const std::string& tx_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tx_hash(Arg_&& arg, Args_... args);
  std::string* mutable_tx_hash();
  PROTOBUF_NODISCARD std::string* release_tx_hash();
  void set_allocated_tx_hash(std::string* value);

  private:
  const std::string& _internal_tx_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tx_hash(
      const std::string& value);
  std::string* _internal_mutable_tx_hash();

  public:
  // string block_hash = 4;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // string raw_tx_hex = 9;
  void clear_raw_tx_hex() ;
  const std::string& raw_tx_hex() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_tx_hex(Arg_&& arg, Args_... args);
  std::string* mutable_raw_tx_hex();
  PROTOBUF_NODISCARD std::string* release_raw_tx_hex();
  void set_allocated_raw_tx_hex(std::string* value);

  private:
  const std::string& _internal_raw_tx_hex() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_tx_hex(
      const std::string& value);
  std::string* _internal_mutable_raw_tx_hex();

  public:
  // string label = 10;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // int64 amount = 2;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // int32 num_confirmations = 3;
  void clear_num_confirmations() ;
  ::int32_t num_confirmations() const;
  void set_num_confirmations(::int32_t value);

  private:
  ::int32_t _internal_num_confirmations() const;
  void _internal_set_num_confirmations(::int32_t value);

  public:
  // int32 block_height = 5;
  void clear_block_height() ;
  ::int32_t block_height() const;
  void set_block_height(::int32_t value);

  private:
  ::int32_t _internal_block_height() const;
  void _internal_set_block_height(::int32_t value);

  public:
  // int64 time_stamp = 6;
  void clear_time_stamp() ;
  ::int64_t time_stamp() const;
  void set_time_stamp(::int64_t value);

  private:
  ::int64_t _internal_time_stamp() const;
  void _internal_set_time_stamp(::int64_t value);

  public:
  // int64 total_fees = 7;
  void clear_total_fees() ;
  ::int64_t total_fees() const;
  void set_total_fees(::int64_t value);

  private:
  ::int64_t _internal_total_fees() const;
  void _internal_set_total_fees(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Transaction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 2,
      80, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Transaction_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Transaction& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> dest_addresses_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::OutputDetail > output_details_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PreviousOutPoint > previous_outpoints_;
    ::google::protobuf::internal::ArenaStringPtr tx_hash_;
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    ::google::protobuf::internal::ArenaStringPtr raw_tx_hex_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::int64_t amount_;
    ::int32_t num_confirmations_;
    ::int32_t block_height_;
    ::int64_t time_stamp_;
    ::int64_t total_fees_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendRequest) */ {
 public:
  inline SendRequest() : SendRequest(nullptr) {}
  ~SendRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendRequest(const SendRequest& from) : SendRequest(nullptr, from) {}
  inline SendRequest(SendRequest&& from) noexcept
      : SendRequest(nullptr, std::move(from)) {}
  inline SendRequest& operator=(const SendRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendRequest& operator=(SendRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendRequest* internal_default_instance() {
    return reinterpret_cast<const SendRequest*>(
        &_SendRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SendRequest& a, SendRequest& b) { a.Swap(&b); }
  inline void Swap(SendRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendRequest& from) { SendRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendRequest"; }

 protected:
  explicit SendRequest(::google::protobuf::Arena* arena);
  SendRequest(::google::protobuf::Arena* arena, const SendRequest& from);
  SendRequest(::google::protobuf::Arena* arena, SendRequest&& from) noexcept
      : SendRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDestCustomRecordsFieldNumber = 11,
    kDestFeaturesFieldNumber = 15,
    kDestFieldNumber = 1,
    kDestStringFieldNumber = 2,
    kPaymentHashFieldNumber = 4,
    kPaymentHashStringFieldNumber = 5,
    kPaymentRequestFieldNumber = 6,
    kLastHopPubkeyFieldNumber = 13,
    kPaymentAddrFieldNumber = 16,
    kFeeLimitFieldNumber = 8,
    kAmtFieldNumber = 3,
    kFinalCltvDeltaFieldNumber = 7,
    kCltvLimitFieldNumber = 10,
    kOutgoingChanIdFieldNumber = 9,
    kAmtMsatFieldNumber = 12,
    kAllowSelfPaymentFieldNumber = 14,
  };
  // map<uint64, bytes> dest_custom_records = 11;
  int dest_custom_records_size() const;
  private:
  int _internal_dest_custom_records_size() const;

  public:
  void clear_dest_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& dest_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_dest_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_dest_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_dest_custom_records();

  public:
  // repeated .lnrpc.FeatureBit dest_features = 15;
  int dest_features_size() const;
  private:
  int _internal_dest_features_size() const;

  public:
  void clear_dest_features() ;
  public:
  ::lnrpc::FeatureBit dest_features(int index) const;
  void set_dest_features(int index, ::lnrpc::FeatureBit value);
  void add_dest_features(::lnrpc::FeatureBit value);
  const ::google::protobuf::RepeatedField<int>& dest_features() const;
  ::google::protobuf::RepeatedField<int>* mutable_dest_features();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_dest_features() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_dest_features();

  public:
  // bytes dest = 1;
  void clear_dest() ;
  const std::string& dest() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dest(Arg_&& arg, Args_... args);
  std::string* mutable_dest();
  PROTOBUF_NODISCARD std::string* release_dest();
  void set_allocated_dest(std::string* value);

  private:
  const std::string& _internal_dest() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dest(
      const std::string& value);
  std::string* _internal_mutable_dest();

  public:
  // string dest_string = 2 [deprecated = true];
  [[deprecated]]  void clear_dest_string() ;
  [[deprecated]] const std::string& dest_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_dest_string(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_dest_string();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_dest_string();
  [[deprecated]] void set_allocated_dest_string(std::string* value);

  private:
  const std::string& _internal_dest_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dest_string(
      const std::string& value);
  std::string* _internal_mutable_dest_string();

  public:
  // bytes payment_hash = 4;
  void clear_payment_hash() ;
  const std::string& payment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_payment_hash();
  PROTOBUF_NODISCARD std::string* release_payment_hash();
  void set_allocated_payment_hash(std::string* value);

  private:
  const std::string& _internal_payment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash(
      const std::string& value);
  std::string* _internal_mutable_payment_hash();

  public:
  // string payment_hash_string = 5 [deprecated = true];
  [[deprecated]]  void clear_payment_hash_string() ;
  [[deprecated]] const std::string& payment_hash_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_payment_hash_string(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_payment_hash_string();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_payment_hash_string();
  [[deprecated]] void set_allocated_payment_hash_string(std::string* value);

  private:
  const std::string& _internal_payment_hash_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash_string(
      const std::string& value);
  std::string* _internal_mutable_payment_hash_string();

  public:
  // string payment_request = 6;
  void clear_payment_request() ;
  const std::string& payment_request() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_request(Arg_&& arg, Args_... args);
  std::string* mutable_payment_request();
  PROTOBUF_NODISCARD std::string* release_payment_request();
  void set_allocated_payment_request(std::string* value);

  private:
  const std::string& _internal_payment_request() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_request(
      const std::string& value);
  std::string* _internal_mutable_payment_request();

  public:
  // bytes last_hop_pubkey = 13;
  void clear_last_hop_pubkey() ;
  const std::string& last_hop_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_hop_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_last_hop_pubkey();
  PROTOBUF_NODISCARD std::string* release_last_hop_pubkey();
  void set_allocated_last_hop_pubkey(std::string* value);

  private:
  const std::string& _internal_last_hop_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_hop_pubkey(
      const std::string& value);
  std::string* _internal_mutable_last_hop_pubkey();

  public:
  // bytes payment_addr = 16;
  void clear_payment_addr() ;
  const std::string& payment_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_addr(Arg_&& arg, Args_... args);
  std::string* mutable_payment_addr();
  PROTOBUF_NODISCARD std::string* release_payment_addr();
  void set_allocated_payment_addr(std::string* value);

  private:
  const std::string& _internal_payment_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_addr(
      const std::string& value);
  std::string* _internal_mutable_payment_addr();

  public:
  // .lnrpc.FeeLimit fee_limit = 8;
  bool has_fee_limit() const;
  void clear_fee_limit() ;
  const ::lnrpc::FeeLimit& fee_limit() const;
  PROTOBUF_NODISCARD ::lnrpc::FeeLimit* release_fee_limit();
  ::lnrpc::FeeLimit* mutable_fee_limit();
  void set_allocated_fee_limit(::lnrpc::FeeLimit* value);
  void unsafe_arena_set_allocated_fee_limit(::lnrpc::FeeLimit* value);
  ::lnrpc::FeeLimit* unsafe_arena_release_fee_limit();

  private:
  const ::lnrpc::FeeLimit& _internal_fee_limit() const;
  ::lnrpc::FeeLimit* _internal_mutable_fee_limit();

  public:
  // int64 amt = 3;
  void clear_amt() ;
  ::int64_t amt() const;
  void set_amt(::int64_t value);

  private:
  ::int64_t _internal_amt() const;
  void _internal_set_amt(::int64_t value);

  public:
  // int32 final_cltv_delta = 7;
  void clear_final_cltv_delta() ;
  ::int32_t final_cltv_delta() const;
  void set_final_cltv_delta(::int32_t value);

  private:
  ::int32_t _internal_final_cltv_delta() const;
  void _internal_set_final_cltv_delta(::int32_t value);

  public:
  // uint32 cltv_limit = 10;
  void clear_cltv_limit() ;
  ::uint32_t cltv_limit() const;
  void set_cltv_limit(::uint32_t value);

  private:
  ::uint32_t _internal_cltv_limit() const;
  void _internal_set_cltv_limit(::uint32_t value);

  public:
  // uint64 outgoing_chan_id = 9 [jstype = JS_STRING];
  void clear_outgoing_chan_id() ;
  ::uint64_t outgoing_chan_id() const;
  void set_outgoing_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_outgoing_chan_id() const;
  void _internal_set_outgoing_chan_id(::uint64_t value);

  public:
  // int64 amt_msat = 12;
  void clear_amt_msat() ;
  ::int64_t amt_msat() const;
  void set_amt_msat(::int64_t value);

  private:
  ::int64_t _internal_amt_msat() const;
  void _internal_set_amt_msat(::int64_t value);

  public:
  // bool allow_self_payment = 14;
  void clear_allow_self_payment() ;
  bool allow_self_payment() const;
  void set_allow_self_payment(bool value);

  private:
  bool _internal_allow_self_payment() const;
  void _internal_set_allow_self_payment(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 2,
      87, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<SendRequest_DestCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        dest_custom_records_;
    ::google::protobuf::RepeatedField<int> dest_features_;
    mutable ::google::protobuf::internal::CachedSize _dest_features_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr dest_;
    ::google::protobuf::internal::ArenaStringPtr dest_string_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_string_;
    ::google::protobuf::internal::ArenaStringPtr payment_request_;
    ::google::protobuf::internal::ArenaStringPtr last_hop_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr payment_addr_;
    ::lnrpc::FeeLimit* fee_limit_;
    ::int64_t amt_;
    ::int32_t final_cltv_delta_;
    ::uint32_t cltv_limit_;
    ::uint64_t outgoing_chan_id_;
    ::int64_t amt_msat_;
    bool allow_self_payment_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendManyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendManyRequest) */ {
 public:
  inline SendManyRequest() : SendManyRequest(nullptr) {}
  ~SendManyRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendManyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendManyRequest(const SendManyRequest& from) : SendManyRequest(nullptr, from) {}
  inline SendManyRequest(SendManyRequest&& from) noexcept
      : SendManyRequest(nullptr, std::move(from)) {}
  inline SendManyRequest& operator=(const SendManyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendManyRequest& operator=(SendManyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendManyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendManyRequest* internal_default_instance() {
    return reinterpret_cast<const SendManyRequest*>(
        &_SendManyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SendManyRequest& a, SendManyRequest& b) { a.Swap(&b); }
  inline void Swap(SendManyRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendManyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendManyRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendManyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendManyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendManyRequest& from) { SendManyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendManyRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendManyRequest"; }

 protected:
  explicit SendManyRequest(::google::protobuf::Arena* arena);
  SendManyRequest(::google::protobuf::Arena* arena, const SendManyRequest& from);
  SendManyRequest(::google::protobuf::Arena* arena, SendManyRequest&& from) noexcept
      : SendManyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddrToAmountFieldNumber = 1,
    kLabelFieldNumber = 6,
    kSatPerVbyteFieldNumber = 4,
    kSatPerByteFieldNumber = 5,
    kTargetConfFieldNumber = 3,
    kMinConfsFieldNumber = 7,
    kSpendUnconfirmedFieldNumber = 8,
    kCoinSelectionStrategyFieldNumber = 9,
  };
  // map<string, int64> AddrToAmount = 1;
  int addrtoamount_size() const;
  private:
  int _internal_addrtoamount_size() const;

  public:
  void clear_addrtoamount() ;
  const ::google::protobuf::Map<std::string, ::int64_t>& addrtoamount() const;
  ::google::protobuf::Map<std::string, ::int64_t>* mutable_addrtoamount();

  private:
  const ::google::protobuf::Map<std::string, ::int64_t>& _internal_addrtoamount() const;
  ::google::protobuf::Map<std::string, ::int64_t>* _internal_mutable_addrtoamount();

  public:
  // string label = 6;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // uint64 sat_per_vbyte = 4;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // int64 sat_per_byte = 5 [deprecated = true];
  [[deprecated]]  void clear_sat_per_byte() ;
  [[deprecated]] ::int64_t sat_per_byte() const;
  [[deprecated]] void set_sat_per_byte(::int64_t value);

  private:
  ::int64_t _internal_sat_per_byte() const;
  void _internal_set_sat_per_byte(::int64_t value);

  public:
  // int32 target_conf = 3;
  void clear_target_conf() ;
  ::int32_t target_conf() const;
  void set_target_conf(::int32_t value);

  private:
  ::int32_t _internal_target_conf() const;
  void _internal_set_target_conf(::int32_t value);

  public:
  // int32 min_confs = 7;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // bool spend_unconfirmed = 8;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // .lnrpc.CoinSelectionStrategy coin_selection_strategy = 9;
  void clear_coin_selection_strategy() ;
  ::lnrpc::CoinSelectionStrategy coin_selection_strategy() const;
  void set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  private:
  ::lnrpc::CoinSelectionStrategy _internal_coin_selection_strategy() const;
  void _internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendManyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendManyRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendManyRequest& from_msg);
    ::google::protobuf::internal::MapField<SendManyRequest_AddrToAmountEntry_DoNotUse, std::string, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        addrtoamount_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::uint64_t sat_per_vbyte_;
    ::int64_t sat_per_byte_;
    ::int32_t target_conf_;
    ::int32_t min_confs_;
    bool spend_unconfirmed_;
    int coin_selection_strategy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendCoinsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendCoinsRequest) */ {
 public:
  inline SendCoinsRequest() : SendCoinsRequest(nullptr) {}
  ~SendCoinsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendCoinsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendCoinsRequest(const SendCoinsRequest& from) : SendCoinsRequest(nullptr, from) {}
  inline SendCoinsRequest(SendCoinsRequest&& from) noexcept
      : SendCoinsRequest(nullptr, std::move(from)) {}
  inline SendCoinsRequest& operator=(const SendCoinsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendCoinsRequest& operator=(SendCoinsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendCoinsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendCoinsRequest* internal_default_instance() {
    return reinterpret_cast<const SendCoinsRequest*>(
        &_SendCoinsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(SendCoinsRequest& a, SendCoinsRequest& b) { a.Swap(&b); }
  inline void Swap(SendCoinsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendCoinsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendCoinsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendCoinsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendCoinsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendCoinsRequest& from) { SendCoinsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendCoinsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendCoinsRequest"; }

 protected:
  explicit SendCoinsRequest(::google::protobuf::Arena* arena);
  SendCoinsRequest(::google::protobuf::Arena* arena, const SendCoinsRequest& from);
  SendCoinsRequest(::google::protobuf::Arena* arena, SendCoinsRequest&& from) noexcept
      : SendCoinsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutpointsFieldNumber = 11,
    kAddrFieldNumber = 1,
    kLabelFieldNumber = 7,
    kAmountFieldNumber = 2,
    kSatPerVbyteFieldNumber = 4,
    kSatPerByteFieldNumber = 5,
    kTargetConfFieldNumber = 3,
    kSendAllFieldNumber = 6,
    kSpendUnconfirmedFieldNumber = 9,
    kMinConfsFieldNumber = 8,
    kCoinSelectionStrategyFieldNumber = 10,
  };
  // repeated .lnrpc.OutPoint outpoints = 11;
  int outpoints_size() const;
  private:
  int _internal_outpoints_size() const;

  public:
  void clear_outpoints() ;
  ::lnrpc::OutPoint* mutable_outpoints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* mutable_outpoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& _internal_outpoints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* _internal_mutable_outpoints();
  public:
  const ::lnrpc::OutPoint& outpoints(int index) const;
  ::lnrpc::OutPoint* add_outpoints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& outpoints() const;
  // string addr = 1;
  void clear_addr() ;
  const std::string& addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addr(Arg_&& arg, Args_... args);
  std::string* mutable_addr();
  PROTOBUF_NODISCARD std::string* release_addr();
  void set_allocated_addr(std::string* value);

  private:
  const std::string& _internal_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addr(
      const std::string& value);
  std::string* _internal_mutable_addr();

  public:
  // string label = 7;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // int64 amount = 2;
  void clear_amount() ;
  ::int64_t amount() const;
  void set_amount(::int64_t value);

  private:
  ::int64_t _internal_amount() const;
  void _internal_set_amount(::int64_t value);

  public:
  // uint64 sat_per_vbyte = 4;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // int64 sat_per_byte = 5 [deprecated = true];
  [[deprecated]]  void clear_sat_per_byte() ;
  [[deprecated]] ::int64_t sat_per_byte() const;
  [[deprecated]] void set_sat_per_byte(::int64_t value);

  private:
  ::int64_t _internal_sat_per_byte() const;
  void _internal_set_sat_per_byte(::int64_t value);

  public:
  // int32 target_conf = 3;
  void clear_target_conf() ;
  ::int32_t target_conf() const;
  void set_target_conf(::int32_t value);

  private:
  ::int32_t _internal_target_conf() const;
  void _internal_set_target_conf(::int32_t value);

  public:
  // bool send_all = 6;
  void clear_send_all() ;
  bool send_all() const;
  void set_send_all(bool value);

  private:
  bool _internal_send_all() const;
  void _internal_set_send_all(bool value);

  public:
  // bool spend_unconfirmed = 9;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // int32 min_confs = 8;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // .lnrpc.CoinSelectionStrategy coin_selection_strategy = 10;
  void clear_coin_selection_strategy() ;
  ::lnrpc::CoinSelectionStrategy coin_selection_strategy() const;
  void set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  private:
  ::lnrpc::CoinSelectionStrategy _internal_coin_selection_strategy() const;
  void _internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendCoinsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 1,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendCoinsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendCoinsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::OutPoint > outpoints_;
    ::google::protobuf::internal::ArenaStringPtr addr_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::int64_t amount_;
    ::uint64_t sat_per_vbyte_;
    ::int64_t sat_per_byte_;
    ::int32_t target_conf_;
    bool send_all_;
    bool spend_unconfirmed_;
    ::int32_t min_confs_;
    int coin_selection_strategy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RoutingPolicy final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.RoutingPolicy) */ {
 public:
  inline RoutingPolicy() : RoutingPolicy(nullptr) {}
  ~RoutingPolicy() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RoutingPolicy(
      ::google::protobuf::internal::ConstantInitialized);

  inline RoutingPolicy(const RoutingPolicy& from) : RoutingPolicy(nullptr, from) {}
  inline RoutingPolicy(RoutingPolicy&& from) noexcept
      : RoutingPolicy(nullptr, std::move(from)) {}
  inline RoutingPolicy& operator=(const RoutingPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  inline RoutingPolicy& operator=(RoutingPolicy&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RoutingPolicy& default_instance() {
    return *internal_default_instance();
  }
  static inline const RoutingPolicy* internal_default_instance() {
    return reinterpret_cast<const RoutingPolicy*>(
        &_RoutingPolicy_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 129;
  friend void swap(RoutingPolicy& a, RoutingPolicy& b) { a.Swap(&b); }
  inline void Swap(RoutingPolicy* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RoutingPolicy* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RoutingPolicy* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RoutingPolicy>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RoutingPolicy& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RoutingPolicy& from) { RoutingPolicy::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RoutingPolicy* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RoutingPolicy"; }

 protected:
  explicit RoutingPolicy(::google::protobuf::Arena* arena);
  RoutingPolicy(::google::protobuf::Arena* arena, const RoutingPolicy& from);
  RoutingPolicy(::google::protobuf::Arena* arena, RoutingPolicy&& from) noexcept
      : RoutingPolicy(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomRecordsFieldNumber = 8,
    kMinHtlcFieldNumber = 2,
    kFeeBaseMsatFieldNumber = 3,
    kTimeLockDeltaFieldNumber = 1,
    kDisabledFieldNumber = 5,
    kFeeRateMilliMsatFieldNumber = 4,
    kMaxHtlcMsatFieldNumber = 6,
    kLastUpdateFieldNumber = 7,
    kInboundFeeBaseMsatFieldNumber = 9,
    kInboundFeeRateMilliMsatFieldNumber = 10,
  };
  // map<uint64, bytes> custom_records = 8;
  int custom_records_size() const;
  private:
  int _internal_custom_records_size() const;

  public:
  void clear_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_custom_records();

  public:
  // int64 min_htlc = 2;
  void clear_min_htlc() ;
  ::int64_t min_htlc() const;
  void set_min_htlc(::int64_t value);

  private:
  ::int64_t _internal_min_htlc() const;
  void _internal_set_min_htlc(::int64_t value);

  public:
  // int64 fee_base_msat = 3;
  void clear_fee_base_msat() ;
  ::int64_t fee_base_msat() const;
  void set_fee_base_msat(::int64_t value);

  private:
  ::int64_t _internal_fee_base_msat() const;
  void _internal_set_fee_base_msat(::int64_t value);

  public:
  // uint32 time_lock_delta = 1;
  void clear_time_lock_delta() ;
  ::uint32_t time_lock_delta() const;
  void set_time_lock_delta(::uint32_t value);

  private:
  ::uint32_t _internal_time_lock_delta() const;
  void _internal_set_time_lock_delta(::uint32_t value);

  public:
  // bool disabled = 5;
  void clear_disabled() ;
  bool disabled() const;
  void set_disabled(bool value);

  private:
  bool _internal_disabled() const;
  void _internal_set_disabled(bool value);

  public:
  // int64 fee_rate_milli_msat = 4;
  void clear_fee_rate_milli_msat() ;
  ::int64_t fee_rate_milli_msat() const;
  void set_fee_rate_milli_msat(::int64_t value);

  private:
  ::int64_t _internal_fee_rate_milli_msat() const;
  void _internal_set_fee_rate_milli_msat(::int64_t value);

  public:
  // uint64 max_htlc_msat = 6;
  void clear_max_htlc_msat() ;
  ::uint64_t max_htlc_msat() const;
  void set_max_htlc_msat(::uint64_t value);

  private:
  ::uint64_t _internal_max_htlc_msat() const;
  void _internal_set_max_htlc_msat(::uint64_t value);

  public:
  // uint32 last_update = 7;
  void clear_last_update() ;
  ::uint32_t last_update() const;
  void set_last_update(::uint32_t value);

  private:
  ::uint32_t _internal_last_update() const;
  void _internal_set_last_update(::uint32_t value);

  public:
  // int32 inbound_fee_base_msat = 9;
  void clear_inbound_fee_base_msat() ;
  ::int32_t inbound_fee_base_msat() const;
  void set_inbound_fee_base_msat(::int32_t value);

  private:
  ::int32_t _internal_inbound_fee_base_msat() const;
  void _internal_set_inbound_fee_base_msat(::int32_t value);

  public:
  // int32 inbound_fee_rate_milli_msat = 10;
  void clear_inbound_fee_rate_milli_msat() ;
  ::int32_t inbound_fee_rate_milli_msat() const;
  void set_inbound_fee_rate_milli_msat(::int32_t value);

  private:
  ::int32_t _internal_inbound_fee_rate_milli_msat() const;
  void _internal_set_inbound_fee_rate_milli_msat(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.RoutingPolicy)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RoutingPolicy_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RoutingPolicy& from_msg);
    ::google::protobuf::internal::MapField<RoutingPolicy_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        custom_records_;
    ::int64_t min_htlc_;
    ::int64_t fee_base_msat_;
    ::uint32_t time_lock_delta_;
    bool disabled_;
    ::int64_t fee_rate_milli_msat_;
    ::uint64_t max_htlc_msat_;
    ::uint32_t last_update_;
    ::int32_t inbound_fee_base_msat_;
    ::int32_t inbound_fee_rate_milli_msat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RouteHint final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.RouteHint) */ {
 public:
  inline RouteHint() : RouteHint(nullptr) {}
  ~RouteHint() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RouteHint(
      ::google::protobuf::internal::ConstantInitialized);

  inline RouteHint(const RouteHint& from) : RouteHint(nullptr, from) {}
  inline RouteHint(RouteHint&& from) noexcept
      : RouteHint(nullptr, std::move(from)) {}
  inline RouteHint& operator=(const RouteHint& from) {
    CopyFrom(from);
    return *this;
  }
  inline RouteHint& operator=(RouteHint&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RouteHint& default_instance() {
    return *internal_default_instance();
  }
  static inline const RouteHint* internal_default_instance() {
    return reinterpret_cast<const RouteHint*>(
        &_RouteHint_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 151;
  friend void swap(RouteHint& a, RouteHint& b) { a.Swap(&b); }
  inline void Swap(RouteHint* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RouteHint* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RouteHint* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RouteHint>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RouteHint& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RouteHint& from) { RouteHint::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RouteHint* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RouteHint"; }

 protected:
  explicit RouteHint(::google::protobuf::Arena* arena);
  RouteHint(::google::protobuf::Arena* arena, const RouteHint& from);
  RouteHint(::google::protobuf::Arena* arena, RouteHint&& from) noexcept
      : RouteHint(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHopHintsFieldNumber = 1,
  };
  // repeated .lnrpc.HopHint hop_hints = 1;
  int hop_hints_size() const;
  private:
  int _internal_hop_hints_size() const;

  public:
  void clear_hop_hints() ;
  ::lnrpc::HopHint* mutable_hop_hints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>* mutable_hop_hints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>& _internal_hop_hints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>* _internal_mutable_hop_hints();
  public:
  const ::lnrpc::HopHint& hop_hints(int index) const;
  ::lnrpc::HopHint* add_hop_hints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>& hop_hints() const;
  // @@protoc_insertion_point(class_scope:lnrpc.RouteHint)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RouteHint_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RouteHint& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::HopHint > hop_hints_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Resolution final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Resolution) */ {
 public:
  inline Resolution() : Resolution(nullptr) {}
  ~Resolution() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Resolution(
      ::google::protobuf::internal::ConstantInitialized);

  inline Resolution(const Resolution& from) : Resolution(nullptr, from) {}
  inline Resolution(Resolution&& from) noexcept
      : Resolution(nullptr, std::move(from)) {}
  inline Resolution& operator=(const Resolution& from) {
    CopyFrom(from);
    return *this;
  }
  inline Resolution& operator=(Resolution&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Resolution& default_instance() {
    return *internal_default_instance();
  }
  static inline const Resolution* internal_default_instance() {
    return reinterpret_cast<const Resolution*>(
        &_Resolution_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(Resolution& a, Resolution& b) { a.Swap(&b); }
  inline void Swap(Resolution* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Resolution* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Resolution* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Resolution>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Resolution& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Resolution& from) { Resolution::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Resolution* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Resolution"; }

 protected:
  explicit Resolution(::google::protobuf::Arena* arena);
  Resolution(::google::protobuf::Arena* arena, const Resolution& from);
  Resolution(::google::protobuf::Arena* arena, Resolution&& from) noexcept
      : Resolution(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSweepTxidFieldNumber = 5,
    kOutpointFieldNumber = 3,
    kResolutionTypeFieldNumber = 1,
    kOutcomeFieldNumber = 2,
    kAmountSatFieldNumber = 4,
  };
  // string sweep_txid = 5;
  void clear_sweep_txid() ;
  const std::string& sweep_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_sweep_txid(Arg_&& arg, Args_... args);
  std::string* mutable_sweep_txid();
  PROTOBUF_NODISCARD std::string* release_sweep_txid();
  void set_allocated_sweep_txid(std::string* value);

  private:
  const std::string& _internal_sweep_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_sweep_txid(
      const std::string& value);
  std::string* _internal_mutable_sweep_txid();

  public:
  // .lnrpc.OutPoint outpoint = 3;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // .lnrpc.ResolutionType resolution_type = 1;
  void clear_resolution_type() ;
  ::lnrpc::ResolutionType resolution_type() const;
  void set_resolution_type(::lnrpc::ResolutionType value);

  private:
  ::lnrpc::ResolutionType _internal_resolution_type() const;
  void _internal_set_resolution_type(::lnrpc::ResolutionType value);

  public:
  // .lnrpc.ResolutionOutcome outcome = 2;
  void clear_outcome() ;
  ::lnrpc::ResolutionOutcome outcome() const;
  void set_outcome(::lnrpc::ResolutionOutcome value);

  private:
  ::lnrpc::ResolutionOutcome _internal_outcome() const;
  void _internal_set_outcome(::lnrpc::ResolutionOutcome value);

  public:
  // uint64 amount_sat = 4;
  void clear_amount_sat() ;
  ::uint64_t amount_sat() const;
  void set_amount_sat(::uint64_t value);

  private:
  ::uint64_t _internal_amount_sat() const;
  void _internal_set_amount_sat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Resolution)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Resolution_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Resolution& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr sweep_txid_;
    ::lnrpc::OutPoint* outpoint_;
    int resolution_type_;
    int outcome_;
    ::uint64_t amount_sat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RPCMiddlewareResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.RPCMiddlewareResponse) */ {
 public:
  inline RPCMiddlewareResponse() : RPCMiddlewareResponse(nullptr) {}
  ~RPCMiddlewareResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPCMiddlewareResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPCMiddlewareResponse(const RPCMiddlewareResponse& from) : RPCMiddlewareResponse(nullptr, from) {}
  inline RPCMiddlewareResponse(RPCMiddlewareResponse&& from) noexcept
      : RPCMiddlewareResponse(nullptr, std::move(from)) {}
  inline RPCMiddlewareResponse& operator=(const RPCMiddlewareResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPCMiddlewareResponse& operator=(RPCMiddlewareResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPCMiddlewareResponse& default_instance() {
    return *internal_default_instance();
  }
  enum MiddlewareMessageCase {
    kRegister = 2,
    kFeedback = 3,
    MIDDLEWARE_MESSAGE_NOT_SET = 0,
  };
  static inline const RPCMiddlewareResponse* internal_default_instance() {
    return reinterpret_cast<const RPCMiddlewareResponse*>(
        &_RPCMiddlewareResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 225;
  friend void swap(RPCMiddlewareResponse& a, RPCMiddlewareResponse& b) { a.Swap(&b); }
  inline void Swap(RPCMiddlewareResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPCMiddlewareResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPCMiddlewareResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RPCMiddlewareResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPCMiddlewareResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPCMiddlewareResponse& from) { RPCMiddlewareResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPCMiddlewareResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RPCMiddlewareResponse"; }

 protected:
  explicit RPCMiddlewareResponse(::google::protobuf::Arena* arena);
  RPCMiddlewareResponse(::google::protobuf::Arena* arena, const RPCMiddlewareResponse& from);
  RPCMiddlewareResponse(::google::protobuf::Arena* arena, RPCMiddlewareResponse&& from) noexcept
      : RPCMiddlewareResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRefMsgIdFieldNumber = 1,
    kRegisterFieldNumber = 2,
    kFeedbackFieldNumber = 3,
  };
  // uint64 ref_msg_id = 1;
  void clear_ref_msg_id() ;
  ::uint64_t ref_msg_id() const;
  void set_ref_msg_id(::uint64_t value);

  private:
  ::uint64_t _internal_ref_msg_id() const;
  void _internal_set_ref_msg_id(::uint64_t value);

  public:
  // .lnrpc.MiddlewareRegistration register = 2;
  bool has_register_() const;
  private:
  bool _internal_has_register_() const;

  public:
  void clear_register_() ;
  const ::lnrpc::MiddlewareRegistration& register_() const;
  PROTOBUF_NODISCARD ::lnrpc::MiddlewareRegistration* release_register_();
  ::lnrpc::MiddlewareRegistration* mutable_register_();
  void set_allocated_register_(::lnrpc::MiddlewareRegistration* value);
  void unsafe_arena_set_allocated_register_(::lnrpc::MiddlewareRegistration* value);
  ::lnrpc::MiddlewareRegistration* unsafe_arena_release_register_();

  private:
  const ::lnrpc::MiddlewareRegistration& _internal_register_() const;
  ::lnrpc::MiddlewareRegistration* _internal_mutable_register_();

  public:
  // .lnrpc.InterceptFeedback feedback = 3;
  bool has_feedback() const;
  private:
  bool _internal_has_feedback() const;

  public:
  void clear_feedback() ;
  const ::lnrpc::InterceptFeedback& feedback() const;
  PROTOBUF_NODISCARD ::lnrpc::InterceptFeedback* release_feedback();
  ::lnrpc::InterceptFeedback* mutable_feedback();
  void set_allocated_feedback(::lnrpc::InterceptFeedback* value);
  void unsafe_arena_set_allocated_feedback(::lnrpc::InterceptFeedback* value);
  ::lnrpc::InterceptFeedback* unsafe_arena_release_feedback();

  private:
  const ::lnrpc::InterceptFeedback& _internal_feedback() const;
  ::lnrpc::InterceptFeedback* _internal_mutable_feedback();

  public:
  void clear_middleware_message();
  MiddlewareMessageCase middleware_message_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.RPCMiddlewareResponse)
 private:
  class _Internal;
  void set_has_register_();
  void set_has_feedback();
  inline bool has_middleware_message() const;
  inline void clear_has_middleware_message();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RPCMiddlewareResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RPCMiddlewareResponse& from_msg);
    ::uint64_t ref_msg_id_;
    union MiddlewareMessageUnion {
      constexpr MiddlewareMessageUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::MiddlewareRegistration* register__;
      ::lnrpc::InterceptFeedback* feedback_;
    } middleware_message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RPCMiddlewareRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.RPCMiddlewareRequest) */ {
 public:
  inline RPCMiddlewareRequest() : RPCMiddlewareRequest(nullptr) {}
  ~RPCMiddlewareRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RPCMiddlewareRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RPCMiddlewareRequest(const RPCMiddlewareRequest& from) : RPCMiddlewareRequest(nullptr, from) {}
  inline RPCMiddlewareRequest(RPCMiddlewareRequest&& from) noexcept
      : RPCMiddlewareRequest(nullptr, std::move(from)) {}
  inline RPCMiddlewareRequest& operator=(const RPCMiddlewareRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RPCMiddlewareRequest& operator=(RPCMiddlewareRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RPCMiddlewareRequest& default_instance() {
    return *internal_default_instance();
  }
  enum InterceptTypeCase {
    kStreamAuth = 4,
    kRequest = 5,
    kResponse = 6,
    kRegComplete = 8,
    INTERCEPT_TYPE_NOT_SET = 0,
  };
  static inline const RPCMiddlewareRequest* internal_default_instance() {
    return reinterpret_cast<const RPCMiddlewareRequest*>(
        &_RPCMiddlewareRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 222;
  friend void swap(RPCMiddlewareRequest& a, RPCMiddlewareRequest& b) { a.Swap(&b); }
  inline void Swap(RPCMiddlewareRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RPCMiddlewareRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RPCMiddlewareRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RPCMiddlewareRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RPCMiddlewareRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RPCMiddlewareRequest& from) { RPCMiddlewareRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RPCMiddlewareRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RPCMiddlewareRequest"; }

 protected:
  explicit RPCMiddlewareRequest(::google::protobuf::Arena* arena);
  RPCMiddlewareRequest(::google::protobuf::Arena* arena, const RPCMiddlewareRequest& from);
  RPCMiddlewareRequest(::google::protobuf::Arena* arena, RPCMiddlewareRequest&& from) noexcept
      : RPCMiddlewareRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawMacaroonFieldNumber = 2,
    kCustomCaveatConditionFieldNumber = 3,
    kRequestIdFieldNumber = 1,
    kMsgIdFieldNumber = 7,
    kStreamAuthFieldNumber = 4,
    kRequestFieldNumber = 5,
    kResponseFieldNumber = 6,
    kRegCompleteFieldNumber = 8,
  };
  // bytes raw_macaroon = 2;
  void clear_raw_macaroon() ;
  const std::string& raw_macaroon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_macaroon(Arg_&& arg, Args_... args);
  std::string* mutable_raw_macaroon();
  PROTOBUF_NODISCARD std::string* release_raw_macaroon();
  void set_allocated_raw_macaroon(std::string* value);

  private:
  const std::string& _internal_raw_macaroon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_macaroon(
      const std::string& value);
  std::string* _internal_mutable_raw_macaroon();

  public:
  // string custom_caveat_condition = 3;
  void clear_custom_caveat_condition() ;
  const std::string& custom_caveat_condition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_caveat_condition(Arg_&& arg, Args_... args);
  std::string* mutable_custom_caveat_condition();
  PROTOBUF_NODISCARD std::string* release_custom_caveat_condition();
  void set_allocated_custom_caveat_condition(std::string* value);

  private:
  const std::string& _internal_custom_caveat_condition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_caveat_condition(
      const std::string& value);
  std::string* _internal_mutable_custom_caveat_condition();

  public:
  // uint64 request_id = 1;
  void clear_request_id() ;
  ::uint64_t request_id() const;
  void set_request_id(::uint64_t value);

  private:
  ::uint64_t _internal_request_id() const;
  void _internal_set_request_id(::uint64_t value);

  public:
  // uint64 msg_id = 7;
  void clear_msg_id() ;
  ::uint64_t msg_id() const;
  void set_msg_id(::uint64_t value);

  private:
  ::uint64_t _internal_msg_id() const;
  void _internal_set_msg_id(::uint64_t value);

  public:
  // .lnrpc.StreamAuth stream_auth = 4;
  bool has_stream_auth() const;
  private:
  bool _internal_has_stream_auth() const;

  public:
  void clear_stream_auth() ;
  const ::lnrpc::StreamAuth& stream_auth() const;
  PROTOBUF_NODISCARD ::lnrpc::StreamAuth* release_stream_auth();
  ::lnrpc::StreamAuth* mutable_stream_auth();
  void set_allocated_stream_auth(::lnrpc::StreamAuth* value);
  void unsafe_arena_set_allocated_stream_auth(::lnrpc::StreamAuth* value);
  ::lnrpc::StreamAuth* unsafe_arena_release_stream_auth();

  private:
  const ::lnrpc::StreamAuth& _internal_stream_auth() const;
  ::lnrpc::StreamAuth* _internal_mutable_stream_auth();

  public:
  // .lnrpc.RPCMessage request = 5;
  bool has_request() const;
  private:
  bool _internal_has_request() const;

  public:
  void clear_request() ;
  const ::lnrpc::RPCMessage& request() const;
  PROTOBUF_NODISCARD ::lnrpc::RPCMessage* release_request();
  ::lnrpc::RPCMessage* mutable_request();
  void set_allocated_request(::lnrpc::RPCMessage* value);
  void unsafe_arena_set_allocated_request(::lnrpc::RPCMessage* value);
  ::lnrpc::RPCMessage* unsafe_arena_release_request();

  private:
  const ::lnrpc::RPCMessage& _internal_request() const;
  ::lnrpc::RPCMessage* _internal_mutable_request();

  public:
  // .lnrpc.RPCMessage response = 6;
  bool has_response() const;
  private:
  bool _internal_has_response() const;

  public:
  void clear_response() ;
  const ::lnrpc::RPCMessage& response() const;
  PROTOBUF_NODISCARD ::lnrpc::RPCMessage* release_response();
  ::lnrpc::RPCMessage* mutable_response();
  void set_allocated_response(::lnrpc::RPCMessage* value);
  void unsafe_arena_set_allocated_response(::lnrpc::RPCMessage* value);
  ::lnrpc::RPCMessage* unsafe_arena_release_response();

  private:
  const ::lnrpc::RPCMessage& _internal_response() const;
  ::lnrpc::RPCMessage* _internal_mutable_response();

  public:
  // bool reg_complete = 8;
  bool has_reg_complete() const;
  void clear_reg_complete() ;
  bool reg_complete() const;
  void set_reg_complete(bool value);

  private:
  bool _internal_reg_complete() const;
  void _internal_set_reg_complete(bool value);

  public:
  void clear_intercept_type();
  InterceptTypeCase intercept_type_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.RPCMiddlewareRequest)
 private:
  class _Internal;
  void set_has_stream_auth();
  void set_has_request();
  void set_has_response();
  void set_has_reg_complete();
  inline bool has_intercept_type() const;
  inline void clear_has_intercept_type();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 3,
      66, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RPCMiddlewareRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RPCMiddlewareRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr raw_macaroon_;
    ::google::protobuf::internal::ArenaStringPtr custom_caveat_condition_;
    ::uint64_t request_id_;
    ::uint64_t msg_id_;
    union InterceptTypeUnion {
      constexpr InterceptTypeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::StreamAuth* stream_auth_;
      ::lnrpc::RPCMessage* request_;
      ::lnrpc::RPCMessage* response_;
      bool reg_complete_;
    } intercept_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PolicyUpdateRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PolicyUpdateRequest) */ {
 public:
  inline PolicyUpdateRequest() : PolicyUpdateRequest(nullptr) {}
  ~PolicyUpdateRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyUpdateRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyUpdateRequest(const PolicyUpdateRequest& from) : PolicyUpdateRequest(nullptr, from) {}
  inline PolicyUpdateRequest(PolicyUpdateRequest&& from) noexcept
      : PolicyUpdateRequest(nullptr, std::move(from)) {}
  inline PolicyUpdateRequest& operator=(const PolicyUpdateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyUpdateRequest& operator=(PolicyUpdateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyUpdateRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ScopeCase {
    kGlobal = 1,
    kChanPoint = 2,
    SCOPE_NOT_SET = 0,
  };
  static inline const PolicyUpdateRequest* internal_default_instance() {
    return reinterpret_cast<const PolicyUpdateRequest*>(
        &_PolicyUpdateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 189;
  friend void swap(PolicyUpdateRequest& a, PolicyUpdateRequest& b) { a.Swap(&b); }
  inline void Swap(PolicyUpdateRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyUpdateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyUpdateRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PolicyUpdateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyUpdateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyUpdateRequest& from) { PolicyUpdateRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PolicyUpdateRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PolicyUpdateRequest"; }

 protected:
  explicit PolicyUpdateRequest(::google::protobuf::Arena* arena);
  PolicyUpdateRequest(::google::protobuf::Arena* arena, const PolicyUpdateRequest& from);
  PolicyUpdateRequest(::google::protobuf::Arena* arena, PolicyUpdateRequest&& from) noexcept
      : PolicyUpdateRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInboundFeeFieldNumber = 10,
    kBaseFeeMsatFieldNumber = 3,
    kFeeRateFieldNumber = 4,
    kMaxHtlcMsatFieldNumber = 6,
    kTimeLockDeltaFieldNumber = 5,
    kMinHtlcMsatSpecifiedFieldNumber = 8,
    kMinHtlcMsatFieldNumber = 7,
    kFeeRatePpmFieldNumber = 9,
    kGlobalFieldNumber = 1,
    kChanPointFieldNumber = 2,
  };
  // .lnrpc.InboundFee inbound_fee = 10;
  bool has_inbound_fee() const;
  void clear_inbound_fee() ;
  const ::lnrpc::InboundFee& inbound_fee() const;
  PROTOBUF_NODISCARD ::lnrpc::InboundFee* release_inbound_fee();
  ::lnrpc::InboundFee* mutable_inbound_fee();
  void set_allocated_inbound_fee(::lnrpc::InboundFee* value);
  void unsafe_arena_set_allocated_inbound_fee(::lnrpc::InboundFee* value);
  ::lnrpc::InboundFee* unsafe_arena_release_inbound_fee();

  private:
  const ::lnrpc::InboundFee& _internal_inbound_fee() const;
  ::lnrpc::InboundFee* _internal_mutable_inbound_fee();

  public:
  // int64 base_fee_msat = 3;
  void clear_base_fee_msat() ;
  ::int64_t base_fee_msat() const;
  void set_base_fee_msat(::int64_t value);

  private:
  ::int64_t _internal_base_fee_msat() const;
  void _internal_set_base_fee_msat(::int64_t value);

  public:
  // double fee_rate = 4;
  void clear_fee_rate() ;
  double fee_rate() const;
  void set_fee_rate(double value);

  private:
  double _internal_fee_rate() const;
  void _internal_set_fee_rate(double value);

  public:
  // uint64 max_htlc_msat = 6;
  void clear_max_htlc_msat() ;
  ::uint64_t max_htlc_msat() const;
  void set_max_htlc_msat(::uint64_t value);

  private:
  ::uint64_t _internal_max_htlc_msat() const;
  void _internal_set_max_htlc_msat(::uint64_t value);

  public:
  // uint32 time_lock_delta = 5;
  void clear_time_lock_delta() ;
  ::uint32_t time_lock_delta() const;
  void set_time_lock_delta(::uint32_t value);

  private:
  ::uint32_t _internal_time_lock_delta() const;
  void _internal_set_time_lock_delta(::uint32_t value);

  public:
  // bool min_htlc_msat_specified = 8;
  void clear_min_htlc_msat_specified() ;
  bool min_htlc_msat_specified() const;
  void set_min_htlc_msat_specified(bool value);

  private:
  bool _internal_min_htlc_msat_specified() const;
  void _internal_set_min_htlc_msat_specified(bool value);

  public:
  // uint64 min_htlc_msat = 7;
  void clear_min_htlc_msat() ;
  ::uint64_t min_htlc_msat() const;
  void set_min_htlc_msat(::uint64_t value);

  private:
  ::uint64_t _internal_min_htlc_msat() const;
  void _internal_set_min_htlc_msat(::uint64_t value);

  public:
  // uint32 fee_rate_ppm = 9;
  void clear_fee_rate_ppm() ;
  ::uint32_t fee_rate_ppm() const;
  void set_fee_rate_ppm(::uint32_t value);

  private:
  ::uint32_t _internal_fee_rate_ppm() const;
  void _internal_set_fee_rate_ppm(::uint32_t value);

  public:
  // bool global = 1;
  bool has_global() const;
  void clear_global() ;
  bool global() const;
  void set_global(bool value);

  private:
  bool _internal_global() const;
  void _internal_set_global(bool value);

  public:
  // .lnrpc.ChannelPoint chan_point = 2;
  bool has_chan_point() const;
  private:
  bool _internal_has_chan_point() const;

  public:
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  void clear_scope();
  ScopeCase scope_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.PolicyUpdateRequest)
 private:
  class _Internal;
  void set_has_global();
  void set_has_chan_point();
  inline bool has_scope() const;
  inline void clear_has_scope();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 10, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PolicyUpdateRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyUpdateRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::InboundFee* inbound_fee_;
    ::int64_t base_fee_msat_;
    double fee_rate_;
    ::uint64_t max_htlc_msat_;
    ::uint32_t time_lock_delta_;
    bool min_htlc_msat_specified_;
    ::uint64_t min_htlc_msat_;
    ::uint32_t fee_rate_ppm_;
    union ScopeUnion {
      constexpr ScopeUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      bool global_;
      ::lnrpc::ChannelPoint* chan_point_;
    } scope_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse_WaitingCloseChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse.WaitingCloseChannel) */ {
 public:
  inline PendingChannelsResponse_WaitingCloseChannel() : PendingChannelsResponse_WaitingCloseChannel(nullptr) {}
  ~PendingChannelsResponse_WaitingCloseChannel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse_WaitingCloseChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse_WaitingCloseChannel(const PendingChannelsResponse_WaitingCloseChannel& from) : PendingChannelsResponse_WaitingCloseChannel(nullptr, from) {}
  inline PendingChannelsResponse_WaitingCloseChannel(PendingChannelsResponse_WaitingCloseChannel&& from) noexcept
      : PendingChannelsResponse_WaitingCloseChannel(nullptr, std::move(from)) {}
  inline PendingChannelsResponse_WaitingCloseChannel& operator=(const PendingChannelsResponse_WaitingCloseChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse_WaitingCloseChannel& operator=(PendingChannelsResponse_WaitingCloseChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse_WaitingCloseChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse_WaitingCloseChannel* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse_WaitingCloseChannel*>(
        &_PendingChannelsResponse_WaitingCloseChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 98;
  friend void swap(PendingChannelsResponse_WaitingCloseChannel& a, PendingChannelsResponse_WaitingCloseChannel& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse_WaitingCloseChannel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse_WaitingCloseChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse_WaitingCloseChannel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse_WaitingCloseChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse_WaitingCloseChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse_WaitingCloseChannel& from) { PendingChannelsResponse_WaitingCloseChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse_WaitingCloseChannel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse.WaitingCloseChannel"; }

 protected:
  explicit PendingChannelsResponse_WaitingCloseChannel(::google::protobuf::Arena* arena);
  PendingChannelsResponse_WaitingCloseChannel(::google::protobuf::Arena* arena, const PendingChannelsResponse_WaitingCloseChannel& from);
  PendingChannelsResponse_WaitingCloseChannel(::google::protobuf::Arena* arena, PendingChannelsResponse_WaitingCloseChannel&& from) noexcept
      : PendingChannelsResponse_WaitingCloseChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClosingTxidFieldNumber = 4,
    kClosingTxHexFieldNumber = 5,
    kChannelFieldNumber = 1,
    kCommitmentsFieldNumber = 3,
    kLimboBalanceFieldNumber = 2,
  };
  // string closing_txid = 4;
  void clear_closing_txid() ;
  const std::string& closing_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_closing_txid(Arg_&& arg, Args_... args);
  std::string* mutable_closing_txid();
  PROTOBUF_NODISCARD std::string* release_closing_txid();
  void set_allocated_closing_txid(std::string* value);

  private:
  const std::string& _internal_closing_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_closing_txid(
      const std::string& value);
  std::string* _internal_mutable_closing_txid();

  public:
  // string closing_tx_hex = 5;
  void clear_closing_tx_hex() ;
  const std::string& closing_tx_hex() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_closing_tx_hex(Arg_&& arg, Args_... args);
  std::string* mutable_closing_tx_hex();
  PROTOBUF_NODISCARD std::string* release_closing_tx_hex();
  void set_allocated_closing_tx_hex(std::string* value);

  private:
  const std::string& _internal_closing_tx_hex() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_closing_tx_hex(
      const std::string& value);
  std::string* _internal_mutable_closing_tx_hex();

  public:
  // .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
  bool has_channel() const;
  void clear_channel() ;
  const ::lnrpc::PendingChannelsResponse_PendingChannel& channel() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingChannelsResponse_PendingChannel* release_channel();
  ::lnrpc::PendingChannelsResponse_PendingChannel* mutable_channel();
  void set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  void unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  ::lnrpc::PendingChannelsResponse_PendingChannel* unsafe_arena_release_channel();

  private:
  const ::lnrpc::PendingChannelsResponse_PendingChannel& _internal_channel() const;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _internal_mutable_channel();

  public:
  // .lnrpc.PendingChannelsResponse.Commitments commitments = 3;
  bool has_commitments() const;
  void clear_commitments() ;
  const ::lnrpc::PendingChannelsResponse_Commitments& commitments() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingChannelsResponse_Commitments* release_commitments();
  ::lnrpc::PendingChannelsResponse_Commitments* mutable_commitments();
  void set_allocated_commitments(::lnrpc::PendingChannelsResponse_Commitments* value);
  void unsafe_arena_set_allocated_commitments(::lnrpc::PendingChannelsResponse_Commitments* value);
  ::lnrpc::PendingChannelsResponse_Commitments* unsafe_arena_release_commitments();

  private:
  const ::lnrpc::PendingChannelsResponse_Commitments& _internal_commitments() const;
  ::lnrpc::PendingChannelsResponse_Commitments* _internal_mutable_commitments();

  public:
  // int64 limbo_balance = 2;
  void clear_limbo_balance() ;
  ::int64_t limbo_balance() const;
  void set_limbo_balance(::int64_t value);

  private:
  ::int64_t _internal_limbo_balance() const;
  void _internal_set_limbo_balance(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.WaitingCloseChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      84, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_WaitingCloseChannel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse_WaitingCloseChannel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr closing_txid_;
    ::google::protobuf::internal::ArenaStringPtr closing_tx_hex_;
    ::lnrpc::PendingChannelsResponse_PendingChannel* channel_;
    ::lnrpc::PendingChannelsResponse_Commitments* commitments_;
    ::int64_t limbo_balance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse_PendingOpenChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse.PendingOpenChannel) */ {
 public:
  inline PendingChannelsResponse_PendingOpenChannel() : PendingChannelsResponse_PendingOpenChannel(nullptr) {}
  ~PendingChannelsResponse_PendingOpenChannel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse_PendingOpenChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse_PendingOpenChannel(const PendingChannelsResponse_PendingOpenChannel& from) : PendingChannelsResponse_PendingOpenChannel(nullptr, from) {}
  inline PendingChannelsResponse_PendingOpenChannel(PendingChannelsResponse_PendingOpenChannel&& from) noexcept
      : PendingChannelsResponse_PendingOpenChannel(nullptr, std::move(from)) {}
  inline PendingChannelsResponse_PendingOpenChannel& operator=(const PendingChannelsResponse_PendingOpenChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse_PendingOpenChannel& operator=(PendingChannelsResponse_PendingOpenChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse_PendingOpenChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse_PendingOpenChannel* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse_PendingOpenChannel*>(
        &_PendingChannelsResponse_PendingOpenChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 97;
  friend void swap(PendingChannelsResponse_PendingOpenChannel& a, PendingChannelsResponse_PendingOpenChannel& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse_PendingOpenChannel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse_PendingOpenChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse_PendingOpenChannel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse_PendingOpenChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse_PendingOpenChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse_PendingOpenChannel& from) { PendingChannelsResponse_PendingOpenChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse_PendingOpenChannel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse.PendingOpenChannel"; }

 protected:
  explicit PendingChannelsResponse_PendingOpenChannel(::google::protobuf::Arena* arena);
  PendingChannelsResponse_PendingOpenChannel(::google::protobuf::Arena* arena, const PendingChannelsResponse_PendingOpenChannel& from);
  PendingChannelsResponse_PendingOpenChannel(::google::protobuf::Arena* arena, PendingChannelsResponse_PendingOpenChannel&& from) noexcept
      : PendingChannelsResponse_PendingOpenChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelFieldNumber = 1,
    kCommitFeeFieldNumber = 4,
    kCommitWeightFieldNumber = 5,
    kFeePerKwFieldNumber = 6,
    kFundingExpiryBlocksFieldNumber = 3,
  };
  // .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
  bool has_channel() const;
  void clear_channel() ;
  const ::lnrpc::PendingChannelsResponse_PendingChannel& channel() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingChannelsResponse_PendingChannel* release_channel();
  ::lnrpc::PendingChannelsResponse_PendingChannel* mutable_channel();
  void set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  void unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  ::lnrpc::PendingChannelsResponse_PendingChannel* unsafe_arena_release_channel();

  private:
  const ::lnrpc::PendingChannelsResponse_PendingChannel& _internal_channel() const;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _internal_mutable_channel();

  public:
  // int64 commit_fee = 4;
  void clear_commit_fee() ;
  ::int64_t commit_fee() const;
  void set_commit_fee(::int64_t value);

  private:
  ::int64_t _internal_commit_fee() const;
  void _internal_set_commit_fee(::int64_t value);

  public:
  // int64 commit_weight = 5;
  void clear_commit_weight() ;
  ::int64_t commit_weight() const;
  void set_commit_weight(::int64_t value);

  private:
  ::int64_t _internal_commit_weight() const;
  void _internal_set_commit_weight(::int64_t value);

  public:
  // int64 fee_per_kw = 6;
  void clear_fee_per_kw() ;
  ::int64_t fee_per_kw() const;
  void set_fee_per_kw(::int64_t value);

  private:
  ::int64_t _internal_fee_per_kw() const;
  void _internal_set_fee_per_kw(::int64_t value);

  public:
  // int32 funding_expiry_blocks = 3;
  void clear_funding_expiry_blocks() ;
  ::int32_t funding_expiry_blocks() const;
  void set_funding_expiry_blocks(::int32_t value);

  private:
  ::int32_t _internal_funding_expiry_blocks() const;
  void _internal_set_funding_expiry_blocks(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.PendingOpenChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_PendingOpenChannel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse_PendingOpenChannel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::PendingChannelsResponse_PendingChannel* channel_;
    ::int64_t commit_fee_;
    ::int64_t commit_weight_;
    ::int64_t fee_per_kw_;
    ::int32_t funding_expiry_blocks_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse_ForceClosedChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse.ForceClosedChannel) */ {
 public:
  inline PendingChannelsResponse_ForceClosedChannel() : PendingChannelsResponse_ForceClosedChannel(nullptr) {}
  ~PendingChannelsResponse_ForceClosedChannel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse_ForceClosedChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse_ForceClosedChannel(const PendingChannelsResponse_ForceClosedChannel& from) : PendingChannelsResponse_ForceClosedChannel(nullptr, from) {}
  inline PendingChannelsResponse_ForceClosedChannel(PendingChannelsResponse_ForceClosedChannel&& from) noexcept
      : PendingChannelsResponse_ForceClosedChannel(nullptr, std::move(from)) {}
  inline PendingChannelsResponse_ForceClosedChannel& operator=(const PendingChannelsResponse_ForceClosedChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse_ForceClosedChannel& operator=(PendingChannelsResponse_ForceClosedChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse_ForceClosedChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse_ForceClosedChannel* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse_ForceClosedChannel*>(
        &_PendingChannelsResponse_ForceClosedChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 101;
  friend void swap(PendingChannelsResponse_ForceClosedChannel& a, PendingChannelsResponse_ForceClosedChannel& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse_ForceClosedChannel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse_ForceClosedChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse_ForceClosedChannel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse_ForceClosedChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse_ForceClosedChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse_ForceClosedChannel& from) { PendingChannelsResponse_ForceClosedChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse_ForceClosedChannel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse.ForceClosedChannel"; }

 protected:
  explicit PendingChannelsResponse_ForceClosedChannel(::google::protobuf::Arena* arena);
  PendingChannelsResponse_ForceClosedChannel(::google::protobuf::Arena* arena, const PendingChannelsResponse_ForceClosedChannel& from);
  PendingChannelsResponse_ForceClosedChannel(::google::protobuf::Arena* arena, PendingChannelsResponse_ForceClosedChannel&& from) noexcept
      : PendingChannelsResponse_ForceClosedChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using AnchorState = PendingChannelsResponse_ForceClosedChannel_AnchorState;
  static constexpr AnchorState LIMBO = PendingChannelsResponse_ForceClosedChannel_AnchorState_LIMBO;
  static constexpr AnchorState RECOVERED = PendingChannelsResponse_ForceClosedChannel_AnchorState_RECOVERED;
  static constexpr AnchorState LOST = PendingChannelsResponse_ForceClosedChannel_AnchorState_LOST;
  static inline bool AnchorState_IsValid(int value) {
    return PendingChannelsResponse_ForceClosedChannel_AnchorState_IsValid(value);
  }
  static constexpr AnchorState AnchorState_MIN = PendingChannelsResponse_ForceClosedChannel_AnchorState_AnchorState_MIN;
  static constexpr AnchorState AnchorState_MAX = PendingChannelsResponse_ForceClosedChannel_AnchorState_AnchorState_MAX;
  static constexpr int AnchorState_ARRAYSIZE = PendingChannelsResponse_ForceClosedChannel_AnchorState_AnchorState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* AnchorState_descriptor() {
    return PendingChannelsResponse_ForceClosedChannel_AnchorState_descriptor();
  }
  template <typename T>
  static inline const std::string& AnchorState_Name(T value) {
    return PendingChannelsResponse_ForceClosedChannel_AnchorState_Name(value);
  }
  static inline bool AnchorState_Parse(absl::string_view name, AnchorState* value) {
    return PendingChannelsResponse_ForceClosedChannel_AnchorState_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPendingHtlcsFieldNumber = 8,
    kClosingTxidFieldNumber = 2,
    kChannelFieldNumber = 1,
    kLimboBalanceFieldNumber = 3,
    kMaturityHeightFieldNumber = 4,
    kBlocksTilMaturityFieldNumber = 5,
    kRecoveredBalanceFieldNumber = 6,
    kAnchorFieldNumber = 9,
  };
  // repeated .lnrpc.PendingHTLC pending_htlcs = 8;
  int pending_htlcs_size() const;
  private:
  int _internal_pending_htlcs_size() const;

  public:
  void clear_pending_htlcs() ;
  ::lnrpc::PendingHTLC* mutable_pending_htlcs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>* mutable_pending_htlcs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>& _internal_pending_htlcs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>* _internal_mutable_pending_htlcs();
  public:
  const ::lnrpc::PendingHTLC& pending_htlcs(int index) const;
  ::lnrpc::PendingHTLC* add_pending_htlcs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>& pending_htlcs() const;
  // string closing_txid = 2;
  void clear_closing_txid() ;
  const std::string& closing_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_closing_txid(Arg_&& arg, Args_... args);
  std::string* mutable_closing_txid();
  PROTOBUF_NODISCARD std::string* release_closing_txid();
  void set_allocated_closing_txid(std::string* value);

  private:
  const std::string& _internal_closing_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_closing_txid(
      const std::string& value);
  std::string* _internal_mutable_closing_txid();

  public:
  // .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
  bool has_channel() const;
  void clear_channel() ;
  const ::lnrpc::PendingChannelsResponse_PendingChannel& channel() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingChannelsResponse_PendingChannel* release_channel();
  ::lnrpc::PendingChannelsResponse_PendingChannel* mutable_channel();
  void set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  void unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  ::lnrpc::PendingChannelsResponse_PendingChannel* unsafe_arena_release_channel();

  private:
  const ::lnrpc::PendingChannelsResponse_PendingChannel& _internal_channel() const;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _internal_mutable_channel();

  public:
  // int64 limbo_balance = 3;
  void clear_limbo_balance() ;
  ::int64_t limbo_balance() const;
  void set_limbo_balance(::int64_t value);

  private:
  ::int64_t _internal_limbo_balance() const;
  void _internal_set_limbo_balance(::int64_t value);

  public:
  // uint32 maturity_height = 4;
  void clear_maturity_height() ;
  ::uint32_t maturity_height() const;
  void set_maturity_height(::uint32_t value);

  private:
  ::uint32_t _internal_maturity_height() const;
  void _internal_set_maturity_height(::uint32_t value);

  public:
  // int32 blocks_til_maturity = 5;
  void clear_blocks_til_maturity() ;
  ::int32_t blocks_til_maturity() const;
  void set_blocks_til_maturity(::int32_t value);

  private:
  ::int32_t _internal_blocks_til_maturity() const;
  void _internal_set_blocks_til_maturity(::int32_t value);

  public:
  // int64 recovered_balance = 6;
  void clear_recovered_balance() ;
  ::int64_t recovered_balance() const;
  void set_recovered_balance(::int64_t value);

  private:
  ::int64_t _internal_recovered_balance() const;
  void _internal_set_recovered_balance(::int64_t value);

  public:
  // .lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState anchor = 9;
  void clear_anchor() ;
  ::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState anchor() const;
  void set_anchor(::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState value);

  private:
  ::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState _internal_anchor() const;
  void _internal_set_anchor(::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.ForceClosedChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 2,
      77, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_ForceClosedChannel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse_ForceClosedChannel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PendingHTLC > pending_htlcs_;
    ::google::protobuf::internal::ArenaStringPtr closing_txid_;
    ::lnrpc::PendingChannelsResponse_PendingChannel* channel_;
    ::int64_t limbo_balance_;
    ::uint32_t maturity_height_;
    ::int32_t blocks_til_maturity_;
    ::int64_t recovered_balance_;
    int anchor_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse_ClosedChannel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse.ClosedChannel) */ {
 public:
  inline PendingChannelsResponse_ClosedChannel() : PendingChannelsResponse_ClosedChannel(nullptr) {}
  ~PendingChannelsResponse_ClosedChannel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse_ClosedChannel(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse_ClosedChannel(const PendingChannelsResponse_ClosedChannel& from) : PendingChannelsResponse_ClosedChannel(nullptr, from) {}
  inline PendingChannelsResponse_ClosedChannel(PendingChannelsResponse_ClosedChannel&& from) noexcept
      : PendingChannelsResponse_ClosedChannel(nullptr, std::move(from)) {}
  inline PendingChannelsResponse_ClosedChannel& operator=(const PendingChannelsResponse_ClosedChannel& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse_ClosedChannel& operator=(PendingChannelsResponse_ClosedChannel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse_ClosedChannel& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse_ClosedChannel* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse_ClosedChannel*>(
        &_PendingChannelsResponse_ClosedChannel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 100;
  friend void swap(PendingChannelsResponse_ClosedChannel& a, PendingChannelsResponse_ClosedChannel& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse_ClosedChannel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse_ClosedChannel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse_ClosedChannel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse_ClosedChannel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse_ClosedChannel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse_ClosedChannel& from) { PendingChannelsResponse_ClosedChannel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse_ClosedChannel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse.ClosedChannel"; }

 protected:
  explicit PendingChannelsResponse_ClosedChannel(::google::protobuf::Arena* arena);
  PendingChannelsResponse_ClosedChannel(::google::protobuf::Arena* arena, const PendingChannelsResponse_ClosedChannel& from);
  PendingChannelsResponse_ClosedChannel(::google::protobuf::Arena* arena, PendingChannelsResponse_ClosedChannel&& from) noexcept
      : PendingChannelsResponse_ClosedChannel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClosingTxidFieldNumber = 2,
    kChannelFieldNumber = 1,
  };
  // string closing_txid = 2;
  void clear_closing_txid() ;
  const std::string& closing_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_closing_txid(Arg_&& arg, Args_... args);
  std::string* mutable_closing_txid();
  PROTOBUF_NODISCARD std::string* release_closing_txid();
  void set_allocated_closing_txid(std::string* value);

  private:
  const std::string& _internal_closing_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_closing_txid(
      const std::string& value);
  std::string* _internal_mutable_closing_txid();

  public:
  // .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
  bool has_channel() const;
  void clear_channel() ;
  const ::lnrpc::PendingChannelsResponse_PendingChannel& channel() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingChannelsResponse_PendingChannel* release_channel();
  ::lnrpc::PendingChannelsResponse_PendingChannel* mutable_channel();
  void set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  void unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value);
  ::lnrpc::PendingChannelsResponse_PendingChannel* unsafe_arena_release_channel();

  private:
  const ::lnrpc::PendingChannelsResponse_PendingChannel& _internal_channel() const;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _internal_mutable_channel();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse.ClosedChannel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      64, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_ClosedChannel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse_ClosedChannel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr closing_txid_;
    ::lnrpc::PendingChannelsResponse_PendingChannel* channel_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Peer_FeaturesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Peer_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Peer_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Peer_FeaturesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Peer_FeaturesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Peer_FeaturesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Peer_FeaturesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Peer_FeaturesEntry_DoNotUse*>(
        &_Peer_FeaturesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PayReq_FeaturesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          PayReq_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      PayReq_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  PayReq_FeaturesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PayReq_FeaturesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit PayReq_FeaturesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const PayReq_FeaturesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const PayReq_FeaturesEntry_DoNotUse*>(
        &_PayReq_FeaturesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeUpdate_FeaturesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          NodeUpdate_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      NodeUpdate_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  NodeUpdate_FeaturesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeUpdate_FeaturesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NodeUpdate_FeaturesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NodeUpdate_FeaturesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NodeUpdate_FeaturesEntry_DoNotUse*>(
        &_NodeUpdate_FeaturesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse, std::string, ::lnrpc::FloatMetric,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse, std::string, ::lnrpc::FloatMetric,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse*>(
        &_NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      64, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class MultiChanBackup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.MultiChanBackup) */ {
 public:
  inline MultiChanBackup() : MultiChanBackup(nullptr) {}
  ~MultiChanBackup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MultiChanBackup(
      ::google::protobuf::internal::ConstantInitialized);

  inline MultiChanBackup(const MultiChanBackup& from) : MultiChanBackup(nullptr, from) {}
  inline MultiChanBackup(MultiChanBackup&& from) noexcept
      : MultiChanBackup(nullptr, std::move(from)) {}
  inline MultiChanBackup& operator=(const MultiChanBackup& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiChanBackup& operator=(MultiChanBackup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MultiChanBackup& default_instance() {
    return *internal_default_instance();
  }
  static inline const MultiChanBackup* internal_default_instance() {
    return reinterpret_cast<const MultiChanBackup*>(
        &_MultiChanBackup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 197;
  friend void swap(MultiChanBackup& a, MultiChanBackup& b) { a.Swap(&b); }
  inline void Swap(MultiChanBackup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MultiChanBackup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MultiChanBackup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MultiChanBackup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MultiChanBackup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MultiChanBackup& from) { MultiChanBackup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MultiChanBackup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.MultiChanBackup"; }

 protected:
  explicit MultiChanBackup(::google::protobuf::Arena* arena);
  MultiChanBackup(::google::protobuf::Arena* arena, const MultiChanBackup& from);
  MultiChanBackup(::google::protobuf::Arena* arena, MultiChanBackup&& from) noexcept
      : MultiChanBackup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanPointsFieldNumber = 1,
    kMultiChanBackupFieldNumber = 2,
  };
  // repeated .lnrpc.ChannelPoint chan_points = 1;
  int chan_points_size() const;
  private:
  int _internal_chan_points_size() const;

  public:
  void clear_chan_points() ;
  ::lnrpc::ChannelPoint* mutable_chan_points(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>* mutable_chan_points();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>& _internal_chan_points() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>* _internal_mutable_chan_points();
  public:
  const ::lnrpc::ChannelPoint& chan_points(int index) const;
  ::lnrpc::ChannelPoint* add_chan_points();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>& chan_points() const;
  // bytes multi_chan_backup = 2;
  void clear_multi_chan_backup() ;
  const std::string& multi_chan_backup() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_multi_chan_backup(Arg_&& arg, Args_... args);
  std::string* mutable_multi_chan_backup();
  PROTOBUF_NODISCARD std::string* release_multi_chan_backup();
  void set_allocated_multi_chan_backup(std::string* value);

  private:
  const std::string& _internal_multi_chan_backup() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_multi_chan_backup(
      const std::string& value);
  std::string* _internal_mutable_multi_chan_backup();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.MultiChanBackup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MultiChanBackup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MultiChanBackup& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelPoint > chan_points_;
    ::google::protobuf::internal::ArenaStringPtr multi_chan_backup_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class MacaroonPermissionList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.MacaroonPermissionList) */ {
 public:
  inline MacaroonPermissionList() : MacaroonPermissionList(nullptr) {}
  ~MacaroonPermissionList() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MacaroonPermissionList(
      ::google::protobuf::internal::ConstantInitialized);

  inline MacaroonPermissionList(const MacaroonPermissionList& from) : MacaroonPermissionList(nullptr, from) {}
  inline MacaroonPermissionList(MacaroonPermissionList&& from) noexcept
      : MacaroonPermissionList(nullptr, std::move(from)) {}
  inline MacaroonPermissionList& operator=(const MacaroonPermissionList& from) {
    CopyFrom(from);
    return *this;
  }
  inline MacaroonPermissionList& operator=(MacaroonPermissionList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MacaroonPermissionList& default_instance() {
    return *internal_default_instance();
  }
  static inline const MacaroonPermissionList* internal_default_instance() {
    return reinterpret_cast<const MacaroonPermissionList*>(
        &_MacaroonPermissionList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 212;
  friend void swap(MacaroonPermissionList& a, MacaroonPermissionList& b) { a.Swap(&b); }
  inline void Swap(MacaroonPermissionList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MacaroonPermissionList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MacaroonPermissionList* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MacaroonPermissionList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MacaroonPermissionList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MacaroonPermissionList& from) { MacaroonPermissionList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MacaroonPermissionList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.MacaroonPermissionList"; }

 protected:
  explicit MacaroonPermissionList(::google::protobuf::Arena* arena);
  MacaroonPermissionList(::google::protobuf::Arena* arena, const MacaroonPermissionList& from);
  MacaroonPermissionList(::google::protobuf::Arena* arena, MacaroonPermissionList&& from) noexcept
      : MacaroonPermissionList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermissionsFieldNumber = 1,
  };
  // repeated .lnrpc.MacaroonPermission permissions = 1;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::lnrpc::MacaroonPermission* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* mutable_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* _internal_mutable_permissions();
  public:
  const ::lnrpc::MacaroonPermission& permissions(int index) const;
  ::lnrpc::MacaroonPermission* add_permissions();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& permissions() const;
  // @@protoc_insertion_point(class_scope:lnrpc.MacaroonPermissionList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MacaroonPermissionList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MacaroonPermissionList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::MacaroonPermission > permissions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class MacaroonId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.MacaroonId) */ {
 public:
  inline MacaroonId() : MacaroonId(nullptr) {}
  ~MacaroonId() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MacaroonId(
      ::google::protobuf::internal::ConstantInitialized);

  inline MacaroonId(const MacaroonId& from) : MacaroonId(nullptr, from) {}
  inline MacaroonId(MacaroonId&& from) noexcept
      : MacaroonId(nullptr, std::move(from)) {}
  inline MacaroonId& operator=(const MacaroonId& from) {
    CopyFrom(from);
    return *this;
  }
  inline MacaroonId& operator=(MacaroonId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MacaroonId& default_instance() {
    return *internal_default_instance();
  }
  static inline const MacaroonId* internal_default_instance() {
    return reinterpret_cast<const MacaroonId*>(
        &_MacaroonId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 218;
  friend void swap(MacaroonId& a, MacaroonId& b) { a.Swap(&b); }
  inline void Swap(MacaroonId* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MacaroonId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MacaroonId* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<MacaroonId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MacaroonId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MacaroonId& from) { MacaroonId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MacaroonId* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.MacaroonId"; }

 protected:
  explicit MacaroonId(::google::protobuf::Arena* arena);
  MacaroonId(::google::protobuf::Arena* arena, const MacaroonId& from);
  MacaroonId(::google::protobuf::Arena* arena, MacaroonId&& from) noexcept
      : MacaroonId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOpsFieldNumber = 3,
    kNonceFieldNumber = 1,
    kStorageIdFieldNumber = 2,
  };
  // repeated .lnrpc.Op ops = 3;
  int ops_size() const;
  private:
  int _internal_ops_size() const;

  public:
  void clear_ops() ;
  ::lnrpc::Op* mutable_ops(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Op>* mutable_ops();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>& _internal_ops() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Op>* _internal_mutable_ops();
  public:
  const ::lnrpc::Op& ops(int index) const;
  ::lnrpc::Op* add_ops();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>& ops() const;
  // bytes nonce = 1;
  void clear_nonce() ;
  const std::string& nonce() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nonce(Arg_&& arg, Args_... args);
  std::string* mutable_nonce();
  PROTOBUF_NODISCARD std::string* release_nonce();
  void set_allocated_nonce(std::string* value);

  private:
  const std::string& _internal_nonce() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nonce(
      const std::string& value);
  std::string* _internal_mutable_nonce();

  public:
  // bytes storageId = 2;
  void clear_storageid() ;
  const std::string& storageid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_storageid(Arg_&& arg, Args_... args);
  std::string* mutable_storageid();
  PROTOBUF_NODISCARD std::string* release_storageid();
  void set_allocated_storageid(std::string* value);

  private:
  const std::string& _internal_storageid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_storageid(
      const std::string& value);
  std::string* _internal_mutable_storageid();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.MacaroonId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MacaroonId_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MacaroonId& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Op > ops_;
    ::google::protobuf::internal::ArenaStringPtr nonce_;
    ::google::protobuf::internal::ArenaStringPtr storageid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListAliasesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListAliasesResponse) */ {
 public:
  inline ListAliasesResponse() : ListAliasesResponse(nullptr) {}
  ~ListAliasesResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAliasesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAliasesResponse(const ListAliasesResponse& from) : ListAliasesResponse(nullptr, from) {}
  inline ListAliasesResponse(ListAliasesResponse&& from) noexcept
      : ListAliasesResponse(nullptr, std::move(from)) {}
  inline ListAliasesResponse& operator=(const ListAliasesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAliasesResponse& operator=(ListAliasesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAliasesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAliasesResponse* internal_default_instance() {
    return reinterpret_cast<const ListAliasesResponse*>(
        &_ListAliasesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(ListAliasesResponse& a, ListAliasesResponse& b) { a.Swap(&b); }
  inline void Swap(ListAliasesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAliasesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAliasesResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListAliasesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAliasesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAliasesResponse& from) { ListAliasesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAliasesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListAliasesResponse"; }

 protected:
  explicit ListAliasesResponse(::google::protobuf::Arena* arena);
  ListAliasesResponse(::google::protobuf::Arena* arena, const ListAliasesResponse& from);
  ListAliasesResponse(::google::protobuf::Arena* arena, ListAliasesResponse&& from) noexcept
      : ListAliasesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAliasMapsFieldNumber = 1,
  };
  // repeated .lnrpc.AliasMap alias_maps = 1;
  int alias_maps_size() const;
  private:
  int _internal_alias_maps_size() const;

  public:
  void clear_alias_maps() ;
  ::lnrpc::AliasMap* mutable_alias_maps(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>* mutable_alias_maps();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>& _internal_alias_maps() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>* _internal_mutable_alias_maps();
  public:
  const ::lnrpc::AliasMap& alias_maps(int index) const;
  ::lnrpc::AliasMap* add_alias_maps();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>& alias_maps() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ListAliasesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAliasesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAliasesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::AliasMap > alias_maps_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class LightningNode_FeaturesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LightningNode_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LightningNode_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  LightningNode_FeaturesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightningNode_FeaturesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LightningNode_FeaturesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LightningNode_FeaturesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LightningNode_FeaturesEntry_DoNotUse*>(
        &_LightningNode_FeaturesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class KeyDescriptor final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.KeyDescriptor) */ {
 public:
  inline KeyDescriptor() : KeyDescriptor(nullptr) {}
  ~KeyDescriptor() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeyDescriptor(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeyDescriptor(const KeyDescriptor& from) : KeyDescriptor(nullptr, from) {}
  inline KeyDescriptor(KeyDescriptor&& from) noexcept
      : KeyDescriptor(nullptr, std::move(from)) {}
  inline KeyDescriptor& operator=(const KeyDescriptor& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyDescriptor& operator=(KeyDescriptor&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyDescriptor& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyDescriptor* internal_default_instance() {
    return reinterpret_cast<const KeyDescriptor*>(
        &_KeyDescriptor_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 85;
  friend void swap(KeyDescriptor& a, KeyDescriptor& b) { a.Swap(&b); }
  inline void Swap(KeyDescriptor* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyDescriptor* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyDescriptor* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KeyDescriptor>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyDescriptor& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeyDescriptor& from) { KeyDescriptor::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeyDescriptor* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.KeyDescriptor"; }

 protected:
  explicit KeyDescriptor(::google::protobuf::Arena* arena);
  KeyDescriptor(::google::protobuf::Arena* arena, const KeyDescriptor& from);
  KeyDescriptor(::google::protobuf::Arena* arena, KeyDescriptor&& from) noexcept
      : KeyDescriptor(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawKeyBytesFieldNumber = 1,
    kKeyLocFieldNumber = 2,
  };
  // bytes raw_key_bytes = 1;
  void clear_raw_key_bytes() ;
  const std::string& raw_key_bytes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_key_bytes(Arg_&& arg, Args_... args);
  std::string* mutable_raw_key_bytes();
  PROTOBUF_NODISCARD std::string* release_raw_key_bytes();
  void set_allocated_raw_key_bytes(std::string* value);

  private:
  const std::string& _internal_raw_key_bytes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_key_bytes(
      const std::string& value);
  std::string* _internal_mutable_raw_key_bytes();

  public:
  // .lnrpc.KeyLocator key_loc = 2;
  bool has_key_loc() const;
  void clear_key_loc() ;
  const ::lnrpc::KeyLocator& key_loc() const;
  PROTOBUF_NODISCARD ::lnrpc::KeyLocator* release_key_loc();
  ::lnrpc::KeyLocator* mutable_key_loc();
  void set_allocated_key_loc(::lnrpc::KeyLocator* value);
  void unsafe_arena_set_allocated_key_loc(::lnrpc::KeyLocator* value);
  ::lnrpc::KeyLocator* unsafe_arena_release_key_loc();

  private:
  const ::lnrpc::KeyLocator& _internal_key_loc() const;
  ::lnrpc::KeyLocator* _internal_mutable_key_loc();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.KeyDescriptor)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KeyDescriptor_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeyDescriptor& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr raw_key_bytes_;
    ::lnrpc::KeyLocator* key_loc_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class InvoiceHTLC final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.InvoiceHTLC) */ {
 public:
  inline InvoiceHTLC() : InvoiceHTLC(nullptr) {}
  ~InvoiceHTLC() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR InvoiceHTLC(
      ::google::protobuf::internal::ConstantInitialized);

  inline InvoiceHTLC(const InvoiceHTLC& from) : InvoiceHTLC(nullptr, from) {}
  inline InvoiceHTLC(InvoiceHTLC&& from) noexcept
      : InvoiceHTLC(nullptr, std::move(from)) {}
  inline InvoiceHTLC& operator=(const InvoiceHTLC& from) {
    CopyFrom(from);
    return *this;
  }
  inline InvoiceHTLC& operator=(InvoiceHTLC&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InvoiceHTLC& default_instance() {
    return *internal_default_instance();
  }
  static inline const InvoiceHTLC* internal_default_instance() {
    return reinterpret_cast<const InvoiceHTLC*>(
        &_InvoiceHTLC_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 161;
  friend void swap(InvoiceHTLC& a, InvoiceHTLC& b) { a.Swap(&b); }
  inline void Swap(InvoiceHTLC* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InvoiceHTLC* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InvoiceHTLC* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<InvoiceHTLC>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const InvoiceHTLC& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const InvoiceHTLC& from) { InvoiceHTLC::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(InvoiceHTLC* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.InvoiceHTLC"; }

 protected:
  explicit InvoiceHTLC(::google::protobuf::Arena* arena);
  InvoiceHTLC(::google::protobuf::Arena* arena, const InvoiceHTLC& from);
  InvoiceHTLC(::google::protobuf::Arena* arena, InvoiceHTLC&& from) noexcept
      : InvoiceHTLC(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomRecordsFieldNumber = 9,
    kCustomChannelDataFieldNumber = 12,
    kAmpFieldNumber = 11,
    kChanIdFieldNumber = 1,
    kHtlcIndexFieldNumber = 2,
    kAmtMsatFieldNumber = 3,
    kAcceptTimeFieldNumber = 5,
    kAcceptHeightFieldNumber = 4,
    kExpiryHeightFieldNumber = 7,
    kResolveTimeFieldNumber = 6,
    kMppTotalAmtMsatFieldNumber = 10,
    kStateFieldNumber = 8,
  };
  // map<uint64, bytes> custom_records = 9;
  int custom_records_size() const;
  private:
  int _internal_custom_records_size() const;

  public:
  void clear_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_custom_records();

  public:
  // bytes custom_channel_data = 12;
  void clear_custom_channel_data() ;
  const std::string& custom_channel_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_channel_data(Arg_&& arg, Args_... args);
  std::string* mutable_custom_channel_data();
  PROTOBUF_NODISCARD std::string* release_custom_channel_data();
  void set_allocated_custom_channel_data(std::string* value);

  private:
  const std::string& _internal_custom_channel_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_channel_data(
      const std::string& value);
  std::string* _internal_mutable_custom_channel_data();

  public:
  // .lnrpc.AMP amp = 11;
  bool has_amp() const;
  void clear_amp() ;
  const ::lnrpc::AMP& amp() const;
  PROTOBUF_NODISCARD ::lnrpc::AMP* release_amp();
  ::lnrpc::AMP* mutable_amp();
  void set_allocated_amp(::lnrpc::AMP* value);
  void unsafe_arena_set_allocated_amp(::lnrpc::AMP* value);
  ::lnrpc::AMP* unsafe_arena_release_amp();

  private:
  const ::lnrpc::AMP& _internal_amp() const;
  ::lnrpc::AMP* _internal_mutable_amp();

  public:
  // uint64 chan_id = 1 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // uint64 htlc_index = 2;
  void clear_htlc_index() ;
  ::uint64_t htlc_index() const;
  void set_htlc_index(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_index() const;
  void _internal_set_htlc_index(::uint64_t value);

  public:
  // uint64 amt_msat = 3;
  void clear_amt_msat() ;
  ::uint64_t amt_msat() const;
  void set_amt_msat(::uint64_t value);

  private:
  ::uint64_t _internal_amt_msat() const;
  void _internal_set_amt_msat(::uint64_t value);

  public:
  // int64 accept_time = 5;
  void clear_accept_time() ;
  ::int64_t accept_time() const;
  void set_accept_time(::int64_t value);

  private:
  ::int64_t _internal_accept_time() const;
  void _internal_set_accept_time(::int64_t value);

  public:
  // int32 accept_height = 4;
  void clear_accept_height() ;
  ::int32_t accept_height() const;
  void set_accept_height(::int32_t value);

  private:
  ::int32_t _internal_accept_height() const;
  void _internal_set_accept_height(::int32_t value);

  public:
  // int32 expiry_height = 7;
  void clear_expiry_height() ;
  ::int32_t expiry_height() const;
  void set_expiry_height(::int32_t value);

  private:
  ::int32_t _internal_expiry_height() const;
  void _internal_set_expiry_height(::int32_t value);

  public:
  // int64 resolve_time = 6;
  void clear_resolve_time() ;
  ::int64_t resolve_time() const;
  void set_resolve_time(::int64_t value);

  private:
  ::int64_t _internal_resolve_time() const;
  void _internal_set_resolve_time(::int64_t value);

  public:
  // uint64 mpp_total_amt_msat = 10;
  void clear_mpp_total_amt_msat() ;
  ::uint64_t mpp_total_amt_msat() const;
  void set_mpp_total_amt_msat(::uint64_t value);

  private:
  ::uint64_t _internal_mpp_total_amt_msat() const;
  void _internal_set_mpp_total_amt_msat(::uint64_t value);

  public:
  // .lnrpc.InvoiceHTLCState state = 8;
  void clear_state() ;
  ::lnrpc::InvoiceHTLCState state() const;
  void set_state(::lnrpc::InvoiceHTLCState value);

  private:
  ::lnrpc::InvoiceHTLCState _internal_state() const;
  void _internal_set_state(::lnrpc::InvoiceHTLCState value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.InvoiceHTLC)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_InvoiceHTLC_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const InvoiceHTLC& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<InvoiceHTLC_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        custom_records_;
    ::google::protobuf::internal::ArenaStringPtr custom_channel_data_;
    ::lnrpc::AMP* amp_;
    ::uint64_t chan_id_;
    ::uint64_t htlc_index_;
    ::uint64_t amt_msat_;
    ::int64_t accept_time_;
    ::int32_t accept_height_;
    ::int32_t expiry_height_;
    ::int64_t resolve_time_;
    ::uint64_t mpp_total_amt_msat_;
    int state_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Invoice_FeaturesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Invoice_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Invoice_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Invoice_FeaturesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Invoice_FeaturesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Invoice_FeaturesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Invoice_FeaturesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Invoice_FeaturesEntry_DoNotUse*>(
        &_Invoice_FeaturesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Invoice_AmpInvoiceStateEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Invoice_AmpInvoiceStateEntry_DoNotUse, std::string, ::lnrpc::AMPInvoiceState,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Invoice_AmpInvoiceStateEntry_DoNotUse, std::string, ::lnrpc::AMPInvoiceState,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  Invoice_AmpInvoiceStateEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Invoice_AmpInvoiceStateEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Invoice_AmpInvoiceStateEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Invoice_AmpInvoiceStateEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Invoice_AmpInvoiceStateEntry_DoNotUse*>(
        &_Invoice_AmpInvoiceStateEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      46, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Hop final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Hop) */ {
 public:
  inline Hop() : Hop(nullptr) {}
  ~Hop() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Hop(
      ::google::protobuf::internal::ConstantInitialized);

  inline Hop(const Hop& from) : Hop(nullptr, from) {}
  inline Hop(Hop&& from) noexcept
      : Hop(nullptr, std::move(from)) {}
  inline Hop& operator=(const Hop& from) {
    CopyFrom(from);
    return *this;
  }
  inline Hop& operator=(Hop&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Hop& default_instance() {
    return *internal_default_instance();
  }
  static inline const Hop* internal_default_instance() {
    return reinterpret_cast<const Hop*>(
        &_Hop_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 118;
  friend void swap(Hop& a, Hop& b) { a.Swap(&b); }
  inline void Swap(Hop* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Hop* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Hop* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Hop>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Hop& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Hop& from) { Hop::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Hop* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Hop"; }

 protected:
  explicit Hop(::google::protobuf::Arena* arena);
  Hop(::google::protobuf::Arena* arena, const Hop& from);
  Hop(::google::protobuf::Arena* arena, Hop&& from) noexcept
      : Hop(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomRecordsFieldNumber = 11,
    kPubKeyFieldNumber = 8,
    kMetadataFieldNumber = 13,
    kBlindingPointFieldNumber = 14,
    kEncryptedDataFieldNumber = 15,
    kMppRecordFieldNumber = 10,
    kAmpRecordFieldNumber = 12,
    kChanIdFieldNumber = 1,
    kChanCapacityFieldNumber = 2,
    kAmtToForwardFieldNumber = 3,
    kFeeFieldNumber = 4,
    kAmtToForwardMsatFieldNumber = 6,
    kFeeMsatFieldNumber = 7,
    kExpiryFieldNumber = 5,
    kTlvPayloadFieldNumber = 9,
    kTotalAmtMsatFieldNumber = 16,
  };
  // map<uint64, bytes> custom_records = 11;
  int custom_records_size() const;
  private:
  int _internal_custom_records_size() const;

  public:
  void clear_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_custom_records();

  public:
  // string pub_key = 8;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // bytes metadata = 13;
  void clear_metadata() ;
  const std::string& metadata() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_metadata(Arg_&& arg, Args_... args);
  std::string* mutable_metadata();
  PROTOBUF_NODISCARD std::string* release_metadata();
  void set_allocated_metadata(std::string* value);

  private:
  const std::string& _internal_metadata() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_metadata(
      const std::string& value);
  std::string* _internal_mutable_metadata();

  public:
  // bytes blinding_point = 14;
  void clear_blinding_point() ;
  const std::string& blinding_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_blinding_point(Arg_&& arg, Args_... args);
  std::string* mutable_blinding_point();
  PROTOBUF_NODISCARD std::string* release_blinding_point();
  void set_allocated_blinding_point(std::string* value);

  private:
  const std::string& _internal_blinding_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_blinding_point(
      const std::string& value);
  std::string* _internal_mutable_blinding_point();

  public:
  // bytes encrypted_data = 15;
  void clear_encrypted_data() ;
  const std::string& encrypted_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_encrypted_data(Arg_&& arg, Args_... args);
  std::string* mutable_encrypted_data();
  PROTOBUF_NODISCARD std::string* release_encrypted_data();
  void set_allocated_encrypted_data(std::string* value);

  private:
  const std::string& _internal_encrypted_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_encrypted_data(
      const std::string& value);
  std::string* _internal_mutable_encrypted_data();

  public:
  // .lnrpc.MPPRecord mpp_record = 10;
  bool has_mpp_record() const;
  void clear_mpp_record() ;
  const ::lnrpc::MPPRecord& mpp_record() const;
  PROTOBUF_NODISCARD ::lnrpc::MPPRecord* release_mpp_record();
  ::lnrpc::MPPRecord* mutable_mpp_record();
  void set_allocated_mpp_record(::lnrpc::MPPRecord* value);
  void unsafe_arena_set_allocated_mpp_record(::lnrpc::MPPRecord* value);
  ::lnrpc::MPPRecord* unsafe_arena_release_mpp_record();

  private:
  const ::lnrpc::MPPRecord& _internal_mpp_record() const;
  ::lnrpc::MPPRecord* _internal_mutable_mpp_record();

  public:
  // .lnrpc.AMPRecord amp_record = 12;
  bool has_amp_record() const;
  void clear_amp_record() ;
  const ::lnrpc::AMPRecord& amp_record() const;
  PROTOBUF_NODISCARD ::lnrpc::AMPRecord* release_amp_record();
  ::lnrpc::AMPRecord* mutable_amp_record();
  void set_allocated_amp_record(::lnrpc::AMPRecord* value);
  void unsafe_arena_set_allocated_amp_record(::lnrpc::AMPRecord* value);
  ::lnrpc::AMPRecord* unsafe_arena_release_amp_record();

  private:
  const ::lnrpc::AMPRecord& _internal_amp_record() const;
  ::lnrpc::AMPRecord* _internal_mutable_amp_record();

  public:
  // uint64 chan_id = 1 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // int64 chan_capacity = 2 [deprecated = true];
  [[deprecated]]  void clear_chan_capacity() ;
  [[deprecated]] ::int64_t chan_capacity() const;
  [[deprecated]] void set_chan_capacity(::int64_t value);

  private:
  ::int64_t _internal_chan_capacity() const;
  void _internal_set_chan_capacity(::int64_t value);

  public:
  // int64 amt_to_forward = 3 [deprecated = true];
  [[deprecated]]  void clear_amt_to_forward() ;
  [[deprecated]] ::int64_t amt_to_forward() const;
  [[deprecated]] void set_amt_to_forward(::int64_t value);

  private:
  ::int64_t _internal_amt_to_forward() const;
  void _internal_set_amt_to_forward(::int64_t value);

  public:
  // int64 fee = 4 [deprecated = true];
  [[deprecated]]  void clear_fee() ;
  [[deprecated]] ::int64_t fee() const;
  [[deprecated]] void set_fee(::int64_t value);

  private:
  ::int64_t _internal_fee() const;
  void _internal_set_fee(::int64_t value);

  public:
  // int64 amt_to_forward_msat = 6;
  void clear_amt_to_forward_msat() ;
  ::int64_t amt_to_forward_msat() const;
  void set_amt_to_forward_msat(::int64_t value);

  private:
  ::int64_t _internal_amt_to_forward_msat() const;
  void _internal_set_amt_to_forward_msat(::int64_t value);

  public:
  // int64 fee_msat = 7;
  void clear_fee_msat() ;
  ::int64_t fee_msat() const;
  void set_fee_msat(::int64_t value);

  private:
  ::int64_t _internal_fee_msat() const;
  void _internal_set_fee_msat(::int64_t value);

  public:
  // uint32 expiry = 5;
  void clear_expiry() ;
  ::uint32_t expiry() const;
  void set_expiry(::uint32_t value);

  private:
  ::uint32_t _internal_expiry() const;
  void _internal_set_expiry(::uint32_t value);

  public:
  // bool tlv_payload = 9 [deprecated = true];
  [[deprecated]]  void clear_tlv_payload() ;
  [[deprecated]] bool tlv_payload() const;
  [[deprecated]] void set_tlv_payload(bool value);

  private:
  bool _internal_tlv_payload() const;
  void _internal_set_tlv_payload(bool value);

  public:
  // uint64 total_amt_msat = 16;
  void clear_total_amt_msat() ;
  ::uint64_t total_amt_msat() const;
  void set_total_amt_msat(::uint64_t value);

  private:
  ::uint64_t _internal_total_amt_msat() const;
  void _internal_set_total_amt_msat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Hop)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 3,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Hop_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Hop& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<Hop_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        custom_records_;
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    ::google::protobuf::internal::ArenaStringPtr metadata_;
    ::google::protobuf::internal::ArenaStringPtr blinding_point_;
    ::google::protobuf::internal::ArenaStringPtr encrypted_data_;
    ::lnrpc::MPPRecord* mpp_record_;
    ::lnrpc::AMPRecord* amp_record_;
    ::uint64_t chan_id_;
    ::int64_t chan_capacity_;
    ::int64_t amt_to_forward_;
    ::int64_t fee_;
    ::int64_t amt_to_forward_msat_;
    ::int64_t fee_msat_;
    ::uint32_t expiry_;
    bool tlv_payload_;
    ::uint64_t total_amt_msat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetInfoResponse_FeaturesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetInfoResponse_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetInfoResponse_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetInfoResponse_FeaturesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInfoResponse_FeaturesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetInfoResponse_FeaturesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetInfoResponse_FeaturesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetInfoResponse_FeaturesEntry_DoNotUse*>(
        &_GetInfoResponse_FeaturesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetDebugInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.GetDebugInfoResponse) */ {
 public:
  inline GetDebugInfoResponse() : GetDebugInfoResponse(nullptr) {}
  ~GetDebugInfoResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetDebugInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetDebugInfoResponse(const GetDebugInfoResponse& from) : GetDebugInfoResponse(nullptr, from) {}
  inline GetDebugInfoResponse(GetDebugInfoResponse&& from) noexcept
      : GetDebugInfoResponse(nullptr, std::move(from)) {}
  inline GetDebugInfoResponse& operator=(const GetDebugInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDebugInfoResponse& operator=(GetDebugInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDebugInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDebugInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetDebugInfoResponse*>(
        &_GetDebugInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 66;
  friend void swap(GetDebugInfoResponse& a, GetDebugInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetDebugInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDebugInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDebugInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetDebugInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDebugInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetDebugInfoResponse& from) { GetDebugInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDebugInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetDebugInfoResponse"; }

 protected:
  explicit GetDebugInfoResponse(::google::protobuf::Arena* arena);
  GetDebugInfoResponse(::google::protobuf::Arena* arena, const GetDebugInfoResponse& from);
  GetDebugInfoResponse(::google::protobuf::Arena* arena, GetDebugInfoResponse&& from) noexcept
      : GetDebugInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfigFieldNumber = 1,
    kLogFieldNumber = 2,
  };
  // map<string, string> config = 1;
  int config_size() const;
  private:
  int _internal_config_size() const;

  public:
  void clear_config() ;
  const ::google::protobuf::Map<std::string, std::string>& config() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_config();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_config() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_config();

  public:
  // repeated string log = 2;
  int log_size() const;
  private:
  int _internal_log_size() const;

  public:
  void clear_log() ;
  const std::string& log(int index) const;
  std::string* mutable_log(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log(int index, Arg_&& value, Args_... args);
  std::string* add_log();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_log(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& log() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_log();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_log() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_log();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.GetDebugInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetDebugInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetDebugInfoResponse& from_msg);
    ::google::protobuf::internal::MapField<GetDebugInfoResponse_ConfigEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        config_;
    ::google::protobuf::RepeatedPtrField<std::string> log_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ForwardingHistoryResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ForwardingHistoryResponse) */ {
 public:
  inline ForwardingHistoryResponse() : ForwardingHistoryResponse(nullptr) {}
  ~ForwardingHistoryResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ForwardingHistoryResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ForwardingHistoryResponse(const ForwardingHistoryResponse& from) : ForwardingHistoryResponse(nullptr, from) {}
  inline ForwardingHistoryResponse(ForwardingHistoryResponse&& from) noexcept
      : ForwardingHistoryResponse(nullptr, std::move(from)) {}
  inline ForwardingHistoryResponse& operator=(const ForwardingHistoryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ForwardingHistoryResponse& operator=(ForwardingHistoryResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ForwardingHistoryResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ForwardingHistoryResponse* internal_default_instance() {
    return reinterpret_cast<const ForwardingHistoryResponse*>(
        &_ForwardingHistoryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 194;
  friend void swap(ForwardingHistoryResponse& a, ForwardingHistoryResponse& b) { a.Swap(&b); }
  inline void Swap(ForwardingHistoryResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ForwardingHistoryResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ForwardingHistoryResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ForwardingHistoryResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ForwardingHistoryResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ForwardingHistoryResponse& from) { ForwardingHistoryResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ForwardingHistoryResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ForwardingHistoryResponse"; }

 protected:
  explicit ForwardingHistoryResponse(::google::protobuf::Arena* arena);
  ForwardingHistoryResponse(::google::protobuf::Arena* arena, const ForwardingHistoryResponse& from);
  ForwardingHistoryResponse(::google::protobuf::Arena* arena, ForwardingHistoryResponse&& from) noexcept
      : ForwardingHistoryResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kForwardingEventsFieldNumber = 1,
    kLastOffsetIndexFieldNumber = 2,
  };
  // repeated .lnrpc.ForwardingEvent forwarding_events = 1;
  int forwarding_events_size() const;
  private:
  int _internal_forwarding_events_size() const;

  public:
  void clear_forwarding_events() ;
  ::lnrpc::ForwardingEvent* mutable_forwarding_events(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>* mutable_forwarding_events();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>& _internal_forwarding_events() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>* _internal_mutable_forwarding_events();
  public:
  const ::lnrpc::ForwardingEvent& forwarding_events(int index) const;
  ::lnrpc::ForwardingEvent* add_forwarding_events();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>& forwarding_events() const;
  // uint32 last_offset_index = 2;
  void clear_last_offset_index() ;
  ::uint32_t last_offset_index() const;
  void set_last_offset_index(::uint32_t value);

  private:
  ::uint32_t _internal_last_offset_index() const;
  void _internal_set_last_offset_index(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ForwardingHistoryResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ForwardingHistoryResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ForwardingHistoryResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ForwardingEvent > forwarding_events_;
    ::uint32_t last_offset_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FeeReportResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FeeReportResponse) */ {
 public:
  inline FeeReportResponse() : FeeReportResponse(nullptr) {}
  ~FeeReportResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FeeReportResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FeeReportResponse(const FeeReportResponse& from) : FeeReportResponse(nullptr, from) {}
  inline FeeReportResponse(FeeReportResponse&& from) noexcept
      : FeeReportResponse(nullptr, std::move(from)) {}
  inline FeeReportResponse& operator=(const FeeReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FeeReportResponse& operator=(FeeReportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FeeReportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FeeReportResponse* internal_default_instance() {
    return reinterpret_cast<const FeeReportResponse*>(
        &_FeeReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 187;
  friend void swap(FeeReportResponse& a, FeeReportResponse& b) { a.Swap(&b); }
  inline void Swap(FeeReportResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FeeReportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FeeReportResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FeeReportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FeeReportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FeeReportResponse& from) { FeeReportResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FeeReportResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FeeReportResponse"; }

 protected:
  explicit FeeReportResponse(::google::protobuf::Arena* arena);
  FeeReportResponse(::google::protobuf::Arena* arena, const FeeReportResponse& from);
  FeeReportResponse(::google::protobuf::Arena* arena, FeeReportResponse&& from) noexcept
      : FeeReportResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelFeesFieldNumber = 1,
    kDayFeeSumFieldNumber = 2,
    kWeekFeeSumFieldNumber = 3,
    kMonthFeeSumFieldNumber = 4,
  };
  // repeated .lnrpc.ChannelFeeReport channel_fees = 1;
  int channel_fees_size() const;
  private:
  int _internal_channel_fees_size() const;

  public:
  void clear_channel_fees() ;
  ::lnrpc::ChannelFeeReport* mutable_channel_fees(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>* mutable_channel_fees();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>& _internal_channel_fees() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>* _internal_mutable_channel_fees();
  public:
  const ::lnrpc::ChannelFeeReport& channel_fees(int index) const;
  ::lnrpc::ChannelFeeReport* add_channel_fees();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>& channel_fees() const;
  // uint64 day_fee_sum = 2;
  void clear_day_fee_sum() ;
  ::uint64_t day_fee_sum() const;
  void set_day_fee_sum(::uint64_t value);

  private:
  ::uint64_t _internal_day_fee_sum() const;
  void _internal_set_day_fee_sum(::uint64_t value);

  public:
  // uint64 week_fee_sum = 3;
  void clear_week_fee_sum() ;
  ::uint64_t week_fee_sum() const;
  void set_week_fee_sum(::uint64_t value);

  private:
  ::uint64_t _internal_week_fee_sum() const;
  void _internal_set_week_fee_sum(::uint64_t value);

  public:
  // uint64 month_fee_sum = 4;
  void clear_month_fee_sum() ;
  ::uint64_t month_fee_sum() const;
  void set_month_fee_sum(::uint64_t value);

  private:
  ::uint64_t _internal_month_fee_sum() const;
  void _internal_set_month_fee_sum(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.FeeReportResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FeeReportResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FeeReportResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelFeeReport > channel_fees_;
    ::uint64_t day_fee_sum_;
    ::uint64_t week_fee_sum_;
    ::uint64_t month_fee_sum_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Failure final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Failure) */ {
 public:
  inline Failure() : Failure(nullptr) {}
  ~Failure() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Failure(
      ::google::protobuf::internal::ConstantInitialized);

  inline Failure(const Failure& from) : Failure(nullptr, from) {}
  inline Failure(Failure&& from) noexcept
      : Failure(nullptr, std::move(from)) {}
  inline Failure& operator=(const Failure& from) {
    CopyFrom(from);
    return *this;
  }
  inline Failure& operator=(Failure&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Failure& default_instance() {
    return *internal_default_instance();
  }
  static inline const Failure* internal_default_instance() {
    return reinterpret_cast<const Failure*>(
        &_Failure_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 216;
  friend void swap(Failure& a, Failure& b) { a.Swap(&b); }
  inline void Swap(Failure* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Failure* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Failure* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Failure>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Failure& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Failure& from) { Failure::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Failure* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Failure"; }

 protected:
  explicit Failure(::google::protobuf::Arena* arena);
  Failure(::google::protobuf::Arena* arena, const Failure& from);
  Failure(::google::protobuf::Arena* arena, Failure&& from) noexcept
      : Failure(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using FailureCode = Failure_FailureCode;
  static constexpr FailureCode RESERVED = Failure_FailureCode_RESERVED;
  static constexpr FailureCode INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS = Failure_FailureCode_INCORRECT_OR_UNKNOWN_PAYMENT_DETAILS;
  static constexpr FailureCode INCORRECT_PAYMENT_AMOUNT = Failure_FailureCode_INCORRECT_PAYMENT_AMOUNT;
  static constexpr FailureCode FINAL_INCORRECT_CLTV_EXPIRY = Failure_FailureCode_FINAL_INCORRECT_CLTV_EXPIRY;
  static constexpr FailureCode FINAL_INCORRECT_HTLC_AMOUNT = Failure_FailureCode_FINAL_INCORRECT_HTLC_AMOUNT;
  static constexpr FailureCode FINAL_EXPIRY_TOO_SOON = Failure_FailureCode_FINAL_EXPIRY_TOO_SOON;
  static constexpr FailureCode INVALID_REALM = Failure_FailureCode_INVALID_REALM;
  static constexpr FailureCode EXPIRY_TOO_SOON = Failure_FailureCode_EXPIRY_TOO_SOON;
  static constexpr FailureCode INVALID_ONION_VERSION = Failure_FailureCode_INVALID_ONION_VERSION;
  static constexpr FailureCode INVALID_ONION_HMAC = Failure_FailureCode_INVALID_ONION_HMAC;
  static constexpr FailureCode INVALID_ONION_KEY = Failure_FailureCode_INVALID_ONION_KEY;
  static constexpr FailureCode AMOUNT_BELOW_MINIMUM = Failure_FailureCode_AMOUNT_BELOW_MINIMUM;
  static constexpr FailureCode FEE_INSUFFICIENT = Failure_FailureCode_FEE_INSUFFICIENT;
  static constexpr FailureCode INCORRECT_CLTV_EXPIRY = Failure_FailureCode_INCORRECT_CLTV_EXPIRY;
  static constexpr FailureCode CHANNEL_DISABLED = Failure_FailureCode_CHANNEL_DISABLED;
  static constexpr FailureCode TEMPORARY_CHANNEL_FAILURE = Failure_FailureCode_TEMPORARY_CHANNEL_FAILURE;
  static constexpr FailureCode REQUIRED_NODE_FEATURE_MISSING = Failure_FailureCode_REQUIRED_NODE_FEATURE_MISSING;
  static constexpr FailureCode REQUIRED_CHANNEL_FEATURE_MISSING = Failure_FailureCode_REQUIRED_CHANNEL_FEATURE_MISSING;
  static constexpr FailureCode UNKNOWN_NEXT_PEER = Failure_FailureCode_UNKNOWN_NEXT_PEER;
  static constexpr FailureCode TEMPORARY_NODE_FAILURE = Failure_FailureCode_TEMPORARY_NODE_FAILURE;
  static constexpr FailureCode PERMANENT_NODE_FAILURE = Failure_FailureCode_PERMANENT_NODE_FAILURE;
  static constexpr FailureCode PERMANENT_CHANNEL_FAILURE = Failure_FailureCode_PERMANENT_CHANNEL_FAILURE;
  static constexpr FailureCode EXPIRY_TOO_FAR = Failure_FailureCode_EXPIRY_TOO_FAR;
  static constexpr FailureCode MPP_TIMEOUT = Failure_FailureCode_MPP_TIMEOUT;
  static constexpr FailureCode INVALID_ONION_PAYLOAD = Failure_FailureCode_INVALID_ONION_PAYLOAD;
  static constexpr FailureCode INVALID_ONION_BLINDING = Failure_FailureCode_INVALID_ONION_BLINDING;
  static constexpr FailureCode INTERNAL_FAILURE = Failure_FailureCode_INTERNAL_FAILURE;
  static constexpr FailureCode UNKNOWN_FAILURE = Failure_FailureCode_UNKNOWN_FAILURE;
  static constexpr FailureCode UNREADABLE_FAILURE = Failure_FailureCode_UNREADABLE_FAILURE;
  static inline bool FailureCode_IsValid(int value) {
    return Failure_FailureCode_IsValid(value);
  }
  static constexpr FailureCode FailureCode_MIN = Failure_FailureCode_FailureCode_MIN;
  static constexpr FailureCode FailureCode_MAX = Failure_FailureCode_FailureCode_MAX;
  static constexpr int FailureCode_ARRAYSIZE = Failure_FailureCode_FailureCode_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* FailureCode_descriptor() {
    return Failure_FailureCode_descriptor();
  }
  template <typename T>
  static inline const std::string& FailureCode_Name(T value) {
    return Failure_FailureCode_Name(value);
  }
  static inline bool FailureCode_Parse(absl::string_view name, FailureCode* value) {
    return Failure_FailureCode_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kOnionSha256FieldNumber = 5,
    kChannelUpdateFieldNumber = 3,
    kCodeFieldNumber = 1,
    kCltvExpiryFieldNumber = 6,
    kHtlcMsatFieldNumber = 4,
    kFlagsFieldNumber = 7,
    kFailureSourceIndexFieldNumber = 8,
    kHeightFieldNumber = 9,
  };
  // bytes onion_sha_256 = 5;
  void clear_onion_sha_256() ;
  const std::string& onion_sha_256() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_onion_sha_256(Arg_&& arg, Args_... args);
  std::string* mutable_onion_sha_256();
  PROTOBUF_NODISCARD std::string* release_onion_sha_256();
  void set_allocated_onion_sha_256(std::string* value);

  private:
  const std::string& _internal_onion_sha_256() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_onion_sha_256(
      const std::string& value);
  std::string* _internal_mutable_onion_sha_256();

  public:
  // .lnrpc.ChannelUpdate channel_update = 3;
  bool has_channel_update() const;
  void clear_channel_update() ;
  const ::lnrpc::ChannelUpdate& channel_update() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelUpdate* release_channel_update();
  ::lnrpc::ChannelUpdate* mutable_channel_update();
  void set_allocated_channel_update(::lnrpc::ChannelUpdate* value);
  void unsafe_arena_set_allocated_channel_update(::lnrpc::ChannelUpdate* value);
  ::lnrpc::ChannelUpdate* unsafe_arena_release_channel_update();

  private:
  const ::lnrpc::ChannelUpdate& _internal_channel_update() const;
  ::lnrpc::ChannelUpdate* _internal_mutable_channel_update();

  public:
  // .lnrpc.Failure.FailureCode code = 1;
  void clear_code() ;
  ::lnrpc::Failure_FailureCode code() const;
  void set_code(::lnrpc::Failure_FailureCode value);

  private:
  ::lnrpc::Failure_FailureCode _internal_code() const;
  void _internal_set_code(::lnrpc::Failure_FailureCode value);

  public:
  // uint32 cltv_expiry = 6;
  void clear_cltv_expiry() ;
  ::uint32_t cltv_expiry() const;
  void set_cltv_expiry(::uint32_t value);

  private:
  ::uint32_t _internal_cltv_expiry() const;
  void _internal_set_cltv_expiry(::uint32_t value);

  public:
  // uint64 htlc_msat = 4;
  void clear_htlc_msat() ;
  ::uint64_t htlc_msat() const;
  void set_htlc_msat(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_msat() const;
  void _internal_set_htlc_msat(::uint64_t value);

  public:
  // uint32 flags = 7;
  void clear_flags() ;
  ::uint32_t flags() const;
  void set_flags(::uint32_t value);

  private:
  ::uint32_t _internal_flags() const;
  void _internal_set_flags(::uint32_t value);

  public:
  // uint32 failure_source_index = 8;
  void clear_failure_source_index() ;
  ::uint32_t failure_source_index() const;
  void set_failure_source_index(::uint32_t value);

  private:
  ::uint32_t _internal_failure_source_index() const;
  void _internal_set_failure_source_index(::uint32_t value);

  public:
  // uint32 height = 9;
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Failure)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 8, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Failure_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Failure& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr onion_sha_256_;
    ::lnrpc::ChannelUpdate* channel_update_;
    int code_;
    ::uint32_t cltv_expiry_;
    ::uint64_t htlc_msat_;
    ::uint32_t flags_;
    ::uint32_t failure_source_index_;
    ::uint32_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FailedUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FailedUpdate) */ {
 public:
  inline FailedUpdate() : FailedUpdate(nullptr) {}
  ~FailedUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FailedUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline FailedUpdate(const FailedUpdate& from) : FailedUpdate(nullptr, from) {}
  inline FailedUpdate(FailedUpdate&& from) noexcept
      : FailedUpdate(nullptr, std::move(from)) {}
  inline FailedUpdate& operator=(const FailedUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline FailedUpdate& operator=(FailedUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FailedUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const FailedUpdate* internal_default_instance() {
    return reinterpret_cast<const FailedUpdate*>(
        &_FailedUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 190;
  friend void swap(FailedUpdate& a, FailedUpdate& b) { a.Swap(&b); }
  inline void Swap(FailedUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FailedUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FailedUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FailedUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FailedUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FailedUpdate& from) { FailedUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FailedUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FailedUpdate"; }

 protected:
  explicit FailedUpdate(::google::protobuf::Arena* arena);
  FailedUpdate(::google::protobuf::Arena* arena, const FailedUpdate& from);
  FailedUpdate(::google::protobuf::Arena* arena, FailedUpdate&& from) noexcept
      : FailedUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdateErrorFieldNumber = 3,
    kOutpointFieldNumber = 1,
    kReasonFieldNumber = 2,
  };
  // string update_error = 3;
  void clear_update_error() ;
  const std::string& update_error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_update_error(Arg_&& arg, Args_... args);
  std::string* mutable_update_error();
  PROTOBUF_NODISCARD std::string* release_update_error();
  void set_allocated_update_error(std::string* value);

  private:
  const std::string& _internal_update_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_update_error(
      const std::string& value);
  std::string* _internal_mutable_update_error();

  public:
  // .lnrpc.OutPoint outpoint = 1;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // .lnrpc.UpdateFailure reason = 2;
  void clear_reason() ;
  ::lnrpc::UpdateFailure reason() const;
  void set_reason(::lnrpc::UpdateFailure value);

  private:
  ::lnrpc::UpdateFailure _internal_reason() const;
  void _internal_set_reason(::lnrpc::UpdateFailure value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.FailedUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FailedUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FailedUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr update_error_;
    ::lnrpc::OutPoint* outpoint_;
    int reason_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ExportChannelBackupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ExportChannelBackupRequest) */ {
 public:
  inline ExportChannelBackupRequest() : ExportChannelBackupRequest(nullptr) {}
  ~ExportChannelBackupRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExportChannelBackupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExportChannelBackupRequest(const ExportChannelBackupRequest& from) : ExportChannelBackupRequest(nullptr, from) {}
  inline ExportChannelBackupRequest(ExportChannelBackupRequest&& from) noexcept
      : ExportChannelBackupRequest(nullptr, std::move(from)) {}
  inline ExportChannelBackupRequest& operator=(const ExportChannelBackupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportChannelBackupRequest& operator=(ExportChannelBackupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportChannelBackupRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportChannelBackupRequest* internal_default_instance() {
    return reinterpret_cast<const ExportChannelBackupRequest*>(
        &_ExportChannelBackupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 195;
  friend void swap(ExportChannelBackupRequest& a, ExportChannelBackupRequest& b) { a.Swap(&b); }
  inline void Swap(ExportChannelBackupRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportChannelBackupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportChannelBackupRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ExportChannelBackupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportChannelBackupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExportChannelBackupRequest& from) { ExportChannelBackupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportChannelBackupRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ExportChannelBackupRequest"; }

 protected:
  explicit ExportChannelBackupRequest(::google::protobuf::Arena* arena);
  ExportChannelBackupRequest(::google::protobuf::Arena* arena, const ExportChannelBackupRequest& from);
  ExportChannelBackupRequest(::google::protobuf::Arena* arena, ExportChannelBackupRequest&& from) noexcept
      : ExportChannelBackupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanPointFieldNumber = 1,
  };
  // .lnrpc.ChannelPoint chan_point = 1;
  bool has_chan_point() const;
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ExportChannelBackupRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExportChannelBackupRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExportChannelBackupRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::ChannelPoint* chan_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class EstimateFeeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.EstimateFeeRequest) */ {
 public:
  inline EstimateFeeRequest() : EstimateFeeRequest(nullptr) {}
  ~EstimateFeeRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EstimateFeeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EstimateFeeRequest(const EstimateFeeRequest& from) : EstimateFeeRequest(nullptr, from) {}
  inline EstimateFeeRequest(EstimateFeeRequest&& from) noexcept
      : EstimateFeeRequest(nullptr, std::move(from)) {}
  inline EstimateFeeRequest& operator=(const EstimateFeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EstimateFeeRequest& operator=(EstimateFeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EstimateFeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EstimateFeeRequest* internal_default_instance() {
    return reinterpret_cast<const EstimateFeeRequest*>(
        &_EstimateFeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(EstimateFeeRequest& a, EstimateFeeRequest& b) { a.Swap(&b); }
  inline void Swap(EstimateFeeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EstimateFeeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EstimateFeeRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EstimateFeeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EstimateFeeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EstimateFeeRequest& from) { EstimateFeeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EstimateFeeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.EstimateFeeRequest"; }

 protected:
  explicit EstimateFeeRequest(::google::protobuf::Arena* arena);
  EstimateFeeRequest(::google::protobuf::Arena* arena, const EstimateFeeRequest& from);
  EstimateFeeRequest(::google::protobuf::Arena* arena, EstimateFeeRequest&& from) noexcept
      : EstimateFeeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddrToAmountFieldNumber = 1,
    kTargetConfFieldNumber = 2,
    kMinConfsFieldNumber = 3,
    kSpendUnconfirmedFieldNumber = 4,
    kCoinSelectionStrategyFieldNumber = 5,
  };
  // map<string, int64> AddrToAmount = 1;
  int addrtoamount_size() const;
  private:
  int _internal_addrtoamount_size() const;

  public:
  void clear_addrtoamount() ;
  const ::google::protobuf::Map<std::string, ::int64_t>& addrtoamount() const;
  ::google::protobuf::Map<std::string, ::int64_t>* mutable_addrtoamount();

  private:
  const ::google::protobuf::Map<std::string, ::int64_t>& _internal_addrtoamount() const;
  ::google::protobuf::Map<std::string, ::int64_t>* _internal_mutable_addrtoamount();

  public:
  // int32 target_conf = 2;
  void clear_target_conf() ;
  ::int32_t target_conf() const;
  void set_target_conf(::int32_t value);

  private:
  ::int32_t _internal_target_conf() const;
  void _internal_set_target_conf(::int32_t value);

  public:
  // int32 min_confs = 3;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // bool spend_unconfirmed = 4;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // .lnrpc.CoinSelectionStrategy coin_selection_strategy = 5;
  void clear_coin_selection_strategy() ;
  ::lnrpc::CoinSelectionStrategy coin_selection_strategy() const;
  void set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  private:
  ::lnrpc::CoinSelectionStrategy _internal_coin_selection_strategy() const;
  void _internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.EstimateFeeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 5, 1,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EstimateFeeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EstimateFeeRequest& from_msg);
    ::google::protobuf::internal::MapField<EstimateFeeRequest_AddrToAmountEntry_DoNotUse, std::string, ::int64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_INT64>
        addrtoamount_;
    ::int32_t target_conf_;
    ::int32_t min_confs_;
    bool spend_unconfirmed_;
    int coin_selection_strategy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ConnectPeerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ConnectPeerRequest) */ {
 public:
  inline ConnectPeerRequest() : ConnectPeerRequest(nullptr) {}
  ~ConnectPeerRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectPeerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ConnectPeerRequest(const ConnectPeerRequest& from) : ConnectPeerRequest(nullptr, from) {}
  inline ConnectPeerRequest(ConnectPeerRequest&& from) noexcept
      : ConnectPeerRequest(nullptr, std::move(from)) {}
  inline ConnectPeerRequest& operator=(const ConnectPeerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectPeerRequest& operator=(ConnectPeerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectPeerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ConnectPeerRequest* internal_default_instance() {
    return reinterpret_cast<const ConnectPeerRequest*>(
        &_ConnectPeerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(ConnectPeerRequest& a, ConnectPeerRequest& b) { a.Swap(&b); }
  inline void Swap(ConnectPeerRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectPeerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectPeerRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ConnectPeerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectPeerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectPeerRequest& from) { ConnectPeerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ConnectPeerRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ConnectPeerRequest"; }

 protected:
  explicit ConnectPeerRequest(::google::protobuf::Arena* arena);
  ConnectPeerRequest(::google::protobuf::Arena* arena, const ConnectPeerRequest& from);
  ConnectPeerRequest(::google::protobuf::Arena* arena, ConnectPeerRequest&& from) noexcept
      : ConnectPeerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddrFieldNumber = 1,
    kTimeoutFieldNumber = 3,
    kPermFieldNumber = 2,
  };
  // .lnrpc.LightningAddress addr = 1;
  bool has_addr() const;
  void clear_addr() ;
  const ::lnrpc::LightningAddress& addr() const;
  PROTOBUF_NODISCARD ::lnrpc::LightningAddress* release_addr();
  ::lnrpc::LightningAddress* mutable_addr();
  void set_allocated_addr(::lnrpc::LightningAddress* value);
  void unsafe_arena_set_allocated_addr(::lnrpc::LightningAddress* value);
  ::lnrpc::LightningAddress* unsafe_arena_release_addr();

  private:
  const ::lnrpc::LightningAddress& _internal_addr() const;
  ::lnrpc::LightningAddress* _internal_mutable_addr();

  public:
  // uint64 timeout = 3;
  void clear_timeout() ;
  ::uint64_t timeout() const;
  void set_timeout(::uint64_t value);

  private:
  ::uint64_t _internal_timeout() const;
  void _internal_set_timeout(::uint64_t value);

  public:
  // bool perm = 2;
  void clear_perm() ;
  bool perm() const;
  void set_perm(bool value);

  private:
  bool _internal_perm() const;
  void _internal_set_perm(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ConnectPeerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ConnectPeerRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ConnectPeerRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::LightningAddress* addr_;
    ::uint64_t timeout_;
    bool perm_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ClosedChannelUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ClosedChannelUpdate) */ {
 public:
  inline ClosedChannelUpdate() : ClosedChannelUpdate(nullptr) {}
  ~ClosedChannelUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClosedChannelUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClosedChannelUpdate(const ClosedChannelUpdate& from) : ClosedChannelUpdate(nullptr, from) {}
  inline ClosedChannelUpdate(ClosedChannelUpdate&& from) noexcept
      : ClosedChannelUpdate(nullptr, std::move(from)) {}
  inline ClosedChannelUpdate& operator=(const ClosedChannelUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClosedChannelUpdate& operator=(ClosedChannelUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClosedChannelUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClosedChannelUpdate* internal_default_instance() {
    return reinterpret_cast<const ClosedChannelUpdate*>(
        &_ClosedChannelUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 148;
  friend void swap(ClosedChannelUpdate& a, ClosedChannelUpdate& b) { a.Swap(&b); }
  inline void Swap(ClosedChannelUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClosedChannelUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClosedChannelUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ClosedChannelUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClosedChannelUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClosedChannelUpdate& from) { ClosedChannelUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClosedChannelUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ClosedChannelUpdate"; }

 protected:
  explicit ClosedChannelUpdate(::google::protobuf::Arena* arena);
  ClosedChannelUpdate(::google::protobuf::Arena* arena, const ClosedChannelUpdate& from);
  ClosedChannelUpdate(::google::protobuf::Arena* arena, ClosedChannelUpdate&& from) noexcept
      : ClosedChannelUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanPointFieldNumber = 4,
    kChanIdFieldNumber = 1,
    kCapacityFieldNumber = 2,
    kClosedHeightFieldNumber = 3,
  };
  // .lnrpc.ChannelPoint chan_point = 4;
  bool has_chan_point() const;
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  // uint64 chan_id = 1 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // int64 capacity = 2;
  void clear_capacity() ;
  ::int64_t capacity() const;
  void set_capacity(::int64_t value);

  private:
  ::int64_t _internal_capacity() const;
  void _internal_set_capacity(::int64_t value);

  public:
  // uint32 closed_height = 3;
  void clear_closed_height() ;
  ::uint32_t closed_height() const;
  void set_closed_height(::uint32_t value);

  private:
  ::uint32_t _internal_closed_height() const;
  void _internal_set_closed_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ClosedChannelUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClosedChannelUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClosedChannelUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::ChannelPoint* chan_point_;
    ::uint64_t chan_id_;
    ::int64_t capacity_;
    ::uint32_t closed_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class CloseChannelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.CloseChannelRequest) */ {
 public:
  inline CloseChannelRequest() : CloseChannelRequest(nullptr) {}
  ~CloseChannelRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloseChannelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloseChannelRequest(const CloseChannelRequest& from) : CloseChannelRequest(nullptr, from) {}
  inline CloseChannelRequest(CloseChannelRequest&& from) noexcept
      : CloseChannelRequest(nullptr, std::move(from)) {}
  inline CloseChannelRequest& operator=(const CloseChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseChannelRequest& operator=(CloseChannelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseChannelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloseChannelRequest* internal_default_instance() {
    return reinterpret_cast<const CloseChannelRequest*>(
        &_CloseChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 74;
  friend void swap(CloseChannelRequest& a, CloseChannelRequest& b) { a.Swap(&b); }
  inline void Swap(CloseChannelRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseChannelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseChannelRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CloseChannelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloseChannelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CloseChannelRequest& from) { CloseChannelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CloseChannelRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.CloseChannelRequest"; }

 protected:
  explicit CloseChannelRequest(::google::protobuf::Arena* arena);
  CloseChannelRequest(::google::protobuf::Arena* arena, const CloseChannelRequest& from);
  CloseChannelRequest(::google::protobuf::Arena* arena, CloseChannelRequest&& from) noexcept
      : CloseChannelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDeliveryAddressFieldNumber = 5,
    kChannelPointFieldNumber = 1,
    kSatPerByteFieldNumber = 4,
    kTargetConfFieldNumber = 3,
    kForceFieldNumber = 2,
    kNoWaitFieldNumber = 8,
    kSatPerVbyteFieldNumber = 6,
    kMaxFeePerVbyteFieldNumber = 7,
  };
  // string delivery_address = 5;
  void clear_delivery_address() ;
  const std::string& delivery_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_delivery_address(Arg_&& arg, Args_... args);
  std::string* mutable_delivery_address();
  PROTOBUF_NODISCARD std::string* release_delivery_address();
  void set_allocated_delivery_address(std::string* value);

  private:
  const std::string& _internal_delivery_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_delivery_address(
      const std::string& value);
  std::string* _internal_mutable_delivery_address();

  public:
  // .lnrpc.ChannelPoint channel_point = 1;
  bool has_channel_point() const;
  void clear_channel_point() ;
  const ::lnrpc::ChannelPoint& channel_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_channel_point();
  ::lnrpc::ChannelPoint* mutable_channel_point();
  void set_allocated_channel_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_channel_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_channel_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_channel_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_channel_point();

  public:
  // int64 sat_per_byte = 4 [deprecated = true];
  [[deprecated]]  void clear_sat_per_byte() ;
  [[deprecated]] ::int64_t sat_per_byte() const;
  [[deprecated]] void set_sat_per_byte(::int64_t value);

  private:
  ::int64_t _internal_sat_per_byte() const;
  void _internal_set_sat_per_byte(::int64_t value);

  public:
  // int32 target_conf = 3;
  void clear_target_conf() ;
  ::int32_t target_conf() const;
  void set_target_conf(::int32_t value);

  private:
  ::int32_t _internal_target_conf() const;
  void _internal_set_target_conf(::int32_t value);

  public:
  // bool force = 2;
  void clear_force() ;
  bool force() const;
  void set_force(bool value);

  private:
  bool _internal_force() const;
  void _internal_set_force(bool value);

  public:
  // bool no_wait = 8;
  void clear_no_wait() ;
  bool no_wait() const;
  void set_no_wait(bool value);

  private:
  bool _internal_no_wait() const;
  void _internal_set_no_wait(bool value);

  public:
  // uint64 sat_per_vbyte = 6;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // uint64 max_fee_per_vbyte = 7;
  void clear_max_fee_per_vbyte() ;
  ::uint64_t max_fee_per_vbyte() const;
  void set_max_fee_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_max_fee_per_vbyte() const;
  void _internal_set_max_fee_per_vbyte(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.CloseChannelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CloseChannelRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloseChannelRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr delivery_address_;
    ::lnrpc::ChannelPoint* channel_point_;
    ::int64_t sat_per_byte_;
    ::int32_t target_conf_;
    bool force_;
    bool no_wait_;
    ::uint64_t sat_per_vbyte_;
    ::uint64_t max_fee_per_vbyte_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class CheckMacPermRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.CheckMacPermRequest) */ {
 public:
  inline CheckMacPermRequest() : CheckMacPermRequest(nullptr) {}
  ~CheckMacPermRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CheckMacPermRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline CheckMacPermRequest(const CheckMacPermRequest& from) : CheckMacPermRequest(nullptr, from) {}
  inline CheckMacPermRequest(CheckMacPermRequest&& from) noexcept
      : CheckMacPermRequest(nullptr, std::move(from)) {}
  inline CheckMacPermRequest& operator=(const CheckMacPermRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CheckMacPermRequest& operator=(CheckMacPermRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CheckMacPermRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CheckMacPermRequest* internal_default_instance() {
    return reinterpret_cast<const CheckMacPermRequest*>(
        &_CheckMacPermRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 220;
  friend void swap(CheckMacPermRequest& a, CheckMacPermRequest& b) { a.Swap(&b); }
  inline void Swap(CheckMacPermRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CheckMacPermRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CheckMacPermRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CheckMacPermRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CheckMacPermRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CheckMacPermRequest& from) { CheckMacPermRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CheckMacPermRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.CheckMacPermRequest"; }

 protected:
  explicit CheckMacPermRequest(::google::protobuf::Arena* arena);
  CheckMacPermRequest(::google::protobuf::Arena* arena, const CheckMacPermRequest& from);
  CheckMacPermRequest(::google::protobuf::Arena* arena, CheckMacPermRequest&& from) noexcept
      : CheckMacPermRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermissionsFieldNumber = 2,
    kMacaroonFieldNumber = 1,
    kFullMethodFieldNumber = 3,
  };
  // repeated .lnrpc.MacaroonPermission permissions = 2;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::lnrpc::MacaroonPermission* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* mutable_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* _internal_mutable_permissions();
  public:
  const ::lnrpc::MacaroonPermission& permissions(int index) const;
  ::lnrpc::MacaroonPermission* add_permissions();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& permissions() const;
  // bytes macaroon = 1;
  void clear_macaroon() ;
  const std::string& macaroon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_macaroon(Arg_&& arg, Args_... args);
  std::string* mutable_macaroon();
  PROTOBUF_NODISCARD std::string* release_macaroon();
  void set_allocated_macaroon(std::string* value);

  private:
  const std::string& _internal_macaroon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_macaroon(
      const std::string& value);
  std::string* _internal_mutable_macaroon();

  public:
  // string fullMethod = 3;
  void clear_fullmethod() ;
  const std::string& fullmethod() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fullmethod(Arg_&& arg, Args_... args);
  std::string* mutable_fullmethod();
  PROTOBUF_NODISCARD std::string* release_fullmethod();
  void set_allocated_fullmethod(std::string* value);

  private:
  const std::string& _internal_fullmethod() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fullmethod(
      const std::string& value);
  std::string* _internal_mutable_fullmethod();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.CheckMacPermRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CheckMacPermRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CheckMacPermRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::MacaroonPermission > permissions_;
    ::google::protobuf::internal::ArenaStringPtr macaroon_;
    ::google::protobuf::internal::ArenaStringPtr fullmethod_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelOpenUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelOpenUpdate) */ {
 public:
  inline ChannelOpenUpdate() : ChannelOpenUpdate(nullptr) {}
  ~ChannelOpenUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelOpenUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelOpenUpdate(const ChannelOpenUpdate& from) : ChannelOpenUpdate(nullptr, from) {}
  inline ChannelOpenUpdate(ChannelOpenUpdate&& from) noexcept
      : ChannelOpenUpdate(nullptr, std::move(from)) {}
  inline ChannelOpenUpdate& operator=(const ChannelOpenUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelOpenUpdate& operator=(ChannelOpenUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelOpenUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelOpenUpdate* internal_default_instance() {
    return reinterpret_cast<const ChannelOpenUpdate*>(
        &_ChannelOpenUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(ChannelOpenUpdate& a, ChannelOpenUpdate& b) { a.Swap(&b); }
  inline void Swap(ChannelOpenUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelOpenUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelOpenUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelOpenUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelOpenUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelOpenUpdate& from) { ChannelOpenUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelOpenUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelOpenUpdate"; }

 protected:
  explicit ChannelOpenUpdate(::google::protobuf::Arena* arena);
  ChannelOpenUpdate(::google::protobuf::Arena* arena, const ChannelOpenUpdate& from);
  ChannelOpenUpdate(::google::protobuf::Arena* arena, ChannelOpenUpdate&& from) noexcept
      : ChannelOpenUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelPointFieldNumber = 1,
  };
  // .lnrpc.ChannelPoint channel_point = 1;
  bool has_channel_point() const;
  void clear_channel_point() ;
  const ::lnrpc::ChannelPoint& channel_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_channel_point();
  ::lnrpc::ChannelPoint* mutable_channel_point();
  void set_allocated_channel_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_channel_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_channel_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_channel_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_channel_point();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelOpenUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelOpenUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelOpenUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::ChannelPoint* channel_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelCloseUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelCloseUpdate) */ {
 public:
  inline ChannelCloseUpdate() : ChannelCloseUpdate(nullptr) {}
  ~ChannelCloseUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelCloseUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelCloseUpdate(const ChannelCloseUpdate& from) : ChannelCloseUpdate(nullptr, from) {}
  inline ChannelCloseUpdate(ChannelCloseUpdate&& from) noexcept
      : ChannelCloseUpdate(nullptr, std::move(from)) {}
  inline ChannelCloseUpdate& operator=(const ChannelCloseUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelCloseUpdate& operator=(ChannelCloseUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelCloseUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelCloseUpdate* internal_default_instance() {
    return reinterpret_cast<const ChannelCloseUpdate*>(
        &_ChannelCloseUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 73;
  friend void swap(ChannelCloseUpdate& a, ChannelCloseUpdate& b) { a.Swap(&b); }
  inline void Swap(ChannelCloseUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelCloseUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelCloseUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelCloseUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelCloseUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelCloseUpdate& from) { ChannelCloseUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelCloseUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelCloseUpdate"; }

 protected:
  explicit ChannelCloseUpdate(::google::protobuf::Arena* arena);
  ChannelCloseUpdate(::google::protobuf::Arena* arena, const ChannelCloseUpdate& from);
  ChannelCloseUpdate(::google::protobuf::Arena* arena, ChannelCloseUpdate&& from) noexcept
      : ChannelCloseUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdditionalOutputsFieldNumber = 5,
    kClosingTxidFieldNumber = 1,
    kLocalCloseOutputFieldNumber = 3,
    kRemoteCloseOutputFieldNumber = 4,
    kSuccessFieldNumber = 2,
  };
  // repeated .lnrpc.CloseOutput additional_outputs = 5;
  int additional_outputs_size() const;
  private:
  int _internal_additional_outputs_size() const;

  public:
  void clear_additional_outputs() ;
  ::lnrpc::CloseOutput* mutable_additional_outputs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>* mutable_additional_outputs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>& _internal_additional_outputs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>* _internal_mutable_additional_outputs();
  public:
  const ::lnrpc::CloseOutput& additional_outputs(int index) const;
  ::lnrpc::CloseOutput* add_additional_outputs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>& additional_outputs() const;
  // bytes closing_txid = 1;
  void clear_closing_txid() ;
  const std::string& closing_txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_closing_txid(Arg_&& arg, Args_... args);
  std::string* mutable_closing_txid();
  PROTOBUF_NODISCARD std::string* release_closing_txid();
  void set_allocated_closing_txid(std::string* value);

  private:
  const std::string& _internal_closing_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_closing_txid(
      const std::string& value);
  std::string* _internal_mutable_closing_txid();

  public:
  // .lnrpc.CloseOutput local_close_output = 3;
  bool has_local_close_output() const;
  void clear_local_close_output() ;
  const ::lnrpc::CloseOutput& local_close_output() const;
  PROTOBUF_NODISCARD ::lnrpc::CloseOutput* release_local_close_output();
  ::lnrpc::CloseOutput* mutable_local_close_output();
  void set_allocated_local_close_output(::lnrpc::CloseOutput* value);
  void unsafe_arena_set_allocated_local_close_output(::lnrpc::CloseOutput* value);
  ::lnrpc::CloseOutput* unsafe_arena_release_local_close_output();

  private:
  const ::lnrpc::CloseOutput& _internal_local_close_output() const;
  ::lnrpc::CloseOutput* _internal_mutable_local_close_output();

  public:
  // .lnrpc.CloseOutput remote_close_output = 4;
  bool has_remote_close_output() const;
  void clear_remote_close_output() ;
  const ::lnrpc::CloseOutput& remote_close_output() const;
  PROTOBUF_NODISCARD ::lnrpc::CloseOutput* release_remote_close_output();
  ::lnrpc::CloseOutput* mutable_remote_close_output();
  void set_allocated_remote_close_output(::lnrpc::CloseOutput* value);
  void unsafe_arena_set_allocated_remote_close_output(::lnrpc::CloseOutput* value);
  ::lnrpc::CloseOutput* unsafe_arena_release_remote_close_output();

  private:
  const ::lnrpc::CloseOutput& _internal_remote_close_output() const;
  ::lnrpc::CloseOutput* _internal_mutable_remote_close_output();

  public:
  // bool success = 2;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelCloseUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelCloseUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelCloseUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::CloseOutput > additional_outputs_;
    ::google::protobuf::internal::ArenaStringPtr closing_txid_;
    ::lnrpc::CloseOutput* local_close_output_;
    ::lnrpc::CloseOutput* remote_close_output_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelBalanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelBalanceResponse) */ {
 public:
  inline ChannelBalanceResponse() : ChannelBalanceResponse(nullptr) {}
  ~ChannelBalanceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelBalanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelBalanceResponse(const ChannelBalanceResponse& from) : ChannelBalanceResponse(nullptr, from) {}
  inline ChannelBalanceResponse(ChannelBalanceResponse&& from) noexcept
      : ChannelBalanceResponse(nullptr, std::move(from)) {}
  inline ChannelBalanceResponse& operator=(const ChannelBalanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelBalanceResponse& operator=(ChannelBalanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelBalanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelBalanceResponse* internal_default_instance() {
    return reinterpret_cast<const ChannelBalanceResponse*>(
        &_ChannelBalanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 111;
  friend void swap(ChannelBalanceResponse& a, ChannelBalanceResponse& b) { a.Swap(&b); }
  inline void Swap(ChannelBalanceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelBalanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelBalanceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelBalanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelBalanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelBalanceResponse& from) { ChannelBalanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelBalanceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelBalanceResponse"; }

 protected:
  explicit ChannelBalanceResponse(::google::protobuf::Arena* arena);
  ChannelBalanceResponse(::google::protobuf::Arena* arena, const ChannelBalanceResponse& from);
  ChannelBalanceResponse(::google::protobuf::Arena* arena, ChannelBalanceResponse&& from) noexcept
      : ChannelBalanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomChannelDataFieldNumber = 9,
    kLocalBalanceFieldNumber = 3,
    kRemoteBalanceFieldNumber = 4,
    kUnsettledLocalBalanceFieldNumber = 5,
    kUnsettledRemoteBalanceFieldNumber = 6,
    kPendingOpenLocalBalanceFieldNumber = 7,
    kPendingOpenRemoteBalanceFieldNumber = 8,
    kBalanceFieldNumber = 1,
    kPendingOpenBalanceFieldNumber = 2,
  };
  // bytes custom_channel_data = 9;
  void clear_custom_channel_data() ;
  const std::string& custom_channel_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_channel_data(Arg_&& arg, Args_... args);
  std::string* mutable_custom_channel_data();
  PROTOBUF_NODISCARD std::string* release_custom_channel_data();
  void set_allocated_custom_channel_data(std::string* value);

  private:
  const std::string& _internal_custom_channel_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_channel_data(
      const std::string& value);
  std::string* _internal_mutable_custom_channel_data();

  public:
  // .lnrpc.Amount local_balance = 3;
  bool has_local_balance() const;
  void clear_local_balance() ;
  const ::lnrpc::Amount& local_balance() const;
  PROTOBUF_NODISCARD ::lnrpc::Amount* release_local_balance();
  ::lnrpc::Amount* mutable_local_balance();
  void set_allocated_local_balance(::lnrpc::Amount* value);
  void unsafe_arena_set_allocated_local_balance(::lnrpc::Amount* value);
  ::lnrpc::Amount* unsafe_arena_release_local_balance();

  private:
  const ::lnrpc::Amount& _internal_local_balance() const;
  ::lnrpc::Amount* _internal_mutable_local_balance();

  public:
  // .lnrpc.Amount remote_balance = 4;
  bool has_remote_balance() const;
  void clear_remote_balance() ;
  const ::lnrpc::Amount& remote_balance() const;
  PROTOBUF_NODISCARD ::lnrpc::Amount* release_remote_balance();
  ::lnrpc::Amount* mutable_remote_balance();
  void set_allocated_remote_balance(::lnrpc::Amount* value);
  void unsafe_arena_set_allocated_remote_balance(::lnrpc::Amount* value);
  ::lnrpc::Amount* unsafe_arena_release_remote_balance();

  private:
  const ::lnrpc::Amount& _internal_remote_balance() const;
  ::lnrpc::Amount* _internal_mutable_remote_balance();

  public:
  // .lnrpc.Amount unsettled_local_balance = 5;
  bool has_unsettled_local_balance() const;
  void clear_unsettled_local_balance() ;
  const ::lnrpc::Amount& unsettled_local_balance() const;
  PROTOBUF_NODISCARD ::lnrpc::Amount* release_unsettled_local_balance();
  ::lnrpc::Amount* mutable_unsettled_local_balance();
  void set_allocated_unsettled_local_balance(::lnrpc::Amount* value);
  void unsafe_arena_set_allocated_unsettled_local_balance(::lnrpc::Amount* value);
  ::lnrpc::Amount* unsafe_arena_release_unsettled_local_balance();

  private:
  const ::lnrpc::Amount& _internal_unsettled_local_balance() const;
  ::lnrpc::Amount* _internal_mutable_unsettled_local_balance();

  public:
  // .lnrpc.Amount unsettled_remote_balance = 6;
  bool has_unsettled_remote_balance() const;
  void clear_unsettled_remote_balance() ;
  const ::lnrpc::Amount& unsettled_remote_balance() const;
  PROTOBUF_NODISCARD ::lnrpc::Amount* release_unsettled_remote_balance();
  ::lnrpc::Amount* mutable_unsettled_remote_balance();
  void set_allocated_unsettled_remote_balance(::lnrpc::Amount* value);
  void unsafe_arena_set_allocated_unsettled_remote_balance(::lnrpc::Amount* value);
  ::lnrpc::Amount* unsafe_arena_release_unsettled_remote_balance();

  private:
  const ::lnrpc::Amount& _internal_unsettled_remote_balance() const;
  ::lnrpc::Amount* _internal_mutable_unsettled_remote_balance();

  public:
  // .lnrpc.Amount pending_open_local_balance = 7;
  bool has_pending_open_local_balance() const;
  void clear_pending_open_local_balance() ;
  const ::lnrpc::Amount& pending_open_local_balance() const;
  PROTOBUF_NODISCARD ::lnrpc::Amount* release_pending_open_local_balance();
  ::lnrpc::Amount* mutable_pending_open_local_balance();
  void set_allocated_pending_open_local_balance(::lnrpc::Amount* value);
  void unsafe_arena_set_allocated_pending_open_local_balance(::lnrpc::Amount* value);
  ::lnrpc::Amount* unsafe_arena_release_pending_open_local_balance();

  private:
  const ::lnrpc::Amount& _internal_pending_open_local_balance() const;
  ::lnrpc::Amount* _internal_mutable_pending_open_local_balance();

  public:
  // .lnrpc.Amount pending_open_remote_balance = 8;
  bool has_pending_open_remote_balance() const;
  void clear_pending_open_remote_balance() ;
  const ::lnrpc::Amount& pending_open_remote_balance() const;
  PROTOBUF_NODISCARD ::lnrpc::Amount* release_pending_open_remote_balance();
  ::lnrpc::Amount* mutable_pending_open_remote_balance();
  void set_allocated_pending_open_remote_balance(::lnrpc::Amount* value);
  void unsafe_arena_set_allocated_pending_open_remote_balance(::lnrpc::Amount* value);
  ::lnrpc::Amount* unsafe_arena_release_pending_open_remote_balance();

  private:
  const ::lnrpc::Amount& _internal_pending_open_remote_balance() const;
  ::lnrpc::Amount* _internal_mutable_pending_open_remote_balance();

  public:
  // int64 balance = 1 [deprecated = true];
  [[deprecated]]  void clear_balance() ;
  [[deprecated]] ::int64_t balance() const;
  [[deprecated]] void set_balance(::int64_t value);

  private:
  ::int64_t _internal_balance() const;
  void _internal_set_balance(::int64_t value);

  public:
  // int64 pending_open_balance = 2 [deprecated = true];
  [[deprecated]]  void clear_pending_open_balance() ;
  [[deprecated]] ::int64_t pending_open_balance() const;
  [[deprecated]] void set_pending_open_balance(::int64_t value);

  private:
  ::int64_t _internal_pending_open_balance() const;
  void _internal_set_pending_open_balance(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelBalanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 6,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelBalanceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelBalanceResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr custom_channel_data_;
    ::lnrpc::Amount* local_balance_;
    ::lnrpc::Amount* remote_balance_;
    ::lnrpc::Amount* unsettled_local_balance_;
    ::lnrpc::Amount* unsettled_remote_balance_;
    ::lnrpc::Amount* pending_open_local_balance_;
    ::lnrpc::Amount* pending_open_remote_balance_;
    ::int64_t balance_;
    ::int64_t pending_open_balance_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelBackup final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelBackup) */ {
 public:
  inline ChannelBackup() : ChannelBackup(nullptr) {}
  ~ChannelBackup() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelBackup(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelBackup(const ChannelBackup& from) : ChannelBackup(nullptr, from) {}
  inline ChannelBackup(ChannelBackup&& from) noexcept
      : ChannelBackup(nullptr, std::move(from)) {}
  inline ChannelBackup& operator=(const ChannelBackup& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelBackup& operator=(ChannelBackup&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelBackup& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelBackup* internal_default_instance() {
    return reinterpret_cast<const ChannelBackup*>(
        &_ChannelBackup_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 196;
  friend void swap(ChannelBackup& a, ChannelBackup& b) { a.Swap(&b); }
  inline void Swap(ChannelBackup* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelBackup* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelBackup* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelBackup>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelBackup& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelBackup& from) { ChannelBackup::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelBackup* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelBackup"; }

 protected:
  explicit ChannelBackup(::google::protobuf::Arena* arena);
  ChannelBackup(::google::protobuf::Arena* arena, const ChannelBackup& from);
  ChannelBackup(::google::protobuf::Arena* arena, ChannelBackup&& from) noexcept
      : ChannelBackup(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanBackupFieldNumber = 2,
    kChanPointFieldNumber = 1,
  };
  // bytes chan_backup = 2;
  void clear_chan_backup() ;
  const std::string& chan_backup() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chan_backup(Arg_&& arg, Args_... args);
  std::string* mutable_chan_backup();
  PROTOBUF_NODISCARD std::string* release_chan_backup();
  void set_allocated_chan_backup(std::string* value);

  private:
  const std::string& _internal_chan_backup() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chan_backup(
      const std::string& value);
  std::string* _internal_mutable_chan_backup();

  public:
  // .lnrpc.ChannelPoint chan_point = 1;
  bool has_chan_point() const;
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelBackup)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelBackup_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelBackup& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr chan_backup_;
    ::lnrpc::ChannelPoint* chan_point_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Channel final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Channel) */ {
 public:
  inline Channel() : Channel(nullptr) {}
  ~Channel() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Channel(
      ::google::protobuf::internal::ConstantInitialized);

  inline Channel(const Channel& from) : Channel(nullptr, from) {}
  inline Channel(Channel&& from) noexcept
      : Channel(nullptr, std::move(from)) {}
  inline Channel& operator=(const Channel& from) {
    CopyFrom(from);
    return *this;
  }
  inline Channel& operator=(Channel&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Channel& default_instance() {
    return *internal_default_instance();
  }
  static inline const Channel* internal_default_instance() {
    return reinterpret_cast<const Channel*>(
        &_Channel_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(Channel& a, Channel& b) { a.Swap(&b); }
  inline void Swap(Channel* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Channel* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Channel* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Channel>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Channel& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Channel& from) { Channel::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Channel* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Channel"; }

 protected:
  explicit Channel(::google::protobuf::Arena* arena);
  Channel(::google::protobuf::Arena* arena, const Channel& from);
  Channel(::google::protobuf::Arena* arena, Channel&& from) noexcept
      : Channel(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingHtlcsFieldNumber = 15,
    kAliasScidsFieldNumber = 31,
    kRemotePubkeyFieldNumber = 2,
    kChannelPointFieldNumber = 3,
    kChanStatusFlagsFieldNumber = 19,
    kCloseAddressFieldNumber = 25,
    kPeerAliasFieldNumber = 34,
    kMemoFieldNumber = 36,
    kCustomChannelDataFieldNumber = 37,
    kLocalConstraintsFieldNumber = 29,
    kRemoteConstraintsFieldNumber = 30,
    kChanIdFieldNumber = 4,
    kCapacityFieldNumber = 5,
    kLocalBalanceFieldNumber = 6,
    kRemoteBalanceFieldNumber = 7,
    kCommitFeeFieldNumber = 8,
    kCommitWeightFieldNumber = 9,
    kFeePerKwFieldNumber = 10,
    kUnsettledBalanceFieldNumber = 11,
    kTotalSatoshisSentFieldNumber = 12,
    kTotalSatoshisReceivedFieldNumber = 13,
    kNumUpdatesFieldNumber = 14,
    kActiveFieldNumber = 1,
    kPrivateFieldNumber = 17,
    kInitiatorFieldNumber = 18,
    kStaticRemoteKeyFieldNumber = 22,
    kCsvDelayFieldNumber = 16,
    kLocalChanReserveSatFieldNumber = 20,
    kRemoteChanReserveSatFieldNumber = 21,
    kLifetimeFieldNumber = 23,
    kUptimeFieldNumber = 24,
    kPushAmountSatFieldNumber = 27,
    kCommitmentTypeFieldNumber = 26,
    kThawHeightFieldNumber = 28,
    kZeroConfConfirmedScidFieldNumber = 33,
    kPeerScidAliasFieldNumber = 35,
    kZeroConfFieldNumber = 32,
  };
  // repeated .lnrpc.HTLC pending_htlcs = 15;
  int pending_htlcs_size() const;
  private:
  int _internal_pending_htlcs_size() const;

  public:
  void clear_pending_htlcs() ;
  ::lnrpc::HTLC* mutable_pending_htlcs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>* mutable_pending_htlcs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>& _internal_pending_htlcs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>* _internal_mutable_pending_htlcs();
  public:
  const ::lnrpc::HTLC& pending_htlcs(int index) const;
  ::lnrpc::HTLC* add_pending_htlcs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>& pending_htlcs() const;
  // repeated uint64 alias_scids = 31;
  int alias_scids_size() const;
  private:
  int _internal_alias_scids_size() const;

  public:
  void clear_alias_scids() ;
  ::uint64_t alias_scids(int index) const;
  void set_alias_scids(int index, ::uint64_t value);
  void add_alias_scids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& alias_scids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_alias_scids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_alias_scids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_alias_scids();

  public:
  // string remote_pubkey = 2;
  void clear_remote_pubkey() ;
  const std::string& remote_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_remote_pubkey();
  PROTOBUF_NODISCARD std::string* release_remote_pubkey();
  void set_allocated_remote_pubkey(std::string* value);

  private:
  const std::string& _internal_remote_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_pubkey(
      const std::string& value);
  std::string* _internal_mutable_remote_pubkey();

  public:
  // string channel_point = 3;
  void clear_channel_point() ;
  const std::string& channel_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_point(Arg_&& arg, Args_... args);
  std::string* mutable_channel_point();
  PROTOBUF_NODISCARD std::string* release_channel_point();
  void set_allocated_channel_point(std::string* value);

  private:
  const std::string& _internal_channel_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_point(
      const std::string& value);
  std::string* _internal_mutable_channel_point();

  public:
  // string chan_status_flags = 19;
  void clear_chan_status_flags() ;
  const std::string& chan_status_flags() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chan_status_flags(Arg_&& arg, Args_... args);
  std::string* mutable_chan_status_flags();
  PROTOBUF_NODISCARD std::string* release_chan_status_flags();
  void set_allocated_chan_status_flags(std::string* value);

  private:
  const std::string& _internal_chan_status_flags() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chan_status_flags(
      const std::string& value);
  std::string* _internal_mutable_chan_status_flags();

  public:
  // string close_address = 25;
  void clear_close_address() ;
  const std::string& close_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_close_address(Arg_&& arg, Args_... args);
  std::string* mutable_close_address();
  PROTOBUF_NODISCARD std::string* release_close_address();
  void set_allocated_close_address(std::string* value);

  private:
  const std::string& _internal_close_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_close_address(
      const std::string& value);
  std::string* _internal_mutable_close_address();

  public:
  // string peer_alias = 34;
  void clear_peer_alias() ;
  const std::string& peer_alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_peer_alias(Arg_&& arg, Args_... args);
  std::string* mutable_peer_alias();
  PROTOBUF_NODISCARD std::string* release_peer_alias();
  void set_allocated_peer_alias(std::string* value);

  private:
  const std::string& _internal_peer_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_peer_alias(
      const std::string& value);
  std::string* _internal_mutable_peer_alias();

  public:
  // string memo = 36;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // bytes custom_channel_data = 37;
  void clear_custom_channel_data() ;
  const std::string& custom_channel_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_channel_data(Arg_&& arg, Args_... args);
  std::string* mutable_custom_channel_data();
  PROTOBUF_NODISCARD std::string* release_custom_channel_data();
  void set_allocated_custom_channel_data(std::string* value);

  private:
  const std::string& _internal_custom_channel_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_channel_data(
      const std::string& value);
  std::string* _internal_mutable_custom_channel_data();

  public:
  // .lnrpc.ChannelConstraints local_constraints = 29;
  bool has_local_constraints() const;
  void clear_local_constraints() ;
  const ::lnrpc::ChannelConstraints& local_constraints() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelConstraints* release_local_constraints();
  ::lnrpc::ChannelConstraints* mutable_local_constraints();
  void set_allocated_local_constraints(::lnrpc::ChannelConstraints* value);
  void unsafe_arena_set_allocated_local_constraints(::lnrpc::ChannelConstraints* value);
  ::lnrpc::ChannelConstraints* unsafe_arena_release_local_constraints();

  private:
  const ::lnrpc::ChannelConstraints& _internal_local_constraints() const;
  ::lnrpc::ChannelConstraints* _internal_mutable_local_constraints();

  public:
  // .lnrpc.ChannelConstraints remote_constraints = 30;
  bool has_remote_constraints() const;
  void clear_remote_constraints() ;
  const ::lnrpc::ChannelConstraints& remote_constraints() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelConstraints* release_remote_constraints();
  ::lnrpc::ChannelConstraints* mutable_remote_constraints();
  void set_allocated_remote_constraints(::lnrpc::ChannelConstraints* value);
  void unsafe_arena_set_allocated_remote_constraints(::lnrpc::ChannelConstraints* value);
  ::lnrpc::ChannelConstraints* unsafe_arena_release_remote_constraints();

  private:
  const ::lnrpc::ChannelConstraints& _internal_remote_constraints() const;
  ::lnrpc::ChannelConstraints* _internal_mutable_remote_constraints();

  public:
  // uint64 chan_id = 4 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // int64 capacity = 5;
  void clear_capacity() ;
  ::int64_t capacity() const;
  void set_capacity(::int64_t value);

  private:
  ::int64_t _internal_capacity() const;
  void _internal_set_capacity(::int64_t value);

  public:
  // int64 local_balance = 6;
  void clear_local_balance() ;
  ::int64_t local_balance() const;
  void set_local_balance(::int64_t value);

  private:
  ::int64_t _internal_local_balance() const;
  void _internal_set_local_balance(::int64_t value);

  public:
  // int64 remote_balance = 7;
  void clear_remote_balance() ;
  ::int64_t remote_balance() const;
  void set_remote_balance(::int64_t value);

  private:
  ::int64_t _internal_remote_balance() const;
  void _internal_set_remote_balance(::int64_t value);

  public:
  // int64 commit_fee = 8;
  void clear_commit_fee() ;
  ::int64_t commit_fee() const;
  void set_commit_fee(::int64_t value);

  private:
  ::int64_t _internal_commit_fee() const;
  void _internal_set_commit_fee(::int64_t value);

  public:
  // int64 commit_weight = 9;
  void clear_commit_weight() ;
  ::int64_t commit_weight() const;
  void set_commit_weight(::int64_t value);

  private:
  ::int64_t _internal_commit_weight() const;
  void _internal_set_commit_weight(::int64_t value);

  public:
  // int64 fee_per_kw = 10;
  void clear_fee_per_kw() ;
  ::int64_t fee_per_kw() const;
  void set_fee_per_kw(::int64_t value);

  private:
  ::int64_t _internal_fee_per_kw() const;
  void _internal_set_fee_per_kw(::int64_t value);

  public:
  // int64 unsettled_balance = 11;
  void clear_unsettled_balance() ;
  ::int64_t unsettled_balance() const;
  void set_unsettled_balance(::int64_t value);

  private:
  ::int64_t _internal_unsettled_balance() const;
  void _internal_set_unsettled_balance(::int64_t value);

  public:
  // int64 total_satoshis_sent = 12;
  void clear_total_satoshis_sent() ;
  ::int64_t total_satoshis_sent() const;
  void set_total_satoshis_sent(::int64_t value);

  private:
  ::int64_t _internal_total_satoshis_sent() const;
  void _internal_set_total_satoshis_sent(::int64_t value);

  public:
  // int64 total_satoshis_received = 13;
  void clear_total_satoshis_received() ;
  ::int64_t total_satoshis_received() const;
  void set_total_satoshis_received(::int64_t value);

  private:
  ::int64_t _internal_total_satoshis_received() const;
  void _internal_set_total_satoshis_received(::int64_t value);

  public:
  // uint64 num_updates = 14;
  void clear_num_updates() ;
  ::uint64_t num_updates() const;
  void set_num_updates(::uint64_t value);

  private:
  ::uint64_t _internal_num_updates() const;
  void _internal_set_num_updates(::uint64_t value);

  public:
  // bool active = 1;
  void clear_active() ;
  bool active() const;
  void set_active(bool value);

  private:
  bool _internal_active() const;
  void _internal_set_active(bool value);

  public:
  // bool private = 17;
  void clear_private_() ;
  bool private_() const;
  void set_private_(bool value);

  private:
  bool _internal_private_() const;
  void _internal_set_private_(bool value);

  public:
  // bool initiator = 18;
  void clear_initiator() ;
  bool initiator() const;
  void set_initiator(bool value);

  private:
  bool _internal_initiator() const;
  void _internal_set_initiator(bool value);

  public:
  // bool static_remote_key = 22 [deprecated = true];
  [[deprecated]]  void clear_static_remote_key() ;
  [[deprecated]] bool static_remote_key() const;
  [[deprecated]] void set_static_remote_key(bool value);

  private:
  bool _internal_static_remote_key() const;
  void _internal_set_static_remote_key(bool value);

  public:
  // uint32 csv_delay = 16 [deprecated = true];
  [[deprecated]]  void clear_csv_delay() ;
  [[deprecated]] ::uint32_t csv_delay() const;
  [[deprecated]] void set_csv_delay(::uint32_t value);

  private:
  ::uint32_t _internal_csv_delay() const;
  void _internal_set_csv_delay(::uint32_t value);

  public:
  // int64 local_chan_reserve_sat = 20 [deprecated = true];
  [[deprecated]]  void clear_local_chan_reserve_sat() ;
  [[deprecated]] ::int64_t local_chan_reserve_sat() const;
  [[deprecated]] void set_local_chan_reserve_sat(::int64_t value);

  private:
  ::int64_t _internal_local_chan_reserve_sat() const;
  void _internal_set_local_chan_reserve_sat(::int64_t value);

  public:
  // int64 remote_chan_reserve_sat = 21 [deprecated = true];
  [[deprecated]]  void clear_remote_chan_reserve_sat() ;
  [[deprecated]] ::int64_t remote_chan_reserve_sat() const;
  [[deprecated]] void set_remote_chan_reserve_sat(::int64_t value);

  private:
  ::int64_t _internal_remote_chan_reserve_sat() const;
  void _internal_set_remote_chan_reserve_sat(::int64_t value);

  public:
  // int64 lifetime = 23;
  void clear_lifetime() ;
  ::int64_t lifetime() const;
  void set_lifetime(::int64_t value);

  private:
  ::int64_t _internal_lifetime() const;
  void _internal_set_lifetime(::int64_t value);

  public:
  // int64 uptime = 24;
  void clear_uptime() ;
  ::int64_t uptime() const;
  void set_uptime(::int64_t value);

  private:
  ::int64_t _internal_uptime() const;
  void _internal_set_uptime(::int64_t value);

  public:
  // uint64 push_amount_sat = 27;
  void clear_push_amount_sat() ;
  ::uint64_t push_amount_sat() const;
  void set_push_amount_sat(::uint64_t value);

  private:
  ::uint64_t _internal_push_amount_sat() const;
  void _internal_set_push_amount_sat(::uint64_t value);

  public:
  // .lnrpc.CommitmentType commitment_type = 26;
  void clear_commitment_type() ;
  ::lnrpc::CommitmentType commitment_type() const;
  void set_commitment_type(::lnrpc::CommitmentType value);

  private:
  ::lnrpc::CommitmentType _internal_commitment_type() const;
  void _internal_set_commitment_type(::lnrpc::CommitmentType value);

  public:
  // uint32 thaw_height = 28;
  void clear_thaw_height() ;
  ::uint32_t thaw_height() const;
  void set_thaw_height(::uint32_t value);

  private:
  ::uint32_t _internal_thaw_height() const;
  void _internal_set_thaw_height(::uint32_t value);

  public:
  // uint64 zero_conf_confirmed_scid = 33;
  void clear_zero_conf_confirmed_scid() ;
  ::uint64_t zero_conf_confirmed_scid() const;
  void set_zero_conf_confirmed_scid(::uint64_t value);

  private:
  ::uint64_t _internal_zero_conf_confirmed_scid() const;
  void _internal_set_zero_conf_confirmed_scid(::uint64_t value);

  public:
  // uint64 peer_scid_alias = 35 [jstype = JS_STRING];
  void clear_peer_scid_alias() ;
  ::uint64_t peer_scid_alias() const;
  void set_peer_scid_alias(::uint64_t value);

  private:
  ::uint64_t _internal_peer_scid_alias() const;
  void _internal_set_peer_scid_alias(::uint64_t value);

  public:
  // bool zero_conf = 32;
  void clear_zero_conf() ;
  bool zero_conf() const;
  void set_zero_conf(bool value);

  private:
  bool _internal_zero_conf() const;
  void _internal_set_zero_conf(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Channel)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 37, 3,
      124, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Channel_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Channel& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::HTLC > pending_htlcs_;
    ::google::protobuf::RepeatedField<::uint64_t> alias_scids_;
    mutable ::google::protobuf::internal::CachedSize _alias_scids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr remote_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr channel_point_;
    ::google::protobuf::internal::ArenaStringPtr chan_status_flags_;
    ::google::protobuf::internal::ArenaStringPtr close_address_;
    ::google::protobuf::internal::ArenaStringPtr peer_alias_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::google::protobuf::internal::ArenaStringPtr custom_channel_data_;
    ::lnrpc::ChannelConstraints* local_constraints_;
    ::lnrpc::ChannelConstraints* remote_constraints_;
    ::uint64_t chan_id_;
    ::int64_t capacity_;
    ::int64_t local_balance_;
    ::int64_t remote_balance_;
    ::int64_t commit_fee_;
    ::int64_t commit_weight_;
    ::int64_t fee_per_kw_;
    ::int64_t unsettled_balance_;
    ::int64_t total_satoshis_sent_;
    ::int64_t total_satoshis_received_;
    ::uint64_t num_updates_;
    bool active_;
    bool private__;
    bool initiator_;
    bool static_remote_key_;
    ::uint32_t csv_delay_;
    ::int64_t local_chan_reserve_sat_;
    ::int64_t remote_chan_reserve_sat_;
    ::int64_t lifetime_;
    ::int64_t uptime_;
    ::uint64_t push_amount_sat_;
    int commitment_type_;
    ::uint32_t thaw_height_;
    ::uint64_t zero_conf_confirmed_scid_;
    ::uint64_t peer_scid_alias_;
    bool zero_conf_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BlindedPath final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BlindedPath) */ {
 public:
  inline BlindedPath() : BlindedPath(nullptr) {}
  ~BlindedPath() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlindedPath(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlindedPath(const BlindedPath& from) : BlindedPath(nullptr, from) {}
  inline BlindedPath(BlindedPath&& from) noexcept
      : BlindedPath(nullptr, std::move(from)) {}
  inline BlindedPath& operator=(const BlindedPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlindedPath& operator=(BlindedPath&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlindedPath& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlindedPath* internal_default_instance() {
    return reinterpret_cast<const BlindedPath*>(
        &_BlindedPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 153;
  friend void swap(BlindedPath& a, BlindedPath& b) { a.Swap(&b); }
  inline void Swap(BlindedPath* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlindedPath* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlindedPath* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BlindedPath>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlindedPath& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlindedPath& from) { BlindedPath::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlindedPath* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BlindedPath"; }

 protected:
  explicit BlindedPath(::google::protobuf::Arena* arena);
  BlindedPath(::google::protobuf::Arena* arena, const BlindedPath& from);
  BlindedPath(::google::protobuf::Arena* arena, BlindedPath&& from) noexcept
      : BlindedPath(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlindedHopsFieldNumber = 3,
    kIntroductionNodeFieldNumber = 1,
    kBlindingPointFieldNumber = 2,
  };
  // repeated .lnrpc.BlindedHop blinded_hops = 3;
  int blinded_hops_size() const;
  private:
  int _internal_blinded_hops_size() const;

  public:
  void clear_blinded_hops() ;
  ::lnrpc::BlindedHop* mutable_blinded_hops(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>* mutable_blinded_hops();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>& _internal_blinded_hops() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>* _internal_mutable_blinded_hops();
  public:
  const ::lnrpc::BlindedHop& blinded_hops(int index) const;
  ::lnrpc::BlindedHop* add_blinded_hops();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>& blinded_hops() const;
  // bytes introduction_node = 1;
  void clear_introduction_node() ;
  const std::string& introduction_node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_introduction_node(Arg_&& arg, Args_... args);
  std::string* mutable_introduction_node();
  PROTOBUF_NODISCARD std::string* release_introduction_node();
  void set_allocated_introduction_node(std::string* value);

  private:
  const std::string& _internal_introduction_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_introduction_node(
      const std::string& value);
  std::string* _internal_mutable_introduction_node();

  public:
  // bytes blinding_point = 2;
  void clear_blinding_point() ;
  const std::string& blinding_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_blinding_point(Arg_&& arg, Args_... args);
  std::string* mutable_blinding_point();
  PROTOBUF_NODISCARD std::string* release_blinding_point();
  void set_allocated_blinding_point(std::string* value);

  private:
  const std::string& _internal_blinding_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_blinding_point(
      const std::string& value);
  std::string* _internal_mutable_blinding_point();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BlindedPath)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlindedPath_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlindedPath& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::BlindedHop > blinded_hops_;
    ::google::protobuf::internal::ArenaStringPtr introduction_node_;
    ::google::protobuf::internal::ArenaStringPtr blinding_point_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BatchOpenChannelResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BatchOpenChannelResponse) */ {
 public:
  inline BatchOpenChannelResponse() : BatchOpenChannelResponse(nullptr) {}
  ~BatchOpenChannelResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchOpenChannelResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchOpenChannelResponse(const BatchOpenChannelResponse& from) : BatchOpenChannelResponse(nullptr, from) {}
  inline BatchOpenChannelResponse(BatchOpenChannelResponse&& from) noexcept
      : BatchOpenChannelResponse(nullptr, std::move(from)) {}
  inline BatchOpenChannelResponse& operator=(const BatchOpenChannelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchOpenChannelResponse& operator=(BatchOpenChannelResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchOpenChannelResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchOpenChannelResponse* internal_default_instance() {
    return reinterpret_cast<const BatchOpenChannelResponse*>(
        &_BatchOpenChannelResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 81;
  friend void swap(BatchOpenChannelResponse& a, BatchOpenChannelResponse& b) { a.Swap(&b); }
  inline void Swap(BatchOpenChannelResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchOpenChannelResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchOpenChannelResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BatchOpenChannelResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchOpenChannelResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchOpenChannelResponse& from) { BatchOpenChannelResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchOpenChannelResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BatchOpenChannelResponse"; }

 protected:
  explicit BatchOpenChannelResponse(::google::protobuf::Arena* arena);
  BatchOpenChannelResponse(::google::protobuf::Arena* arena, const BatchOpenChannelResponse& from);
  BatchOpenChannelResponse(::google::protobuf::Arena* arena, BatchOpenChannelResponse&& from) noexcept
      : BatchOpenChannelResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingChannelsFieldNumber = 1,
  };
  // repeated .lnrpc.PendingUpdate pending_channels = 1;
  int pending_channels_size() const;
  private:
  int _internal_pending_channels_size() const;

  public:
  void clear_pending_channels() ;
  ::lnrpc::PendingUpdate* mutable_pending_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>* mutable_pending_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>& _internal_pending_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>* _internal_mutable_pending_channels();
  public:
  const ::lnrpc::PendingUpdate& pending_channels(int index) const;
  ::lnrpc::PendingUpdate* add_pending_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>& pending_channels() const;
  // @@protoc_insertion_point(class_scope:lnrpc.BatchOpenChannelResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchOpenChannelResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchOpenChannelResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PendingUpdate > pending_channels_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BatchOpenChannelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BatchOpenChannelRequest) */ {
 public:
  inline BatchOpenChannelRequest() : BatchOpenChannelRequest(nullptr) {}
  ~BatchOpenChannelRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BatchOpenChannelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BatchOpenChannelRequest(const BatchOpenChannelRequest& from) : BatchOpenChannelRequest(nullptr, from) {}
  inline BatchOpenChannelRequest(BatchOpenChannelRequest&& from) noexcept
      : BatchOpenChannelRequest(nullptr, std::move(from)) {}
  inline BatchOpenChannelRequest& operator=(const BatchOpenChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BatchOpenChannelRequest& operator=(BatchOpenChannelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BatchOpenChannelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BatchOpenChannelRequest* internal_default_instance() {
    return reinterpret_cast<const BatchOpenChannelRequest*>(
        &_BatchOpenChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 79;
  friend void swap(BatchOpenChannelRequest& a, BatchOpenChannelRequest& b) { a.Swap(&b); }
  inline void Swap(BatchOpenChannelRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BatchOpenChannelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BatchOpenChannelRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BatchOpenChannelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BatchOpenChannelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BatchOpenChannelRequest& from) { BatchOpenChannelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BatchOpenChannelRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BatchOpenChannelRequest"; }

 protected:
  explicit BatchOpenChannelRequest(::google::protobuf::Arena* arena);
  BatchOpenChannelRequest(::google::protobuf::Arena* arena, const BatchOpenChannelRequest& from);
  BatchOpenChannelRequest(::google::protobuf::Arena* arena, BatchOpenChannelRequest&& from) noexcept
      : BatchOpenChannelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsFieldNumber = 1,
    kLabelFieldNumber = 6,
    kSatPerVbyteFieldNumber = 3,
    kTargetConfFieldNumber = 2,
    kMinConfsFieldNumber = 4,
    kSpendUnconfirmedFieldNumber = 5,
    kCoinSelectionStrategyFieldNumber = 7,
  };
  // repeated .lnrpc.BatchOpenChannel channels = 1;
  int channels_size() const;
  private:
  int _internal_channels_size() const;

  public:
  void clear_channels() ;
  ::lnrpc::BatchOpenChannel* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>* mutable_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>& _internal_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>* _internal_mutable_channels();
  public:
  const ::lnrpc::BatchOpenChannel& channels(int index) const;
  ::lnrpc::BatchOpenChannel* add_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>& channels() const;
  // string label = 6;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // int64 sat_per_vbyte = 3;
  void clear_sat_per_vbyte() ;
  ::int64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::int64_t value);

  private:
  ::int64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::int64_t value);

  public:
  // int32 target_conf = 2;
  void clear_target_conf() ;
  ::int32_t target_conf() const;
  void set_target_conf(::int32_t value);

  private:
  ::int32_t _internal_target_conf() const;
  void _internal_set_target_conf(::int32_t value);

  public:
  // int32 min_confs = 4;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // bool spend_unconfirmed = 5;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // .lnrpc.CoinSelectionStrategy coin_selection_strategy = 7;
  void clear_coin_selection_strategy() ;
  ::lnrpc::CoinSelectionStrategy coin_selection_strategy() const;
  void set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  private:
  ::lnrpc::CoinSelectionStrategy _internal_coin_selection_strategy() const;
  void _internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BatchOpenChannelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BatchOpenChannelRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BatchOpenChannelRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::BatchOpenChannel > channels_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::int64_t sat_per_vbyte_;
    ::int32_t target_conf_;
    ::int32_t min_confs_;
    bool spend_unconfirmed_;
    int coin_selection_strategy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BakeMacaroonRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BakeMacaroonRequest) */ {
 public:
  inline BakeMacaroonRequest() : BakeMacaroonRequest(nullptr) {}
  ~BakeMacaroonRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BakeMacaroonRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BakeMacaroonRequest(const BakeMacaroonRequest& from) : BakeMacaroonRequest(nullptr, from) {}
  inline BakeMacaroonRequest(BakeMacaroonRequest&& from) noexcept
      : BakeMacaroonRequest(nullptr, std::move(from)) {}
  inline BakeMacaroonRequest& operator=(const BakeMacaroonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BakeMacaroonRequest& operator=(BakeMacaroonRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BakeMacaroonRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BakeMacaroonRequest* internal_default_instance() {
    return reinterpret_cast<const BakeMacaroonRequest*>(
        &_BakeMacaroonRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 206;
  friend void swap(BakeMacaroonRequest& a, BakeMacaroonRequest& b) { a.Swap(&b); }
  inline void Swap(BakeMacaroonRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BakeMacaroonRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BakeMacaroonRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BakeMacaroonRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BakeMacaroonRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BakeMacaroonRequest& from) { BakeMacaroonRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BakeMacaroonRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BakeMacaroonRequest"; }

 protected:
  explicit BakeMacaroonRequest(::google::protobuf::Arena* arena);
  BakeMacaroonRequest(::google::protobuf::Arena* arena, const BakeMacaroonRequest& from);
  BakeMacaroonRequest(::google::protobuf::Arena* arena, BakeMacaroonRequest&& from) noexcept
      : BakeMacaroonRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermissionsFieldNumber = 1,
    kRootKeyIdFieldNumber = 2,
    kAllowExternalPermissionsFieldNumber = 3,
  };
  // repeated .lnrpc.MacaroonPermission permissions = 1;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::lnrpc::MacaroonPermission* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* mutable_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* _internal_mutable_permissions();
  public:
  const ::lnrpc::MacaroonPermission& permissions(int index) const;
  ::lnrpc::MacaroonPermission* add_permissions();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& permissions() const;
  // uint64 root_key_id = 2;
  void clear_root_key_id() ;
  ::uint64_t root_key_id() const;
  void set_root_key_id(::uint64_t value);

  private:
  ::uint64_t _internal_root_key_id() const;
  void _internal_set_root_key_id(::uint64_t value);

  public:
  // bool allow_external_permissions = 3;
  void clear_allow_external_permissions() ;
  bool allow_external_permissions() const;
  void set_allow_external_permissions(bool value);

  private:
  bool _internal_allow_external_permissions() const;
  void _internal_set_allow_external_permissions(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BakeMacaroonRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BakeMacaroonRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BakeMacaroonRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::MacaroonPermission > permissions_;
    ::uint64_t root_key_id_;
    bool allow_external_permissions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class AbandonChannelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.AbandonChannelRequest) */ {
 public:
  inline AbandonChannelRequest() : AbandonChannelRequest(nullptr) {}
  ~AbandonChannelRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AbandonChannelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AbandonChannelRequest(const AbandonChannelRequest& from) : AbandonChannelRequest(nullptr, from) {}
  inline AbandonChannelRequest(AbandonChannelRequest&& from) noexcept
      : AbandonChannelRequest(nullptr, std::move(from)) {}
  inline AbandonChannelRequest& operator=(const AbandonChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AbandonChannelRequest& operator=(AbandonChannelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AbandonChannelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AbandonChannelRequest* internal_default_instance() {
    return reinterpret_cast<const AbandonChannelRequest*>(
        &_AbandonChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 177;
  friend void swap(AbandonChannelRequest& a, AbandonChannelRequest& b) { a.Swap(&b); }
  inline void Swap(AbandonChannelRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AbandonChannelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AbandonChannelRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AbandonChannelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AbandonChannelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AbandonChannelRequest& from) { AbandonChannelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AbandonChannelRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.AbandonChannelRequest"; }

 protected:
  explicit AbandonChannelRequest(::google::protobuf::Arena* arena);
  AbandonChannelRequest(::google::protobuf::Arena* arena, const AbandonChannelRequest& from);
  AbandonChannelRequest(::google::protobuf::Arena* arena, AbandonChannelRequest&& from) noexcept
      : AbandonChannelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelPointFieldNumber = 1,
    kPendingFundingShimOnlyFieldNumber = 2,
    kIKnowWhatIAmDoingFieldNumber = 3,
  };
  // .lnrpc.ChannelPoint channel_point = 1;
  bool has_channel_point() const;
  void clear_channel_point() ;
  const ::lnrpc::ChannelPoint& channel_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_channel_point();
  ::lnrpc::ChannelPoint* mutable_channel_point();
  void set_allocated_channel_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_channel_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_channel_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_channel_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_channel_point();

  public:
  // bool pending_funding_shim_only = 2;
  void clear_pending_funding_shim_only() ;
  bool pending_funding_shim_only() const;
  void set_pending_funding_shim_only(bool value);

  private:
  bool _internal_pending_funding_shim_only() const;
  void _internal_set_pending_funding_shim_only(bool value);

  public:
  // bool i_know_what_i_am_doing = 3;
  void clear_i_know_what_i_am_doing() ;
  bool i_know_what_i_am_doing() const;
  void set_i_know_what_i_am_doing(bool value);

  private:
  bool _internal_i_know_what_i_am_doing() const;
  void _internal_set_i_know_what_i_am_doing(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.AbandonChannelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AbandonChannelRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AbandonChannelRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::ChannelPoint* channel_point_;
    bool pending_funding_shim_only_;
    bool i_know_what_i_am_doing_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class WalletBalanceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.WalletBalanceResponse) */ {
 public:
  inline WalletBalanceResponse() : WalletBalanceResponse(nullptr) {}
  ~WalletBalanceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR WalletBalanceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline WalletBalanceResponse(const WalletBalanceResponse& from) : WalletBalanceResponse(nullptr, from) {}
  inline WalletBalanceResponse(WalletBalanceResponse&& from) noexcept
      : WalletBalanceResponse(nullptr, std::move(from)) {}
  inline WalletBalanceResponse& operator=(const WalletBalanceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WalletBalanceResponse& operator=(WalletBalanceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WalletBalanceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WalletBalanceResponse* internal_default_instance() {
    return reinterpret_cast<const WalletBalanceResponse*>(
        &_WalletBalanceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 108;
  friend void swap(WalletBalanceResponse& a, WalletBalanceResponse& b) { a.Swap(&b); }
  inline void Swap(WalletBalanceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WalletBalanceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WalletBalanceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<WalletBalanceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WalletBalanceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const WalletBalanceResponse& from) { WalletBalanceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WalletBalanceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.WalletBalanceResponse"; }

 protected:
  explicit WalletBalanceResponse(::google::protobuf::Arena* arena);
  WalletBalanceResponse(::google::protobuf::Arena* arena, const WalletBalanceResponse& from);
  WalletBalanceResponse(::google::protobuf::Arena* arena, WalletBalanceResponse&& from) noexcept
      : WalletBalanceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountBalanceFieldNumber = 4,
    kTotalBalanceFieldNumber = 1,
    kConfirmedBalanceFieldNumber = 2,
    kUnconfirmedBalanceFieldNumber = 3,
    kLockedBalanceFieldNumber = 5,
    kReservedBalanceAnchorChanFieldNumber = 6,
  };
  // map<string, .lnrpc.WalletAccountBalance> account_balance = 4;
  int account_balance_size() const;
  private:
  int _internal_account_balance_size() const;

  public:
  void clear_account_balance() ;
  const ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>& account_balance() const;
  ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>* mutable_account_balance();

  private:
  const ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>& _internal_account_balance() const;
  ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>* _internal_mutable_account_balance();

  public:
  // int64 total_balance = 1;
  void clear_total_balance() ;
  ::int64_t total_balance() const;
  void set_total_balance(::int64_t value);

  private:
  ::int64_t _internal_total_balance() const;
  void _internal_set_total_balance(::int64_t value);

  public:
  // int64 confirmed_balance = 2;
  void clear_confirmed_balance() ;
  ::int64_t confirmed_balance() const;
  void set_confirmed_balance(::int64_t value);

  private:
  ::int64_t _internal_confirmed_balance() const;
  void _internal_set_confirmed_balance(::int64_t value);

  public:
  // int64 unconfirmed_balance = 3;
  void clear_unconfirmed_balance() ;
  ::int64_t unconfirmed_balance() const;
  void set_unconfirmed_balance(::int64_t value);

  private:
  ::int64_t _internal_unconfirmed_balance() const;
  void _internal_set_unconfirmed_balance(::int64_t value);

  public:
  // int64 locked_balance = 5;
  void clear_locked_balance() ;
  ::int64_t locked_balance() const;
  void set_locked_balance(::int64_t value);

  private:
  ::int64_t _internal_locked_balance() const;
  void _internal_set_locked_balance(::int64_t value);

  public:
  // int64 reserved_balance_anchor_chan = 6;
  void clear_reserved_balance_anchor_chan() ;
  ::int64_t reserved_balance_anchor_chan() const;
  void set_reserved_balance_anchor_chan(::int64_t value);

  private:
  ::int64_t _internal_reserved_balance_anchor_chan() const;
  void _internal_set_reserved_balance_anchor_chan(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.WalletBalanceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_WalletBalanceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const WalletBalanceResponse& from_msg);
    ::google::protobuf::internal::MapField<WalletBalanceResponse_AccountBalanceEntry_DoNotUse, std::string, ::lnrpc::WalletAccountBalance,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        account_balance_;
    ::int64_t total_balance_;
    ::int64_t confirmed_balance_;
    ::int64_t unconfirmed_balance_;
    ::int64_t locked_balance_;
    ::int64_t reserved_balance_anchor_chan_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class TransactionDetails final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.TransactionDetails) */ {
 public:
  inline TransactionDetails() : TransactionDetails(nullptr) {}
  ~TransactionDetails() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TransactionDetails(
      ::google::protobuf::internal::ConstantInitialized);

  inline TransactionDetails(const TransactionDetails& from) : TransactionDetails(nullptr, from) {}
  inline TransactionDetails(TransactionDetails&& from) noexcept
      : TransactionDetails(nullptr, std::move(from)) {}
  inline TransactionDetails& operator=(const TransactionDetails& from) {
    CopyFrom(from);
    return *this;
  }
  inline TransactionDetails& operator=(TransactionDetails&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TransactionDetails& default_instance() {
    return *internal_default_instance();
  }
  static inline const TransactionDetails* internal_default_instance() {
    return reinterpret_cast<const TransactionDetails*>(
        &_TransactionDetails_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(TransactionDetails& a, TransactionDetails& b) { a.Swap(&b); }
  inline void Swap(TransactionDetails* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TransactionDetails* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TransactionDetails* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TransactionDetails>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TransactionDetails& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TransactionDetails& from) { TransactionDetails::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TransactionDetails* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.TransactionDetails"; }

 protected:
  explicit TransactionDetails(::google::protobuf::Arena* arena);
  TransactionDetails(::google::protobuf::Arena* arena, const TransactionDetails& from);
  TransactionDetails(::google::protobuf::Arena* arena, TransactionDetails&& from) noexcept
      : TransactionDetails(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransactionsFieldNumber = 1,
  };
  // repeated .lnrpc.Transaction transactions = 1;
  int transactions_size() const;
  private:
  int _internal_transactions_size() const;

  public:
  void clear_transactions() ;
  ::lnrpc::Transaction* mutable_transactions(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>* mutable_transactions();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>& _internal_transactions() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>* _internal_mutable_transactions();
  public:
  const ::lnrpc::Transaction& transactions(int index) const;
  ::lnrpc::Transaction* add_transactions();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>& transactions() const;
  // @@protoc_insertion_point(class_scope:lnrpc.TransactionDetails)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TransactionDetails_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TransactionDetails& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Transaction > transactions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Route final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Route) */ {
 public:
  inline Route() : Route(nullptr) {}
  ~Route() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Route(
      ::google::protobuf::internal::ConstantInitialized);

  inline Route(const Route& from) : Route(nullptr, from) {}
  inline Route(Route&& from) noexcept
      : Route(nullptr, std::move(from)) {}
  inline Route& operator=(const Route& from) {
    CopyFrom(from);
    return *this;
  }
  inline Route& operator=(Route&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Route& default_instance() {
    return *internal_default_instance();
  }
  static inline const Route* internal_default_instance() {
    return reinterpret_cast<const Route*>(
        &_Route_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 121;
  friend void swap(Route& a, Route& b) { a.Swap(&b); }
  inline void Swap(Route* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Route* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Route* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Route>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Route& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Route& from) { Route::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Route* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Route"; }

 protected:
  explicit Route(::google::protobuf::Arena* arena);
  Route(::google::protobuf::Arena* arena, const Route& from);
  Route(::google::protobuf::Arena* arena, Route&& from) noexcept
      : Route(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHopsFieldNumber = 4,
    kCustomChannelDataFieldNumber = 8,
    kTotalFeesFieldNumber = 2,
    kTotalAmtFieldNumber = 3,
    kTotalFeesMsatFieldNumber = 5,
    kTotalAmtMsatFieldNumber = 6,
    kFirstHopAmountMsatFieldNumber = 7,
    kTotalTimeLockFieldNumber = 1,
  };
  // repeated .lnrpc.Hop hops = 4;
  int hops_size() const;
  private:
  int _internal_hops_size() const;

  public:
  void clear_hops() ;
  ::lnrpc::Hop* mutable_hops(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>* mutable_hops();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>& _internal_hops() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>* _internal_mutable_hops();
  public:
  const ::lnrpc::Hop& hops(int index) const;
  ::lnrpc::Hop* add_hops();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>& hops() const;
  // bytes custom_channel_data = 8;
  void clear_custom_channel_data() ;
  const std::string& custom_channel_data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_custom_channel_data(Arg_&& arg, Args_... args);
  std::string* mutable_custom_channel_data();
  PROTOBUF_NODISCARD std::string* release_custom_channel_data();
  void set_allocated_custom_channel_data(std::string* value);

  private:
  const std::string& _internal_custom_channel_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_custom_channel_data(
      const std::string& value);
  std::string* _internal_mutable_custom_channel_data();

  public:
  // int64 total_fees = 2 [deprecated = true];
  [[deprecated]]  void clear_total_fees() ;
  [[deprecated]] ::int64_t total_fees() const;
  [[deprecated]] void set_total_fees(::int64_t value);

  private:
  ::int64_t _internal_total_fees() const;
  void _internal_set_total_fees(::int64_t value);

  public:
  // int64 total_amt = 3 [deprecated = true];
  [[deprecated]]  void clear_total_amt() ;
  [[deprecated]] ::int64_t total_amt() const;
  [[deprecated]] void set_total_amt(::int64_t value);

  private:
  ::int64_t _internal_total_amt() const;
  void _internal_set_total_amt(::int64_t value);

  public:
  // int64 total_fees_msat = 5;
  void clear_total_fees_msat() ;
  ::int64_t total_fees_msat() const;
  void set_total_fees_msat(::int64_t value);

  private:
  ::int64_t _internal_total_fees_msat() const;
  void _internal_set_total_fees_msat(::int64_t value);

  public:
  // int64 total_amt_msat = 6;
  void clear_total_amt_msat() ;
  ::int64_t total_amt_msat() const;
  void set_total_amt_msat(::int64_t value);

  private:
  ::int64_t _internal_total_amt_msat() const;
  void _internal_set_total_amt_msat(::int64_t value);

  public:
  // int64 first_hop_amount_msat = 7;
  void clear_first_hop_amount_msat() ;
  ::int64_t first_hop_amount_msat() const;
  void set_first_hop_amount_msat(::int64_t value);

  private:
  ::int64_t _internal_first_hop_amount_msat() const;
  void _internal_set_first_hop_amount_msat(::int64_t value);

  public:
  // uint32 total_time_lock = 1;
  void clear_total_time_lock() ;
  ::uint32_t total_time_lock() const;
  void set_total_time_lock(::uint32_t value);

  private:
  ::uint32_t _internal_total_time_lock() const;
  void _internal_set_total_time_lock(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Route)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Route_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Route& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Hop > hops_;
    ::google::protobuf::internal::ArenaStringPtr custom_channel_data_;
    ::int64_t total_fees_;
    ::int64_t total_amt_;
    ::int64_t total_fees_msat_;
    ::int64_t total_amt_msat_;
    ::int64_t first_hop_amount_msat_;
    ::uint32_t total_time_lock_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PolicyUpdateResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PolicyUpdateResponse) */ {
 public:
  inline PolicyUpdateResponse() : PolicyUpdateResponse(nullptr) {}
  ~PolicyUpdateResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PolicyUpdateResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PolicyUpdateResponse(const PolicyUpdateResponse& from) : PolicyUpdateResponse(nullptr, from) {}
  inline PolicyUpdateResponse(PolicyUpdateResponse&& from) noexcept
      : PolicyUpdateResponse(nullptr, std::move(from)) {}
  inline PolicyUpdateResponse& operator=(const PolicyUpdateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PolicyUpdateResponse& operator=(PolicyUpdateResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PolicyUpdateResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PolicyUpdateResponse* internal_default_instance() {
    return reinterpret_cast<const PolicyUpdateResponse*>(
        &_PolicyUpdateResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 191;
  friend void swap(PolicyUpdateResponse& a, PolicyUpdateResponse& b) { a.Swap(&b); }
  inline void Swap(PolicyUpdateResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PolicyUpdateResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PolicyUpdateResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PolicyUpdateResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PolicyUpdateResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PolicyUpdateResponse& from) { PolicyUpdateResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PolicyUpdateResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PolicyUpdateResponse"; }

 protected:
  explicit PolicyUpdateResponse(::google::protobuf::Arena* arena);
  PolicyUpdateResponse(::google::protobuf::Arena* arena, const PolicyUpdateResponse& from);
  PolicyUpdateResponse(::google::protobuf::Arena* arena, PolicyUpdateResponse&& from) noexcept
      : PolicyUpdateResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFailedUpdatesFieldNumber = 1,
  };
  // repeated .lnrpc.FailedUpdate failed_updates = 1;
  int failed_updates_size() const;
  private:
  int _internal_failed_updates_size() const;

  public:
  void clear_failed_updates() ;
  ::lnrpc::FailedUpdate* mutable_failed_updates(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>* mutable_failed_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>& _internal_failed_updates() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>* _internal_mutable_failed_updates();
  public:
  const ::lnrpc::FailedUpdate& failed_updates(int index) const;
  ::lnrpc::FailedUpdate* add_failed_updates();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>& failed_updates() const;
  // @@protoc_insertion_point(class_scope:lnrpc.PolicyUpdateResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PolicyUpdateResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PolicyUpdateResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::FailedUpdate > failed_updates_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PendingChannelsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PendingChannelsResponse) */ {
 public:
  inline PendingChannelsResponse() : PendingChannelsResponse(nullptr) {}
  ~PendingChannelsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingChannelsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingChannelsResponse(const PendingChannelsResponse& from) : PendingChannelsResponse(nullptr, from) {}
  inline PendingChannelsResponse(PendingChannelsResponse&& from) noexcept
      : PendingChannelsResponse(nullptr, std::move(from)) {}
  inline PendingChannelsResponse& operator=(const PendingChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingChannelsResponse& operator=(PendingChannelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingChannelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const PendingChannelsResponse*>(
        &_PendingChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 102;
  friend void swap(PendingChannelsResponse& a, PendingChannelsResponse& b) { a.Swap(&b); }
  inline void Swap(PendingChannelsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingChannelsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingChannelsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingChannelsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingChannelsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingChannelsResponse& from) { PendingChannelsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingChannelsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PendingChannelsResponse"; }

 protected:
  explicit PendingChannelsResponse(::google::protobuf::Arena* arena);
  PendingChannelsResponse(::google::protobuf::Arena* arena, const PendingChannelsResponse& from);
  PendingChannelsResponse(::google::protobuf::Arena* arena, PendingChannelsResponse&& from) noexcept
      : PendingChannelsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PendingChannel = PendingChannelsResponse_PendingChannel;
  using PendingOpenChannel = PendingChannelsResponse_PendingOpenChannel;
  using WaitingCloseChannel = PendingChannelsResponse_WaitingCloseChannel;
  using Commitments = PendingChannelsResponse_Commitments;
  using ClosedChannel = PendingChannelsResponse_ClosedChannel;
  using ForceClosedChannel = PendingChannelsResponse_ForceClosedChannel;

  // accessors -------------------------------------------------------
  enum : int {
    kPendingOpenChannelsFieldNumber = 2,
    kPendingClosingChannelsFieldNumber = 3,
    kPendingForceClosingChannelsFieldNumber = 4,
    kWaitingCloseChannelsFieldNumber = 5,
    kTotalLimboBalanceFieldNumber = 1,
  };
  // repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2;
  int pending_open_channels_size() const;
  private:
  int _internal_pending_open_channels_size() const;

  public:
  void clear_pending_open_channels() ;
  ::lnrpc::PendingChannelsResponse_PendingOpenChannel* mutable_pending_open_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>* mutable_pending_open_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>& _internal_pending_open_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>* _internal_mutable_pending_open_channels();
  public:
  const ::lnrpc::PendingChannelsResponse_PendingOpenChannel& pending_open_channels(int index) const;
  ::lnrpc::PendingChannelsResponse_PendingOpenChannel* add_pending_open_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>& pending_open_channels() const;
  // repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3 [deprecated = true];
  [[deprecated]]  int pending_closing_channels_size() const;
  private:
  int _internal_pending_closing_channels_size() const;

  public:
  [[deprecated]]  void clear_pending_closing_channels() ;
  [[deprecated]] ::lnrpc::PendingChannelsResponse_ClosedChannel* mutable_pending_closing_channels(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>* mutable_pending_closing_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>& _internal_pending_closing_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>* _internal_mutable_pending_closing_channels();
  public:
  [[deprecated]] const ::lnrpc::PendingChannelsResponse_ClosedChannel& pending_closing_channels(int index) const;
  [[deprecated]] ::lnrpc::PendingChannelsResponse_ClosedChannel* add_pending_closing_channels();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>& pending_closing_channels() const;
  // repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4;
  int pending_force_closing_channels_size() const;
  private:
  int _internal_pending_force_closing_channels_size() const;

  public:
  void clear_pending_force_closing_channels() ;
  ::lnrpc::PendingChannelsResponse_ForceClosedChannel* mutable_pending_force_closing_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>* mutable_pending_force_closing_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>& _internal_pending_force_closing_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>* _internal_mutable_pending_force_closing_channels();
  public:
  const ::lnrpc::PendingChannelsResponse_ForceClosedChannel& pending_force_closing_channels(int index) const;
  ::lnrpc::PendingChannelsResponse_ForceClosedChannel* add_pending_force_closing_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>& pending_force_closing_channels() const;
  // repeated .lnrpc.PendingChannelsResponse.WaitingCloseChannel waiting_close_channels = 5;
  int waiting_close_channels_size() const;
  private:
  int _internal_waiting_close_channels_size() const;

  public:
  void clear_waiting_close_channels() ;
  ::lnrpc::PendingChannelsResponse_WaitingCloseChannel* mutable_waiting_close_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>* mutable_waiting_close_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>& _internal_waiting_close_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>* _internal_mutable_waiting_close_channels();
  public:
  const ::lnrpc::PendingChannelsResponse_WaitingCloseChannel& waiting_close_channels(int index) const;
  ::lnrpc::PendingChannelsResponse_WaitingCloseChannel* add_waiting_close_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>& waiting_close_channels() const;
  // int64 total_limbo_balance = 1;
  void clear_total_limbo_balance() ;
  ::int64_t total_limbo_balance() const;
  void set_total_limbo_balance(::int64_t value);

  private:
  ::int64_t _internal_total_limbo_balance() const;
  void _internal_set_total_limbo_balance(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PendingChannelsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingChannelsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingChannelsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PendingChannelsResponse_PendingOpenChannel > pending_open_channels_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PendingChannelsResponse_ClosedChannel > pending_closing_channels_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PendingChannelsResponse_ForceClosedChannel > pending_force_closing_channels_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::PendingChannelsResponse_WaitingCloseChannel > waiting_close_channels_;
    ::int64_t total_limbo_balance_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Peer final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Peer) */ {
 public:
  inline Peer() : Peer(nullptr) {}
  ~Peer() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Peer(
      ::google::protobuf::internal::ConstantInitialized);

  inline Peer(const Peer& from) : Peer(nullptr, from) {}
  inline Peer(Peer&& from) noexcept
      : Peer(nullptr, std::move(from)) {}
  inline Peer& operator=(const Peer& from) {
    CopyFrom(from);
    return *this;
  }
  inline Peer& operator=(Peer&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Peer& default_instance() {
    return *internal_default_instance();
  }
  static inline const Peer* internal_default_instance() {
    return reinterpret_cast<const Peer*>(
        &_Peer_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(Peer& a, Peer& b) { a.Swap(&b); }
  inline void Swap(Peer* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Peer* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Peer* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Peer>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Peer& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Peer& from) { Peer::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Peer* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Peer"; }

 protected:
  explicit Peer(::google::protobuf::Arena* arena);
  Peer(::google::protobuf::Arena* arena, const Peer& from);
  Peer(::google::protobuf::Arena* arena, Peer&& from) noexcept
      : Peer(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using SyncType = Peer_SyncType;
  static constexpr SyncType UNKNOWN_SYNC = Peer_SyncType_UNKNOWN_SYNC;
  static constexpr SyncType ACTIVE_SYNC = Peer_SyncType_ACTIVE_SYNC;
  static constexpr SyncType PASSIVE_SYNC = Peer_SyncType_PASSIVE_SYNC;
  static constexpr SyncType PINNED_SYNC = Peer_SyncType_PINNED_SYNC;
  static inline bool SyncType_IsValid(int value) {
    return Peer_SyncType_IsValid(value);
  }
  static constexpr SyncType SyncType_MIN = Peer_SyncType_SyncType_MIN;
  static constexpr SyncType SyncType_MAX = Peer_SyncType_SyncType_MAX;
  static constexpr int SyncType_ARRAYSIZE = Peer_SyncType_SyncType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* SyncType_descriptor() {
    return Peer_SyncType_descriptor();
  }
  template <typename T>
  static inline const std::string& SyncType_Name(T value) {
    return Peer_SyncType_Name(value);
  }
  static inline bool SyncType_Parse(absl::string_view name, SyncType* value) {
    return Peer_SyncType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kFeaturesFieldNumber = 11,
    kErrorsFieldNumber = 12,
    kPubKeyFieldNumber = 1,
    kAddressFieldNumber = 3,
    kLastPingPayloadFieldNumber = 15,
    kBytesSentFieldNumber = 4,
    kBytesRecvFieldNumber = 5,
    kSatSentFieldNumber = 6,
    kSatRecvFieldNumber = 7,
    kPingTimeFieldNumber = 9,
    kInboundFieldNumber = 8,
    kSyncTypeFieldNumber = 10,
    kLastFlapNsFieldNumber = 14,
    kFlapCountFieldNumber = 13,
  };
  // map<uint32, .lnrpc.Feature> features = 11;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* mutable_features();

  private:
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& _internal_features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* _internal_mutable_features();

  public:
  // repeated .lnrpc.TimestampedError errors = 12;
  int errors_size() const;
  private:
  int _internal_errors_size() const;

  public:
  void clear_errors() ;
  ::lnrpc::TimestampedError* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>* mutable_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>& _internal_errors() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>* _internal_mutable_errors();
  public:
  const ::lnrpc::TimestampedError& errors(int index) const;
  ::lnrpc::TimestampedError* add_errors();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>& errors() const;
  // string pub_key = 1;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // string address = 3;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // bytes last_ping_payload = 15;
  void clear_last_ping_payload() ;
  const std::string& last_ping_payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_ping_payload(Arg_&& arg, Args_... args);
  std::string* mutable_last_ping_payload();
  PROTOBUF_NODISCARD std::string* release_last_ping_payload();
  void set_allocated_last_ping_payload(std::string* value);

  private:
  const std::string& _internal_last_ping_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_ping_payload(
      const std::string& value);
  std::string* _internal_mutable_last_ping_payload();

  public:
  // uint64 bytes_sent = 4;
  void clear_bytes_sent() ;
  ::uint64_t bytes_sent() const;
  void set_bytes_sent(::uint64_t value);

  private:
  ::uint64_t _internal_bytes_sent() const;
  void _internal_set_bytes_sent(::uint64_t value);

  public:
  // uint64 bytes_recv = 5;
  void clear_bytes_recv() ;
  ::uint64_t bytes_recv() const;
  void set_bytes_recv(::uint64_t value);

  private:
  ::uint64_t _internal_bytes_recv() const;
  void _internal_set_bytes_recv(::uint64_t value);

  public:
  // int64 sat_sent = 6;
  void clear_sat_sent() ;
  ::int64_t sat_sent() const;
  void set_sat_sent(::int64_t value);

  private:
  ::int64_t _internal_sat_sent() const;
  void _internal_set_sat_sent(::int64_t value);

  public:
  // int64 sat_recv = 7;
  void clear_sat_recv() ;
  ::int64_t sat_recv() const;
  void set_sat_recv(::int64_t value);

  private:
  ::int64_t _internal_sat_recv() const;
  void _internal_set_sat_recv(::int64_t value);

  public:
  // int64 ping_time = 9;
  void clear_ping_time() ;
  ::int64_t ping_time() const;
  void set_ping_time(::int64_t value);

  private:
  ::int64_t _internal_ping_time() const;
  void _internal_set_ping_time(::int64_t value);

  public:
  // bool inbound = 8;
  void clear_inbound() ;
  bool inbound() const;
  void set_inbound(bool value);

  private:
  bool _internal_inbound() const;
  void _internal_set_inbound(bool value);

  public:
  // .lnrpc.Peer.SyncType sync_type = 10;
  void clear_sync_type() ;
  ::lnrpc::Peer_SyncType sync_type() const;
  void set_sync_type(::lnrpc::Peer_SyncType value);

  private:
  ::lnrpc::Peer_SyncType _internal_sync_type() const;
  void _internal_set_sync_type(::lnrpc::Peer_SyncType value);

  public:
  // int64 last_flap_ns = 14;
  void clear_last_flap_ns() ;
  ::int64_t last_flap_ns() const;
  void set_last_flap_ns(::int64_t value);

  private:
  ::int64_t _internal_last_flap_ns() const;
  void _internal_set_last_flap_ns(::int64_t value);

  public:
  // int32 flap_count = 13;
  void clear_flap_count() ;
  ::int32_t flap_count() const;
  void set_flap_count(::int32_t value);

  private:
  ::int32_t _internal_flap_count() const;
  void _internal_set_flap_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Peer)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 3,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Peer_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Peer& from_msg);
    ::google::protobuf::internal::MapField<Peer_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        features_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::TimestampedError > errors_;
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr last_ping_payload_;
    ::uint64_t bytes_sent_;
    ::uint64_t bytes_recv_;
    ::int64_t sat_sent_;
    ::int64_t sat_recv_;
    ::int64_t ping_time_;
    bool inbound_;
    int sync_type_;
    ::int64_t last_flap_ns_;
    ::int32_t flap_count_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class OpenStatusUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.OpenStatusUpdate) */ {
 public:
  inline OpenStatusUpdate() : OpenStatusUpdate(nullptr) {}
  ~OpenStatusUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpenStatusUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpenStatusUpdate(const OpenStatusUpdate& from) : OpenStatusUpdate(nullptr, from) {}
  inline OpenStatusUpdate(OpenStatusUpdate&& from) noexcept
      : OpenStatusUpdate(nullptr, std::move(from)) {}
  inline OpenStatusUpdate& operator=(const OpenStatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenStatusUpdate& operator=(OpenStatusUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenStatusUpdate& default_instance() {
    return *internal_default_instance();
  }
  enum UpdateCase {
    kChanPending = 1,
    kChanOpen = 3,
    kPsbtFund = 5,
    UPDATE_NOT_SET = 0,
  };
  static inline const OpenStatusUpdate* internal_default_instance() {
    return reinterpret_cast<const OpenStatusUpdate*>(
        &_OpenStatusUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 83;
  friend void swap(OpenStatusUpdate& a, OpenStatusUpdate& b) { a.Swap(&b); }
  inline void Swap(OpenStatusUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenStatusUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenStatusUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpenStatusUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpenStatusUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpenStatusUpdate& from) { OpenStatusUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpenStatusUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.OpenStatusUpdate"; }

 protected:
  explicit OpenStatusUpdate(::google::protobuf::Arena* arena);
  OpenStatusUpdate(::google::protobuf::Arena* arena, const OpenStatusUpdate& from);
  OpenStatusUpdate(::google::protobuf::Arena* arena, OpenStatusUpdate&& from) noexcept
      : OpenStatusUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingChanIdFieldNumber = 4,
    kChanPendingFieldNumber = 1,
    kChanOpenFieldNumber = 3,
    kPsbtFundFieldNumber = 5,
  };
  // bytes pending_chan_id = 4;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // .lnrpc.PendingUpdate chan_pending = 1;
  bool has_chan_pending() const;
  private:
  bool _internal_has_chan_pending() const;

  public:
  void clear_chan_pending() ;
  const ::lnrpc::PendingUpdate& chan_pending() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingUpdate* release_chan_pending();
  ::lnrpc::PendingUpdate* mutable_chan_pending();
  void set_allocated_chan_pending(::lnrpc::PendingUpdate* value);
  void unsafe_arena_set_allocated_chan_pending(::lnrpc::PendingUpdate* value);
  ::lnrpc::PendingUpdate* unsafe_arena_release_chan_pending();

  private:
  const ::lnrpc::PendingUpdate& _internal_chan_pending() const;
  ::lnrpc::PendingUpdate* _internal_mutable_chan_pending();

  public:
  // .lnrpc.ChannelOpenUpdate chan_open = 3;
  bool has_chan_open() const;
  private:
  bool _internal_has_chan_open() const;

  public:
  void clear_chan_open() ;
  const ::lnrpc::ChannelOpenUpdate& chan_open() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelOpenUpdate* release_chan_open();
  ::lnrpc::ChannelOpenUpdate* mutable_chan_open();
  void set_allocated_chan_open(::lnrpc::ChannelOpenUpdate* value);
  void unsafe_arena_set_allocated_chan_open(::lnrpc::ChannelOpenUpdate* value);
  ::lnrpc::ChannelOpenUpdate* unsafe_arena_release_chan_open();

  private:
  const ::lnrpc::ChannelOpenUpdate& _internal_chan_open() const;
  ::lnrpc::ChannelOpenUpdate* _internal_mutable_chan_open();

  public:
  // .lnrpc.ReadyForPsbtFunding psbt_fund = 5;
  bool has_psbt_fund() const;
  private:
  bool _internal_has_psbt_fund() const;

  public:
  void clear_psbt_fund() ;
  const ::lnrpc::ReadyForPsbtFunding& psbt_fund() const;
  PROTOBUF_NODISCARD ::lnrpc::ReadyForPsbtFunding* release_psbt_fund();
  ::lnrpc::ReadyForPsbtFunding* mutable_psbt_fund();
  void set_allocated_psbt_fund(::lnrpc::ReadyForPsbtFunding* value);
  void unsafe_arena_set_allocated_psbt_fund(::lnrpc::ReadyForPsbtFunding* value);
  ::lnrpc::ReadyForPsbtFunding* unsafe_arena_release_psbt_fund();

  private:
  const ::lnrpc::ReadyForPsbtFunding& _internal_psbt_fund() const;
  ::lnrpc::ReadyForPsbtFunding* _internal_mutable_psbt_fund();

  public:
  void clear_update();
  UpdateCase update_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.OpenStatusUpdate)
 private:
  class _Internal;
  void set_has_chan_pending();
  void set_has_chan_open();
  void set_has_psbt_fund();
  inline bool has_update() const;
  inline void clear_has_update();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OpenStatusUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpenStatusUpdate& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    union UpdateUnion {
      constexpr UpdateUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::PendingUpdate* chan_pending_;
      ::lnrpc::ChannelOpenUpdate* chan_open_;
      ::lnrpc::ReadyForPsbtFunding* psbt_fund_;
    } update_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodeUpdate) */ {
 public:
  inline NodeUpdate() : NodeUpdate(nullptr) {}
  ~NodeUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeUpdate(const NodeUpdate& from) : NodeUpdate(nullptr, from) {}
  inline NodeUpdate(NodeUpdate&& from) noexcept
      : NodeUpdate(nullptr, std::move(from)) {}
  inline NodeUpdate& operator=(const NodeUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeUpdate& operator=(NodeUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeUpdate* internal_default_instance() {
    return reinterpret_cast<const NodeUpdate*>(
        &_NodeUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 146;
  friend void swap(NodeUpdate& a, NodeUpdate& b) { a.Swap(&b); }
  inline void Swap(NodeUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeUpdate& from) { NodeUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodeUpdate"; }

 protected:
  explicit NodeUpdate(::google::protobuf::Arena* arena);
  NodeUpdate(::google::protobuf::Arena* arena, const NodeUpdate& from);
  NodeUpdate(::google::protobuf::Arena* arena, NodeUpdate&& from) noexcept
      : NodeUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 1,
    kFeaturesFieldNumber = 6,
    kNodeAddressesFieldNumber = 7,
    kIdentityKeyFieldNumber = 2,
    kGlobalFeaturesFieldNumber = 3,
    kAliasFieldNumber = 4,
    kColorFieldNumber = 5,
  };
  // repeated string addresses = 1 [deprecated = true];
  [[deprecated]]  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  [[deprecated]]  void clear_addresses() ;
  [[deprecated]] const std::string& addresses(int index) const;
  [[deprecated]] std::string* mutable_addresses(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_addresses(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_addresses();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_addresses(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& addresses() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_addresses();

  public:
  // map<uint32, .lnrpc.Feature> features = 6;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* mutable_features();

  private:
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& _internal_features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* _internal_mutable_features();

  public:
  // repeated .lnrpc.NodeAddress node_addresses = 7;
  int node_addresses_size() const;
  private:
  int _internal_node_addresses_size() const;

  public:
  void clear_node_addresses() ;
  ::lnrpc::NodeAddress* mutable_node_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>* mutable_node_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>& _internal_node_addresses() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>* _internal_mutable_node_addresses();
  public:
  const ::lnrpc::NodeAddress& node_addresses(int index) const;
  ::lnrpc::NodeAddress* add_node_addresses();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>& node_addresses() const;
  // string identity_key = 2;
  void clear_identity_key() ;
  const std::string& identity_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity_key(Arg_&& arg, Args_... args);
  std::string* mutable_identity_key();
  PROTOBUF_NODISCARD std::string* release_identity_key();
  void set_allocated_identity_key(std::string* value);

  private:
  const std::string& _internal_identity_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identity_key(
      const std::string& value);
  std::string* _internal_mutable_identity_key();

  public:
  // bytes global_features = 3 [deprecated = true];
  [[deprecated]]  void clear_global_features() ;
  [[deprecated]] const std::string& global_features() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_global_features(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_global_features();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_global_features();
  [[deprecated]] void set_allocated_global_features(std::string* value);

  private:
  const std::string& _internal_global_features() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_global_features(
      const std::string& value);
  std::string* _internal_mutable_global_features();

  public:
  // string alias = 4;
  void clear_alias() ;
  const std::string& alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alias(Arg_&& arg, Args_... args);
  std::string* mutable_alias();
  PROTOBUF_NODISCARD std::string* release_alias();
  void set_allocated_alias(std::string* value);

  private:
  const std::string& _internal_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alias(
      const std::string& value);
  std::string* _internal_mutable_alias();

  public:
  // string color = 5;
  void clear_color() ;
  const std::string& color() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color(Arg_&& arg, Args_... args);
  std::string* mutable_color();
  PROTOBUF_NODISCARD std::string* release_color();
  void set_allocated_color(std::string* value);

  private:
  const std::string& _internal_color() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color(
      const std::string& value);
  std::string* _internal_mutable_color();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodeUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> addresses_;
    ::google::protobuf::internal::MapField<NodeUpdate_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        features_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::NodeAddress > node_addresses_;
    ::google::protobuf::internal::ArenaStringPtr identity_key_;
    ::google::protobuf::internal::ArenaStringPtr global_features_;
    ::google::protobuf::internal::ArenaStringPtr alias_;
    ::google::protobuf::internal::ArenaStringPtr color_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeMetricsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodeMetricsResponse) */ {
 public:
  inline NodeMetricsResponse() : NodeMetricsResponse(nullptr) {}
  ~NodeMetricsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeMetricsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeMetricsResponse(const NodeMetricsResponse& from) : NodeMetricsResponse(nullptr, from) {}
  inline NodeMetricsResponse(NodeMetricsResponse&& from) noexcept
      : NodeMetricsResponse(nullptr, std::move(from)) {}
  inline NodeMetricsResponse& operator=(const NodeMetricsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeMetricsResponse& operator=(NodeMetricsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeMetricsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeMetricsResponse* internal_default_instance() {
    return reinterpret_cast<const NodeMetricsResponse*>(
        &_NodeMetricsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 136;
  friend void swap(NodeMetricsResponse& a, NodeMetricsResponse& b) { a.Swap(&b); }
  inline void Swap(NodeMetricsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeMetricsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeMetricsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeMetricsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeMetricsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeMetricsResponse& from) { NodeMetricsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeMetricsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodeMetricsResponse"; }

 protected:
  explicit NodeMetricsResponse(::google::protobuf::Arena* arena);
  NodeMetricsResponse(::google::protobuf::Arena* arena, const NodeMetricsResponse& from);
  NodeMetricsResponse(::google::protobuf::Arena* arena, NodeMetricsResponse&& from) noexcept
      : NodeMetricsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBetweennessCentralityFieldNumber = 1,
  };
  // map<string, .lnrpc.FloatMetric> betweenness_centrality = 1;
  int betweenness_centrality_size() const;
  private:
  int _internal_betweenness_centrality_size() const;

  public:
  void clear_betweenness_centrality() ;
  const ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>& betweenness_centrality() const;
  ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>* mutable_betweenness_centrality();

  private:
  const ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>& _internal_betweenness_centrality() const;
  ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>* _internal_mutable_betweenness_centrality();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodeMetricsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeMetricsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeMetricsResponse& from_msg);
    ::google::protobuf::internal::MapField<NodeMetricsResponse_BetweennessCentralityEntry_DoNotUse, std::string, ::lnrpc::FloatMetric,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        betweenness_centrality_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListUnspentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListUnspentResponse) */ {
 public:
  inline ListUnspentResponse() : ListUnspentResponse(nullptr) {}
  ~ListUnspentResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListUnspentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListUnspentResponse(const ListUnspentResponse& from) : ListUnspentResponse(nullptr, from) {}
  inline ListUnspentResponse(ListUnspentResponse&& from) noexcept
      : ListUnspentResponse(nullptr, std::move(from)) {}
  inline ListUnspentResponse& operator=(const ListUnspentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListUnspentResponse& operator=(ListUnspentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListUnspentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListUnspentResponse* internal_default_instance() {
    return reinterpret_cast<const ListUnspentResponse*>(
        &_ListUnspentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ListUnspentResponse& a, ListUnspentResponse& b) { a.Swap(&b); }
  inline void Swap(ListUnspentResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListUnspentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListUnspentResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListUnspentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListUnspentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListUnspentResponse& from) { ListUnspentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListUnspentResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListUnspentResponse"; }

 protected:
  explicit ListUnspentResponse(::google::protobuf::Arena* arena);
  ListUnspentResponse(::google::protobuf::Arena* arena, const ListUnspentResponse& from);
  ListUnspentResponse(::google::protobuf::Arena* arena, ListUnspentResponse&& from) noexcept
      : ListUnspentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUtxosFieldNumber = 1,
  };
  // repeated .lnrpc.Utxo utxos = 1;
  int utxos_size() const;
  private:
  int _internal_utxos_size() const;

  public:
  void clear_utxos() ;
  ::lnrpc::Utxo* mutable_utxos(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>* mutable_utxos();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>& _internal_utxos() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>* _internal_mutable_utxos();
  public:
  const ::lnrpc::Utxo& utxos(int index) const;
  ::lnrpc::Utxo* add_utxos();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>& utxos() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ListUnspentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListUnspentResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListUnspentResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Utxo > utxos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPermissionsResponse_MethodPermissionsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ListPermissionsResponse_MethodPermissionsEntry_DoNotUse, std::string, ::lnrpc::MacaroonPermissionList,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ListPermissionsResponse_MethodPermissionsEntry_DoNotUse, std::string, ::lnrpc::MacaroonPermissionList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ListPermissionsResponse_MethodPermissionsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPermissionsResponse_MethodPermissionsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ListPermissionsResponse_MethodPermissionsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ListPermissionsResponse_MethodPermissionsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ListPermissionsResponse_MethodPermissionsEntry_DoNotUse*>(
        &_ListPermissionsResponse_MethodPermissionsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      64, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListChannelsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListChannelsResponse) */ {
 public:
  inline ListChannelsResponse() : ListChannelsResponse(nullptr) {}
  ~ListChannelsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListChannelsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListChannelsResponse(const ListChannelsResponse& from) : ListChannelsResponse(nullptr, from) {}
  inline ListChannelsResponse(ListChannelsResponse&& from) noexcept
      : ListChannelsResponse(nullptr, std::move(from)) {}
  inline ListChannelsResponse& operator=(const ListChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListChannelsResponse& operator=(ListChannelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListChannelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const ListChannelsResponse*>(
        &_ListChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(ListChannelsResponse& a, ListChannelsResponse& b) { a.Swap(&b); }
  inline void Swap(ListChannelsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListChannelsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListChannelsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListChannelsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListChannelsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListChannelsResponse& from) { ListChannelsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListChannelsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListChannelsResponse"; }

 protected:
  explicit ListChannelsResponse(::google::protobuf::Arena* arena);
  ListChannelsResponse(::google::protobuf::Arena* arena, const ListChannelsResponse& from);
  ListChannelsResponse(::google::protobuf::Arena* arena, ListChannelsResponse&& from) noexcept
      : ListChannelsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsFieldNumber = 11,
  };
  // repeated .lnrpc.Channel channels = 11;
  int channels_size() const;
  private:
  int _internal_channels_size() const;

  public:
  void clear_channels() ;
  ::lnrpc::Channel* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>* mutable_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>& _internal_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>* _internal_mutable_channels();
  public:
  const ::lnrpc::Channel& channels(int index) const;
  ::lnrpc::Channel* add_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>& channels() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ListChannelsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListChannelsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListChannelsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Channel > channels_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class LightningNode final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.LightningNode) */ {
 public:
  inline LightningNode() : LightningNode(nullptr) {}
  ~LightningNode() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LightningNode(
      ::google::protobuf::internal::ConstantInitialized);

  inline LightningNode(const LightningNode& from) : LightningNode(nullptr, from) {}
  inline LightningNode(LightningNode&& from) noexcept
      : LightningNode(nullptr, std::move(from)) {}
  inline LightningNode& operator=(const LightningNode& from) {
    CopyFrom(from);
    return *this;
  }
  inline LightningNode& operator=(LightningNode&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LightningNode& default_instance() {
    return *internal_default_instance();
  }
  static inline const LightningNode* internal_default_instance() {
    return reinterpret_cast<const LightningNode*>(
        &_LightningNode_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 126;
  friend void swap(LightningNode& a, LightningNode& b) { a.Swap(&b); }
  inline void Swap(LightningNode* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LightningNode* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LightningNode* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LightningNode>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LightningNode& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LightningNode& from) { LightningNode::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LightningNode* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.LightningNode"; }

 protected:
  explicit LightningNode(::google::protobuf::Arena* arena);
  LightningNode(::google::protobuf::Arena* arena, const LightningNode& from);
  LightningNode(::google::protobuf::Arena* arena, LightningNode&& from) noexcept
      : LightningNode(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 4,
    kFeaturesFieldNumber = 6,
    kCustomRecordsFieldNumber = 7,
    kPubKeyFieldNumber = 2,
    kAliasFieldNumber = 3,
    kColorFieldNumber = 5,
    kLastUpdateFieldNumber = 1,
  };
  // repeated .lnrpc.NodeAddress addresses = 4;
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  ::lnrpc::NodeAddress* mutable_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>* _internal_mutable_addresses();
  public:
  const ::lnrpc::NodeAddress& addresses(int index) const;
  ::lnrpc::NodeAddress* add_addresses();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>& addresses() const;
  // map<uint32, .lnrpc.Feature> features = 6;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* mutable_features();

  private:
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& _internal_features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* _internal_mutable_features();

  public:
  // map<uint64, bytes> custom_records = 7;
  int custom_records_size() const;
  private:
  int _internal_custom_records_size() const;

  public:
  void clear_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_custom_records();

  public:
  // string pub_key = 2;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // string alias = 3;
  void clear_alias() ;
  const std::string& alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alias(Arg_&& arg, Args_... args);
  std::string* mutable_alias();
  PROTOBUF_NODISCARD std::string* release_alias();
  void set_allocated_alias(std::string* value);

  private:
  const std::string& _internal_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alias(
      const std::string& value);
  std::string* _internal_mutable_alias();

  public:
  // string color = 5;
  void clear_color() ;
  const std::string& color() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color(Arg_&& arg, Args_... args);
  std::string* mutable_color();
  PROTOBUF_NODISCARD std::string* release_color();
  void set_allocated_color(std::string* value);

  private:
  const std::string& _internal_color() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color(
      const std::string& value);
  std::string* _internal_mutable_color();

  public:
  // uint32 last_update = 1;
  void clear_last_update() ;
  ::uint32_t last_update() const;
  void set_last_update(::uint32_t value);

  private:
  ::uint32_t _internal_last_update() const;
  void _internal_set_last_update(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.LightningNode)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 4,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LightningNode_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LightningNode& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::NodeAddress > addresses_;
    ::google::protobuf::internal::MapField<LightningNode_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        features_;
    ::google::protobuf::internal::MapField<LightningNode_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        custom_records_;
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    ::google::protobuf::internal::ArenaStringPtr alias_;
    ::google::protobuf::internal::ArenaStringPtr color_;
    ::uint32_t last_update_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Invoice final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Invoice) */ {
 public:
  inline Invoice() : Invoice(nullptr) {}
  ~Invoice() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Invoice(
      ::google::protobuf::internal::ConstantInitialized);

  inline Invoice(const Invoice& from) : Invoice(nullptr, from) {}
  inline Invoice(Invoice&& from) noexcept
      : Invoice(nullptr, std::move(from)) {}
  inline Invoice& operator=(const Invoice& from) {
    CopyFrom(from);
    return *this;
  }
  inline Invoice& operator=(Invoice&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Invoice& default_instance() {
    return *internal_default_instance();
  }
  static inline const Invoice* internal_default_instance() {
    return reinterpret_cast<const Invoice*>(
        &_Invoice_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 158;
  friend void swap(Invoice& a, Invoice& b) { a.Swap(&b); }
  inline void Swap(Invoice* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Invoice* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Invoice* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Invoice>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Invoice& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Invoice& from) { Invoice::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Invoice* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Invoice"; }

 protected:
  explicit Invoice(::google::protobuf::Arena* arena);
  Invoice(::google::protobuf::Arena* arena, const Invoice& from);
  Invoice(::google::protobuf::Arena* arena, Invoice&& from) noexcept
      : Invoice(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using InvoiceState = Invoice_InvoiceState;
  static constexpr InvoiceState OPEN = Invoice_InvoiceState_OPEN;
  static constexpr InvoiceState SETTLED = Invoice_InvoiceState_SETTLED;
  static constexpr InvoiceState CANCELED = Invoice_InvoiceState_CANCELED;
  static constexpr InvoiceState ACCEPTED = Invoice_InvoiceState_ACCEPTED;
  static inline bool InvoiceState_IsValid(int value) {
    return Invoice_InvoiceState_IsValid(value);
  }
  static constexpr InvoiceState InvoiceState_MIN = Invoice_InvoiceState_InvoiceState_MIN;
  static constexpr InvoiceState InvoiceState_MAX = Invoice_InvoiceState_InvoiceState_MAX;
  static constexpr int InvoiceState_ARRAYSIZE = Invoice_InvoiceState_InvoiceState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* InvoiceState_descriptor() {
    return Invoice_InvoiceState_descriptor();
  }
  template <typename T>
  static inline const std::string& InvoiceState_Name(T value) {
    return Invoice_InvoiceState_Name(value);
  }
  static inline bool InvoiceState_Parse(absl::string_view name, InvoiceState* value) {
    return Invoice_InvoiceState_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kRouteHintsFieldNumber = 14,
    kHtlcsFieldNumber = 22,
    kFeaturesFieldNumber = 24,
    kAmpInvoiceStateFieldNumber = 28,
    kMemoFieldNumber = 1,
    kRPreimageFieldNumber = 3,
    kRHashFieldNumber = 4,
    kPaymentRequestFieldNumber = 9,
    kDescriptionHashFieldNumber = 10,
    kFallbackAddrFieldNumber = 12,
    kPaymentAddrFieldNumber = 26,
    kBlindedPathConfigFieldNumber = 30,
    kValueFieldNumber = 5,
    kCreationDateFieldNumber = 7,
    kSettleDateFieldNumber = 8,
    kExpiryFieldNumber = 11,
    kCltvExpiryFieldNumber = 13,
    kAddIndexFieldNumber = 16,
    kSettleIndexFieldNumber = 17,
    kAmtPaidFieldNumber = 18,
    kSettledFieldNumber = 6,
    kPrivateFieldNumber = 15,
    kIsKeysendFieldNumber = 25,
    kIsAmpFieldNumber = 27,
    kStateFieldNumber = 21,
    kAmtPaidSatFieldNumber = 19,
    kAmtPaidMsatFieldNumber = 20,
    kValueMsatFieldNumber = 23,
    kIsBlindedFieldNumber = 29,
  };
  // repeated .lnrpc.RouteHint route_hints = 14;
  int route_hints_size() const;
  private:
  int _internal_route_hints_size() const;

  public:
  void clear_route_hints() ;
  ::lnrpc::RouteHint* mutable_route_hints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* mutable_route_hints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& _internal_route_hints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* _internal_mutable_route_hints();
  public:
  const ::lnrpc::RouteHint& route_hints(int index) const;
  ::lnrpc::RouteHint* add_route_hints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& route_hints() const;
  // repeated .lnrpc.InvoiceHTLC htlcs = 22;
  int htlcs_size() const;
  private:
  int _internal_htlcs_size() const;

  public:
  void clear_htlcs() ;
  ::lnrpc::InvoiceHTLC* mutable_htlcs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>* mutable_htlcs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>& _internal_htlcs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>* _internal_mutable_htlcs();
  public:
  const ::lnrpc::InvoiceHTLC& htlcs(int index) const;
  ::lnrpc::InvoiceHTLC* add_htlcs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>& htlcs() const;
  // map<uint32, .lnrpc.Feature> features = 24;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* mutable_features();

  private:
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& _internal_features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* _internal_mutable_features();

  public:
  // map<string, .lnrpc.AMPInvoiceState> amp_invoice_state = 28;
  int amp_invoice_state_size() const;
  private:
  int _internal_amp_invoice_state_size() const;

  public:
  void clear_amp_invoice_state() ;
  const ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>& amp_invoice_state() const;
  ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>* mutable_amp_invoice_state();

  private:
  const ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>& _internal_amp_invoice_state() const;
  ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>* _internal_mutable_amp_invoice_state();

  public:
  // string memo = 1;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // bytes r_preimage = 3;
  void clear_r_preimage() ;
  const std::string& r_preimage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_preimage(Arg_&& arg, Args_... args);
  std::string* mutable_r_preimage();
  PROTOBUF_NODISCARD std::string* release_r_preimage();
  void set_allocated_r_preimage(std::string* value);

  private:
  const std::string& _internal_r_preimage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_r_preimage(
      const std::string& value);
  std::string* _internal_mutable_r_preimage();

  public:
  // bytes r_hash = 4;
  void clear_r_hash() ;
  const std::string& r_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_r_hash(Arg_&& arg, Args_... args);
  std::string* mutable_r_hash();
  PROTOBUF_NODISCARD std::string* release_r_hash();
  void set_allocated_r_hash(std::string* value);

  private:
  const std::string& _internal_r_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_r_hash(
      const std::string& value);
  std::string* _internal_mutable_r_hash();

  public:
  // string payment_request = 9;
  void clear_payment_request() ;
  const std::string& payment_request() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_request(Arg_&& arg, Args_... args);
  std::string* mutable_payment_request();
  PROTOBUF_NODISCARD std::string* release_payment_request();
  void set_allocated_payment_request(std::string* value);

  private:
  const std::string& _internal_payment_request() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_request(
      const std::string& value);
  std::string* _internal_mutable_payment_request();

  public:
  // bytes description_hash = 10;
  void clear_description_hash() ;
  const std::string& description_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description_hash(Arg_&& arg, Args_... args);
  std::string* mutable_description_hash();
  PROTOBUF_NODISCARD std::string* release_description_hash();
  void set_allocated_description_hash(std::string* value);

  private:
  const std::string& _internal_description_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description_hash(
      const std::string& value);
  std::string* _internal_mutable_description_hash();

  public:
  // string fallback_addr = 12;
  void clear_fallback_addr() ;
  const std::string& fallback_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fallback_addr(Arg_&& arg, Args_... args);
  std::string* mutable_fallback_addr();
  PROTOBUF_NODISCARD std::string* release_fallback_addr();
  void set_allocated_fallback_addr(std::string* value);

  private:
  const std::string& _internal_fallback_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fallback_addr(
      const std::string& value);
  std::string* _internal_mutable_fallback_addr();

  public:
  // bytes payment_addr = 26;
  void clear_payment_addr() ;
  const std::string& payment_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_addr(Arg_&& arg, Args_... args);
  std::string* mutable_payment_addr();
  PROTOBUF_NODISCARD std::string* release_payment_addr();
  void set_allocated_payment_addr(std::string* value);

  private:
  const std::string& _internal_payment_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_addr(
      const std::string& value);
  std::string* _internal_mutable_payment_addr();

  public:
  // .lnrpc.BlindedPathConfig blinded_path_config = 30;
  bool has_blinded_path_config() const;
  void clear_blinded_path_config() ;
  const ::lnrpc::BlindedPathConfig& blinded_path_config() const;
  PROTOBUF_NODISCARD ::lnrpc::BlindedPathConfig* release_blinded_path_config();
  ::lnrpc::BlindedPathConfig* mutable_blinded_path_config();
  void set_allocated_blinded_path_config(::lnrpc::BlindedPathConfig* value);
  void unsafe_arena_set_allocated_blinded_path_config(::lnrpc::BlindedPathConfig* value);
  ::lnrpc::BlindedPathConfig* unsafe_arena_release_blinded_path_config();

  private:
  const ::lnrpc::BlindedPathConfig& _internal_blinded_path_config() const;
  ::lnrpc::BlindedPathConfig* _internal_mutable_blinded_path_config();

  public:
  // int64 value = 5;
  void clear_value() ;
  ::int64_t value() const;
  void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // int64 creation_date = 7;
  void clear_creation_date() ;
  ::int64_t creation_date() const;
  void set_creation_date(::int64_t value);

  private:
  ::int64_t _internal_creation_date() const;
  void _internal_set_creation_date(::int64_t value);

  public:
  // int64 settle_date = 8;
  void clear_settle_date() ;
  ::int64_t settle_date() const;
  void set_settle_date(::int64_t value);

  private:
  ::int64_t _internal_settle_date() const;
  void _internal_set_settle_date(::int64_t value);

  public:
  // int64 expiry = 11;
  void clear_expiry() ;
  ::int64_t expiry() const;
  void set_expiry(::int64_t value);

  private:
  ::int64_t _internal_expiry() const;
  void _internal_set_expiry(::int64_t value);

  public:
  // uint64 cltv_expiry = 13;
  void clear_cltv_expiry() ;
  ::uint64_t cltv_expiry() const;
  void set_cltv_expiry(::uint64_t value);

  private:
  ::uint64_t _internal_cltv_expiry() const;
  void _internal_set_cltv_expiry(::uint64_t value);

  public:
  // uint64 add_index = 16;
  void clear_add_index() ;
  ::uint64_t add_index() const;
  void set_add_index(::uint64_t value);

  private:
  ::uint64_t _internal_add_index() const;
  void _internal_set_add_index(::uint64_t value);

  public:
  // uint64 settle_index = 17;
  void clear_settle_index() ;
  ::uint64_t settle_index() const;
  void set_settle_index(::uint64_t value);

  private:
  ::uint64_t _internal_settle_index() const;
  void _internal_set_settle_index(::uint64_t value);

  public:
  // int64 amt_paid = 18 [deprecated = true];
  [[deprecated]]  void clear_amt_paid() ;
  [[deprecated]] ::int64_t amt_paid() const;
  [[deprecated]] void set_amt_paid(::int64_t value);

  private:
  ::int64_t _internal_amt_paid() const;
  void _internal_set_amt_paid(::int64_t value);

  public:
  // bool settled = 6 [deprecated = true];
  [[deprecated]]  void clear_settled() ;
  [[deprecated]] bool settled() const;
  [[deprecated]] void set_settled(bool value);

  private:
  bool _internal_settled() const;
  void _internal_set_settled(bool value);

  public:
  // bool private = 15;
  void clear_private_() ;
  bool private_() const;
  void set_private_(bool value);

  private:
  bool _internal_private_() const;
  void _internal_set_private_(bool value);

  public:
  // bool is_keysend = 25;
  void clear_is_keysend() ;
  bool is_keysend() const;
  void set_is_keysend(bool value);

  private:
  bool _internal_is_keysend() const;
  void _internal_set_is_keysend(bool value);

  public:
  // bool is_amp = 27;
  void clear_is_amp() ;
  bool is_amp() const;
  void set_is_amp(bool value);

  private:
  bool _internal_is_amp() const;
  void _internal_set_is_amp(bool value);

  public:
  // .lnrpc.Invoice.InvoiceState state = 21;
  void clear_state() ;
  ::lnrpc::Invoice_InvoiceState state() const;
  void set_state(::lnrpc::Invoice_InvoiceState value);

  private:
  ::lnrpc::Invoice_InvoiceState _internal_state() const;
  void _internal_set_state(::lnrpc::Invoice_InvoiceState value);

  public:
  // int64 amt_paid_sat = 19;
  void clear_amt_paid_sat() ;
  ::int64_t amt_paid_sat() const;
  void set_amt_paid_sat(::int64_t value);

  private:
  ::int64_t _internal_amt_paid_sat() const;
  void _internal_set_amt_paid_sat(::int64_t value);

  public:
  // int64 amt_paid_msat = 20;
  void clear_amt_paid_msat() ;
  ::int64_t amt_paid_msat() const;
  void set_amt_paid_msat(::int64_t value);

  private:
  ::int64_t _internal_amt_paid_msat() const;
  void _internal_set_amt_paid_msat(::int64_t value);

  public:
  // int64 value_msat = 23;
  void clear_value_msat() ;
  ::int64_t value_msat() const;
  void set_value_msat(::int64_t value);

  private:
  ::int64_t _internal_value_msat() const;
  void _internal_set_value_msat(::int64_t value);

  public:
  // bool is_blinded = 29;
  void clear_is_blinded() ;
  bool is_blinded() const;
  void set_is_blinded(bool value);

  private:
  bool _internal_is_blinded() const;
  void _internal_set_is_blinded(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Invoice)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 29, 7,
      95, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Invoice_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Invoice& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::RouteHint > route_hints_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::InvoiceHTLC > htlcs_;
    ::google::protobuf::internal::MapField<Invoice_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        features_;
    ::google::protobuf::internal::MapField<Invoice_AmpInvoiceStateEntry_DoNotUse, std::string, ::lnrpc::AMPInvoiceState,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        amp_invoice_state_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::google::protobuf::internal::ArenaStringPtr r_preimage_;
    ::google::protobuf::internal::ArenaStringPtr r_hash_;
    ::google::protobuf::internal::ArenaStringPtr payment_request_;
    ::google::protobuf::internal::ArenaStringPtr description_hash_;
    ::google::protobuf::internal::ArenaStringPtr fallback_addr_;
    ::google::protobuf::internal::ArenaStringPtr payment_addr_;
    ::lnrpc::BlindedPathConfig* blinded_path_config_;
    ::int64_t value_;
    ::int64_t creation_date_;
    ::int64_t settle_date_;
    ::int64_t expiry_;
    ::uint64_t cltv_expiry_;
    ::uint64_t add_index_;
    ::uint64_t settle_index_;
    ::int64_t amt_paid_;
    bool settled_;
    bool private__;
    bool is_keysend_;
    bool is_amp_;
    int state_;
    ::int64_t amt_paid_sat_;
    ::int64_t amt_paid_msat_;
    ::int64_t value_msat_;
    bool is_blinded_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GetInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.GetInfoResponse) */ {
 public:
  inline GetInfoResponse() : GetInfoResponse(nullptr) {}
  ~GetInfoResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetInfoResponse(const GetInfoResponse& from) : GetInfoResponse(nullptr, from) {}
  inline GetInfoResponse(GetInfoResponse&& from) noexcept
      : GetInfoResponse(nullptr, std::move(from)) {}
  inline GetInfoResponse& operator=(const GetInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetInfoResponse& operator=(GetInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetInfoResponse* internal_default_instance() {
    return reinterpret_cast<const GetInfoResponse*>(
        &_GetInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(GetInfoResponse& a, GetInfoResponse& b) { a.Swap(&b); }
  inline void Swap(GetInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetInfoResponse& from) { GetInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GetInfoResponse"; }

 protected:
  explicit GetInfoResponse(::google::protobuf::Arena* arena);
  GetInfoResponse(::google::protobuf::Arena* arena, const GetInfoResponse& from);
  GetInfoResponse(::google::protobuf::Arena* arena, GetInfoResponse&& from) noexcept
      : GetInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUrisFieldNumber = 12,
    kChainsFieldNumber = 16,
    kFeaturesFieldNumber = 19,
    kIdentityPubkeyFieldNumber = 1,
    kAliasFieldNumber = 2,
    kBlockHashFieldNumber = 8,
    kVersionFieldNumber = 14,
    kColorFieldNumber = 17,
    kCommitHashFieldNumber = 20,
    kNumPendingChannelsFieldNumber = 3,
    kNumActiveChannelsFieldNumber = 4,
    kNumPeersFieldNumber = 5,
    kBlockHeightFieldNumber = 6,
    kBestHeaderTimestampFieldNumber = 13,
    kSyncedToChainFieldNumber = 9,
    kSyncedToGraphFieldNumber = 18,
    kTestnetFieldNumber = 10,
    kRequireHtlcInterceptorFieldNumber = 21,
    kNumInactiveChannelsFieldNumber = 15,
    kStoreFinalHtlcResolutionsFieldNumber = 22,
  };
  // repeated string uris = 12;
  int uris_size() const;
  private:
  int _internal_uris_size() const;

  public:
  void clear_uris() ;
  const std::string& uris(int index) const;
  std::string* mutable_uris(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uris(int index, Arg_&& value, Args_... args);
  std::string* add_uris();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_uris(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& uris() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_uris();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_uris() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_uris();

  public:
  // repeated .lnrpc.Chain chains = 16;
  int chains_size() const;
  private:
  int _internal_chains_size() const;

  public:
  void clear_chains() ;
  ::lnrpc::Chain* mutable_chains(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>* mutable_chains();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>& _internal_chains() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>* _internal_mutable_chains();
  public:
  const ::lnrpc::Chain& chains(int index) const;
  ::lnrpc::Chain* add_chains();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>& chains() const;
  // map<uint32, .lnrpc.Feature> features = 19;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* mutable_features();

  private:
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& _internal_features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* _internal_mutable_features();

  public:
  // string identity_pubkey = 1;
  void clear_identity_pubkey() ;
  const std::string& identity_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_identity_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_identity_pubkey();
  PROTOBUF_NODISCARD std::string* release_identity_pubkey();
  void set_allocated_identity_pubkey(std::string* value);

  private:
  const std::string& _internal_identity_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_identity_pubkey(
      const std::string& value);
  std::string* _internal_mutable_identity_pubkey();

  public:
  // string alias = 2;
  void clear_alias() ;
  const std::string& alias() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_alias(Arg_&& arg, Args_... args);
  std::string* mutable_alias();
  PROTOBUF_NODISCARD std::string* release_alias();
  void set_allocated_alias(std::string* value);

  private:
  const std::string& _internal_alias() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_alias(
      const std::string& value);
  std::string* _internal_mutable_alias();

  public:
  // string block_hash = 8;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // string version = 14;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string color = 17;
  void clear_color() ;
  const std::string& color() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_color(Arg_&& arg, Args_... args);
  std::string* mutable_color();
  PROTOBUF_NODISCARD std::string* release_color();
  void set_allocated_color(std::string* value);

  private:
  const std::string& _internal_color() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_color(
      const std::string& value);
  std::string* _internal_mutable_color();

  public:
  // string commit_hash = 20;
  void clear_commit_hash() ;
  const std::string& commit_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_commit_hash(Arg_&& arg, Args_... args);
  std::string* mutable_commit_hash();
  PROTOBUF_NODISCARD std::string* release_commit_hash();
  void set_allocated_commit_hash(std::string* value);

  private:
  const std::string& _internal_commit_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_commit_hash(
      const std::string& value);
  std::string* _internal_mutable_commit_hash();

  public:
  // uint32 num_pending_channels = 3;
  void clear_num_pending_channels() ;
  ::uint32_t num_pending_channels() const;
  void set_num_pending_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_pending_channels() const;
  void _internal_set_num_pending_channels(::uint32_t value);

  public:
  // uint32 num_active_channels = 4;
  void clear_num_active_channels() ;
  ::uint32_t num_active_channels() const;
  void set_num_active_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_active_channels() const;
  void _internal_set_num_active_channels(::uint32_t value);

  public:
  // uint32 num_peers = 5;
  void clear_num_peers() ;
  ::uint32_t num_peers() const;
  void set_num_peers(::uint32_t value);

  private:
  ::uint32_t _internal_num_peers() const;
  void _internal_set_num_peers(::uint32_t value);

  public:
  // uint32 block_height = 6;
  void clear_block_height() ;
  ::uint32_t block_height() const;
  void set_block_height(::uint32_t value);

  private:
  ::uint32_t _internal_block_height() const;
  void _internal_set_block_height(::uint32_t value);

  public:
  // int64 best_header_timestamp = 13;
  void clear_best_header_timestamp() ;
  ::int64_t best_header_timestamp() const;
  void set_best_header_timestamp(::int64_t value);

  private:
  ::int64_t _internal_best_header_timestamp() const;
  void _internal_set_best_header_timestamp(::int64_t value);

  public:
  // bool synced_to_chain = 9;
  void clear_synced_to_chain() ;
  bool synced_to_chain() const;
  void set_synced_to_chain(bool value);

  private:
  bool _internal_synced_to_chain() const;
  void _internal_set_synced_to_chain(bool value);

  public:
  // bool synced_to_graph = 18;
  void clear_synced_to_graph() ;
  bool synced_to_graph() const;
  void set_synced_to_graph(bool value);

  private:
  bool _internal_synced_to_graph() const;
  void _internal_set_synced_to_graph(bool value);

  public:
  // bool testnet = 10 [deprecated = true];
  [[deprecated]]  void clear_testnet() ;
  [[deprecated]] bool testnet() const;
  [[deprecated]] void set_testnet(bool value);

  private:
  bool _internal_testnet() const;
  void _internal_set_testnet(bool value);

  public:
  // bool require_htlc_interceptor = 21;
  void clear_require_htlc_interceptor() ;
  bool require_htlc_interceptor() const;
  void set_require_htlc_interceptor(bool value);

  private:
  bool _internal_require_htlc_interceptor() const;
  void _internal_set_require_htlc_interceptor(bool value);

  public:
  // uint32 num_inactive_channels = 15;
  void clear_num_inactive_channels() ;
  ::uint32_t num_inactive_channels() const;
  void set_num_inactive_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_inactive_channels() const;
  void _internal_set_num_inactive_channels(::uint32_t value);

  public:
  // bool store_final_htlc_resolutions = 22;
  void clear_store_final_htlc_resolutions() ;
  bool store_final_htlc_resolutions() const;
  void set_store_final_htlc_resolutions(bool value);

  private:
  bool _internal_store_final_htlc_resolutions() const;
  void _internal_set_store_final_htlc_resolutions(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.GetInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 20, 3,
      103, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetInfoResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> uris_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Chain > chains_;
    ::google::protobuf::internal::MapField<GetInfoResponse_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        features_;
    ::google::protobuf::internal::ArenaStringPtr identity_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr alias_;
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr color_;
    ::google::protobuf::internal::ArenaStringPtr commit_hash_;
    ::uint32_t num_pending_channels_;
    ::uint32_t num_active_channels_;
    ::uint32_t num_peers_;
    ::uint32_t block_height_;
    ::int64_t best_header_timestamp_;
    bool synced_to_chain_;
    bool synced_to_graph_;
    bool testnet_;
    bool require_htlc_interceptor_;
    ::uint32_t num_inactive_channels_;
    bool store_final_htlc_resolutions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class CloseStatusUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.CloseStatusUpdate) */ {
 public:
  inline CloseStatusUpdate() : CloseStatusUpdate(nullptr) {}
  ~CloseStatusUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CloseStatusUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline CloseStatusUpdate(const CloseStatusUpdate& from) : CloseStatusUpdate(nullptr, from) {}
  inline CloseStatusUpdate(CloseStatusUpdate&& from) noexcept
      : CloseStatusUpdate(nullptr, std::move(from)) {}
  inline CloseStatusUpdate& operator=(const CloseStatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseStatusUpdate& operator=(CloseStatusUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseStatusUpdate& default_instance() {
    return *internal_default_instance();
  }
  enum UpdateCase {
    kClosePending = 1,
    kChanClose = 3,
    kCloseInstant = 4,
    UPDATE_NOT_SET = 0,
  };
  static inline const CloseStatusUpdate* internal_default_instance() {
    return reinterpret_cast<const CloseStatusUpdate*>(
        &_CloseStatusUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(CloseStatusUpdate& a, CloseStatusUpdate& b) { a.Swap(&b); }
  inline void Swap(CloseStatusUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseStatusUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseStatusUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<CloseStatusUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloseStatusUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CloseStatusUpdate& from) { CloseStatusUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CloseStatusUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.CloseStatusUpdate"; }

 protected:
  explicit CloseStatusUpdate(::google::protobuf::Arena* arena);
  CloseStatusUpdate(::google::protobuf::Arena* arena, const CloseStatusUpdate& from);
  CloseStatusUpdate(::google::protobuf::Arena* arena, CloseStatusUpdate&& from) noexcept
      : CloseStatusUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kClosePendingFieldNumber = 1,
    kChanCloseFieldNumber = 3,
    kCloseInstantFieldNumber = 4,
  };
  // .lnrpc.PendingUpdate close_pending = 1;
  bool has_close_pending() const;
  private:
  bool _internal_has_close_pending() const;

  public:
  void clear_close_pending() ;
  const ::lnrpc::PendingUpdate& close_pending() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingUpdate* release_close_pending();
  ::lnrpc::PendingUpdate* mutable_close_pending();
  void set_allocated_close_pending(::lnrpc::PendingUpdate* value);
  void unsafe_arena_set_allocated_close_pending(::lnrpc::PendingUpdate* value);
  ::lnrpc::PendingUpdate* unsafe_arena_release_close_pending();

  private:
  const ::lnrpc::PendingUpdate& _internal_close_pending() const;
  ::lnrpc::PendingUpdate* _internal_mutable_close_pending();

  public:
  // .lnrpc.ChannelCloseUpdate chan_close = 3;
  bool has_chan_close() const;
  private:
  bool _internal_has_chan_close() const;

  public:
  void clear_chan_close() ;
  const ::lnrpc::ChannelCloseUpdate& chan_close() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelCloseUpdate* release_chan_close();
  ::lnrpc::ChannelCloseUpdate* mutable_chan_close();
  void set_allocated_chan_close(::lnrpc::ChannelCloseUpdate* value);
  void unsafe_arena_set_allocated_chan_close(::lnrpc::ChannelCloseUpdate* value);
  ::lnrpc::ChannelCloseUpdate* unsafe_arena_release_chan_close();

  private:
  const ::lnrpc::ChannelCloseUpdate& _internal_chan_close() const;
  ::lnrpc::ChannelCloseUpdate* _internal_mutable_chan_close();

  public:
  // .lnrpc.InstantUpdate close_instant = 4;
  bool has_close_instant() const;
  private:
  bool _internal_has_close_instant() const;

  public:
  void clear_close_instant() ;
  const ::lnrpc::InstantUpdate& close_instant() const;
  PROTOBUF_NODISCARD ::lnrpc::InstantUpdate* release_close_instant();
  ::lnrpc::InstantUpdate* mutable_close_instant();
  void set_allocated_close_instant(::lnrpc::InstantUpdate* value);
  void unsafe_arena_set_allocated_close_instant(::lnrpc::InstantUpdate* value);
  ::lnrpc::InstantUpdate* unsafe_arena_release_close_instant();

  private:
  const ::lnrpc::InstantUpdate& _internal_close_instant() const;
  ::lnrpc::InstantUpdate* _internal_mutable_close_instant();

  public:
  void clear_update();
  UpdateCase update_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.CloseStatusUpdate)
 private:
  class _Internal;
  void set_has_close_pending();
  void set_has_chan_close();
  void set_has_close_instant();
  inline bool has_update() const;
  inline void clear_has_update();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CloseStatusUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CloseStatusUpdate& from_msg);
    union UpdateUnion {
      constexpr UpdateUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::PendingUpdate* close_pending_;
      ::lnrpc::ChannelCloseUpdate* chan_close_;
      ::lnrpc::InstantUpdate* close_instant_;
    } update_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelEdgeUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelEdgeUpdate) */ {
 public:
  inline ChannelEdgeUpdate() : ChannelEdgeUpdate(nullptr) {}
  ~ChannelEdgeUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelEdgeUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelEdgeUpdate(const ChannelEdgeUpdate& from) : ChannelEdgeUpdate(nullptr, from) {}
  inline ChannelEdgeUpdate(ChannelEdgeUpdate&& from) noexcept
      : ChannelEdgeUpdate(nullptr, std::move(from)) {}
  inline ChannelEdgeUpdate& operator=(const ChannelEdgeUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelEdgeUpdate& operator=(ChannelEdgeUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelEdgeUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelEdgeUpdate* internal_default_instance() {
    return reinterpret_cast<const ChannelEdgeUpdate*>(
        &_ChannelEdgeUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 147;
  friend void swap(ChannelEdgeUpdate& a, ChannelEdgeUpdate& b) { a.Swap(&b); }
  inline void Swap(ChannelEdgeUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelEdgeUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelEdgeUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelEdgeUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelEdgeUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelEdgeUpdate& from) { ChannelEdgeUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelEdgeUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelEdgeUpdate"; }

 protected:
  explicit ChannelEdgeUpdate(::google::protobuf::Arena* arena);
  ChannelEdgeUpdate(::google::protobuf::Arena* arena, const ChannelEdgeUpdate& from);
  ChannelEdgeUpdate(::google::protobuf::Arena* arena, ChannelEdgeUpdate&& from) noexcept
      : ChannelEdgeUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdvertisingNodeFieldNumber = 5,
    kConnectingNodeFieldNumber = 6,
    kChanPointFieldNumber = 2,
    kRoutingPolicyFieldNumber = 4,
    kChanIdFieldNumber = 1,
    kCapacityFieldNumber = 3,
  };
  // string advertising_node = 5;
  void clear_advertising_node() ;
  const std::string& advertising_node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_advertising_node(Arg_&& arg, Args_... args);
  std::string* mutable_advertising_node();
  PROTOBUF_NODISCARD std::string* release_advertising_node();
  void set_allocated_advertising_node(std::string* value);

  private:
  const std::string& _internal_advertising_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_advertising_node(
      const std::string& value);
  std::string* _internal_mutable_advertising_node();

  public:
  // string connecting_node = 6;
  void clear_connecting_node() ;
  const std::string& connecting_node() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_connecting_node(Arg_&& arg, Args_... args);
  std::string* mutable_connecting_node();
  PROTOBUF_NODISCARD std::string* release_connecting_node();
  void set_allocated_connecting_node(std::string* value);

  private:
  const std::string& _internal_connecting_node() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_connecting_node(
      const std::string& value);
  std::string* _internal_mutable_connecting_node();

  public:
  // .lnrpc.ChannelPoint chan_point = 2;
  bool has_chan_point() const;
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  // .lnrpc.RoutingPolicy routing_policy = 4;
  bool has_routing_policy() const;
  void clear_routing_policy() ;
  const ::lnrpc::RoutingPolicy& routing_policy() const;
  PROTOBUF_NODISCARD ::lnrpc::RoutingPolicy* release_routing_policy();
  ::lnrpc::RoutingPolicy* mutable_routing_policy();
  void set_allocated_routing_policy(::lnrpc::RoutingPolicy* value);
  void unsafe_arena_set_allocated_routing_policy(::lnrpc::RoutingPolicy* value);
  ::lnrpc::RoutingPolicy* unsafe_arena_release_routing_policy();

  private:
  const ::lnrpc::RoutingPolicy& _internal_routing_policy() const;
  ::lnrpc::RoutingPolicy* _internal_mutable_routing_policy();

  public:
  // uint64 chan_id = 1 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // int64 capacity = 3;
  void clear_capacity() ;
  ::int64_t capacity() const;
  void set_capacity(::int64_t value);

  private:
  ::int64_t _internal_capacity() const;
  void _internal_set_capacity(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelEdgeUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 2,
      63, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelEdgeUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelEdgeUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr advertising_node_;
    ::google::protobuf::internal::ArenaStringPtr connecting_node_;
    ::lnrpc::ChannelPoint* chan_point_;
    ::lnrpc::RoutingPolicy* routing_policy_;
    ::uint64_t chan_id_;
    ::int64_t capacity_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelEdge final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelEdge) */ {
 public:
  inline ChannelEdge() : ChannelEdge(nullptr) {}
  ~ChannelEdge() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelEdge(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelEdge(const ChannelEdge& from) : ChannelEdge(nullptr, from) {}
  inline ChannelEdge(ChannelEdge&& from) noexcept
      : ChannelEdge(nullptr, std::move(from)) {}
  inline ChannelEdge& operator=(const ChannelEdge& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelEdge& operator=(ChannelEdge&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelEdge& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelEdge* internal_default_instance() {
    return reinterpret_cast<const ChannelEdge*>(
        &_ChannelEdge_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 131;
  friend void swap(ChannelEdge& a, ChannelEdge& b) { a.Swap(&b); }
  inline void Swap(ChannelEdge* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelEdge* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelEdge* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelEdge>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelEdge& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelEdge& from) { ChannelEdge::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelEdge* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelEdge"; }

 protected:
  explicit ChannelEdge(::google::protobuf::Arena* arena);
  ChannelEdge(::google::protobuf::Arena* arena, const ChannelEdge& from);
  ChannelEdge(::google::protobuf::Arena* arena, ChannelEdge&& from) noexcept
      : ChannelEdge(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCustomRecordsFieldNumber = 9,
    kChanPointFieldNumber = 2,
    kNode1PubFieldNumber = 4,
    kNode2PubFieldNumber = 5,
    kNode1PolicyFieldNumber = 7,
    kNode2PolicyFieldNumber = 8,
    kChannelIdFieldNumber = 1,
    kCapacityFieldNumber = 6,
    kLastUpdateFieldNumber = 3,
  };
  // map<uint64, bytes> custom_records = 9;
  int custom_records_size() const;
  private:
  int _internal_custom_records_size() const;

  public:
  void clear_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_custom_records();

  public:
  // string chan_point = 2;
  void clear_chan_point() ;
  const std::string& chan_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chan_point(Arg_&& arg, Args_... args);
  std::string* mutable_chan_point();
  PROTOBUF_NODISCARD std::string* release_chan_point();
  void set_allocated_chan_point(std::string* value);

  private:
  const std::string& _internal_chan_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chan_point(
      const std::string& value);
  std::string* _internal_mutable_chan_point();

  public:
  // string node1_pub = 4;
  void clear_node1_pub() ;
  const std::string& node1_pub() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node1_pub(Arg_&& arg, Args_... args);
  std::string* mutable_node1_pub();
  PROTOBUF_NODISCARD std::string* release_node1_pub();
  void set_allocated_node1_pub(std::string* value);

  private:
  const std::string& _internal_node1_pub() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node1_pub(
      const std::string& value);
  std::string* _internal_mutable_node1_pub();

  public:
  // string node2_pub = 5;
  void clear_node2_pub() ;
  const std::string& node2_pub() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node2_pub(Arg_&& arg, Args_... args);
  std::string* mutable_node2_pub();
  PROTOBUF_NODISCARD std::string* release_node2_pub();
  void set_allocated_node2_pub(std::string* value);

  private:
  const std::string& _internal_node2_pub() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node2_pub(
      const std::string& value);
  std::string* _internal_mutable_node2_pub();

  public:
  // .lnrpc.RoutingPolicy node1_policy = 7;
  bool has_node1_policy() const;
  void clear_node1_policy() ;
  const ::lnrpc::RoutingPolicy& node1_policy() const;
  PROTOBUF_NODISCARD ::lnrpc::RoutingPolicy* release_node1_policy();
  ::lnrpc::RoutingPolicy* mutable_node1_policy();
  void set_allocated_node1_policy(::lnrpc::RoutingPolicy* value);
  void unsafe_arena_set_allocated_node1_policy(::lnrpc::RoutingPolicy* value);
  ::lnrpc::RoutingPolicy* unsafe_arena_release_node1_policy();

  private:
  const ::lnrpc::RoutingPolicy& _internal_node1_policy() const;
  ::lnrpc::RoutingPolicy* _internal_mutable_node1_policy();

  public:
  // .lnrpc.RoutingPolicy node2_policy = 8;
  bool has_node2_policy() const;
  void clear_node2_policy() ;
  const ::lnrpc::RoutingPolicy& node2_policy() const;
  PROTOBUF_NODISCARD ::lnrpc::RoutingPolicy* release_node2_policy();
  ::lnrpc::RoutingPolicy* mutable_node2_policy();
  void set_allocated_node2_policy(::lnrpc::RoutingPolicy* value);
  void unsafe_arena_set_allocated_node2_policy(::lnrpc::RoutingPolicy* value);
  ::lnrpc::RoutingPolicy* unsafe_arena_release_node2_policy();

  private:
  const ::lnrpc::RoutingPolicy& _internal_node2_policy() const;
  ::lnrpc::RoutingPolicy* _internal_mutable_node2_policy();

  public:
  // uint64 channel_id = 1 [jstype = JS_STRING];
  void clear_channel_id() ;
  ::uint64_t channel_id() const;
  void set_channel_id(::uint64_t value);

  private:
  ::uint64_t _internal_channel_id() const;
  void _internal_set_channel_id(::uint64_t value);

  public:
  // int64 capacity = 6;
  void clear_capacity() ;
  ::int64_t capacity() const;
  void set_capacity(::int64_t value);

  private:
  ::int64_t _internal_capacity() const;
  void _internal_set_capacity(::int64_t value);

  public:
  // uint32 last_update = 3 [deprecated = true];
  [[deprecated]]  void clear_last_update() ;
  [[deprecated]] ::uint32_t last_update() const;
  [[deprecated]] void set_last_update(::uint32_t value);

  private:
  ::uint32_t _internal_last_update() const;
  void _internal_set_last_update(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelEdge)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 9, 3,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelEdge_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelEdge& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<ChannelEdge_CustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        custom_records_;
    ::google::protobuf::internal::ArenaStringPtr chan_point_;
    ::google::protobuf::internal::ArenaStringPtr node1_pub_;
    ::google::protobuf::internal::ArenaStringPtr node2_pub_;
    ::lnrpc::RoutingPolicy* node1_policy_;
    ::lnrpc::RoutingPolicy* node2_policy_;
    ::uint64_t channel_id_;
    ::int64_t capacity_;
    ::uint32_t last_update_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelCloseSummary final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelCloseSummary) */ {
 public:
  inline ChannelCloseSummary() : ChannelCloseSummary(nullptr) {}
  ~ChannelCloseSummary() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelCloseSummary(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelCloseSummary(const ChannelCloseSummary& from) : ChannelCloseSummary(nullptr, from) {}
  inline ChannelCloseSummary(ChannelCloseSummary&& from) noexcept
      : ChannelCloseSummary(nullptr, std::move(from)) {}
  inline ChannelCloseSummary& operator=(const ChannelCloseSummary& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelCloseSummary& operator=(ChannelCloseSummary&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelCloseSummary& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelCloseSummary* internal_default_instance() {
    return reinterpret_cast<const ChannelCloseSummary*>(
        &_ChannelCloseSummary_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(ChannelCloseSummary& a, ChannelCloseSummary& b) { a.Swap(&b); }
  inline void Swap(ChannelCloseSummary* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelCloseSummary* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelCloseSummary* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelCloseSummary>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelCloseSummary& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelCloseSummary& from) { ChannelCloseSummary::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelCloseSummary* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelCloseSummary"; }

 protected:
  explicit ChannelCloseSummary(::google::protobuf::Arena* arena);
  ChannelCloseSummary(::google::protobuf::Arena* arena, const ChannelCloseSummary& from);
  ChannelCloseSummary(::google::protobuf::Arena* arena, ChannelCloseSummary&& from) noexcept
      : ChannelCloseSummary(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ClosureType = ChannelCloseSummary_ClosureType;
  static constexpr ClosureType COOPERATIVE_CLOSE = ChannelCloseSummary_ClosureType_COOPERATIVE_CLOSE;
  static constexpr ClosureType LOCAL_FORCE_CLOSE = ChannelCloseSummary_ClosureType_LOCAL_FORCE_CLOSE;
  static constexpr ClosureType REMOTE_FORCE_CLOSE = ChannelCloseSummary_ClosureType_REMOTE_FORCE_CLOSE;
  static constexpr ClosureType BREACH_CLOSE = ChannelCloseSummary_ClosureType_BREACH_CLOSE;
  static constexpr ClosureType FUNDING_CANCELED = ChannelCloseSummary_ClosureType_FUNDING_CANCELED;
  static constexpr ClosureType ABANDONED = ChannelCloseSummary_ClosureType_ABANDONED;
  static inline bool ClosureType_IsValid(int value) {
    return ChannelCloseSummary_ClosureType_IsValid(value);
  }
  static constexpr ClosureType ClosureType_MIN = ChannelCloseSummary_ClosureType_ClosureType_MIN;
  static constexpr ClosureType ClosureType_MAX = ChannelCloseSummary_ClosureType_ClosureType_MAX;
  static constexpr int ClosureType_ARRAYSIZE = ChannelCloseSummary_ClosureType_ClosureType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ClosureType_descriptor() {
    return ChannelCloseSummary_ClosureType_descriptor();
  }
  template <typename T>
  static inline const std::string& ClosureType_Name(T value) {
    return ChannelCloseSummary_ClosureType_Name(value);
  }
  static inline bool ClosureType_Parse(absl::string_view name, ClosureType* value) {
    return ChannelCloseSummary_ClosureType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kResolutionsFieldNumber = 13,
    kAliasScidsFieldNumber = 14,
    kChannelPointFieldNumber = 1,
    kChainHashFieldNumber = 3,
    kClosingTxHashFieldNumber = 4,
    kRemotePubkeyFieldNumber = 5,
    kChanIdFieldNumber = 2,
    kCapacityFieldNumber = 6,
    kSettledBalanceFieldNumber = 8,
    kCloseHeightFieldNumber = 7,
    kCloseTypeFieldNumber = 10,
    kTimeLockedBalanceFieldNumber = 9,
    kOpenInitiatorFieldNumber = 11,
    kCloseInitiatorFieldNumber = 12,
    kZeroConfConfirmedScidFieldNumber = 15,
  };
  // repeated .lnrpc.Resolution resolutions = 13;
  int resolutions_size() const;
  private:
  int _internal_resolutions_size() const;

  public:
  void clear_resolutions() ;
  ::lnrpc::Resolution* mutable_resolutions(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>* mutable_resolutions();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>& _internal_resolutions() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>* _internal_mutable_resolutions();
  public:
  const ::lnrpc::Resolution& resolutions(int index) const;
  ::lnrpc::Resolution* add_resolutions();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>& resolutions() const;
  // repeated uint64 alias_scids = 14;
  int alias_scids_size() const;
  private:
  int _internal_alias_scids_size() const;

  public:
  void clear_alias_scids() ;
  ::uint64_t alias_scids(int index) const;
  void set_alias_scids(int index, ::uint64_t value);
  void add_alias_scids(::uint64_t value);
  const ::google::protobuf::RepeatedField<::uint64_t>& alias_scids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* mutable_alias_scids();

  private:
  const ::google::protobuf::RepeatedField<::uint64_t>& _internal_alias_scids() const;
  ::google::protobuf::RepeatedField<::uint64_t>* _internal_mutable_alias_scids();

  public:
  // string channel_point = 1;
  void clear_channel_point() ;
  const std::string& channel_point() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_channel_point(Arg_&& arg, Args_... args);
  std::string* mutable_channel_point();
  PROTOBUF_NODISCARD std::string* release_channel_point();
  void set_allocated_channel_point(std::string* value);

  private:
  const std::string& _internal_channel_point() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_channel_point(
      const std::string& value);
  std::string* _internal_mutable_channel_point();

  public:
  // string chain_hash = 3;
  void clear_chain_hash() ;
  const std::string& chain_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_chain_hash(Arg_&& arg, Args_... args);
  std::string* mutable_chain_hash();
  PROTOBUF_NODISCARD std::string* release_chain_hash();
  void set_allocated_chain_hash(std::string* value);

  private:
  const std::string& _internal_chain_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_chain_hash(
      const std::string& value);
  std::string* _internal_mutable_chain_hash();

  public:
  // string closing_tx_hash = 4;
  void clear_closing_tx_hash() ;
  const std::string& closing_tx_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_closing_tx_hash(Arg_&& arg, Args_... args);
  std::string* mutable_closing_tx_hash();
  PROTOBUF_NODISCARD std::string* release_closing_tx_hash();
  void set_allocated_closing_tx_hash(std::string* value);

  private:
  const std::string& _internal_closing_tx_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_closing_tx_hash(
      const std::string& value);
  std::string* _internal_mutable_closing_tx_hash();

  public:
  // string remote_pubkey = 5;
  void clear_remote_pubkey() ;
  const std::string& remote_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_remote_pubkey();
  PROTOBUF_NODISCARD std::string* release_remote_pubkey();
  void set_allocated_remote_pubkey(std::string* value);

  private:
  const std::string& _internal_remote_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_pubkey(
      const std::string& value);
  std::string* _internal_mutable_remote_pubkey();

  public:
  // uint64 chan_id = 2 [jstype = JS_STRING];
  void clear_chan_id() ;
  ::uint64_t chan_id() const;
  void set_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_chan_id() const;
  void _internal_set_chan_id(::uint64_t value);

  public:
  // int64 capacity = 6;
  void clear_capacity() ;
  ::int64_t capacity() const;
  void set_capacity(::int64_t value);

  private:
  ::int64_t _internal_capacity() const;
  void _internal_set_capacity(::int64_t value);

  public:
  // int64 settled_balance = 8;
  void clear_settled_balance() ;
  ::int64_t settled_balance() const;
  void set_settled_balance(::int64_t value);

  private:
  ::int64_t _internal_settled_balance() const;
  void _internal_set_settled_balance(::int64_t value);

  public:
  // uint32 close_height = 7;
  void clear_close_height() ;
  ::uint32_t close_height() const;
  void set_close_height(::uint32_t value);

  private:
  ::uint32_t _internal_close_height() const;
  void _internal_set_close_height(::uint32_t value);

  public:
  // .lnrpc.ChannelCloseSummary.ClosureType close_type = 10;
  void clear_close_type() ;
  ::lnrpc::ChannelCloseSummary_ClosureType close_type() const;
  void set_close_type(::lnrpc::ChannelCloseSummary_ClosureType value);

  private:
  ::lnrpc::ChannelCloseSummary_ClosureType _internal_close_type() const;
  void _internal_set_close_type(::lnrpc::ChannelCloseSummary_ClosureType value);

  public:
  // int64 time_locked_balance = 9;
  void clear_time_locked_balance() ;
  ::int64_t time_locked_balance() const;
  void set_time_locked_balance(::int64_t value);

  private:
  ::int64_t _internal_time_locked_balance() const;
  void _internal_set_time_locked_balance(::int64_t value);

  public:
  // .lnrpc.Initiator open_initiator = 11;
  void clear_open_initiator() ;
  ::lnrpc::Initiator open_initiator() const;
  void set_open_initiator(::lnrpc::Initiator value);

  private:
  ::lnrpc::Initiator _internal_open_initiator() const;
  void _internal_set_open_initiator(::lnrpc::Initiator value);

  public:
  // .lnrpc.Initiator close_initiator = 12;
  void clear_close_initiator() ;
  ::lnrpc::Initiator close_initiator() const;
  void set_close_initiator(::lnrpc::Initiator value);

  private:
  ::lnrpc::Initiator _internal_close_initiator() const;
  void _internal_set_close_initiator(::lnrpc::Initiator value);

  public:
  // uint64 zero_conf_confirmed_scid = 15 [jstype = JS_STRING];
  void clear_zero_conf_confirmed_scid() ;
  ::uint64_t zero_conf_confirmed_scid() const;
  void set_zero_conf_confirmed_scid(::uint64_t value);

  private:
  ::uint64_t _internal_zero_conf_confirmed_scid() const;
  void _internal_set_zero_conf_confirmed_scid(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelCloseSummary)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 1,
      93, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelCloseSummary_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelCloseSummary& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Resolution > resolutions_;
    ::google::protobuf::RepeatedField<::uint64_t> alias_scids_;
    mutable ::google::protobuf::internal::CachedSize _alias_scids_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr channel_point_;
    ::google::protobuf::internal::ArenaStringPtr chain_hash_;
    ::google::protobuf::internal::ArenaStringPtr closing_tx_hash_;
    ::google::protobuf::internal::ArenaStringPtr remote_pubkey_;
    ::uint64_t chan_id_;
    ::int64_t capacity_;
    ::int64_t settled_balance_;
    ::uint32_t close_height_;
    int close_type_;
    ::int64_t time_locked_balance_;
    int open_initiator_;
    int close_initiator_;
    ::uint64_t zero_conf_confirmed_scid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelBackups final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelBackups) */ {
 public:
  inline ChannelBackups() : ChannelBackups(nullptr) {}
  ~ChannelBackups() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelBackups(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelBackups(const ChannelBackups& from) : ChannelBackups(nullptr, from) {}
  inline ChannelBackups(ChannelBackups&& from) noexcept
      : ChannelBackups(nullptr, std::move(from)) {}
  inline ChannelBackups& operator=(const ChannelBackups& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelBackups& operator=(ChannelBackups&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelBackups& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelBackups* internal_default_instance() {
    return reinterpret_cast<const ChannelBackups*>(
        &_ChannelBackups_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 200;
  friend void swap(ChannelBackups& a, ChannelBackups& b) { a.Swap(&b); }
  inline void Swap(ChannelBackups* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelBackups* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelBackups* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelBackups>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelBackups& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelBackups& from) { ChannelBackups::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelBackups* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelBackups"; }

 protected:
  explicit ChannelBackups(::google::protobuf::Arena* arena);
  ChannelBackups(::google::protobuf::Arena* arena, const ChannelBackups& from);
  ChannelBackups(::google::protobuf::Arena* arena, ChannelBackups&& from) noexcept
      : ChannelBackups(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanBackupsFieldNumber = 1,
  };
  // repeated .lnrpc.ChannelBackup chan_backups = 1;
  int chan_backups_size() const;
  private:
  int _internal_chan_backups_size() const;

  public:
  void clear_chan_backups() ;
  ::lnrpc::ChannelBackup* mutable_chan_backups(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>* mutable_chan_backups();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>& _internal_chan_backups() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>* _internal_mutable_chan_backups();
  public:
  const ::lnrpc::ChannelBackup& chan_backups(int index) const;
  ::lnrpc::ChannelBackup* add_chan_backups();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>& chan_backups() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelBackups)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelBackups_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelBackups& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelBackup > chan_backups_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChanPointShim final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChanPointShim) */ {
 public:
  inline ChanPointShim() : ChanPointShim(nullptr) {}
  ~ChanPointShim() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChanPointShim(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChanPointShim(const ChanPointShim& from) : ChanPointShim(nullptr, from) {}
  inline ChanPointShim(ChanPointShim&& from) noexcept
      : ChanPointShim(nullptr, std::move(from)) {}
  inline ChanPointShim& operator=(const ChanPointShim& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChanPointShim& operator=(ChanPointShim&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChanPointShim& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChanPointShim* internal_default_instance() {
    return reinterpret_cast<const ChanPointShim*>(
        &_ChanPointShim_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 86;
  friend void swap(ChanPointShim& a, ChanPointShim& b) { a.Swap(&b); }
  inline void Swap(ChanPointShim* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChanPointShim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChanPointShim* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChanPointShim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChanPointShim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChanPointShim& from) { ChanPointShim::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChanPointShim* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChanPointShim"; }

 protected:
  explicit ChanPointShim(::google::protobuf::Arena* arena);
  ChanPointShim(::google::protobuf::Arena* arena, const ChanPointShim& from);
  ChanPointShim(::google::protobuf::Arena* arena, ChanPointShim&& from) noexcept
      : ChanPointShim(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRemoteKeyFieldNumber = 4,
    kPendingChanIdFieldNumber = 5,
    kChanPointFieldNumber = 2,
    kLocalKeyFieldNumber = 3,
    kAmtFieldNumber = 1,
    kThawHeightFieldNumber = 6,
    kMusig2FieldNumber = 7,
  };
  // bytes remote_key = 4;
  void clear_remote_key() ;
  const std::string& remote_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remote_key(Arg_&& arg, Args_... args);
  std::string* mutable_remote_key();
  PROTOBUF_NODISCARD std::string* release_remote_key();
  void set_allocated_remote_key(std::string* value);

  private:
  const std::string& _internal_remote_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remote_key(
      const std::string& value);
  std::string* _internal_mutable_remote_key();

  public:
  // bytes pending_chan_id = 5;
  void clear_pending_chan_id() ;
  const std::string& pending_chan_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pending_chan_id(Arg_&& arg, Args_... args);
  std::string* mutable_pending_chan_id();
  PROTOBUF_NODISCARD std::string* release_pending_chan_id();
  void set_allocated_pending_chan_id(std::string* value);

  private:
  const std::string& _internal_pending_chan_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pending_chan_id(
      const std::string& value);
  std::string* _internal_mutable_pending_chan_id();

  public:
  // .lnrpc.ChannelPoint chan_point = 2;
  bool has_chan_point() const;
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  // .lnrpc.KeyDescriptor local_key = 3;
  bool has_local_key() const;
  void clear_local_key() ;
  const ::lnrpc::KeyDescriptor& local_key() const;
  PROTOBUF_NODISCARD ::lnrpc::KeyDescriptor* release_local_key();
  ::lnrpc::KeyDescriptor* mutable_local_key();
  void set_allocated_local_key(::lnrpc::KeyDescriptor* value);
  void unsafe_arena_set_allocated_local_key(::lnrpc::KeyDescriptor* value);
  ::lnrpc::KeyDescriptor* unsafe_arena_release_local_key();

  private:
  const ::lnrpc::KeyDescriptor& _internal_local_key() const;
  ::lnrpc::KeyDescriptor* _internal_mutable_local_key();

  public:
  // int64 amt = 1;
  void clear_amt() ;
  ::int64_t amt() const;
  void set_amt(::int64_t value);

  private:
  ::int64_t _internal_amt() const;
  void _internal_set_amt(::int64_t value);

  public:
  // uint32 thaw_height = 6;
  void clear_thaw_height() ;
  ::uint32_t thaw_height() const;
  void set_thaw_height(::uint32_t value);

  private:
  ::uint32_t _internal_thaw_height() const;
  void _internal_set_thaw_height(::uint32_t value);

  public:
  // bool musig2 = 7;
  void clear_musig2() ;
  bool musig2() const;
  void set_musig2(bool value);

  private:
  bool _internal_musig2() const;
  void _internal_set_musig2(bool value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChanPointShim)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChanPointShim_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChanPointShim& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr remote_key_;
    ::google::protobuf::internal::ArenaStringPtr pending_chan_id_;
    ::lnrpc::ChannelPoint* chan_point_;
    ::lnrpc::KeyDescriptor* local_key_;
    ::int64_t amt_;
    ::uint32_t thaw_height_;
    bool musig2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class BlindedPaymentPath final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.BlindedPaymentPath) */ {
 public:
  inline BlindedPaymentPath() : BlindedPaymentPath(nullptr) {}
  ~BlindedPaymentPath() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlindedPaymentPath(
      ::google::protobuf::internal::ConstantInitialized);

  inline BlindedPaymentPath(const BlindedPaymentPath& from) : BlindedPaymentPath(nullptr, from) {}
  inline BlindedPaymentPath(BlindedPaymentPath&& from) noexcept
      : BlindedPaymentPath(nullptr, std::move(from)) {}
  inline BlindedPaymentPath& operator=(const BlindedPaymentPath& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlindedPaymentPath& operator=(BlindedPaymentPath&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlindedPaymentPath& default_instance() {
    return *internal_default_instance();
  }
  static inline const BlindedPaymentPath* internal_default_instance() {
    return reinterpret_cast<const BlindedPaymentPath*>(
        &_BlindedPaymentPath_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 152;
  friend void swap(BlindedPaymentPath& a, BlindedPaymentPath& b) { a.Swap(&b); }
  inline void Swap(BlindedPaymentPath* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlindedPaymentPath* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlindedPaymentPath* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BlindedPaymentPath>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlindedPaymentPath& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlindedPaymentPath& from) { BlindedPaymentPath::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BlindedPaymentPath* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.BlindedPaymentPath"; }

 protected:
  explicit BlindedPaymentPath(::google::protobuf::Arena* arena);
  BlindedPaymentPath(::google::protobuf::Arena* arena, const BlindedPaymentPath& from);
  BlindedPaymentPath(::google::protobuf::Arena* arena, BlindedPaymentPath&& from) noexcept
      : BlindedPaymentPath(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFeaturesFieldNumber = 7,
    kBlindedPathFieldNumber = 1,
    kBaseFeeMsatFieldNumber = 2,
    kProportionalFeeRateFieldNumber = 3,
    kTotalCltvDeltaFieldNumber = 4,
    kHtlcMinMsatFieldNumber = 5,
    kHtlcMaxMsatFieldNumber = 6,
  };
  // repeated .lnrpc.FeatureBit features = 7;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  public:
  ::lnrpc::FeatureBit features(int index) const;
  void set_features(int index, ::lnrpc::FeatureBit value);
  void add_features(::lnrpc::FeatureBit value);
  const ::google::protobuf::RepeatedField<int>& features() const;
  ::google::protobuf::RepeatedField<int>* mutable_features();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_features() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_features();

  public:
  // .lnrpc.BlindedPath blinded_path = 1;
  bool has_blinded_path() const;
  void clear_blinded_path() ;
  const ::lnrpc::BlindedPath& blinded_path() const;
  PROTOBUF_NODISCARD ::lnrpc::BlindedPath* release_blinded_path();
  ::lnrpc::BlindedPath* mutable_blinded_path();
  void set_allocated_blinded_path(::lnrpc::BlindedPath* value);
  void unsafe_arena_set_allocated_blinded_path(::lnrpc::BlindedPath* value);
  ::lnrpc::BlindedPath* unsafe_arena_release_blinded_path();

  private:
  const ::lnrpc::BlindedPath& _internal_blinded_path() const;
  ::lnrpc::BlindedPath* _internal_mutable_blinded_path();

  public:
  // uint64 base_fee_msat = 2;
  void clear_base_fee_msat() ;
  ::uint64_t base_fee_msat() const;
  void set_base_fee_msat(::uint64_t value);

  private:
  ::uint64_t _internal_base_fee_msat() const;
  void _internal_set_base_fee_msat(::uint64_t value);

  public:
  // uint32 proportional_fee_rate = 3;
  void clear_proportional_fee_rate() ;
  ::uint32_t proportional_fee_rate() const;
  void set_proportional_fee_rate(::uint32_t value);

  private:
  ::uint32_t _internal_proportional_fee_rate() const;
  void _internal_set_proportional_fee_rate(::uint32_t value);

  public:
  // uint32 total_cltv_delta = 4;
  void clear_total_cltv_delta() ;
  ::uint32_t total_cltv_delta() const;
  void set_total_cltv_delta(::uint32_t value);

  private:
  ::uint32_t _internal_total_cltv_delta() const;
  void _internal_set_total_cltv_delta(::uint32_t value);

  public:
  // uint64 htlc_min_msat = 5;
  void clear_htlc_min_msat() ;
  ::uint64_t htlc_min_msat() const;
  void set_htlc_min_msat(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_min_msat() const;
  void _internal_set_htlc_min_msat(::uint64_t value);

  public:
  // uint64 htlc_max_msat = 6;
  void clear_htlc_max_msat() ;
  ::uint64_t htlc_max_msat() const;
  void set_htlc_max_msat(::uint64_t value);

  private:
  ::uint64_t _internal_htlc_max_msat() const;
  void _internal_set_htlc_max_msat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.BlindedPaymentPath)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BlindedPaymentPath_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BlindedPaymentPath& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<int> features_;
    mutable ::google::protobuf::internal::CachedSize _features_cached_byte_size_;
    ::lnrpc::BlindedPath* blinded_path_;
    ::uint64_t base_fee_msat_;
    ::uint32_t proportional_fee_rate_;
    ::uint32_t total_cltv_delta_;
    ::uint64_t htlc_min_msat_;
    ::uint64_t htlc_max_msat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendToRouteRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendToRouteRequest) */ {
 public:
  inline SendToRouteRequest() : SendToRouteRequest(nullptr) {}
  ~SendToRouteRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendToRouteRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendToRouteRequest(const SendToRouteRequest& from) : SendToRouteRequest(nullptr, from) {}
  inline SendToRouteRequest(SendToRouteRequest&& from) noexcept
      : SendToRouteRequest(nullptr, std::move(from)) {}
  inline SendToRouteRequest& operator=(const SendToRouteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendToRouteRequest& operator=(SendToRouteRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendToRouteRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendToRouteRequest* internal_default_instance() {
    return reinterpret_cast<const SendToRouteRequest*>(
        &_SendToRouteRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SendToRouteRequest& a, SendToRouteRequest& b) { a.Swap(&b); }
  inline void Swap(SendToRouteRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendToRouteRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendToRouteRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendToRouteRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendToRouteRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendToRouteRequest& from) { SendToRouteRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendToRouteRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendToRouteRequest"; }

 protected:
  explicit SendToRouteRequest(::google::protobuf::Arena* arena);
  SendToRouteRequest(::google::protobuf::Arena* arena, const SendToRouteRequest& from);
  SendToRouteRequest(::google::protobuf::Arena* arena, SendToRouteRequest&& from) noexcept
      : SendToRouteRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaymentHashFieldNumber = 1,
    kPaymentHashStringFieldNumber = 2,
    kRouteFieldNumber = 4,
  };
  // bytes payment_hash = 1;
  void clear_payment_hash() ;
  const std::string& payment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_payment_hash();
  PROTOBUF_NODISCARD std::string* release_payment_hash();
  void set_allocated_payment_hash(std::string* value);

  private:
  const std::string& _internal_payment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash(
      const std::string& value);
  std::string* _internal_mutable_payment_hash();

  public:
  // string payment_hash_string = 2 [deprecated = true];
  [[deprecated]]  void clear_payment_hash_string() ;
  [[deprecated]] const std::string& payment_hash_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_payment_hash_string(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_payment_hash_string();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_payment_hash_string();
  [[deprecated]] void set_allocated_payment_hash_string(std::string* value);

  private:
  const std::string& _internal_payment_hash_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash_string(
      const std::string& value);
  std::string* _internal_mutable_payment_hash_string();

  public:
  // .lnrpc.Route route = 4;
  bool has_route() const;
  void clear_route() ;
  const ::lnrpc::Route& route() const;
  PROTOBUF_NODISCARD ::lnrpc::Route* release_route();
  ::lnrpc::Route* mutable_route();
  void set_allocated_route(::lnrpc::Route* value);
  void unsafe_arena_set_allocated_route(::lnrpc::Route* value);
  ::lnrpc::Route* unsafe_arena_release_route();

  private:
  const ::lnrpc::Route& _internal_route() const;
  ::lnrpc::Route* _internal_mutable_route();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendToRouteRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendToRouteRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendToRouteRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_string_;
    ::lnrpc::Route* route_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class SendResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.SendResponse) */ {
 public:
  inline SendResponse() : SendResponse(nullptr) {}
  ~SendResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendResponse(const SendResponse& from) : SendResponse(nullptr, from) {}
  inline SendResponse(SendResponse&& from) noexcept
      : SendResponse(nullptr, std::move(from)) {}
  inline SendResponse& operator=(const SendResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendResponse& operator=(SendResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendResponse* internal_default_instance() {
    return reinterpret_cast<const SendResponse*>(
        &_SendResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SendResponse& a, SendResponse& b) { a.Swap(&b); }
  inline void Swap(SendResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendResponse& from) { SendResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.SendResponse"; }

 protected:
  explicit SendResponse(::google::protobuf::Arena* arena);
  SendResponse(::google::protobuf::Arena* arena, const SendResponse& from);
  SendResponse(::google::protobuf::Arena* arena, SendResponse&& from) noexcept
      : SendResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaymentErrorFieldNumber = 1,
    kPaymentPreimageFieldNumber = 2,
    kPaymentHashFieldNumber = 4,
    kPaymentRouteFieldNumber = 3,
  };
  // string payment_error = 1;
  void clear_payment_error() ;
  const std::string& payment_error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_error(Arg_&& arg, Args_... args);
  std::string* mutable_payment_error();
  PROTOBUF_NODISCARD std::string* release_payment_error();
  void set_allocated_payment_error(std::string* value);

  private:
  const std::string& _internal_payment_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_error(
      const std::string& value);
  std::string* _internal_mutable_payment_error();

  public:
  // bytes payment_preimage = 2;
  void clear_payment_preimage() ;
  const std::string& payment_preimage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_preimage(Arg_&& arg, Args_... args);
  std::string* mutable_payment_preimage();
  PROTOBUF_NODISCARD std::string* release_payment_preimage();
  void set_allocated_payment_preimage(std::string* value);

  private:
  const std::string& _internal_payment_preimage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_preimage(
      const std::string& value);
  std::string* _internal_mutable_payment_preimage();

  public:
  // bytes payment_hash = 4;
  void clear_payment_hash() ;
  const std::string& payment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_payment_hash();
  PROTOBUF_NODISCARD std::string* release_payment_hash();
  void set_allocated_payment_hash(std::string* value);

  private:
  const std::string& _internal_payment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash(
      const std::string& value);
  std::string* _internal_mutable_payment_hash();

  public:
  // .lnrpc.Route payment_route = 3;
  bool has_payment_route() const;
  void clear_payment_route() ;
  const ::lnrpc::Route& payment_route() const;
  PROTOBUF_NODISCARD ::lnrpc::Route* release_payment_route();
  ::lnrpc::Route* mutable_payment_route();
  void set_allocated_payment_route(::lnrpc::Route* value);
  void unsafe_arena_set_allocated_payment_route(::lnrpc::Route* value);
  ::lnrpc::Route* unsafe_arena_release_payment_route();

  private:
  const ::lnrpc::Route& _internal_payment_route() const;
  ::lnrpc::Route* _internal_mutable_payment_route();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.SendResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr payment_error_;
    ::google::protobuf::internal::ArenaStringPtr payment_preimage_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_;
    ::lnrpc::Route* payment_route_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class RestoreChanBackupRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.RestoreChanBackupRequest) */ {
 public:
  inline RestoreChanBackupRequest() : RestoreChanBackupRequest(nullptr) {}
  ~RestoreChanBackupRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RestoreChanBackupRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RestoreChanBackupRequest(const RestoreChanBackupRequest& from) : RestoreChanBackupRequest(nullptr, from) {}
  inline RestoreChanBackupRequest(RestoreChanBackupRequest&& from) noexcept
      : RestoreChanBackupRequest(nullptr, std::move(from)) {}
  inline RestoreChanBackupRequest& operator=(const RestoreChanBackupRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RestoreChanBackupRequest& operator=(RestoreChanBackupRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RestoreChanBackupRequest& default_instance() {
    return *internal_default_instance();
  }
  enum BackupCase {
    kChanBackups = 1,
    kMultiChanBackup = 2,
    BACKUP_NOT_SET = 0,
  };
  static inline const RestoreChanBackupRequest* internal_default_instance() {
    return reinterpret_cast<const RestoreChanBackupRequest*>(
        &_RestoreChanBackupRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 201;
  friend void swap(RestoreChanBackupRequest& a, RestoreChanBackupRequest& b) { a.Swap(&b); }
  inline void Swap(RestoreChanBackupRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RestoreChanBackupRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RestoreChanBackupRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RestoreChanBackupRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RestoreChanBackupRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RestoreChanBackupRequest& from) { RestoreChanBackupRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RestoreChanBackupRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.RestoreChanBackupRequest"; }

 protected:
  explicit RestoreChanBackupRequest(::google::protobuf::Arena* arena);
  RestoreChanBackupRequest(::google::protobuf::Arena* arena, const RestoreChanBackupRequest& from);
  RestoreChanBackupRequest(::google::protobuf::Arena* arena, RestoreChanBackupRequest&& from) noexcept
      : RestoreChanBackupRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanBackupsFieldNumber = 1,
    kMultiChanBackupFieldNumber = 2,
  };
  // .lnrpc.ChannelBackups chan_backups = 1;
  bool has_chan_backups() const;
  private:
  bool _internal_has_chan_backups() const;

  public:
  void clear_chan_backups() ;
  const ::lnrpc::ChannelBackups& chan_backups() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelBackups* release_chan_backups();
  ::lnrpc::ChannelBackups* mutable_chan_backups();
  void set_allocated_chan_backups(::lnrpc::ChannelBackups* value);
  void unsafe_arena_set_allocated_chan_backups(::lnrpc::ChannelBackups* value);
  ::lnrpc::ChannelBackups* unsafe_arena_release_chan_backups();

  private:
  const ::lnrpc::ChannelBackups& _internal_chan_backups() const;
  ::lnrpc::ChannelBackups* _internal_mutable_chan_backups();

  public:
  // bytes multi_chan_backup = 2;
  bool has_multi_chan_backup() const;
  void clear_multi_chan_backup() ;
  const std::string& multi_chan_backup() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_multi_chan_backup(Arg_&& arg, Args_... args);
  std::string* mutable_multi_chan_backup();
  PROTOBUF_NODISCARD std::string* release_multi_chan_backup();
  void set_allocated_multi_chan_backup(std::string* value);

  private:
  const std::string& _internal_multi_chan_backup() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_multi_chan_backup(
      const std::string& value);
  std::string* _internal_mutable_multi_chan_backup();

  public:
  void clear_backup();
  BackupCase backup_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.RestoreChanBackupRequest)
 private:
  class _Internal;
  void set_has_chan_backups();
  void set_has_multi_chan_backup();
  inline bool has_backup() const;
  inline void clear_has_backup();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RestoreChanBackupRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RestoreChanBackupRequest& from_msg);
    union BackupUnion {
      constexpr BackupUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::ChannelBackups* chan_backups_;
      ::google::protobuf::internal::ArenaStringPtr multi_chan_backup_;
    } backup_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class QueryRoutesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.QueryRoutesResponse) */ {
 public:
  inline QueryRoutesResponse() : QueryRoutesResponse(nullptr) {}
  ~QueryRoutesResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRoutesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRoutesResponse(const QueryRoutesResponse& from) : QueryRoutesResponse(nullptr, from) {}
  inline QueryRoutesResponse(QueryRoutesResponse&& from) noexcept
      : QueryRoutesResponse(nullptr, std::move(from)) {}
  inline QueryRoutesResponse& operator=(const QueryRoutesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRoutesResponse& operator=(QueryRoutesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRoutesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRoutesResponse* internal_default_instance() {
    return reinterpret_cast<const QueryRoutesResponse*>(
        &_QueryRoutesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 116;
  friend void swap(QueryRoutesResponse& a, QueryRoutesResponse& b) { a.Swap(&b); }
  inline void Swap(QueryRoutesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRoutesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRoutesResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QueryRoutesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRoutesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRoutesResponse& from) { QueryRoutesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRoutesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.QueryRoutesResponse"; }

 protected:
  explicit QueryRoutesResponse(::google::protobuf::Arena* arena);
  QueryRoutesResponse(::google::protobuf::Arena* arena, const QueryRoutesResponse& from);
  QueryRoutesResponse(::google::protobuf::Arena* arena, QueryRoutesResponse&& from) noexcept
      : QueryRoutesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRoutesFieldNumber = 1,
    kSuccessProbFieldNumber = 2,
  };
  // repeated .lnrpc.Route routes = 1;
  int routes_size() const;
  private:
  int _internal_routes_size() const;

  public:
  void clear_routes() ;
  ::lnrpc::Route* mutable_routes(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Route>* mutable_routes();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Route>& _internal_routes() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Route>* _internal_mutable_routes();
  public:
  const ::lnrpc::Route& routes(int index) const;
  ::lnrpc::Route* add_routes();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Route>& routes() const;
  // double success_prob = 2;
  void clear_success_prob() ;
  double success_prob() const;
  void set_success_prob(double value);

  private:
  double _internal_success_prob() const;
  void _internal_set_success_prob(double value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.QueryRoutesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRoutesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRoutesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Route > routes_;
    double success_prob_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class QueryRoutesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.QueryRoutesRequest) */ {
 public:
  inline QueryRoutesRequest() : QueryRoutesRequest(nullptr) {}
  ~QueryRoutesRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR QueryRoutesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline QueryRoutesRequest(const QueryRoutesRequest& from) : QueryRoutesRequest(nullptr, from) {}
  inline QueryRoutesRequest(QueryRoutesRequest&& from) noexcept
      : QueryRoutesRequest(nullptr, std::move(from)) {}
  inline QueryRoutesRequest& operator=(const QueryRoutesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline QueryRoutesRequest& operator=(QueryRoutesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const QueryRoutesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const QueryRoutesRequest* internal_default_instance() {
    return reinterpret_cast<const QueryRoutesRequest*>(
        &_QueryRoutesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 113;
  friend void swap(QueryRoutesRequest& a, QueryRoutesRequest& b) { a.Swap(&b); }
  inline void Swap(QueryRoutesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(QueryRoutesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  QueryRoutesRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<QueryRoutesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const QueryRoutesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const QueryRoutesRequest& from) { QueryRoutesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(QueryRoutesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.QueryRoutesRequest"; }

 protected:
  explicit QueryRoutesRequest(::google::protobuf::Arena* arena);
  QueryRoutesRequest(::google::protobuf::Arena* arena, const QueryRoutesRequest& from);
  QueryRoutesRequest(::google::protobuf::Arena* arena, QueryRoutesRequest&& from) noexcept
      : QueryRoutesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIgnoredNodesFieldNumber = 6,
    kIgnoredEdgesFieldNumber = 7,
    kIgnoredPairsFieldNumber = 10,
    kDestCustomRecordsFieldNumber = 13,
    kRouteHintsFieldNumber = 16,
    kDestFeaturesFieldNumber = 17,
    kBlindedPaymentPathsFieldNumber = 19,
    kPubKeyFieldNumber = 1,
    kSourcePubKeyFieldNumber = 8,
    kLastHopPubkeyFieldNumber = 15,
    kFeeLimitFieldNumber = 5,
    kAmtFieldNumber = 2,
    kFinalCltvDeltaFieldNumber = 4,
    kUseMissionControlFieldNumber = 9,
    kAmtMsatFieldNumber = 12,
    kOutgoingChanIdFieldNumber = 14,
    kTimePrefFieldNumber = 18,
    kCltvLimitFieldNumber = 11,
  };
  // repeated bytes ignored_nodes = 6;
  int ignored_nodes_size() const;
  private:
  int _internal_ignored_nodes_size() const;

  public:
  void clear_ignored_nodes() ;
  const std::string& ignored_nodes(int index) const;
  std::string* mutable_ignored_nodes(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ignored_nodes(int index, Arg_&& value, Args_... args);
  std::string* add_ignored_nodes();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_ignored_nodes(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& ignored_nodes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_ignored_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_ignored_nodes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_ignored_nodes();

  public:
  // repeated .lnrpc.EdgeLocator ignored_edges = 7 [deprecated = true];
  [[deprecated]]  int ignored_edges_size() const;
  private:
  int _internal_ignored_edges_size() const;

  public:
  [[deprecated]]  void clear_ignored_edges() ;
  [[deprecated]] ::lnrpc::EdgeLocator* mutable_ignored_edges(int index);
  [[deprecated]] ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>* mutable_ignored_edges();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>& _internal_ignored_edges() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>* _internal_mutable_ignored_edges();
  public:
  [[deprecated]] const ::lnrpc::EdgeLocator& ignored_edges(int index) const;
  [[deprecated]] ::lnrpc::EdgeLocator* add_ignored_edges();
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>& ignored_edges() const;
  // repeated .lnrpc.NodePair ignored_pairs = 10;
  int ignored_pairs_size() const;
  private:
  int _internal_ignored_pairs_size() const;

  public:
  void clear_ignored_pairs() ;
  ::lnrpc::NodePair* mutable_ignored_pairs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>* mutable_ignored_pairs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>& _internal_ignored_pairs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>* _internal_mutable_ignored_pairs();
  public:
  const ::lnrpc::NodePair& ignored_pairs(int index) const;
  ::lnrpc::NodePair* add_ignored_pairs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>& ignored_pairs() const;
  // map<uint64, bytes> dest_custom_records = 13;
  int dest_custom_records_size() const;
  private:
  int _internal_dest_custom_records_size() const;

  public:
  void clear_dest_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& dest_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_dest_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_dest_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_dest_custom_records();

  public:
  // repeated .lnrpc.RouteHint route_hints = 16;
  int route_hints_size() const;
  private:
  int _internal_route_hints_size() const;

  public:
  void clear_route_hints() ;
  ::lnrpc::RouteHint* mutable_route_hints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* mutable_route_hints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& _internal_route_hints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* _internal_mutable_route_hints();
  public:
  const ::lnrpc::RouteHint& route_hints(int index) const;
  ::lnrpc::RouteHint* add_route_hints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& route_hints() const;
  // repeated .lnrpc.FeatureBit dest_features = 17;
  int dest_features_size() const;
  private:
  int _internal_dest_features_size() const;

  public:
  void clear_dest_features() ;
  public:
  ::lnrpc::FeatureBit dest_features(int index) const;
  void set_dest_features(int index, ::lnrpc::FeatureBit value);
  void add_dest_features(::lnrpc::FeatureBit value);
  const ::google::protobuf::RepeatedField<int>& dest_features() const;
  ::google::protobuf::RepeatedField<int>* mutable_dest_features();

  private:
  const ::google::protobuf::RepeatedField<int>& _internal_dest_features() const;
  ::google::protobuf::RepeatedField<int>* _internal_mutable_dest_features();

  public:
  // repeated .lnrpc.BlindedPaymentPath blinded_payment_paths = 19;
  int blinded_payment_paths_size() const;
  private:
  int _internal_blinded_payment_paths_size() const;

  public:
  void clear_blinded_payment_paths() ;
  ::lnrpc::BlindedPaymentPath* mutable_blinded_payment_paths(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>* mutable_blinded_payment_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>& _internal_blinded_payment_paths() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>* _internal_mutable_blinded_payment_paths();
  public:
  const ::lnrpc::BlindedPaymentPath& blinded_payment_paths(int index) const;
  ::lnrpc::BlindedPaymentPath* add_blinded_payment_paths();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>& blinded_payment_paths() const;
  // string pub_key = 1;
  void clear_pub_key() ;
  const std::string& pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_pub_key();
  PROTOBUF_NODISCARD std::string* release_pub_key();
  void set_allocated_pub_key(std::string* value);

  private:
  const std::string& _internal_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pub_key(
      const std::string& value);
  std::string* _internal_mutable_pub_key();

  public:
  // string source_pub_key = 8;
  void clear_source_pub_key() ;
  const std::string& source_pub_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source_pub_key(Arg_&& arg, Args_... args);
  std::string* mutable_source_pub_key();
  PROTOBUF_NODISCARD std::string* release_source_pub_key();
  void set_allocated_source_pub_key(std::string* value);

  private:
  const std::string& _internal_source_pub_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source_pub_key(
      const std::string& value);
  std::string* _internal_mutable_source_pub_key();

  public:
  // bytes last_hop_pubkey = 15;
  void clear_last_hop_pubkey() ;
  const std::string& last_hop_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_hop_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_last_hop_pubkey();
  PROTOBUF_NODISCARD std::string* release_last_hop_pubkey();
  void set_allocated_last_hop_pubkey(std::string* value);

  private:
  const std::string& _internal_last_hop_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_hop_pubkey(
      const std::string& value);
  std::string* _internal_mutable_last_hop_pubkey();

  public:
  // .lnrpc.FeeLimit fee_limit = 5;
  bool has_fee_limit() const;
  void clear_fee_limit() ;
  const ::lnrpc::FeeLimit& fee_limit() const;
  PROTOBUF_NODISCARD ::lnrpc::FeeLimit* release_fee_limit();
  ::lnrpc::FeeLimit* mutable_fee_limit();
  void set_allocated_fee_limit(::lnrpc::FeeLimit* value);
  void unsafe_arena_set_allocated_fee_limit(::lnrpc::FeeLimit* value);
  ::lnrpc::FeeLimit* unsafe_arena_release_fee_limit();

  private:
  const ::lnrpc::FeeLimit& _internal_fee_limit() const;
  ::lnrpc::FeeLimit* _internal_mutable_fee_limit();

  public:
  // int64 amt = 2;
  void clear_amt() ;
  ::int64_t amt() const;
  void set_amt(::int64_t value);

  private:
  ::int64_t _internal_amt() const;
  void _internal_set_amt(::int64_t value);

  public:
  // int32 final_cltv_delta = 4;
  void clear_final_cltv_delta() ;
  ::int32_t final_cltv_delta() const;
  void set_final_cltv_delta(::int32_t value);

  private:
  ::int32_t _internal_final_cltv_delta() const;
  void _internal_set_final_cltv_delta(::int32_t value);

  public:
  // bool use_mission_control = 9;
  void clear_use_mission_control() ;
  bool use_mission_control() const;
  void set_use_mission_control(bool value);

  private:
  bool _internal_use_mission_control() const;
  void _internal_set_use_mission_control(bool value);

  public:
  // int64 amt_msat = 12;
  void clear_amt_msat() ;
  ::int64_t amt_msat() const;
  void set_amt_msat(::int64_t value);

  private:
  ::int64_t _internal_amt_msat() const;
  void _internal_set_amt_msat(::int64_t value);

  public:
  // uint64 outgoing_chan_id = 14 [jstype = JS_STRING];
  void clear_outgoing_chan_id() ;
  ::uint64_t outgoing_chan_id() const;
  void set_outgoing_chan_id(::uint64_t value);

  private:
  ::uint64_t _internal_outgoing_chan_id() const;
  void _internal_set_outgoing_chan_id(::uint64_t value);

  public:
  // double time_pref = 18;
  void clear_time_pref() ;
  double time_pref() const;
  void set_time_pref(double value);

  private:
  double _internal_time_pref() const;
  void _internal_set_time_pref(double value);

  public:
  // uint32 cltv_limit = 11;
  void clear_cltv_limit() ;
  ::uint32_t cltv_limit() const;
  void set_cltv_limit(::uint32_t value);

  private:
  ::uint32_t _internal_cltv_limit() const;
  void _internal_set_cltv_limit(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.QueryRoutesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 18, 6,
      70, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_QueryRoutesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const QueryRoutesRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> ignored_nodes_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::EdgeLocator > ignored_edges_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::NodePair > ignored_pairs_;
    ::google::protobuf::internal::MapField<QueryRoutesRequest_DestCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        dest_custom_records_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::RouteHint > route_hints_;
    ::google::protobuf::RepeatedField<int> dest_features_;
    mutable ::google::protobuf::internal::CachedSize _dest_features_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::BlindedPaymentPath > blinded_payment_paths_;
    ::google::protobuf::internal::ArenaStringPtr pub_key_;
    ::google::protobuf::internal::ArenaStringPtr source_pub_key_;
    ::google::protobuf::internal::ArenaStringPtr last_hop_pubkey_;
    ::lnrpc::FeeLimit* fee_limit_;
    ::int64_t amt_;
    ::int32_t final_cltv_delta_;
    bool use_mission_control_;
    ::int64_t amt_msat_;
    ::uint64_t outgoing_chan_id_;
    double time_pref_;
    ::uint32_t cltv_limit_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class PayReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.PayReq) */ {
 public:
  inline PayReq() : PayReq(nullptr) {}
  ~PayReq() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PayReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline PayReq(const PayReq& from) : PayReq(nullptr, from) {}
  inline PayReq(PayReq&& from) noexcept
      : PayReq(nullptr, std::move(from)) {}
  inline PayReq& operator=(const PayReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline PayReq& operator=(PayReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PayReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const PayReq* internal_default_instance() {
    return reinterpret_cast<const PayReq*>(
        &_PayReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 183;
  friend void swap(PayReq& a, PayReq& b) { a.Swap(&b); }
  inline void Swap(PayReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PayReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PayReq* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PayReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PayReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PayReq& from) { PayReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PayReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.PayReq"; }

 protected:
  explicit PayReq(::google::protobuf::Arena* arena);
  PayReq(::google::protobuf::Arena* arena, const PayReq& from);
  PayReq(::google::protobuf::Arena* arena, PayReq&& from) noexcept
      : PayReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRouteHintsFieldNumber = 10,
    kFeaturesFieldNumber = 13,
    kBlindedPathsFieldNumber = 14,
    kDestinationFieldNumber = 1,
    kPaymentHashFieldNumber = 2,
    kDescriptionFieldNumber = 6,
    kDescriptionHashFieldNumber = 7,
    kFallbackAddrFieldNumber = 8,
    kPaymentAddrFieldNumber = 11,
    kNumSatoshisFieldNumber = 3,
    kTimestampFieldNumber = 4,
    kExpiryFieldNumber = 5,
    kCltvExpiryFieldNumber = 9,
    kNumMsatFieldNumber = 12,
  };
  // repeated .lnrpc.RouteHint route_hints = 10;
  int route_hints_size() const;
  private:
  int _internal_route_hints_size() const;

  public:
  void clear_route_hints() ;
  ::lnrpc::RouteHint* mutable_route_hints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* mutable_route_hints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& _internal_route_hints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* _internal_mutable_route_hints();
  public:
  const ::lnrpc::RouteHint& route_hints(int index) const;
  ::lnrpc::RouteHint* add_route_hints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& route_hints() const;
  // map<uint32, .lnrpc.Feature> features = 13;
  int features_size() const;
  private:
  int _internal_features_size() const;

  public:
  void clear_features() ;
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* mutable_features();

  private:
  const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& _internal_features() const;
  ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* _internal_mutable_features();

  public:
  // repeated .lnrpc.BlindedPaymentPath blinded_paths = 14;
  int blinded_paths_size() const;
  private:
  int _internal_blinded_paths_size() const;

  public:
  void clear_blinded_paths() ;
  ::lnrpc::BlindedPaymentPath* mutable_blinded_paths(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>* mutable_blinded_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>& _internal_blinded_paths() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>* _internal_mutable_blinded_paths();
  public:
  const ::lnrpc::BlindedPaymentPath& blinded_paths(int index) const;
  ::lnrpc::BlindedPaymentPath* add_blinded_paths();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>& blinded_paths() const;
  // string destination = 1;
  void clear_destination() ;
  const std::string& destination() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_destination(Arg_&& arg, Args_... args);
  std::string* mutable_destination();
  PROTOBUF_NODISCARD std::string* release_destination();
  void set_allocated_destination(std::string* value);

  private:
  const std::string& _internal_destination() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_destination(
      const std::string& value);
  std::string* _internal_mutable_destination();

  public:
  // string payment_hash = 2;
  void clear_payment_hash() ;
  const std::string& payment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_payment_hash();
  PROTOBUF_NODISCARD std::string* release_payment_hash();
  void set_allocated_payment_hash(std::string* value);

  private:
  const std::string& _internal_payment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash(
      const std::string& value);
  std::string* _internal_mutable_payment_hash();

  public:
  // string description = 6;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string description_hash = 7;
  void clear_description_hash() ;
  const std::string& description_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description_hash(Arg_&& arg, Args_... args);
  std::string* mutable_description_hash();
  PROTOBUF_NODISCARD std::string* release_description_hash();
  void set_allocated_description_hash(std::string* value);

  private:
  const std::string& _internal_description_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description_hash(
      const std::string& value);
  std::string* _internal_mutable_description_hash();

  public:
  // string fallback_addr = 8;
  void clear_fallback_addr() ;
  const std::string& fallback_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_fallback_addr(Arg_&& arg, Args_... args);
  std::string* mutable_fallback_addr();
  PROTOBUF_NODISCARD std::string* release_fallback_addr();
  void set_allocated_fallback_addr(std::string* value);

  private:
  const std::string& _internal_fallback_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_fallback_addr(
      const std::string& value);
  std::string* _internal_mutable_fallback_addr();

  public:
  // bytes payment_addr = 11;
  void clear_payment_addr() ;
  const std::string& payment_addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_addr(Arg_&& arg, Args_... args);
  std::string* mutable_payment_addr();
  PROTOBUF_NODISCARD std::string* release_payment_addr();
  void set_allocated_payment_addr(std::string* value);

  private:
  const std::string& _internal_payment_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_addr(
      const std::string& value);
  std::string* _internal_mutable_payment_addr();

  public:
  // int64 num_satoshis = 3;
  void clear_num_satoshis() ;
  ::int64_t num_satoshis() const;
  void set_num_satoshis(::int64_t value);

  private:
  ::int64_t _internal_num_satoshis() const;
  void _internal_set_num_satoshis(::int64_t value);

  public:
  // int64 timestamp = 4;
  void clear_timestamp() ;
  ::int64_t timestamp() const;
  void set_timestamp(::int64_t value);

  private:
  ::int64_t _internal_timestamp() const;
  void _internal_set_timestamp(::int64_t value);

  public:
  // int64 expiry = 5;
  void clear_expiry() ;
  ::int64_t expiry() const;
  void set_expiry(::int64_t value);

  private:
  ::int64_t _internal_expiry() const;
  void _internal_set_expiry(::int64_t value);

  public:
  // int64 cltv_expiry = 9;
  void clear_cltv_expiry() ;
  ::int64_t cltv_expiry() const;
  void set_cltv_expiry(::int64_t value);

  private:
  ::int64_t _internal_cltv_expiry() const;
  void _internal_set_cltv_expiry(::int64_t value);

  public:
  // int64 num_msat = 12;
  void clear_num_msat() ;
  ::int64_t num_msat() const;
  void set_num_msat(::int64_t value);

  private:
  ::int64_t _internal_num_msat() const;
  void _internal_set_num_msat(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.PayReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 4,
      92, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PayReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PayReq& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::RouteHint > route_hints_;
    ::google::protobuf::internal::MapField<PayReq_FeaturesEntry_DoNotUse, ::uint32_t, ::lnrpc::Feature,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT32,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        features_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::BlindedPaymentPath > blinded_paths_;
    ::google::protobuf::internal::ArenaStringPtr destination_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr description_hash_;
    ::google::protobuf::internal::ArenaStringPtr fallback_addr_;
    ::google::protobuf::internal::ArenaStringPtr payment_addr_;
    ::int64_t num_satoshis_;
    ::int64_t timestamp_;
    ::int64_t expiry_;
    ::int64_t cltv_expiry_;
    ::int64_t num_msat_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class NodeInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.NodeInfo) */ {
 public:
  inline NodeInfo() : NodeInfo(nullptr) {}
  ~NodeInfo() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR NodeInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline NodeInfo(const NodeInfo& from) : NodeInfo(nullptr, from) {}
  inline NodeInfo(NodeInfo&& from) noexcept
      : NodeInfo(nullptr, std::move(from)) {}
  inline NodeInfo& operator=(const NodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline NodeInfo& operator=(NodeInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const NodeInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const NodeInfo* internal_default_instance() {
    return reinterpret_cast<const NodeInfo*>(
        &_NodeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 123;
  friend void swap(NodeInfo& a, NodeInfo& b) { a.Swap(&b); }
  inline void Swap(NodeInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(NodeInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  NodeInfo* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<NodeInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const NodeInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const NodeInfo& from) { NodeInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(NodeInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.NodeInfo"; }

 protected:
  explicit NodeInfo(::google::protobuf::Arena* arena);
  NodeInfo(::google::protobuf::Arena* arena, const NodeInfo& from);
  NodeInfo(::google::protobuf::Arena* arena, NodeInfo&& from) noexcept
      : NodeInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsFieldNumber = 4,
    kNodeFieldNumber = 1,
    kTotalCapacityFieldNumber = 3,
    kNumChannelsFieldNumber = 2,
  };
  // repeated .lnrpc.ChannelEdge channels = 4;
  int channels_size() const;
  private:
  int _internal_channels_size() const;

  public:
  void clear_channels() ;
  ::lnrpc::ChannelEdge* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>* mutable_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>& _internal_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>* _internal_mutable_channels();
  public:
  const ::lnrpc::ChannelEdge& channels(int index) const;
  ::lnrpc::ChannelEdge* add_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>& channels() const;
  // .lnrpc.LightningNode node = 1;
  bool has_node() const;
  void clear_node() ;
  const ::lnrpc::LightningNode& node() const;
  PROTOBUF_NODISCARD ::lnrpc::LightningNode* release_node();
  ::lnrpc::LightningNode* mutable_node();
  void set_allocated_node(::lnrpc::LightningNode* value);
  void unsafe_arena_set_allocated_node(::lnrpc::LightningNode* value);
  ::lnrpc::LightningNode* unsafe_arena_release_node();

  private:
  const ::lnrpc::LightningNode& _internal_node() const;
  ::lnrpc::LightningNode* _internal_mutable_node();

  public:
  // int64 total_capacity = 3;
  void clear_total_capacity() ;
  ::int64_t total_capacity() const;
  void set_total_capacity(::int64_t value);

  private:
  ::int64_t _internal_total_capacity() const;
  void _internal_set_total_capacity(::int64_t value);

  public:
  // uint32 num_channels = 2;
  void clear_num_channels() ;
  ::uint32_t num_channels() const;
  void set_num_channels(::uint32_t value);

  private:
  ::uint32_t _internal_num_channels() const;
  void _internal_set_num_channels(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.NodeInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_NodeInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const NodeInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelEdge > channels_;
    ::lnrpc::LightningNode* node_;
    ::int64_t total_capacity_;
    ::uint32_t num_channels_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPermissionsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListPermissionsResponse) */ {
 public:
  inline ListPermissionsResponse() : ListPermissionsResponse(nullptr) {}
  ~ListPermissionsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPermissionsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPermissionsResponse(const ListPermissionsResponse& from) : ListPermissionsResponse(nullptr, from) {}
  inline ListPermissionsResponse(ListPermissionsResponse&& from) noexcept
      : ListPermissionsResponse(nullptr, std::move(from)) {}
  inline ListPermissionsResponse& operator=(const ListPermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPermissionsResponse& operator=(ListPermissionsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPermissionsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const ListPermissionsResponse*>(
        &_ListPermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 215;
  friend void swap(ListPermissionsResponse& a, ListPermissionsResponse& b) { a.Swap(&b); }
  inline void Swap(ListPermissionsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPermissionsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPermissionsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListPermissionsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPermissionsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPermissionsResponse& from) { ListPermissionsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListPermissionsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListPermissionsResponse"; }

 protected:
  explicit ListPermissionsResponse(::google::protobuf::Arena* arena);
  ListPermissionsResponse(::google::protobuf::Arena* arena, const ListPermissionsResponse& from);
  ListPermissionsResponse(::google::protobuf::Arena* arena, ListPermissionsResponse&& from) noexcept
      : ListPermissionsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMethodPermissionsFieldNumber = 1,
  };
  // map<string, .lnrpc.MacaroonPermissionList> method_permissions = 1;
  int method_permissions_size() const;
  private:
  int _internal_method_permissions_size() const;

  public:
  void clear_method_permissions() ;
  const ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>& method_permissions() const;
  ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>* mutable_method_permissions();

  private:
  const ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>& _internal_method_permissions() const;
  ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>* _internal_mutable_method_permissions();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListPermissionsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListPermissionsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPermissionsResponse& from_msg);
    ::google::protobuf::internal::MapField<ListPermissionsResponse_MethodPermissionsEntry_DoNotUse, std::string, ::lnrpc::MacaroonPermissionList,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        method_permissions_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPeersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListPeersResponse) */ {
 public:
  inline ListPeersResponse() : ListPeersResponse(nullptr) {}
  ~ListPeersResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPeersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPeersResponse(const ListPeersResponse& from) : ListPeersResponse(nullptr, from) {}
  inline ListPeersResponse(ListPeersResponse&& from) noexcept
      : ListPeersResponse(nullptr, std::move(from)) {}
  inline ListPeersResponse& operator=(const ListPeersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPeersResponse& operator=(ListPeersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPeersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPeersResponse* internal_default_instance() {
    return reinterpret_cast<const ListPeersResponse*>(
        &_ListPeersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(ListPeersResponse& a, ListPeersResponse& b) { a.Swap(&b); }
  inline void Swap(ListPeersResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPeersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPeersResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListPeersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPeersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPeersResponse& from) { ListPeersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListPeersResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListPeersResponse"; }

 protected:
  explicit ListPeersResponse(::google::protobuf::Arena* arena);
  ListPeersResponse(::google::protobuf::Arena* arena, const ListPeersResponse& from);
  ListPeersResponse(::google::protobuf::Arena* arena, ListPeersResponse&& from) noexcept
      : ListPeersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPeersFieldNumber = 1,
  };
  // repeated .lnrpc.Peer peers = 1;
  int peers_size() const;
  private:
  int _internal_peers_size() const;

  public:
  void clear_peers() ;
  ::lnrpc::Peer* mutable_peers(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>* mutable_peers();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>& _internal_peers() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>* _internal_mutable_peers();
  public:
  const ::lnrpc::Peer& peers(int index) const;
  ::lnrpc::Peer* add_peers();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>& peers() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ListPeersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListPeersResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPeersResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Peer > peers_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListInvoiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListInvoiceResponse) */ {
 public:
  inline ListInvoiceResponse() : ListInvoiceResponse(nullptr) {}
  ~ListInvoiceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListInvoiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListInvoiceResponse(const ListInvoiceResponse& from) : ListInvoiceResponse(nullptr, from) {}
  inline ListInvoiceResponse(ListInvoiceResponse&& from) noexcept
      : ListInvoiceResponse(nullptr, std::move(from)) {}
  inline ListInvoiceResponse& operator=(const ListInvoiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListInvoiceResponse& operator=(ListInvoiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListInvoiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListInvoiceResponse* internal_default_instance() {
    return reinterpret_cast<const ListInvoiceResponse*>(
        &_ListInvoiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 166;
  friend void swap(ListInvoiceResponse& a, ListInvoiceResponse& b) { a.Swap(&b); }
  inline void Swap(ListInvoiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListInvoiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListInvoiceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListInvoiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListInvoiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListInvoiceResponse& from) { ListInvoiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListInvoiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListInvoiceResponse"; }

 protected:
  explicit ListInvoiceResponse(::google::protobuf::Arena* arena);
  ListInvoiceResponse(::google::protobuf::Arena* arena, const ListInvoiceResponse& from);
  ListInvoiceResponse(::google::protobuf::Arena* arena, ListInvoiceResponse&& from) noexcept
      : ListInvoiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInvoicesFieldNumber = 1,
    kLastIndexOffsetFieldNumber = 2,
    kFirstIndexOffsetFieldNumber = 3,
  };
  // repeated .lnrpc.Invoice invoices = 1;
  int invoices_size() const;
  private:
  int _internal_invoices_size() const;

  public:
  void clear_invoices() ;
  ::lnrpc::Invoice* mutable_invoices(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>* mutable_invoices();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>& _internal_invoices() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>* _internal_mutable_invoices();
  public:
  const ::lnrpc::Invoice& invoices(int index) const;
  ::lnrpc::Invoice* add_invoices();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>& invoices() const;
  // uint64 last_index_offset = 2;
  void clear_last_index_offset() ;
  ::uint64_t last_index_offset() const;
  void set_last_index_offset(::uint64_t value);

  private:
  ::uint64_t _internal_last_index_offset() const;
  void _internal_set_last_index_offset(::uint64_t value);

  public:
  // uint64 first_index_offset = 3;
  void clear_first_index_offset() ;
  ::uint64_t first_index_offset() const;
  void set_first_index_offset(::uint64_t value);

  private:
  ::uint64_t _internal_first_index_offset() const;
  void _internal_set_first_index_offset(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListInvoiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListInvoiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListInvoiceResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Invoice > invoices_;
    ::uint64_t last_index_offset_;
    ::uint64_t first_index_offset_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class HTLCAttempt final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.HTLCAttempt) */ {
 public:
  inline HTLCAttempt() : HTLCAttempt(nullptr) {}
  ~HTLCAttempt() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR HTLCAttempt(
      ::google::protobuf::internal::ConstantInitialized);

  inline HTLCAttempt(const HTLCAttempt& from) : HTLCAttempt(nullptr, from) {}
  inline HTLCAttempt(HTLCAttempt&& from) noexcept
      : HTLCAttempt(nullptr, std::move(from)) {}
  inline HTLCAttempt& operator=(const HTLCAttempt& from) {
    CopyFrom(from);
    return *this;
  }
  inline HTLCAttempt& operator=(HTLCAttempt&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HTLCAttempt& default_instance() {
    return *internal_default_instance();
  }
  static inline const HTLCAttempt* internal_default_instance() {
    return reinterpret_cast<const HTLCAttempt*>(
        &_HTLCAttempt_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 170;
  friend void swap(HTLCAttempt& a, HTLCAttempt& b) { a.Swap(&b); }
  inline void Swap(HTLCAttempt* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HTLCAttempt* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HTLCAttempt* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<HTLCAttempt>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HTLCAttempt& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const HTLCAttempt& from) { HTLCAttempt::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HTLCAttempt* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.HTLCAttempt"; }

 protected:
  explicit HTLCAttempt(::google::protobuf::Arena* arena);
  HTLCAttempt(::google::protobuf::Arena* arena, const HTLCAttempt& from);
  HTLCAttempt(::google::protobuf::Arena* arena, HTLCAttempt&& from) noexcept
      : HTLCAttempt(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using HTLCStatus = HTLCAttempt_HTLCStatus;
  static constexpr HTLCStatus IN_FLIGHT = HTLCAttempt_HTLCStatus_IN_FLIGHT;
  static constexpr HTLCStatus SUCCEEDED = HTLCAttempt_HTLCStatus_SUCCEEDED;
  static constexpr HTLCStatus FAILED = HTLCAttempt_HTLCStatus_FAILED;
  static inline bool HTLCStatus_IsValid(int value) {
    return HTLCAttempt_HTLCStatus_IsValid(value);
  }
  static constexpr HTLCStatus HTLCStatus_MIN = HTLCAttempt_HTLCStatus_HTLCStatus_MIN;
  static constexpr HTLCStatus HTLCStatus_MAX = HTLCAttempt_HTLCStatus_HTLCStatus_MAX;
  static constexpr int HTLCStatus_ARRAYSIZE = HTLCAttempt_HTLCStatus_HTLCStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* HTLCStatus_descriptor() {
    return HTLCAttempt_HTLCStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& HTLCStatus_Name(T value) {
    return HTLCAttempt_HTLCStatus_Name(value);
  }
  static inline bool HTLCStatus_Parse(absl::string_view name, HTLCStatus* value) {
    return HTLCAttempt_HTLCStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPreimageFieldNumber = 6,
    kRouteFieldNumber = 2,
    kFailureFieldNumber = 5,
    kAttemptTimeNsFieldNumber = 3,
    kResolveTimeNsFieldNumber = 4,
    kAttemptIdFieldNumber = 7,
    kStatusFieldNumber = 1,
  };
  // bytes preimage = 6;
  void clear_preimage() ;
  const std::string& preimage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_preimage(Arg_&& arg, Args_... args);
  std::string* mutable_preimage();
  PROTOBUF_NODISCARD std::string* release_preimage();
  void set_allocated_preimage(std::string* value);

  private:
  const std::string& _internal_preimage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_preimage(
      const std::string& value);
  std::string* _internal_mutable_preimage();

  public:
  // .lnrpc.Route route = 2;
  bool has_route() const;
  void clear_route() ;
  const ::lnrpc::Route& route() const;
  PROTOBUF_NODISCARD ::lnrpc::Route* release_route();
  ::lnrpc::Route* mutable_route();
  void set_allocated_route(::lnrpc::Route* value);
  void unsafe_arena_set_allocated_route(::lnrpc::Route* value);
  ::lnrpc::Route* unsafe_arena_release_route();

  private:
  const ::lnrpc::Route& _internal_route() const;
  ::lnrpc::Route* _internal_mutable_route();

  public:
  // .lnrpc.Failure failure = 5;
  bool has_failure() const;
  void clear_failure() ;
  const ::lnrpc::Failure& failure() const;
  PROTOBUF_NODISCARD ::lnrpc::Failure* release_failure();
  ::lnrpc::Failure* mutable_failure();
  void set_allocated_failure(::lnrpc::Failure* value);
  void unsafe_arena_set_allocated_failure(::lnrpc::Failure* value);
  ::lnrpc::Failure* unsafe_arena_release_failure();

  private:
  const ::lnrpc::Failure& _internal_failure() const;
  ::lnrpc::Failure* _internal_mutable_failure();

  public:
  // int64 attempt_time_ns = 3;
  void clear_attempt_time_ns() ;
  ::int64_t attempt_time_ns() const;
  void set_attempt_time_ns(::int64_t value);

  private:
  ::int64_t _internal_attempt_time_ns() const;
  void _internal_set_attempt_time_ns(::int64_t value);

  public:
  // int64 resolve_time_ns = 4;
  void clear_resolve_time_ns() ;
  ::int64_t resolve_time_ns() const;
  void set_resolve_time_ns(::int64_t value);

  private:
  ::int64_t _internal_resolve_time_ns() const;
  void _internal_set_resolve_time_ns(::int64_t value);

  public:
  // uint64 attempt_id = 7;
  void clear_attempt_id() ;
  ::uint64_t attempt_id() const;
  void set_attempt_id(::uint64_t value);

  private:
  ::uint64_t _internal_attempt_id() const;
  void _internal_set_attempt_id(::uint64_t value);

  public:
  // .lnrpc.HTLCAttempt.HTLCStatus status = 1;
  void clear_status() ;
  ::lnrpc::HTLCAttempt_HTLCStatus status() const;
  void set_status(::lnrpc::HTLCAttempt_HTLCStatus value);

  private:
  ::lnrpc::HTLCAttempt_HTLCStatus _internal_status() const;
  void _internal_set_status(::lnrpc::HTLCAttempt_HTLCStatus value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.HTLCAttempt)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_HTLCAttempt_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const HTLCAttempt& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr preimage_;
    ::lnrpc::Route* route_;
    ::lnrpc::Failure* failure_;
    ::int64_t attempt_time_ns_;
    ::int64_t resolve_time_ns_;
    ::uint64_t attempt_id_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class GraphTopologyUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.GraphTopologyUpdate) */ {
 public:
  inline GraphTopologyUpdate() : GraphTopologyUpdate(nullptr) {}
  ~GraphTopologyUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GraphTopologyUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline GraphTopologyUpdate(const GraphTopologyUpdate& from) : GraphTopologyUpdate(nullptr, from) {}
  inline GraphTopologyUpdate(GraphTopologyUpdate&& from) noexcept
      : GraphTopologyUpdate(nullptr, std::move(from)) {}
  inline GraphTopologyUpdate& operator=(const GraphTopologyUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline GraphTopologyUpdate& operator=(GraphTopologyUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GraphTopologyUpdate& default_instance() {
    return *internal_default_instance();
  }
  static inline const GraphTopologyUpdate* internal_default_instance() {
    return reinterpret_cast<const GraphTopologyUpdate*>(
        &_GraphTopologyUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 144;
  friend void swap(GraphTopologyUpdate& a, GraphTopologyUpdate& b) { a.Swap(&b); }
  inline void Swap(GraphTopologyUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GraphTopologyUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GraphTopologyUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GraphTopologyUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GraphTopologyUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GraphTopologyUpdate& from) { GraphTopologyUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GraphTopologyUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.GraphTopologyUpdate"; }

 protected:
  explicit GraphTopologyUpdate(::google::protobuf::Arena* arena);
  GraphTopologyUpdate(::google::protobuf::Arena* arena, const GraphTopologyUpdate& from);
  GraphTopologyUpdate(::google::protobuf::Arena* arena, GraphTopologyUpdate&& from) noexcept
      : GraphTopologyUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodeUpdatesFieldNumber = 1,
    kChannelUpdatesFieldNumber = 2,
    kClosedChansFieldNumber = 3,
  };
  // repeated .lnrpc.NodeUpdate node_updates = 1;
  int node_updates_size() const;
  private:
  int _internal_node_updates_size() const;

  public:
  void clear_node_updates() ;
  ::lnrpc::NodeUpdate* mutable_node_updates(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>* mutable_node_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>& _internal_node_updates() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>* _internal_mutable_node_updates();
  public:
  const ::lnrpc::NodeUpdate& node_updates(int index) const;
  ::lnrpc::NodeUpdate* add_node_updates();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>& node_updates() const;
  // repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;
  int channel_updates_size() const;
  private:
  int _internal_channel_updates_size() const;

  public:
  void clear_channel_updates() ;
  ::lnrpc::ChannelEdgeUpdate* mutable_channel_updates(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>* mutable_channel_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>& _internal_channel_updates() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>* _internal_mutable_channel_updates();
  public:
  const ::lnrpc::ChannelEdgeUpdate& channel_updates(int index) const;
  ::lnrpc::ChannelEdgeUpdate* add_channel_updates();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>& channel_updates() const;
  // repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;
  int closed_chans_size() const;
  private:
  int _internal_closed_chans_size() const;

  public:
  void clear_closed_chans() ;
  ::lnrpc::ClosedChannelUpdate* mutable_closed_chans(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>* mutable_closed_chans();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>& _internal_closed_chans() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>* _internal_mutable_closed_chans();
  public:
  const ::lnrpc::ClosedChannelUpdate& closed_chans(int index) const;
  ::lnrpc::ClosedChannelUpdate* add_closed_chans();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>& closed_chans() const;
  // @@protoc_insertion_point(class_scope:lnrpc.GraphTopologyUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GraphTopologyUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GraphTopologyUpdate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::NodeUpdate > node_updates_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelEdgeUpdate > channel_updates_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ClosedChannelUpdate > closed_chans_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FundingShim final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FundingShim) */ {
 public:
  inline FundingShim() : FundingShim(nullptr) {}
  ~FundingShim() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingShim(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingShim(const FundingShim& from) : FundingShim(nullptr, from) {}
  inline FundingShim(FundingShim&& from) noexcept
      : FundingShim(nullptr, std::move(from)) {}
  inline FundingShim& operator=(const FundingShim& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingShim& operator=(FundingShim&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingShim& default_instance() {
    return *internal_default_instance();
  }
  enum ShimCase {
    kChanPointShim = 1,
    kPsbtShim = 2,
    SHIM_NOT_SET = 0,
  };
  static inline const FundingShim* internal_default_instance() {
    return reinterpret_cast<const FundingShim*>(
        &_FundingShim_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 88;
  friend void swap(FundingShim& a, FundingShim& b) { a.Swap(&b); }
  inline void Swap(FundingShim* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingShim* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingShim* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundingShim>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingShim& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingShim& from) { FundingShim::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundingShim* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FundingShim"; }

 protected:
  explicit FundingShim(::google::protobuf::Arena* arena);
  FundingShim(::google::protobuf::Arena* arena, const FundingShim& from);
  FundingShim(::google::protobuf::Arena* arena, FundingShim&& from) noexcept
      : FundingShim(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanPointShimFieldNumber = 1,
    kPsbtShimFieldNumber = 2,
  };
  // .lnrpc.ChanPointShim chan_point_shim = 1;
  bool has_chan_point_shim() const;
  private:
  bool _internal_has_chan_point_shim() const;

  public:
  void clear_chan_point_shim() ;
  const ::lnrpc::ChanPointShim& chan_point_shim() const;
  PROTOBUF_NODISCARD ::lnrpc::ChanPointShim* release_chan_point_shim();
  ::lnrpc::ChanPointShim* mutable_chan_point_shim();
  void set_allocated_chan_point_shim(::lnrpc::ChanPointShim* value);
  void unsafe_arena_set_allocated_chan_point_shim(::lnrpc::ChanPointShim* value);
  ::lnrpc::ChanPointShim* unsafe_arena_release_chan_point_shim();

  private:
  const ::lnrpc::ChanPointShim& _internal_chan_point_shim() const;
  ::lnrpc::ChanPointShim* _internal_mutable_chan_point_shim();

  public:
  // .lnrpc.PsbtShim psbt_shim = 2;
  bool has_psbt_shim() const;
  private:
  bool _internal_has_psbt_shim() const;

  public:
  void clear_psbt_shim() ;
  const ::lnrpc::PsbtShim& psbt_shim() const;
  PROTOBUF_NODISCARD ::lnrpc::PsbtShim* release_psbt_shim();
  ::lnrpc::PsbtShim* mutable_psbt_shim();
  void set_allocated_psbt_shim(::lnrpc::PsbtShim* value);
  void unsafe_arena_set_allocated_psbt_shim(::lnrpc::PsbtShim* value);
  ::lnrpc::PsbtShim* unsafe_arena_release_psbt_shim();

  private:
  const ::lnrpc::PsbtShim& _internal_psbt_shim() const;
  ::lnrpc::PsbtShim* _internal_mutable_psbt_shim();

  public:
  void clear_shim();
  ShimCase shim_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.FundingShim)
 private:
  class _Internal;
  void set_has_chan_point_shim();
  void set_has_psbt_shim();
  inline bool has_shim() const;
  inline void clear_has_shim();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundingShim_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingShim& from_msg);
    union ShimUnion {
      constexpr ShimUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::ChanPointShim* chan_point_shim_;
      ::lnrpc::PsbtShim* psbt_shim_;
    } shim_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ClosedChannelsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ClosedChannelsResponse) */ {
 public:
  inline ClosedChannelsResponse() : ClosedChannelsResponse(nullptr) {}
  ~ClosedChannelsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ClosedChannelsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ClosedChannelsResponse(const ClosedChannelsResponse& from) : ClosedChannelsResponse(nullptr, from) {}
  inline ClosedChannelsResponse(ClosedChannelsResponse&& from) noexcept
      : ClosedChannelsResponse(nullptr, std::move(from)) {}
  inline ClosedChannelsResponse& operator=(const ClosedChannelsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClosedChannelsResponse& operator=(ClosedChannelsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ClosedChannelsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ClosedChannelsResponse* internal_default_instance() {
    return reinterpret_cast<const ClosedChannelsResponse*>(
        &_ClosedChannelsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(ClosedChannelsResponse& a, ClosedChannelsResponse& b) { a.Swap(&b); }
  inline void Swap(ClosedChannelsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClosedChannelsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ClosedChannelsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ClosedChannelsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ClosedChannelsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ClosedChannelsResponse& from) { ClosedChannelsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ClosedChannelsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ClosedChannelsResponse"; }

 protected:
  explicit ClosedChannelsResponse(::google::protobuf::Arena* arena);
  ClosedChannelsResponse(::google::protobuf::Arena* arena, const ClosedChannelsResponse& from);
  ClosedChannelsResponse(::google::protobuf::Arena* arena, ClosedChannelsResponse&& from) noexcept
      : ClosedChannelsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelsFieldNumber = 1,
  };
  // repeated .lnrpc.ChannelCloseSummary channels = 1;
  int channels_size() const;
  private:
  int _internal_channels_size() const;

  public:
  void clear_channels() ;
  ::lnrpc::ChannelCloseSummary* mutable_channels(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>* mutable_channels();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>& _internal_channels() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>* _internal_mutable_channels();
  public:
  const ::lnrpc::ChannelCloseSummary& channels(int index) const;
  ::lnrpc::ChannelCloseSummary* add_channels();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>& channels() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ClosedChannelsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ClosedChannelsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ClosedChannelsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelCloseSummary > channels_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelGraph final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelGraph) */ {
 public:
  inline ChannelGraph() : ChannelGraph(nullptr) {}
  ~ChannelGraph() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelGraph(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelGraph(const ChannelGraph& from) : ChannelGraph(nullptr, from) {}
  inline ChannelGraph(ChannelGraph&& from) noexcept
      : ChannelGraph(nullptr, std::move(from)) {}
  inline ChannelGraph& operator=(const ChannelGraph& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelGraph& operator=(ChannelGraph&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelGraph& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChannelGraph* internal_default_instance() {
    return reinterpret_cast<const ChannelGraph*>(
        &_ChannelGraph_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 133;
  friend void swap(ChannelGraph& a, ChannelGraph& b) { a.Swap(&b); }
  inline void Swap(ChannelGraph* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelGraph* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelGraph* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelGraph>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelGraph& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelGraph& from) { ChannelGraph::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelGraph* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelGraph"; }

 protected:
  explicit ChannelGraph(::google::protobuf::Arena* arena);
  ChannelGraph(::google::protobuf::Arena* arena, const ChannelGraph& from);
  ChannelGraph(::google::protobuf::Arena* arena, ChannelGraph&& from) noexcept
      : ChannelGraph(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNodesFieldNumber = 1,
    kEdgesFieldNumber = 2,
  };
  // repeated .lnrpc.LightningNode nodes = 1;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  ::lnrpc::LightningNode* mutable_nodes(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>* mutable_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>& _internal_nodes() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>* _internal_mutable_nodes();
  public:
  const ::lnrpc::LightningNode& nodes(int index) const;
  ::lnrpc::LightningNode* add_nodes();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>& nodes() const;
  // repeated .lnrpc.ChannelEdge edges = 2;
  int edges_size() const;
  private:
  int _internal_edges_size() const;

  public:
  void clear_edges() ;
  ::lnrpc::ChannelEdge* mutable_edges(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>* mutable_edges();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>& _internal_edges() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>* _internal_mutable_edges();
  public:
  const ::lnrpc::ChannelEdge& edges(int index) const;
  ::lnrpc::ChannelEdge* add_edges();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>& edges() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelGraph)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelGraph_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelGraph& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::LightningNode > nodes_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::ChannelEdge > edges_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChannelEventUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChannelEventUpdate) */ {
 public:
  inline ChannelEventUpdate() : ChannelEventUpdate(nullptr) {}
  ~ChannelEventUpdate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChannelEventUpdate(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChannelEventUpdate(const ChannelEventUpdate& from) : ChannelEventUpdate(nullptr, from) {}
  inline ChannelEventUpdate(ChannelEventUpdate&& from) noexcept
      : ChannelEventUpdate(nullptr, std::move(from)) {}
  inline ChannelEventUpdate& operator=(const ChannelEventUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChannelEventUpdate& operator=(ChannelEventUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChannelEventUpdate& default_instance() {
    return *internal_default_instance();
  }
  enum ChannelCase {
    kOpenChannel = 1,
    kClosedChannel = 2,
    kActiveChannel = 3,
    kInactiveChannel = 4,
    kPendingOpenChannel = 6,
    kFullyResolvedChannel = 7,
    CHANNEL_NOT_SET = 0,
  };
  static inline const ChannelEventUpdate* internal_default_instance() {
    return reinterpret_cast<const ChannelEventUpdate*>(
        &_ChannelEventUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 104;
  friend void swap(ChannelEventUpdate& a, ChannelEventUpdate& b) { a.Swap(&b); }
  inline void Swap(ChannelEventUpdate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChannelEventUpdate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChannelEventUpdate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChannelEventUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChannelEventUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChannelEventUpdate& from) { ChannelEventUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChannelEventUpdate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChannelEventUpdate"; }

 protected:
  explicit ChannelEventUpdate(::google::protobuf::Arena* arena);
  ChannelEventUpdate(::google::protobuf::Arena* arena, const ChannelEventUpdate& from);
  ChannelEventUpdate(::google::protobuf::Arena* arena, ChannelEventUpdate&& from) noexcept
      : ChannelEventUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using UpdateType = ChannelEventUpdate_UpdateType;
  static constexpr UpdateType OPEN_CHANNEL = ChannelEventUpdate_UpdateType_OPEN_CHANNEL;
  static constexpr UpdateType CLOSED_CHANNEL = ChannelEventUpdate_UpdateType_CLOSED_CHANNEL;
  static constexpr UpdateType ACTIVE_CHANNEL = ChannelEventUpdate_UpdateType_ACTIVE_CHANNEL;
  static constexpr UpdateType INACTIVE_CHANNEL = ChannelEventUpdate_UpdateType_INACTIVE_CHANNEL;
  static constexpr UpdateType PENDING_OPEN_CHANNEL = ChannelEventUpdate_UpdateType_PENDING_OPEN_CHANNEL;
  static constexpr UpdateType FULLY_RESOLVED_CHANNEL = ChannelEventUpdate_UpdateType_FULLY_RESOLVED_CHANNEL;
  static inline bool UpdateType_IsValid(int value) {
    return ChannelEventUpdate_UpdateType_IsValid(value);
  }
  static constexpr UpdateType UpdateType_MIN = ChannelEventUpdate_UpdateType_UpdateType_MIN;
  static constexpr UpdateType UpdateType_MAX = ChannelEventUpdate_UpdateType_UpdateType_MAX;
  static constexpr int UpdateType_ARRAYSIZE = ChannelEventUpdate_UpdateType_UpdateType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* UpdateType_descriptor() {
    return ChannelEventUpdate_UpdateType_descriptor();
  }
  template <typename T>
  static inline const std::string& UpdateType_Name(T value) {
    return ChannelEventUpdate_UpdateType_Name(value);
  }
  static inline bool UpdateType_Parse(absl::string_view name, UpdateType* value) {
    return ChannelEventUpdate_UpdateType_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kTypeFieldNumber = 5,
    kOpenChannelFieldNumber = 1,
    kClosedChannelFieldNumber = 2,
    kActiveChannelFieldNumber = 3,
    kInactiveChannelFieldNumber = 4,
    kPendingOpenChannelFieldNumber = 6,
    kFullyResolvedChannelFieldNumber = 7,
  };
  // .lnrpc.ChannelEventUpdate.UpdateType type = 5;
  void clear_type() ;
  ::lnrpc::ChannelEventUpdate_UpdateType type() const;
  void set_type(::lnrpc::ChannelEventUpdate_UpdateType value);

  private:
  ::lnrpc::ChannelEventUpdate_UpdateType _internal_type() const;
  void _internal_set_type(::lnrpc::ChannelEventUpdate_UpdateType value);

  public:
  // .lnrpc.Channel open_channel = 1;
  bool has_open_channel() const;
  private:
  bool _internal_has_open_channel() const;

  public:
  void clear_open_channel() ;
  const ::lnrpc::Channel& open_channel() const;
  PROTOBUF_NODISCARD ::lnrpc::Channel* release_open_channel();
  ::lnrpc::Channel* mutable_open_channel();
  void set_allocated_open_channel(::lnrpc::Channel* value);
  void unsafe_arena_set_allocated_open_channel(::lnrpc::Channel* value);
  ::lnrpc::Channel* unsafe_arena_release_open_channel();

  private:
  const ::lnrpc::Channel& _internal_open_channel() const;
  ::lnrpc::Channel* _internal_mutable_open_channel();

  public:
  // .lnrpc.ChannelCloseSummary closed_channel = 2;
  bool has_closed_channel() const;
  private:
  bool _internal_has_closed_channel() const;

  public:
  void clear_closed_channel() ;
  const ::lnrpc::ChannelCloseSummary& closed_channel() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelCloseSummary* release_closed_channel();
  ::lnrpc::ChannelCloseSummary* mutable_closed_channel();
  void set_allocated_closed_channel(::lnrpc::ChannelCloseSummary* value);
  void unsafe_arena_set_allocated_closed_channel(::lnrpc::ChannelCloseSummary* value);
  ::lnrpc::ChannelCloseSummary* unsafe_arena_release_closed_channel();

  private:
  const ::lnrpc::ChannelCloseSummary& _internal_closed_channel() const;
  ::lnrpc::ChannelCloseSummary* _internal_mutable_closed_channel();

  public:
  // .lnrpc.ChannelPoint active_channel = 3;
  bool has_active_channel() const;
  private:
  bool _internal_has_active_channel() const;

  public:
  void clear_active_channel() ;
  const ::lnrpc::ChannelPoint& active_channel() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_active_channel();
  ::lnrpc::ChannelPoint* mutable_active_channel();
  void set_allocated_active_channel(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_active_channel(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_active_channel();

  private:
  const ::lnrpc::ChannelPoint& _internal_active_channel() const;
  ::lnrpc::ChannelPoint* _internal_mutable_active_channel();

  public:
  // .lnrpc.ChannelPoint inactive_channel = 4;
  bool has_inactive_channel() const;
  private:
  bool _internal_has_inactive_channel() const;

  public:
  void clear_inactive_channel() ;
  const ::lnrpc::ChannelPoint& inactive_channel() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_inactive_channel();
  ::lnrpc::ChannelPoint* mutable_inactive_channel();
  void set_allocated_inactive_channel(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_inactive_channel(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_inactive_channel();

  private:
  const ::lnrpc::ChannelPoint& _internal_inactive_channel() const;
  ::lnrpc::ChannelPoint* _internal_mutable_inactive_channel();

  public:
  // .lnrpc.PendingUpdate pending_open_channel = 6;
  bool has_pending_open_channel() const;
  private:
  bool _internal_has_pending_open_channel() const;

  public:
  void clear_pending_open_channel() ;
  const ::lnrpc::PendingUpdate& pending_open_channel() const;
  PROTOBUF_NODISCARD ::lnrpc::PendingUpdate* release_pending_open_channel();
  ::lnrpc::PendingUpdate* mutable_pending_open_channel();
  void set_allocated_pending_open_channel(::lnrpc::PendingUpdate* value);
  void unsafe_arena_set_allocated_pending_open_channel(::lnrpc::PendingUpdate* value);
  ::lnrpc::PendingUpdate* unsafe_arena_release_pending_open_channel();

  private:
  const ::lnrpc::PendingUpdate& _internal_pending_open_channel() const;
  ::lnrpc::PendingUpdate* _internal_mutable_pending_open_channel();

  public:
  // .lnrpc.ChannelPoint fully_resolved_channel = 7;
  bool has_fully_resolved_channel() const;
  private:
  bool _internal_has_fully_resolved_channel() const;

  public:
  void clear_fully_resolved_channel() ;
  const ::lnrpc::ChannelPoint& fully_resolved_channel() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_fully_resolved_channel();
  ::lnrpc::ChannelPoint* mutable_fully_resolved_channel();
  void set_allocated_fully_resolved_channel(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_fully_resolved_channel(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_fully_resolved_channel();

  private:
  const ::lnrpc::ChannelPoint& _internal_fully_resolved_channel() const;
  ::lnrpc::ChannelPoint* _internal_mutable_fully_resolved_channel();

  public:
  void clear_channel();
  ChannelCase channel_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.ChannelEventUpdate)
 private:
  class _Internal;
  void set_has_open_channel();
  void set_has_closed_channel();
  void set_has_active_channel();
  void set_has_inactive_channel();
  void set_has_pending_open_channel();
  void set_has_fully_resolved_channel();
  inline bool has_channel() const;
  inline void clear_has_channel();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 7, 6,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChannelEventUpdate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChannelEventUpdate& from_msg);
    int type_;
    union ChannelUnion {
      constexpr ChannelUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::Channel* open_channel_;
      ::lnrpc::ChannelCloseSummary* closed_channel_;
      ::lnrpc::ChannelPoint* active_channel_;
      ::lnrpc::ChannelPoint* inactive_channel_;
      ::lnrpc::PendingUpdate* pending_open_channel_;
      ::lnrpc::ChannelPoint* fully_resolved_channel_;
    } channel_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ChanBackupSnapshot final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ChanBackupSnapshot) */ {
 public:
  inline ChanBackupSnapshot() : ChanBackupSnapshot(nullptr) {}
  ~ChanBackupSnapshot() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ChanBackupSnapshot(
      ::google::protobuf::internal::ConstantInitialized);

  inline ChanBackupSnapshot(const ChanBackupSnapshot& from) : ChanBackupSnapshot(nullptr, from) {}
  inline ChanBackupSnapshot(ChanBackupSnapshot&& from) noexcept
      : ChanBackupSnapshot(nullptr, std::move(from)) {}
  inline ChanBackupSnapshot& operator=(const ChanBackupSnapshot& from) {
    CopyFrom(from);
    return *this;
  }
  inline ChanBackupSnapshot& operator=(ChanBackupSnapshot&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ChanBackupSnapshot& default_instance() {
    return *internal_default_instance();
  }
  static inline const ChanBackupSnapshot* internal_default_instance() {
    return reinterpret_cast<const ChanBackupSnapshot*>(
        &_ChanBackupSnapshot_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 199;
  friend void swap(ChanBackupSnapshot& a, ChanBackupSnapshot& b) { a.Swap(&b); }
  inline void Swap(ChanBackupSnapshot* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ChanBackupSnapshot* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ChanBackupSnapshot* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ChanBackupSnapshot>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ChanBackupSnapshot& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ChanBackupSnapshot& from) { ChanBackupSnapshot::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ChanBackupSnapshot* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ChanBackupSnapshot"; }

 protected:
  explicit ChanBackupSnapshot(::google::protobuf::Arena* arena);
  ChanBackupSnapshot(::google::protobuf::Arena* arena, const ChanBackupSnapshot& from);
  ChanBackupSnapshot(::google::protobuf::Arena* arena, ChanBackupSnapshot&& from) noexcept
      : ChanBackupSnapshot(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSingleChanBackupsFieldNumber = 1,
    kMultiChanBackupFieldNumber = 2,
  };
  // .lnrpc.ChannelBackups single_chan_backups = 1;
  bool has_single_chan_backups() const;
  void clear_single_chan_backups() ;
  const ::lnrpc::ChannelBackups& single_chan_backups() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelBackups* release_single_chan_backups();
  ::lnrpc::ChannelBackups* mutable_single_chan_backups();
  void set_allocated_single_chan_backups(::lnrpc::ChannelBackups* value);
  void unsafe_arena_set_allocated_single_chan_backups(::lnrpc::ChannelBackups* value);
  ::lnrpc::ChannelBackups* unsafe_arena_release_single_chan_backups();

  private:
  const ::lnrpc::ChannelBackups& _internal_single_chan_backups() const;
  ::lnrpc::ChannelBackups* _internal_mutable_single_chan_backups();

  public:
  // .lnrpc.MultiChanBackup multi_chan_backup = 2;
  bool has_multi_chan_backup() const;
  void clear_multi_chan_backup() ;
  const ::lnrpc::MultiChanBackup& multi_chan_backup() const;
  PROTOBUF_NODISCARD ::lnrpc::MultiChanBackup* release_multi_chan_backup();
  ::lnrpc::MultiChanBackup* mutable_multi_chan_backup();
  void set_allocated_multi_chan_backup(::lnrpc::MultiChanBackup* value);
  void unsafe_arena_set_allocated_multi_chan_backup(::lnrpc::MultiChanBackup* value);
  ::lnrpc::MultiChanBackup* unsafe_arena_release_multi_chan_backup();

  private:
  const ::lnrpc::MultiChanBackup& _internal_multi_chan_backup() const;
  ::lnrpc::MultiChanBackup* _internal_mutable_multi_chan_backup();

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ChanBackupSnapshot)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ChanBackupSnapshot_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ChanBackupSnapshot& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::ChannelBackups* single_chan_backups_;
    ::lnrpc::MultiChanBackup* multi_chan_backup_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class Payment final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.Payment) */ {
 public:
  inline Payment() : Payment(nullptr) {}
  ~Payment() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Payment(
      ::google::protobuf::internal::ConstantInitialized);

  inline Payment(const Payment& from) : Payment(nullptr, from) {}
  inline Payment(Payment&& from) noexcept
      : Payment(nullptr, std::move(from)) {}
  inline Payment& operator=(const Payment& from) {
    CopyFrom(from);
    return *this;
  }
  inline Payment& operator=(Payment&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Payment& default_instance() {
    return *internal_default_instance();
  }
  static inline const Payment* internal_default_instance() {
    return reinterpret_cast<const Payment*>(
        &_Payment_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 169;
  friend void swap(Payment& a, Payment& b) { a.Swap(&b); }
  inline void Swap(Payment* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Payment* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Payment* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Payment>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Payment& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Payment& from) { Payment::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Payment* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.Payment"; }

 protected:
  explicit Payment(::google::protobuf::Arena* arena);
  Payment(::google::protobuf::Arena* arena, const Payment& from);
  Payment(::google::protobuf::Arena* arena, Payment&& from) noexcept
      : Payment(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using PaymentStatus = Payment_PaymentStatus;
  [[deprecated]] static constexpr PaymentStatus UNKNOWN = Payment_PaymentStatus_UNKNOWN;
  static constexpr PaymentStatus IN_FLIGHT = Payment_PaymentStatus_IN_FLIGHT;
  static constexpr PaymentStatus SUCCEEDED = Payment_PaymentStatus_SUCCEEDED;
  static constexpr PaymentStatus FAILED = Payment_PaymentStatus_FAILED;
  static constexpr PaymentStatus INITIATED = Payment_PaymentStatus_INITIATED;
  static inline bool PaymentStatus_IsValid(int value) {
    return Payment_PaymentStatus_IsValid(value);
  }
  static constexpr PaymentStatus PaymentStatus_MIN = Payment_PaymentStatus_PaymentStatus_MIN;
  static constexpr PaymentStatus PaymentStatus_MAX = Payment_PaymentStatus_PaymentStatus_MAX;
  static constexpr int PaymentStatus_ARRAYSIZE = Payment_PaymentStatus_PaymentStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* PaymentStatus_descriptor() {
    return Payment_PaymentStatus_descriptor();
  }
  template <typename T>
  static inline const std::string& PaymentStatus_Name(T value) {
    return Payment_PaymentStatus_Name(value);
  }
  static inline bool PaymentStatus_Parse(absl::string_view name, PaymentStatus* value) {
    return Payment_PaymentStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 4,
    kHtlcsFieldNumber = 14,
    kFirstHopCustomRecordsFieldNumber = 17,
    kPaymentHashFieldNumber = 1,
    kPaymentPreimageFieldNumber = 6,
    kPaymentRequestFieldNumber = 9,
    kValueFieldNumber = 2,
    kCreationDateFieldNumber = 3,
    kFeeFieldNumber = 5,
    kValueSatFieldNumber = 7,
    kValueMsatFieldNumber = 8,
    kFeeSatFieldNumber = 11,
    kFeeMsatFieldNumber = 12,
    kCreationTimeNsFieldNumber = 13,
    kStatusFieldNumber = 10,
    kFailureReasonFieldNumber = 16,
    kPaymentIndexFieldNumber = 15,
  };
  // repeated string path = 4 [deprecated = true];
  [[deprecated]]  int path_size() const;
  private:
  int _internal_path_size() const;

  public:
  [[deprecated]]  void clear_path() ;
  [[deprecated]] const std::string& path(int index) const;
  [[deprecated]] std::string* mutable_path(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_path(int index, Arg_&& value, Args_... args);
  [[deprecated]] std::string* add_path();
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void add_path(Arg_&& value, Args_... args);
  [[deprecated]] const ::google::protobuf::RepeatedPtrField<std::string>& path() const;
  [[deprecated]] ::google::protobuf::RepeatedPtrField<std::string>* mutable_path();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_path() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_path();

  public:
  // repeated .lnrpc.HTLCAttempt htlcs = 14;
  int htlcs_size() const;
  private:
  int _internal_htlcs_size() const;

  public:
  void clear_htlcs() ;
  ::lnrpc::HTLCAttempt* mutable_htlcs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>* mutable_htlcs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>& _internal_htlcs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>* _internal_mutable_htlcs();
  public:
  const ::lnrpc::HTLCAttempt& htlcs(int index) const;
  ::lnrpc::HTLCAttempt* add_htlcs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>& htlcs() const;
  // map<uint64, bytes> first_hop_custom_records = 17;
  int first_hop_custom_records_size() const;
  private:
  int _internal_first_hop_custom_records_size() const;

  public:
  void clear_first_hop_custom_records() ;
  const ::google::protobuf::Map<::uint64_t, std::string>& first_hop_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* mutable_first_hop_custom_records();

  private:
  const ::google::protobuf::Map<::uint64_t, std::string>& _internal_first_hop_custom_records() const;
  ::google::protobuf::Map<::uint64_t, std::string>* _internal_mutable_first_hop_custom_records();

  public:
  // string payment_hash = 1;
  void clear_payment_hash() ;
  const std::string& payment_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_hash(Arg_&& arg, Args_... args);
  std::string* mutable_payment_hash();
  PROTOBUF_NODISCARD std::string* release_payment_hash();
  void set_allocated_payment_hash(std::string* value);

  private:
  const std::string& _internal_payment_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_hash(
      const std::string& value);
  std::string* _internal_mutable_payment_hash();

  public:
  // string payment_preimage = 6;
  void clear_payment_preimage() ;
  const std::string& payment_preimage() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_preimage(Arg_&& arg, Args_... args);
  std::string* mutable_payment_preimage();
  PROTOBUF_NODISCARD std::string* release_payment_preimage();
  void set_allocated_payment_preimage(std::string* value);

  private:
  const std::string& _internal_payment_preimage() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_preimage(
      const std::string& value);
  std::string* _internal_mutable_payment_preimage();

  public:
  // string payment_request = 9;
  void clear_payment_request() ;
  const std::string& payment_request() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payment_request(Arg_&& arg, Args_... args);
  std::string* mutable_payment_request();
  PROTOBUF_NODISCARD std::string* release_payment_request();
  void set_allocated_payment_request(std::string* value);

  private:
  const std::string& _internal_payment_request() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payment_request(
      const std::string& value);
  std::string* _internal_mutable_payment_request();

  public:
  // int64 value = 2 [deprecated = true];
  [[deprecated]]  void clear_value() ;
  [[deprecated]] ::int64_t value() const;
  [[deprecated]] void set_value(::int64_t value);

  private:
  ::int64_t _internal_value() const;
  void _internal_set_value(::int64_t value);

  public:
  // int64 creation_date = 3 [deprecated = true];
  [[deprecated]]  void clear_creation_date() ;
  [[deprecated]] ::int64_t creation_date() const;
  [[deprecated]] void set_creation_date(::int64_t value);

  private:
  ::int64_t _internal_creation_date() const;
  void _internal_set_creation_date(::int64_t value);

  public:
  // int64 fee = 5 [deprecated = true];
  [[deprecated]]  void clear_fee() ;
  [[deprecated]] ::int64_t fee() const;
  [[deprecated]] void set_fee(::int64_t value);

  private:
  ::int64_t _internal_fee() const;
  void _internal_set_fee(::int64_t value);

  public:
  // int64 value_sat = 7;
  void clear_value_sat() ;
  ::int64_t value_sat() const;
  void set_value_sat(::int64_t value);

  private:
  ::int64_t _internal_value_sat() const;
  void _internal_set_value_sat(::int64_t value);

  public:
  // int64 value_msat = 8;
  void clear_value_msat() ;
  ::int64_t value_msat() const;
  void set_value_msat(::int64_t value);

  private:
  ::int64_t _internal_value_msat() const;
  void _internal_set_value_msat(::int64_t value);

  public:
  // int64 fee_sat = 11;
  void clear_fee_sat() ;
  ::int64_t fee_sat() const;
  void set_fee_sat(::int64_t value);

  private:
  ::int64_t _internal_fee_sat() const;
  void _internal_set_fee_sat(::int64_t value);

  public:
  // int64 fee_msat = 12;
  void clear_fee_msat() ;
  ::int64_t fee_msat() const;
  void set_fee_msat(::int64_t value);

  private:
  ::int64_t _internal_fee_msat() const;
  void _internal_set_fee_msat(::int64_t value);

  public:
  // int64 creation_time_ns = 13;
  void clear_creation_time_ns() ;
  ::int64_t creation_time_ns() const;
  void set_creation_time_ns(::int64_t value);

  private:
  ::int64_t _internal_creation_time_ns() const;
  void _internal_set_creation_time_ns(::int64_t value);

  public:
  // .lnrpc.Payment.PaymentStatus status = 10;
  void clear_status() ;
  ::lnrpc::Payment_PaymentStatus status() const;
  void set_status(::lnrpc::Payment_PaymentStatus value);

  private:
  ::lnrpc::Payment_PaymentStatus _internal_status() const;
  void _internal_set_status(::lnrpc::Payment_PaymentStatus value);

  public:
  // .lnrpc.PaymentFailureReason failure_reason = 16;
  void clear_failure_reason() ;
  ::lnrpc::PaymentFailureReason failure_reason() const;
  void set_failure_reason(::lnrpc::PaymentFailureReason value);

  private:
  ::lnrpc::PaymentFailureReason _internal_failure_reason() const;
  void _internal_set_failure_reason(::lnrpc::PaymentFailureReason value);

  public:
  // uint64 payment_index = 15;
  void clear_payment_index() ;
  ::uint64_t payment_index() const;
  void set_payment_index(::uint64_t value);

  private:
  ::uint64_t _internal_payment_index() const;
  void _internal_set_payment_index(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.Payment)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 17, 2,
      85, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Payment_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Payment& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> path_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::HTLCAttempt > htlcs_;
    ::google::protobuf::internal::MapField<Payment_FirstHopCustomRecordsEntry_DoNotUse, ::uint64_t, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        first_hop_custom_records_;
    ::google::protobuf::internal::ArenaStringPtr payment_hash_;
    ::google::protobuf::internal::ArenaStringPtr payment_preimage_;
    ::google::protobuf::internal::ArenaStringPtr payment_request_;
    ::int64_t value_;
    ::int64_t creation_date_;
    ::int64_t fee_;
    ::int64_t value_sat_;
    ::int64_t value_msat_;
    ::int64_t fee_sat_;
    ::int64_t fee_msat_;
    ::int64_t creation_time_ns_;
    int status_;
    int failure_reason_;
    ::uint64_t payment_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class OpenChannelRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.OpenChannelRequest) */ {
 public:
  inline OpenChannelRequest() : OpenChannelRequest(nullptr) {}
  ~OpenChannelRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OpenChannelRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline OpenChannelRequest(const OpenChannelRequest& from) : OpenChannelRequest(nullptr, from) {}
  inline OpenChannelRequest(OpenChannelRequest&& from) noexcept
      : OpenChannelRequest(nullptr, std::move(from)) {}
  inline OpenChannelRequest& operator=(const OpenChannelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenChannelRequest& operator=(OpenChannelRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OpenChannelRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const OpenChannelRequest* internal_default_instance() {
    return reinterpret_cast<const OpenChannelRequest*>(
        &_OpenChannelRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 82;
  friend void swap(OpenChannelRequest& a, OpenChannelRequest& b) { a.Swap(&b); }
  inline void Swap(OpenChannelRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OpenChannelRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OpenChannelRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<OpenChannelRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OpenChannelRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OpenChannelRequest& from) { OpenChannelRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OpenChannelRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.OpenChannelRequest"; }

 protected:
  explicit OpenChannelRequest(::google::protobuf::Arena* arena);
  OpenChannelRequest(::google::protobuf::Arena* arena, const OpenChannelRequest& from);
  OpenChannelRequest(::google::protobuf::Arena* arena, OpenChannelRequest&& from) noexcept
      : OpenChannelRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutpointsFieldNumber = 28,
    kNodePubkeyFieldNumber = 2,
    kNodePubkeyStringFieldNumber = 3,
    kCloseAddressFieldNumber = 13,
    kMemoFieldNumber = 27,
    kFundingShimFieldNumber = 14,
    kSatPerVbyteFieldNumber = 1,
    kLocalFundingAmountFieldNumber = 4,
    kPushSatFieldNumber = 5,
    kSatPerByteFieldNumber = 7,
    kTargetConfFieldNumber = 6,
    kRemoteCsvDelayFieldNumber = 10,
    kMinHtlcMsatFieldNumber = 9,
    kMinConfsFieldNumber = 11,
    kPrivateFieldNumber = 8,
    kSpendUnconfirmedFieldNumber = 12,
    kZeroConfFieldNumber = 19,
    kScidAliasFieldNumber = 20,
    kRemoteMaxValueInFlightMsatFieldNumber = 15,
    kRemoteMaxHtlcsFieldNumber = 16,
    kMaxLocalCsvFieldNumber = 17,
    kBaseFeeFieldNumber = 21,
    kFeeRateFieldNumber = 22,
    kCommitmentTypeFieldNumber = 18,
    kUseBaseFeeFieldNumber = 23,
    kUseFeeRateFieldNumber = 24,
    kFundMaxFieldNumber = 26,
    kRemoteChanReserveSatFieldNumber = 25,
  };
  // repeated .lnrpc.OutPoint outpoints = 28;
  int outpoints_size() const;
  private:
  int _internal_outpoints_size() const;

  public:
  void clear_outpoints() ;
  ::lnrpc::OutPoint* mutable_outpoints(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* mutable_outpoints();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& _internal_outpoints() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* _internal_mutable_outpoints();
  public:
  const ::lnrpc::OutPoint& outpoints(int index) const;
  ::lnrpc::OutPoint* add_outpoints();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& outpoints() const;
  // bytes node_pubkey = 2;
  void clear_node_pubkey() ;
  const std::string& node_pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_node_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_node_pubkey();
  PROTOBUF_NODISCARD std::string* release_node_pubkey();
  void set_allocated_node_pubkey(std::string* value);

  private:
  const std::string& _internal_node_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_pubkey(
      const std::string& value);
  std::string* _internal_mutable_node_pubkey();

  public:
  // string node_pubkey_string = 3 [deprecated = true];
  [[deprecated]]  void clear_node_pubkey_string() ;
  [[deprecated]] const std::string& node_pubkey_string() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  [[deprecated]] void set_node_pubkey_string(Arg_&& arg, Args_... args);
  [[deprecated]] std::string* mutable_node_pubkey_string();
  [[deprecated]] PROTOBUF_NODISCARD std::string* release_node_pubkey_string();
  [[deprecated]] void set_allocated_node_pubkey_string(std::string* value);

  private:
  const std::string& _internal_node_pubkey_string() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_node_pubkey_string(
      const std::string& value);
  std::string* _internal_mutable_node_pubkey_string();

  public:
  // string close_address = 13;
  void clear_close_address() ;
  const std::string& close_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_close_address(Arg_&& arg, Args_... args);
  std::string* mutable_close_address();
  PROTOBUF_NODISCARD std::string* release_close_address();
  void set_allocated_close_address(std::string* value);

  private:
  const std::string& _internal_close_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_close_address(
      const std::string& value);
  std::string* _internal_mutable_close_address();

  public:
  // string memo = 27;
  void clear_memo() ;
  const std::string& memo() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_memo(Arg_&& arg, Args_... args);
  std::string* mutable_memo();
  PROTOBUF_NODISCARD std::string* release_memo();
  void set_allocated_memo(std::string* value);

  private:
  const std::string& _internal_memo() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_memo(
      const std::string& value);
  std::string* _internal_mutable_memo();

  public:
  // .lnrpc.FundingShim funding_shim = 14;
  bool has_funding_shim() const;
  void clear_funding_shim() ;
  const ::lnrpc::FundingShim& funding_shim() const;
  PROTOBUF_NODISCARD ::lnrpc::FundingShim* release_funding_shim();
  ::lnrpc::FundingShim* mutable_funding_shim();
  void set_allocated_funding_shim(::lnrpc::FundingShim* value);
  void unsafe_arena_set_allocated_funding_shim(::lnrpc::FundingShim* value);
  ::lnrpc::FundingShim* unsafe_arena_release_funding_shim();

  private:
  const ::lnrpc::FundingShim& _internal_funding_shim() const;
  ::lnrpc::FundingShim* _internal_mutable_funding_shim();

  public:
  // uint64 sat_per_vbyte = 1;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // int64 local_funding_amount = 4;
  void clear_local_funding_amount() ;
  ::int64_t local_funding_amount() const;
  void set_local_funding_amount(::int64_t value);

  private:
  ::int64_t _internal_local_funding_amount() const;
  void _internal_set_local_funding_amount(::int64_t value);

  public:
  // int64 push_sat = 5;
  void clear_push_sat() ;
  ::int64_t push_sat() const;
  void set_push_sat(::int64_t value);

  private:
  ::int64_t _internal_push_sat() const;
  void _internal_set_push_sat(::int64_t value);

  public:
  // int64 sat_per_byte = 7 [deprecated = true];
  [[deprecated]]  void clear_sat_per_byte() ;
  [[deprecated]] ::int64_t sat_per_byte() const;
  [[deprecated]] void set_sat_per_byte(::int64_t value);

  private:
  ::int64_t _internal_sat_per_byte() const;
  void _internal_set_sat_per_byte(::int64_t value);

  public:
  // int32 target_conf = 6;
  void clear_target_conf() ;
  ::int32_t target_conf() const;
  void set_target_conf(::int32_t value);

  private:
  ::int32_t _internal_target_conf() const;
  void _internal_set_target_conf(::int32_t value);

  public:
  // uint32 remote_csv_delay = 10;
  void clear_remote_csv_delay() ;
  ::uint32_t remote_csv_delay() const;
  void set_remote_csv_delay(::uint32_t value);

  private:
  ::uint32_t _internal_remote_csv_delay() const;
  void _internal_set_remote_csv_delay(::uint32_t value);

  public:
  // int64 min_htlc_msat = 9;
  void clear_min_htlc_msat() ;
  ::int64_t min_htlc_msat() const;
  void set_min_htlc_msat(::int64_t value);

  private:
  ::int64_t _internal_min_htlc_msat() const;
  void _internal_set_min_htlc_msat(::int64_t value);

  public:
  // int32 min_confs = 11;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // bool private = 8;
  void clear_private_() ;
  bool private_() const;
  void set_private_(bool value);

  private:
  bool _internal_private_() const;
  void _internal_set_private_(bool value);

  public:
  // bool spend_unconfirmed = 12;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // bool zero_conf = 19;
  void clear_zero_conf() ;
  bool zero_conf() const;
  void set_zero_conf(bool value);

  private:
  bool _internal_zero_conf() const;
  void _internal_set_zero_conf(bool value);

  public:
  // bool scid_alias = 20;
  void clear_scid_alias() ;
  bool scid_alias() const;
  void set_scid_alias(bool value);

  private:
  bool _internal_scid_alias() const;
  void _internal_set_scid_alias(bool value);

  public:
  // uint64 remote_max_value_in_flight_msat = 15;
  void clear_remote_max_value_in_flight_msat() ;
  ::uint64_t remote_max_value_in_flight_msat() const;
  void set_remote_max_value_in_flight_msat(::uint64_t value);

  private:
  ::uint64_t _internal_remote_max_value_in_flight_msat() const;
  void _internal_set_remote_max_value_in_flight_msat(::uint64_t value);

  public:
  // uint32 remote_max_htlcs = 16;
  void clear_remote_max_htlcs() ;
  ::uint32_t remote_max_htlcs() const;
  void set_remote_max_htlcs(::uint32_t value);

  private:
  ::uint32_t _internal_remote_max_htlcs() const;
  void _internal_set_remote_max_htlcs(::uint32_t value);

  public:
  // uint32 max_local_csv = 17;
  void clear_max_local_csv() ;
  ::uint32_t max_local_csv() const;
  void set_max_local_csv(::uint32_t value);

  private:
  ::uint32_t _internal_max_local_csv() const;
  void _internal_set_max_local_csv(::uint32_t value);

  public:
  // uint64 base_fee = 21;
  void clear_base_fee() ;
  ::uint64_t base_fee() const;
  void set_base_fee(::uint64_t value);

  private:
  ::uint64_t _internal_base_fee() const;
  void _internal_set_base_fee(::uint64_t value);

  public:
  // uint64 fee_rate = 22;
  void clear_fee_rate() ;
  ::uint64_t fee_rate() const;
  void set_fee_rate(::uint64_t value);

  private:
  ::uint64_t _internal_fee_rate() const;
  void _internal_set_fee_rate(::uint64_t value);

  public:
  // .lnrpc.CommitmentType commitment_type = 18;
  void clear_commitment_type() ;
  ::lnrpc::CommitmentType commitment_type() const;
  void set_commitment_type(::lnrpc::CommitmentType value);

  private:
  ::lnrpc::CommitmentType _internal_commitment_type() const;
  void _internal_set_commitment_type(::lnrpc::CommitmentType value);

  public:
  // bool use_base_fee = 23;
  void clear_use_base_fee() ;
  bool use_base_fee() const;
  void set_use_base_fee(bool value);

  private:
  bool _internal_use_base_fee() const;
  void _internal_set_use_base_fee(bool value);

  public:
  // bool use_fee_rate = 24;
  void clear_use_fee_rate() ;
  bool use_fee_rate() const;
  void set_use_fee_rate(bool value);

  private:
  bool _internal_use_fee_rate() const;
  void _internal_set_use_fee_rate(bool value);

  public:
  // bool fund_max = 26;
  void clear_fund_max() ;
  bool fund_max() const;
  void set_fund_max(bool value);

  private:
  bool _internal_fund_max() const;
  void _internal_set_fund_max(bool value);

  public:
  // uint64 remote_chan_reserve_sat = 25;
  void clear_remote_chan_reserve_sat() ;
  ::uint64_t remote_chan_reserve_sat() const;
  void set_remote_chan_reserve_sat(::uint64_t value);

  private:
  ::uint64_t _internal_remote_chan_reserve_sat() const;
  void _internal_set_remote_chan_reserve_sat(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.OpenChannelRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 28, 2,
      92, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OpenChannelRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OpenChannelRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::lnrpc::OutPoint > outpoints_;
    ::google::protobuf::internal::ArenaStringPtr node_pubkey_;
    ::google::protobuf::internal::ArenaStringPtr node_pubkey_string_;
    ::google::protobuf::internal::ArenaStringPtr close_address_;
    ::google::protobuf::internal::ArenaStringPtr memo_;
    ::lnrpc::FundingShim* funding_shim_;
    ::uint64_t sat_per_vbyte_;
    ::int64_t local_funding_amount_;
    ::int64_t push_sat_;
    ::int64_t sat_per_byte_;
    ::int32_t target_conf_;
    ::uint32_t remote_csv_delay_;
    ::int64_t min_htlc_msat_;
    ::int32_t min_confs_;
    bool private__;
    bool spend_unconfirmed_;
    bool zero_conf_;
    bool scid_alias_;
    ::uint64_t remote_max_value_in_flight_msat_;
    ::uint32_t remote_max_htlcs_;
    ::uint32_t max_local_csv_;
    ::uint64_t base_fee_;
    ::uint64_t fee_rate_;
    int commitment_type_;
    bool use_base_fee_;
    bool use_fee_rate_;
    bool fund_max_;
    ::uint64_t remote_chan_reserve_sat_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class FundingTransitionMsg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.FundingTransitionMsg) */ {
 public:
  inline FundingTransitionMsg() : FundingTransitionMsg(nullptr) {}
  ~FundingTransitionMsg() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundingTransitionMsg(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundingTransitionMsg(const FundingTransitionMsg& from) : FundingTransitionMsg(nullptr, from) {}
  inline FundingTransitionMsg(FundingTransitionMsg&& from) noexcept
      : FundingTransitionMsg(nullptr, std::move(from)) {}
  inline FundingTransitionMsg& operator=(const FundingTransitionMsg& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundingTransitionMsg& operator=(FundingTransitionMsg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundingTransitionMsg& default_instance() {
    return *internal_default_instance();
  }
  enum TriggerCase {
    kShimRegister = 1,
    kShimCancel = 2,
    kPsbtVerify = 3,
    kPsbtFinalize = 4,
    TRIGGER_NOT_SET = 0,
  };
  static inline const FundingTransitionMsg* internal_default_instance() {
    return reinterpret_cast<const FundingTransitionMsg*>(
        &_FundingTransitionMsg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 92;
  friend void swap(FundingTransitionMsg& a, FundingTransitionMsg& b) { a.Swap(&b); }
  inline void Swap(FundingTransitionMsg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundingTransitionMsg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundingTransitionMsg* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundingTransitionMsg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundingTransitionMsg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundingTransitionMsg& from) { FundingTransitionMsg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundingTransitionMsg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.FundingTransitionMsg"; }

 protected:
  explicit FundingTransitionMsg(::google::protobuf::Arena* arena);
  FundingTransitionMsg(::google::protobuf::Arena* arena, const FundingTransitionMsg& from);
  FundingTransitionMsg(::google::protobuf::Arena* arena, FundingTransitionMsg&& from) noexcept
      : FundingTransitionMsg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kShimRegisterFieldNumber = 1,
    kShimCancelFieldNumber = 2,
    kPsbtVerifyFieldNumber = 3,
    kPsbtFinalizeFieldNumber = 4,
  };
  // .lnrpc.FundingShim shim_register = 1;
  bool has_shim_register() const;
  private:
  bool _internal_has_shim_register() const;

  public:
  void clear_shim_register() ;
  const ::lnrpc::FundingShim& shim_register() const;
  PROTOBUF_NODISCARD ::lnrpc::FundingShim* release_shim_register();
  ::lnrpc::FundingShim* mutable_shim_register();
  void set_allocated_shim_register(::lnrpc::FundingShim* value);
  void unsafe_arena_set_allocated_shim_register(::lnrpc::FundingShim* value);
  ::lnrpc::FundingShim* unsafe_arena_release_shim_register();

  private:
  const ::lnrpc::FundingShim& _internal_shim_register() const;
  ::lnrpc::FundingShim* _internal_mutable_shim_register();

  public:
  // .lnrpc.FundingShimCancel shim_cancel = 2;
  bool has_shim_cancel() const;
  private:
  bool _internal_has_shim_cancel() const;

  public:
  void clear_shim_cancel() ;
  const ::lnrpc::FundingShimCancel& shim_cancel() const;
  PROTOBUF_NODISCARD ::lnrpc::FundingShimCancel* release_shim_cancel();
  ::lnrpc::FundingShimCancel* mutable_shim_cancel();
  void set_allocated_shim_cancel(::lnrpc::FundingShimCancel* value);
  void unsafe_arena_set_allocated_shim_cancel(::lnrpc::FundingShimCancel* value);
  ::lnrpc::FundingShimCancel* unsafe_arena_release_shim_cancel();

  private:
  const ::lnrpc::FundingShimCancel& _internal_shim_cancel() const;
  ::lnrpc::FundingShimCancel* _internal_mutable_shim_cancel();

  public:
  // .lnrpc.FundingPsbtVerify psbt_verify = 3;
  bool has_psbt_verify() const;
  private:
  bool _internal_has_psbt_verify() const;

  public:
  void clear_psbt_verify() ;
  const ::lnrpc::FundingPsbtVerify& psbt_verify() const;
  PROTOBUF_NODISCARD ::lnrpc::FundingPsbtVerify* release_psbt_verify();
  ::lnrpc::FundingPsbtVerify* mutable_psbt_verify();
  void set_allocated_psbt_verify(::lnrpc::FundingPsbtVerify* value);
  void unsafe_arena_set_allocated_psbt_verify(::lnrpc::FundingPsbtVerify* value);
  ::lnrpc::FundingPsbtVerify* unsafe_arena_release_psbt_verify();

  private:
  const ::lnrpc::FundingPsbtVerify& _internal_psbt_verify() const;
  ::lnrpc::FundingPsbtVerify* _internal_mutable_psbt_verify();

  public:
  // .lnrpc.FundingPsbtFinalize psbt_finalize = 4;
  bool has_psbt_finalize() const;
  private:
  bool _internal_has_psbt_finalize() const;

  public:
  void clear_psbt_finalize() ;
  const ::lnrpc::FundingPsbtFinalize& psbt_finalize() const;
  PROTOBUF_NODISCARD ::lnrpc::FundingPsbtFinalize* release_psbt_finalize();
  ::lnrpc::FundingPsbtFinalize* mutable_psbt_finalize();
  void set_allocated_psbt_finalize(::lnrpc::FundingPsbtFinalize* value);
  void unsafe_arena_set_allocated_psbt_finalize(::lnrpc::FundingPsbtFinalize* value);
  ::lnrpc::FundingPsbtFinalize* unsafe_arena_release_psbt_finalize();

  private:
  const ::lnrpc::FundingPsbtFinalize& _internal_psbt_finalize() const;
  ::lnrpc::FundingPsbtFinalize* _internal_mutable_psbt_finalize();

  public:
  void clear_trigger();
  TriggerCase trigger_case() const;
  // @@protoc_insertion_point(class_scope:lnrpc.FundingTransitionMsg)
 private:
  class _Internal;
  void set_has_shim_register();
  void set_has_shim_cancel();
  void set_has_psbt_verify();
  void set_has_psbt_finalize();
  inline bool has_trigger() const;
  inline void clear_has_trigger();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 4, 4,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundingTransitionMsg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundingTransitionMsg& from_msg);
    union TriggerUnion {
      constexpr TriggerUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::FundingShim* shim_register_;
      ::lnrpc::FundingShimCancel* shim_cancel_;
      ::lnrpc::FundingPsbtVerify* psbt_verify_;
      ::lnrpc::FundingPsbtFinalize* psbt_finalize_;
    } trigger_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};
// -------------------------------------------------------------------

class ListPaymentsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:lnrpc.ListPaymentsResponse) */ {
 public:
  inline ListPaymentsResponse() : ListPaymentsResponse(nullptr) {}
  ~ListPaymentsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListPaymentsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListPaymentsResponse(const ListPaymentsResponse& from) : ListPaymentsResponse(nullptr, from) {}
  inline ListPaymentsResponse(ListPaymentsResponse&& from) noexcept
      : ListPaymentsResponse(nullptr, std::move(from)) {}
  inline ListPaymentsResponse& operator=(const ListPaymentsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPaymentsResponse& operator=(ListPaymentsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListPaymentsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListPaymentsResponse* internal_default_instance() {
    return reinterpret_cast<const ListPaymentsResponse*>(
        &_ListPaymentsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 172;
  friend void swap(ListPaymentsResponse& a, ListPaymentsResponse& b) { a.Swap(&b); }
  inline void Swap(ListPaymentsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListPaymentsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListPaymentsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListPaymentsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListPaymentsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListPaymentsResponse& from) { ListPaymentsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListPaymentsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "lnrpc.ListPaymentsResponse"; }

 protected:
  explicit ListPaymentsResponse(::google::protobuf::Arena* arena);
  ListPaymentsResponse(::google::protobuf::Arena* arena, const ListPaymentsResponse& from);
  ListPaymentsResponse(::google::protobuf::Arena* arena, ListPaymentsResponse&& from) noexcept
      : ListPaymentsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPaymentsFieldNumber = 1,
    kFirstIndexOffsetFieldNumber = 2,
    kLastIndexOffsetFieldNumber = 3,
    kTotalNumPaymentsFieldNumber = 4,
  };
  // repeated .lnrpc.Payment payments = 1;
  int payments_size() const;
  private:
  int _internal_payments_size() const;

  public:
  void clear_payments() ;
  ::lnrpc::Payment* mutable_payments(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>* mutable_payments();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>& _internal_payments() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>* _internal_mutable_payments();
  public:
  const ::lnrpc::Payment& payments(int index) const;
  ::lnrpc::Payment* add_payments();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>& payments() const;
  // uint64 first_index_offset = 2;
  void clear_first_index_offset() ;
  ::uint64_t first_index_offset() const;
  void set_first_index_offset(::uint64_t value);

  private:
  ::uint64_t _internal_first_index_offset() const;
  void _internal_set_first_index_offset(::uint64_t value);

  public:
  // uint64 last_index_offset = 3;
  void clear_last_index_offset() ;
  ::uint64_t last_index_offset() const;
  void set_last_index_offset(::uint64_t value);

  private:
  ::uint64_t _internal_last_index_offset() const;
  void _internal_set_last_index_offset(::uint64_t value);

  public:
  // uint64 total_num_payments = 4;
  void clear_total_num_payments() ;
  ::uint64_t total_num_payments() const;
  void set_total_num_payments(::uint64_t value);

  private:
  ::uint64_t _internal_total_num_payments() const;
  void _internal_set_total_num_payments(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:lnrpc.ListPaymentsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListPaymentsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListPaymentsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Payment > payments_;
    ::uint64_t first_index_offset_;
    ::uint64_t last_index_offset_;
    ::uint64_t total_num_payments_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lightning_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LookupHtlcResolutionRequest

// uint64 chan_id = 1;
inline void LookupHtlcResolutionRequest::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t LookupHtlcResolutionRequest::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.LookupHtlcResolutionRequest.chan_id)
  return _internal_chan_id();
}
inline void LookupHtlcResolutionRequest::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.LookupHtlcResolutionRequest.chan_id)
}
inline ::uint64_t LookupHtlcResolutionRequest::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void LookupHtlcResolutionRequest::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// uint64 htlc_index = 2;
inline void LookupHtlcResolutionRequest::clear_htlc_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_index_ = ::uint64_t{0u};
}
inline ::uint64_t LookupHtlcResolutionRequest::htlc_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.LookupHtlcResolutionRequest.htlc_index)
  return _internal_htlc_index();
}
inline void LookupHtlcResolutionRequest::set_htlc_index(::uint64_t value) {
  _internal_set_htlc_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.LookupHtlcResolutionRequest.htlc_index)
}
inline ::uint64_t LookupHtlcResolutionRequest::_internal_htlc_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_index_;
}
inline void LookupHtlcResolutionRequest::_internal_set_htlc_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_index_ = value;
}

// -------------------------------------------------------------------

// LookupHtlcResolutionResponse

// bool settled = 1;
inline void LookupHtlcResolutionResponse::clear_settled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settled_ = false;
}
inline bool LookupHtlcResolutionResponse::settled() const {
  // @@protoc_insertion_point(field_get:lnrpc.LookupHtlcResolutionResponse.settled)
  return _internal_settled();
}
inline void LookupHtlcResolutionResponse::set_settled(bool value) {
  _internal_set_settled(value);
  // @@protoc_insertion_point(field_set:lnrpc.LookupHtlcResolutionResponse.settled)
}
inline bool LookupHtlcResolutionResponse::_internal_settled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settled_;
}
inline void LookupHtlcResolutionResponse::_internal_set_settled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settled_ = value;
}

// bool offchain = 2;
inline void LookupHtlcResolutionResponse::clear_offchain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offchain_ = false;
}
inline bool LookupHtlcResolutionResponse::offchain() const {
  // @@protoc_insertion_point(field_get:lnrpc.LookupHtlcResolutionResponse.offchain)
  return _internal_offchain();
}
inline void LookupHtlcResolutionResponse::set_offchain(bool value) {
  _internal_set_offchain(value);
  // @@protoc_insertion_point(field_set:lnrpc.LookupHtlcResolutionResponse.offchain)
}
inline bool LookupHtlcResolutionResponse::_internal_offchain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.offchain_;
}
inline void LookupHtlcResolutionResponse::_internal_set_offchain(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.offchain_ = value;
}

// -------------------------------------------------------------------

// SubscribeCustomMessagesRequest

// -------------------------------------------------------------------

// CustomMessage

// bytes peer = 1;
inline void CustomMessage::clear_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.ClearToEmpty();
}
inline const std::string& CustomMessage::peer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CustomMessage.peer)
  return _internal_peer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomMessage::set_peer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CustomMessage.peer)
}
inline std::string* CustomMessage::mutable_peer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer();
  // @@protoc_insertion_point(field_mutable:lnrpc.CustomMessage.peer)
  return _s;
}
inline const std::string& CustomMessage::_internal_peer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_.Get();
}
inline void CustomMessage::_internal_set_peer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.Set(value, GetArena());
}
inline std::string* CustomMessage::_internal_mutable_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_.Mutable( GetArena());
}
inline std::string* CustomMessage::release_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CustomMessage.peer)
  return _impl_.peer_.Release();
}
inline void CustomMessage::set_allocated_peer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.peer_.IsDefault()) {
          _impl_.peer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CustomMessage.peer)
}

// uint32 type = 2;
inline void CustomMessage::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0u;
}
inline ::uint32_t CustomMessage::type() const {
  // @@protoc_insertion_point(field_get:lnrpc.CustomMessage.type)
  return _internal_type();
}
inline void CustomMessage::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.CustomMessage.type)
}
inline ::uint32_t CustomMessage::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void CustomMessage::_internal_set_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bytes data = 3;
inline void CustomMessage::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& CustomMessage::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CustomMessage.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CustomMessage::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CustomMessage.data)
}
inline std::string* CustomMessage::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.CustomMessage.data)
  return _s;
}
inline const std::string& CustomMessage::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void CustomMessage::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* CustomMessage::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* CustomMessage::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CustomMessage.data)
  return _impl_.data_.Release();
}
inline void CustomMessage::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CustomMessage.data)
}

// -------------------------------------------------------------------

// SendCustomMessageRequest

// bytes peer = 1;
inline void SendCustomMessageRequest::clear_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.ClearToEmpty();
}
inline const std::string& SendCustomMessageRequest::peer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendCustomMessageRequest.peer)
  return _internal_peer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendCustomMessageRequest::set_peer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendCustomMessageRequest.peer)
}
inline std::string* SendCustomMessageRequest::mutable_peer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendCustomMessageRequest.peer)
  return _s;
}
inline const std::string& SendCustomMessageRequest::_internal_peer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_.Get();
}
inline void SendCustomMessageRequest::_internal_set_peer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.Set(value, GetArena());
}
inline std::string* SendCustomMessageRequest::_internal_mutable_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_.Mutable( GetArena());
}
inline std::string* SendCustomMessageRequest::release_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendCustomMessageRequest.peer)
  return _impl_.peer_.Release();
}
inline void SendCustomMessageRequest::set_allocated_peer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.peer_.IsDefault()) {
          _impl_.peer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendCustomMessageRequest.peer)
}

// uint32 type = 2;
inline void SendCustomMessageRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0u;
}
inline ::uint32_t SendCustomMessageRequest::type() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCustomMessageRequest.type)
  return _internal_type();
}
inline void SendCustomMessageRequest::set_type(::uint32_t value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCustomMessageRequest.type)
}
inline ::uint32_t SendCustomMessageRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_;
}
inline void SendCustomMessageRequest::_internal_set_type(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bytes data = 3;
inline void SendCustomMessageRequest::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& SendCustomMessageRequest::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendCustomMessageRequest.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendCustomMessageRequest::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendCustomMessageRequest.data)
}
inline std::string* SendCustomMessageRequest::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendCustomMessageRequest.data)
  return _s;
}
inline const std::string& SendCustomMessageRequest::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void SendCustomMessageRequest::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* SendCustomMessageRequest::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* SendCustomMessageRequest::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendCustomMessageRequest.data)
  return _impl_.data_.Release();
}
inline void SendCustomMessageRequest::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendCustomMessageRequest.data)
}

// -------------------------------------------------------------------

// SendCustomMessageResponse

// -------------------------------------------------------------------

// Utxo

// .lnrpc.AddressType address_type = 1;
inline void Utxo::clear_address_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = 0;
}
inline ::lnrpc::AddressType Utxo::address_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.Utxo.address_type)
  return _internal_address_type();
}
inline void Utxo::set_address_type(::lnrpc::AddressType value) {
  _internal_set_address_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.Utxo.address_type)
}
inline ::lnrpc::AddressType Utxo::_internal_address_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::AddressType>(_impl_.address_type_);
}
inline void Utxo::_internal_set_address_type(::lnrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = value;
}

// string address = 2;
inline void Utxo::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& Utxo::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Utxo.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Utxo::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Utxo.address)
}
inline std::string* Utxo::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.Utxo.address)
  return _s;
}
inline const std::string& Utxo::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void Utxo::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* Utxo::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* Utxo::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Utxo.address)
  return _impl_.address_.Release();
}
inline void Utxo::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Utxo.address)
}

// int64 amount_sat = 3;
inline void Utxo::clear_amount_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = ::int64_t{0};
}
inline ::int64_t Utxo::amount_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Utxo.amount_sat)
  return _internal_amount_sat();
}
inline void Utxo::set_amount_sat(::int64_t value) {
  _internal_set_amount_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Utxo.amount_sat)
}
inline ::int64_t Utxo::_internal_amount_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_sat_;
}
inline void Utxo::_internal_set_amount_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = value;
}

// string pk_script = 4;
inline void Utxo::clear_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.ClearToEmpty();
}
inline const std::string& Utxo::pk_script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Utxo.pk_script)
  return _internal_pk_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Utxo::set_pk_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Utxo.pk_script)
}
inline std::string* Utxo::mutable_pk_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pk_script();
  // @@protoc_insertion_point(field_mutable:lnrpc.Utxo.pk_script)
  return _s;
}
inline const std::string& Utxo::_internal_pk_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pk_script_.Get();
}
inline void Utxo::_internal_set_pk_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.Set(value, GetArena());
}
inline std::string* Utxo::_internal_mutable_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pk_script_.Mutable( GetArena());
}
inline std::string* Utxo::release_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Utxo.pk_script)
  return _impl_.pk_script_.Release();
}
inline void Utxo::set_allocated_pk_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pk_script_.IsDefault()) {
          _impl_.pk_script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Utxo.pk_script)
}

// .lnrpc.OutPoint outpoint = 5;
inline bool Utxo::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline void Utxo::clear_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ != nullptr) _impl_.outpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::OutPoint& Utxo::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& Utxo::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Utxo.outpoint)
  return _internal_outpoint();
}
inline void Utxo::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Utxo.outpoint)
}
inline ::lnrpc::OutPoint* Utxo::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* Utxo::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Utxo.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* Utxo::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* Utxo::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:lnrpc.Utxo.outpoint)
  return _msg;
}
inline void Utxo::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Utxo.outpoint)
}

// int64 confirmations = 6;
inline void Utxo::clear_confirmations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirmations_ = ::int64_t{0};
}
inline ::int64_t Utxo::confirmations() const {
  // @@protoc_insertion_point(field_get:lnrpc.Utxo.confirmations)
  return _internal_confirmations();
}
inline void Utxo::set_confirmations(::int64_t value) {
  _internal_set_confirmations(value);
  // @@protoc_insertion_point(field_set:lnrpc.Utxo.confirmations)
}
inline ::int64_t Utxo::_internal_confirmations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confirmations_;
}
inline void Utxo::_internal_set_confirmations(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirmations_ = value;
}

// -------------------------------------------------------------------

// OutputDetail

// .lnrpc.OutputScriptType output_type = 1;
inline void OutputDetail::clear_output_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_type_ = 0;
}
inline ::lnrpc::OutputScriptType OutputDetail::output_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.OutputDetail.output_type)
  return _internal_output_type();
}
inline void OutputDetail::set_output_type(::lnrpc::OutputScriptType value) {
  _internal_set_output_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.OutputDetail.output_type)
}
inline ::lnrpc::OutputScriptType OutputDetail::_internal_output_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::OutputScriptType>(_impl_.output_type_);
}
inline void OutputDetail::_internal_set_output_type(::lnrpc::OutputScriptType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_type_ = value;
}

// string address = 2;
inline void OutputDetail::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& OutputDetail::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OutputDetail.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OutputDetail::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OutputDetail.address)
}
inline std::string* OutputDetail::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.OutputDetail.address)
  return _s;
}
inline const std::string& OutputDetail::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void OutputDetail::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* OutputDetail::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* OutputDetail::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OutputDetail.address)
  return _impl_.address_.Release();
}
inline void OutputDetail::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OutputDetail.address)
}

// string pk_script = 3;
inline void OutputDetail::clear_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.ClearToEmpty();
}
inline const std::string& OutputDetail::pk_script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OutputDetail.pk_script)
  return _internal_pk_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OutputDetail::set_pk_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OutputDetail.pk_script)
}
inline std::string* OutputDetail::mutable_pk_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pk_script();
  // @@protoc_insertion_point(field_mutable:lnrpc.OutputDetail.pk_script)
  return _s;
}
inline const std::string& OutputDetail::_internal_pk_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pk_script_.Get();
}
inline void OutputDetail::_internal_set_pk_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.Set(value, GetArena());
}
inline std::string* OutputDetail::_internal_mutable_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pk_script_.Mutable( GetArena());
}
inline std::string* OutputDetail::release_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OutputDetail.pk_script)
  return _impl_.pk_script_.Release();
}
inline void OutputDetail::set_allocated_pk_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pk_script_.IsDefault()) {
          _impl_.pk_script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OutputDetail.pk_script)
}

// int64 output_index = 4;
inline void OutputDetail::clear_output_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = ::int64_t{0};
}
inline ::int64_t OutputDetail::output_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.OutputDetail.output_index)
  return _internal_output_index();
}
inline void OutputDetail::set_output_index(::int64_t value) {
  _internal_set_output_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.OutputDetail.output_index)
}
inline ::int64_t OutputDetail::_internal_output_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_index_;
}
inline void OutputDetail::_internal_set_output_index(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = value;
}

// int64 amount = 5;
inline void OutputDetail::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t OutputDetail::amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.OutputDetail.amount)
  return _internal_amount();
}
inline void OutputDetail::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.OutputDetail.amount)
}
inline ::int64_t OutputDetail::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void OutputDetail::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// bool is_our_address = 6;
inline void OutputDetail::clear_is_our_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_our_address_ = false;
}
inline bool OutputDetail::is_our_address() const {
  // @@protoc_insertion_point(field_get:lnrpc.OutputDetail.is_our_address)
  return _internal_is_our_address();
}
inline void OutputDetail::set_is_our_address(bool value) {
  _internal_set_is_our_address(value);
  // @@protoc_insertion_point(field_set:lnrpc.OutputDetail.is_our_address)
}
inline bool OutputDetail::_internal_is_our_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_our_address_;
}
inline void OutputDetail::_internal_set_is_our_address(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_our_address_ = value;
}

// -------------------------------------------------------------------

// Transaction

// string tx_hash = 1;
inline void Transaction::clear_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hash_.ClearToEmpty();
}
inline const std::string& Transaction::tx_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.tx_hash)
  return _internal_tx_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transaction::set_tx_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.tx_hash)
}
inline std::string* Transaction::mutable_tx_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tx_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.tx_hash)
  return _s;
}
inline const std::string& Transaction::_internal_tx_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_hash_.Get();
}
inline void Transaction::_internal_set_tx_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hash_.Set(value, GetArena());
}
inline std::string* Transaction::_internal_mutable_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tx_hash_.Mutable( GetArena());
}
inline std::string* Transaction::release_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Transaction.tx_hash)
  return _impl_.tx_hash_.Release();
}
inline void Transaction::set_allocated_tx_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tx_hash_.IsDefault()) {
          _impl_.tx_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Transaction.tx_hash)
}

// int64 amount = 2;
inline void Transaction::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t Transaction::amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.amount)
  return _internal_amount();
}
inline void Transaction::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.amount)
}
inline ::int64_t Transaction::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void Transaction::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// int32 num_confirmations = 3;
inline void Transaction::clear_num_confirmations() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_confirmations_ = 0;
}
inline ::int32_t Transaction::num_confirmations() const {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.num_confirmations)
  return _internal_num_confirmations();
}
inline void Transaction::set_num_confirmations(::int32_t value) {
  _internal_set_num_confirmations(value);
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.num_confirmations)
}
inline ::int32_t Transaction::_internal_num_confirmations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_confirmations_;
}
inline void Transaction::_internal_set_num_confirmations(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_confirmations_ = value;
}

// string block_hash = 4;
inline void Transaction::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& Transaction::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transaction::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.block_hash)
}
inline std::string* Transaction::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.block_hash)
  return _s;
}
inline const std::string& Transaction::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void Transaction::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* Transaction::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* Transaction::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Transaction.block_hash)
  return _impl_.block_hash_.Release();
}
inline void Transaction::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Transaction.block_hash)
}

// int32 block_height = 5;
inline void Transaction::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0;
}
inline ::int32_t Transaction::block_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.block_height)
  return _internal_block_height();
}
inline void Transaction::set_block_height(::int32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.block_height)
}
inline ::int32_t Transaction::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void Transaction::_internal_set_block_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// int64 time_stamp = 6;
inline void Transaction::clear_time_stamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_stamp_ = ::int64_t{0};
}
inline ::int64_t Transaction::time_stamp() const {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.time_stamp)
  return _internal_time_stamp();
}
inline void Transaction::set_time_stamp(::int64_t value) {
  _internal_set_time_stamp(value);
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.time_stamp)
}
inline ::int64_t Transaction::_internal_time_stamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_stamp_;
}
inline void Transaction::_internal_set_time_stamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_stamp_ = value;
}

// int64 total_fees = 7;
inline void Transaction::clear_total_fees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_fees_ = ::int64_t{0};
}
inline ::int64_t Transaction::total_fees() const {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.total_fees)
  return _internal_total_fees();
}
inline void Transaction::set_total_fees(::int64_t value) {
  _internal_set_total_fees(value);
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.total_fees)
}
inline ::int64_t Transaction::_internal_total_fees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_fees_;
}
inline void Transaction::_internal_set_total_fees(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_fees_ = value;
}

// repeated string dest_addresses = 8 [deprecated = true];
inline int Transaction::_internal_dest_addresses_size() const {
  return _internal_dest_addresses().size();
}
inline int Transaction::dest_addresses_size() const {
  return _internal_dest_addresses_size();
}
inline void Transaction::clear_dest_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_addresses_.Clear();
}
inline std::string* Transaction::add_dest_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dest_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.Transaction.dest_addresses)
  return _s;
}
inline const std::string& Transaction::dest_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.dest_addresses)
  return _internal_dest_addresses().Get(index);
}
inline std::string* Transaction::mutable_dest_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.dest_addresses)
  return _internal_mutable_dest_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Transaction::set_dest_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dest_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.dest_addresses)
}
template <typename Arg_, typename... Args_>
inline void Transaction::add_dest_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dest_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:lnrpc.Transaction.dest_addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Transaction::dest_addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Transaction.dest_addresses)
  return _internal_dest_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Transaction::mutable_dest_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Transaction.dest_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dest_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Transaction::_internal_dest_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Transaction::_internal_mutable_dest_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dest_addresses_;
}

// repeated .lnrpc.OutputDetail output_details = 11;
inline int Transaction::_internal_output_details_size() const {
  return _internal_output_details().size();
}
inline int Transaction::output_details_size() const {
  return _internal_output_details_size();
}
inline void Transaction::clear_output_details() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_details_.Clear();
}
inline ::lnrpc::OutputDetail* Transaction::mutable_output_details(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.output_details)
  return _internal_mutable_output_details()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>* Transaction::mutable_output_details()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Transaction.output_details)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_output_details();
}
inline const ::lnrpc::OutputDetail& Transaction::output_details(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.output_details)
  return _internal_output_details().Get(index);
}
inline ::lnrpc::OutputDetail* Transaction::add_output_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::OutputDetail* _add = _internal_mutable_output_details()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Transaction.output_details)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>& Transaction::output_details() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Transaction.output_details)
  return _internal_output_details();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>&
Transaction::_internal_output_details() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_details_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutputDetail>*
Transaction::_internal_mutable_output_details() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.output_details_;
}

// string raw_tx_hex = 9;
inline void Transaction::clear_raw_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_hex_.ClearToEmpty();
}
inline const std::string& Transaction::raw_tx_hex() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.raw_tx_hex)
  return _internal_raw_tx_hex();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transaction::set_raw_tx_hex(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_hex_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.raw_tx_hex)
}
inline std::string* Transaction::mutable_raw_tx_hex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_tx_hex();
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.raw_tx_hex)
  return _s;
}
inline const std::string& Transaction::_internal_raw_tx_hex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_tx_hex_.Get();
}
inline void Transaction::_internal_set_raw_tx_hex(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_hex_.Set(value, GetArena());
}
inline std::string* Transaction::_internal_mutable_raw_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_tx_hex_.Mutable( GetArena());
}
inline std::string* Transaction::release_raw_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Transaction.raw_tx_hex)
  return _impl_.raw_tx_hex_.Release();
}
inline void Transaction::set_allocated_raw_tx_hex(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_hex_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_tx_hex_.IsDefault()) {
          _impl_.raw_tx_hex_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Transaction.raw_tx_hex)
}

// string label = 10;
inline void Transaction::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& Transaction::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transaction::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Transaction.label)
}
inline std::string* Transaction::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.label)
  return _s;
}
inline const std::string& Transaction::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void Transaction::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* Transaction::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* Transaction::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Transaction.label)
  return _impl_.label_.Release();
}
inline void Transaction::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Transaction.label)
}

// repeated .lnrpc.PreviousOutPoint previous_outpoints = 12;
inline int Transaction::_internal_previous_outpoints_size() const {
  return _internal_previous_outpoints().size();
}
inline int Transaction::previous_outpoints_size() const {
  return _internal_previous_outpoints_size();
}
inline void Transaction::clear_previous_outpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.previous_outpoints_.Clear();
}
inline ::lnrpc::PreviousOutPoint* Transaction::mutable_previous_outpoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Transaction.previous_outpoints)
  return _internal_mutable_previous_outpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>* Transaction::mutable_previous_outpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Transaction.previous_outpoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_previous_outpoints();
}
inline const ::lnrpc::PreviousOutPoint& Transaction::previous_outpoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Transaction.previous_outpoints)
  return _internal_previous_outpoints().Get(index);
}
inline ::lnrpc::PreviousOutPoint* Transaction::add_previous_outpoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PreviousOutPoint* _add = _internal_mutable_previous_outpoints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Transaction.previous_outpoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>& Transaction::previous_outpoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Transaction.previous_outpoints)
  return _internal_previous_outpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>&
Transaction::_internal_previous_outpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.previous_outpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PreviousOutPoint>*
Transaction::_internal_mutable_previous_outpoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.previous_outpoints_;
}

// -------------------------------------------------------------------

// GetTransactionsRequest

// int32 start_height = 1;
inline void GetTransactionsRequest::clear_start_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_height_ = 0;
}
inline ::int32_t GetTransactionsRequest::start_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetTransactionsRequest.start_height)
  return _internal_start_height();
}
inline void GetTransactionsRequest::set_start_height(::int32_t value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetTransactionsRequest.start_height)
}
inline ::int32_t GetTransactionsRequest::_internal_start_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_height_;
}
inline void GetTransactionsRequest::_internal_set_start_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_height_ = value;
}

// int32 end_height = 2;
inline void GetTransactionsRequest::clear_end_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_height_ = 0;
}
inline ::int32_t GetTransactionsRequest::end_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetTransactionsRequest.end_height)
  return _internal_end_height();
}
inline void GetTransactionsRequest::set_end_height(::int32_t value) {
  _internal_set_end_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetTransactionsRequest.end_height)
}
inline ::int32_t GetTransactionsRequest::_internal_end_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_height_;
}
inline void GetTransactionsRequest::_internal_set_end_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_height_ = value;
}

// string account = 3;
inline void GetTransactionsRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& GetTransactionsRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetTransactionsRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionsRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetTransactionsRequest.account)
}
inline std::string* GetTransactionsRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetTransactionsRequest.account)
  return _s;
}
inline const std::string& GetTransactionsRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void GetTransactionsRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* GetTransactionsRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* GetTransactionsRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetTransactionsRequest.account)
  return _impl_.account_.Release();
}
inline void GetTransactionsRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetTransactionsRequest.account)
}

// -------------------------------------------------------------------

// TransactionDetails

// repeated .lnrpc.Transaction transactions = 1;
inline int TransactionDetails::_internal_transactions_size() const {
  return _internal_transactions().size();
}
inline int TransactionDetails::transactions_size() const {
  return _internal_transactions_size();
}
inline void TransactionDetails::clear_transactions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transactions_.Clear();
}
inline ::lnrpc::Transaction* TransactionDetails::mutable_transactions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.TransactionDetails.transactions)
  return _internal_mutable_transactions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>* TransactionDetails::mutable_transactions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.TransactionDetails.transactions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_transactions();
}
inline const ::lnrpc::Transaction& TransactionDetails::transactions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.TransactionDetails.transactions)
  return _internal_transactions().Get(index);
}
inline ::lnrpc::Transaction* TransactionDetails::add_transactions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Transaction* _add = _internal_mutable_transactions()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.TransactionDetails.transactions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>& TransactionDetails::transactions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.TransactionDetails.transactions)
  return _internal_transactions();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>&
TransactionDetails::_internal_transactions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transactions_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Transaction>*
TransactionDetails::_internal_mutable_transactions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.transactions_;
}

// -------------------------------------------------------------------

// FeeLimit

// int64 fixed = 1;
inline bool FeeLimit::has_fixed() const {
  return limit_case() == kFixed;
}
inline void FeeLimit::set_has_fixed() {
  _impl_._oneof_case_[0] = kFixed;
}
inline void FeeLimit::clear_fixed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (limit_case() == kFixed) {
    _impl_.limit_.fixed_ = ::int64_t{0};
    clear_has_limit();
  }
}
inline ::int64_t FeeLimit::fixed() const {
  // @@protoc_insertion_point(field_get:lnrpc.FeeLimit.fixed)
  return _internal_fixed();
}
inline void FeeLimit::set_fixed(::int64_t value) {
  if (limit_case() != kFixed) {
    clear_limit();
    set_has_fixed();
  }
  _impl_.limit_.fixed_ = value;
  // @@protoc_insertion_point(field_set:lnrpc.FeeLimit.fixed)
}
inline ::int64_t FeeLimit::_internal_fixed() const {
  if (limit_case() == kFixed) {
    return _impl_.limit_.fixed_;
  }
  return ::int64_t{0};
}

// int64 fixed_msat = 3;
inline bool FeeLimit::has_fixed_msat() const {
  return limit_case() == kFixedMsat;
}
inline void FeeLimit::set_has_fixed_msat() {
  _impl_._oneof_case_[0] = kFixedMsat;
}
inline void FeeLimit::clear_fixed_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (limit_case() == kFixedMsat) {
    _impl_.limit_.fixed_msat_ = ::int64_t{0};
    clear_has_limit();
  }
}
inline ::int64_t FeeLimit::fixed_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.FeeLimit.fixed_msat)
  return _internal_fixed_msat();
}
inline void FeeLimit::set_fixed_msat(::int64_t value) {
  if (limit_case() != kFixedMsat) {
    clear_limit();
    set_has_fixed_msat();
  }
  _impl_.limit_.fixed_msat_ = value;
  // @@protoc_insertion_point(field_set:lnrpc.FeeLimit.fixed_msat)
}
inline ::int64_t FeeLimit::_internal_fixed_msat() const {
  if (limit_case() == kFixedMsat) {
    return _impl_.limit_.fixed_msat_;
  }
  return ::int64_t{0};
}

// int64 percent = 2;
inline bool FeeLimit::has_percent() const {
  return limit_case() == kPercent;
}
inline void FeeLimit::set_has_percent() {
  _impl_._oneof_case_[0] = kPercent;
}
inline void FeeLimit::clear_percent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (limit_case() == kPercent) {
    _impl_.limit_.percent_ = ::int64_t{0};
    clear_has_limit();
  }
}
inline ::int64_t FeeLimit::percent() const {
  // @@protoc_insertion_point(field_get:lnrpc.FeeLimit.percent)
  return _internal_percent();
}
inline void FeeLimit::set_percent(::int64_t value) {
  if (limit_case() != kPercent) {
    clear_limit();
    set_has_percent();
  }
  _impl_.limit_.percent_ = value;
  // @@protoc_insertion_point(field_set:lnrpc.FeeLimit.percent)
}
inline ::int64_t FeeLimit::_internal_percent() const {
  if (limit_case() == kPercent) {
    return _impl_.limit_.percent_;
  }
  return ::int64_t{0};
}

inline bool FeeLimit::has_limit() const {
  return limit_case() != LIMIT_NOT_SET;
}
inline void FeeLimit::clear_has_limit() {
  _impl_._oneof_case_[0] = LIMIT_NOT_SET;
}
inline FeeLimit::LimitCase FeeLimit::limit_case() const {
  return FeeLimit::LimitCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SendRequest

// bytes dest = 1;
inline void SendRequest::clear_dest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_.ClearToEmpty();
}
inline const std::string& SendRequest::dest() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.dest)
  return _internal_dest();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_dest(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.dest)
}
inline std::string* SendRequest::mutable_dest() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dest();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.dest)
  return _s;
}
inline const std::string& SendRequest::_internal_dest() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_.Get();
}
inline void SendRequest::_internal_set_dest(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_dest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dest_.Mutable( GetArena());
}
inline std::string* SendRequest::release_dest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.dest)
  return _impl_.dest_.Release();
}
inline void SendRequest::set_allocated_dest(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dest_.IsDefault()) {
          _impl_.dest_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.dest)
}

// string dest_string = 2 [deprecated = true];
inline void SendRequest::clear_dest_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_string_.ClearToEmpty();
}
inline const std::string& SendRequest::dest_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.dest_string)
  return _internal_dest_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_dest_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.dest_string)
}
inline std::string* SendRequest::mutable_dest_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dest_string();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.dest_string)
  return _s;
}
inline const std::string& SendRequest::_internal_dest_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_string_.Get();
}
inline void SendRequest::_internal_set_dest_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_string_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_dest_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dest_string_.Mutable( GetArena());
}
inline std::string* SendRequest::release_dest_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.dest_string)
  return _impl_.dest_string_.Release();
}
inline void SendRequest::set_allocated_dest_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dest_string_.IsDefault()) {
          _impl_.dest_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.dest_string)
}

// int64 amt = 3;
inline void SendRequest::clear_amt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_ = ::int64_t{0};
}
inline ::int64_t SendRequest::amt() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.amt)
  return _internal_amt();
}
inline void SendRequest::set_amt(::int64_t value) {
  _internal_set_amt(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.amt)
}
inline ::int64_t SendRequest::_internal_amt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_;
}
inline void SendRequest::_internal_set_amt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_ = value;
}

// int64 amt_msat = 12;
inline void SendRequest::clear_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_msat_ = ::int64_t{0};
}
inline ::int64_t SendRequest::amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.amt_msat)
  return _internal_amt_msat();
}
inline void SendRequest::set_amt_msat(::int64_t value) {
  _internal_set_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.amt_msat)
}
inline ::int64_t SendRequest::_internal_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_msat_;
}
inline void SendRequest::_internal_set_amt_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_msat_ = value;
}

// bytes payment_hash = 4;
inline void SendRequest::clear_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.ClearToEmpty();
}
inline const std::string& SendRequest::payment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.payment_hash)
  return _internal_payment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_payment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.payment_hash)
}
inline std::string* SendRequest::mutable_payment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.payment_hash)
  return _s;
}
inline const std::string& SendRequest::_internal_payment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_.Get();
}
inline void SendRequest::_internal_set_payment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_.Mutable( GetArena());
}
inline std::string* SendRequest::release_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.payment_hash)
  return _impl_.payment_hash_.Release();
}
inline void SendRequest::set_allocated_payment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_.IsDefault()) {
          _impl_.payment_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.payment_hash)
}

// string payment_hash_string = 5 [deprecated = true];
inline void SendRequest::clear_payment_hash_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.ClearToEmpty();
}
inline const std::string& SendRequest::payment_hash_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.payment_hash_string)
  return _internal_payment_hash_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_payment_hash_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.payment_hash_string)
}
inline std::string* SendRequest::mutable_payment_hash_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash_string();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.payment_hash_string)
  return _s;
}
inline const std::string& SendRequest::_internal_payment_hash_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_string_.Get();
}
inline void SendRequest::_internal_set_payment_hash_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_payment_hash_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_string_.Mutable( GetArena());
}
inline std::string* SendRequest::release_payment_hash_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.payment_hash_string)
  return _impl_.payment_hash_string_.Release();
}
inline void SendRequest::set_allocated_payment_hash_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_string_.IsDefault()) {
          _impl_.payment_hash_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.payment_hash_string)
}

// string payment_request = 6;
inline void SendRequest::clear_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.ClearToEmpty();
}
inline const std::string& SendRequest::payment_request() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.payment_request)
  return _internal_payment_request();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_payment_request(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.payment_request)
}
inline std::string* SendRequest::mutable_payment_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_request();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.payment_request)
  return _s;
}
inline const std::string& SendRequest::_internal_payment_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_request_.Get();
}
inline void SendRequest::_internal_set_payment_request(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_request_.Mutable( GetArena());
}
inline std::string* SendRequest::release_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.payment_request)
  return _impl_.payment_request_.Release();
}
inline void SendRequest::set_allocated_payment_request(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_request_.IsDefault()) {
          _impl_.payment_request_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.payment_request)
}

// int32 final_cltv_delta = 7;
inline void SendRequest::clear_final_cltv_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_cltv_delta_ = 0;
}
inline ::int32_t SendRequest::final_cltv_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.final_cltv_delta)
  return _internal_final_cltv_delta();
}
inline void SendRequest::set_final_cltv_delta(::int32_t value) {
  _internal_set_final_cltv_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.final_cltv_delta)
}
inline ::int32_t SendRequest::_internal_final_cltv_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_cltv_delta_;
}
inline void SendRequest::_internal_set_final_cltv_delta(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_cltv_delta_ = value;
}

// .lnrpc.FeeLimit fee_limit = 8;
inline bool SendRequest::has_fee_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fee_limit_ != nullptr);
  return value;
}
inline void SendRequest::clear_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fee_limit_ != nullptr) _impl_.fee_limit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::FeeLimit& SendRequest::_internal_fee_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::FeeLimit* p = _impl_.fee_limit_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::FeeLimit&>(::lnrpc::_FeeLimit_default_instance_);
}
inline const ::lnrpc::FeeLimit& SendRequest::fee_limit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.fee_limit)
  return _internal_fee_limit();
}
inline void SendRequest::unsafe_arena_set_allocated_fee_limit(::lnrpc::FeeLimit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fee_limit_);
  }
  _impl_.fee_limit_ = reinterpret_cast<::lnrpc::FeeLimit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.SendRequest.fee_limit)
}
inline ::lnrpc::FeeLimit* SendRequest::release_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::FeeLimit* released = _impl_.fee_limit_;
  _impl_.fee_limit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::FeeLimit* SendRequest::unsafe_arena_release_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.fee_limit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::FeeLimit* temp = _impl_.fee_limit_;
  _impl_.fee_limit_ = nullptr;
  return temp;
}
inline ::lnrpc::FeeLimit* SendRequest::_internal_mutable_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fee_limit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::FeeLimit>(GetArena());
    _impl_.fee_limit_ = reinterpret_cast<::lnrpc::FeeLimit*>(p);
  }
  return _impl_.fee_limit_;
}
inline ::lnrpc::FeeLimit* SendRequest::mutable_fee_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::FeeLimit* _msg = _internal_mutable_fee_limit();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.fee_limit)
  return _msg;
}
inline void SendRequest::set_allocated_fee_limit(::lnrpc::FeeLimit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.fee_limit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.fee_limit_ = reinterpret_cast<::lnrpc::FeeLimit*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.fee_limit)
}

// uint64 outgoing_chan_id = 9 [jstype = JS_STRING];
inline void SendRequest::clear_outgoing_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outgoing_chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t SendRequest::outgoing_chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.outgoing_chan_id)
  return _internal_outgoing_chan_id();
}
inline void SendRequest::set_outgoing_chan_id(::uint64_t value) {
  _internal_set_outgoing_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.outgoing_chan_id)
}
inline ::uint64_t SendRequest::_internal_outgoing_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outgoing_chan_id_;
}
inline void SendRequest::_internal_set_outgoing_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outgoing_chan_id_ = value;
}

// bytes last_hop_pubkey = 13;
inline void SendRequest::clear_last_hop_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.ClearToEmpty();
}
inline const std::string& SendRequest::last_hop_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.last_hop_pubkey)
  return _internal_last_hop_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_last_hop_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.last_hop_pubkey)
}
inline std::string* SendRequest::mutable_last_hop_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_hop_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.last_hop_pubkey)
  return _s;
}
inline const std::string& SendRequest::_internal_last_hop_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_hop_pubkey_.Get();
}
inline void SendRequest::_internal_set_last_hop_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_last_hop_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_hop_pubkey_.Mutable( GetArena());
}
inline std::string* SendRequest::release_last_hop_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.last_hop_pubkey)
  return _impl_.last_hop_pubkey_.Release();
}
inline void SendRequest::set_allocated_last_hop_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.last_hop_pubkey_.IsDefault()) {
          _impl_.last_hop_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.last_hop_pubkey)
}

// uint32 cltv_limit = 10;
inline void SendRequest::clear_cltv_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_limit_ = 0u;
}
inline ::uint32_t SendRequest::cltv_limit() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.cltv_limit)
  return _internal_cltv_limit();
}
inline void SendRequest::set_cltv_limit(::uint32_t value) {
  _internal_set_cltv_limit(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.cltv_limit)
}
inline ::uint32_t SendRequest::_internal_cltv_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cltv_limit_;
}
inline void SendRequest::_internal_set_cltv_limit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_limit_ = value;
}

// map<uint64, bytes> dest_custom_records = 11;
inline int SendRequest::_internal_dest_custom_records_size() const {
  return _internal_dest_custom_records().size();
}
inline int SendRequest::dest_custom_records_size() const {
  return _internal_dest_custom_records_size();
}
inline void SendRequest::clear_dest_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& SendRequest::_internal_dest_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& SendRequest::dest_custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.SendRequest.dest_custom_records)
  return _internal_dest_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* SendRequest::_internal_mutable_dest_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dest_custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* SendRequest::mutable_dest_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.SendRequest.dest_custom_records)
  return _internal_mutable_dest_custom_records();
}

// bool allow_self_payment = 14;
inline void SendRequest::clear_allow_self_payment() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_self_payment_ = false;
}
inline bool SendRequest::allow_self_payment() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.allow_self_payment)
  return _internal_allow_self_payment();
}
inline void SendRequest::set_allow_self_payment(bool value) {
  _internal_set_allow_self_payment(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.allow_self_payment)
}
inline bool SendRequest::_internal_allow_self_payment() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_self_payment_;
}
inline void SendRequest::_internal_set_allow_self_payment(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_self_payment_ = value;
}

// repeated .lnrpc.FeatureBit dest_features = 15;
inline int SendRequest::_internal_dest_features_size() const {
  return _internal_dest_features().size();
}
inline int SendRequest::dest_features_size() const {
  return _internal_dest_features_size();
}
inline void SendRequest::clear_dest_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_features_.Clear();
}
inline ::lnrpc::FeatureBit SendRequest::dest_features(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.dest_features)
  return static_cast<::lnrpc::FeatureBit>(_internal_dest_features().Get(index));
}
inline void SendRequest::set_dest_features(int index, ::lnrpc::FeatureBit value) {
  _internal_mutable_dest_features()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.dest_features)
}
inline void SendRequest::add_dest_features(::lnrpc::FeatureBit value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dest_features()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.SendRequest.dest_features)
}
inline const ::google::protobuf::RepeatedField<int>& SendRequest::dest_features() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.SendRequest.dest_features)
  return _internal_dest_features();
}
inline ::google::protobuf::RepeatedField<int>* SendRequest::mutable_dest_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.SendRequest.dest_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dest_features();
}
inline const ::google::protobuf::RepeatedField<int>& SendRequest::_internal_dest_features()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_features_;
}
inline ::google::protobuf::RepeatedField<int>* SendRequest::_internal_mutable_dest_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dest_features_;
}

// bytes payment_addr = 16;
inline void SendRequest::clear_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.ClearToEmpty();
}
inline const std::string& SendRequest::payment_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendRequest.payment_addr)
  return _internal_payment_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendRequest::set_payment_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendRequest.payment_addr)
}
inline std::string* SendRequest::mutable_payment_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendRequest.payment_addr)
  return _s;
}
inline const std::string& SendRequest::_internal_payment_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_addr_.Get();
}
inline void SendRequest::_internal_set_payment_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.Set(value, GetArena());
}
inline std::string* SendRequest::_internal_mutable_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_addr_.Mutable( GetArena());
}
inline std::string* SendRequest::release_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendRequest.payment_addr)
  return _impl_.payment_addr_.Release();
}
inline void SendRequest::set_allocated_payment_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_addr_.IsDefault()) {
          _impl_.payment_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendRequest.payment_addr)
}

// -------------------------------------------------------------------

// SendResponse

// string payment_error = 1;
inline void SendResponse::clear_payment_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_error_.ClearToEmpty();
}
inline const std::string& SendResponse::payment_error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendResponse.payment_error)
  return _internal_payment_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendResponse::set_payment_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendResponse.payment_error)
}
inline std::string* SendResponse::mutable_payment_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_error();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendResponse.payment_error)
  return _s;
}
inline const std::string& SendResponse::_internal_payment_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_error_.Get();
}
inline void SendResponse::_internal_set_payment_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_error_.Set(value, GetArena());
}
inline std::string* SendResponse::_internal_mutable_payment_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_error_.Mutable( GetArena());
}
inline std::string* SendResponse::release_payment_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendResponse.payment_error)
  return _impl_.payment_error_.Release();
}
inline void SendResponse::set_allocated_payment_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_error_.IsDefault()) {
          _impl_.payment_error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendResponse.payment_error)
}

// bytes payment_preimage = 2;
inline void SendResponse::clear_payment_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.ClearToEmpty();
}
inline const std::string& SendResponse::payment_preimage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendResponse.payment_preimage)
  return _internal_payment_preimage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendResponse::set_payment_preimage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendResponse.payment_preimage)
}
inline std::string* SendResponse::mutable_payment_preimage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_preimage();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendResponse.payment_preimage)
  return _s;
}
inline const std::string& SendResponse::_internal_payment_preimage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_preimage_.Get();
}
inline void SendResponse::_internal_set_payment_preimage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.Set(value, GetArena());
}
inline std::string* SendResponse::_internal_mutable_payment_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_preimage_.Mutable( GetArena());
}
inline std::string* SendResponse::release_payment_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendResponse.payment_preimage)
  return _impl_.payment_preimage_.Release();
}
inline void SendResponse::set_allocated_payment_preimage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_preimage_.IsDefault()) {
          _impl_.payment_preimage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendResponse.payment_preimage)
}

// .lnrpc.Route payment_route = 3;
inline bool SendResponse::has_payment_route() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.payment_route_ != nullptr);
  return value;
}
inline void SendResponse::clear_payment_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payment_route_ != nullptr) _impl_.payment_route_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::Route& SendResponse::_internal_payment_route() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Route* p = _impl_.payment_route_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Route&>(::lnrpc::_Route_default_instance_);
}
inline const ::lnrpc::Route& SendResponse::payment_route() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendResponse.payment_route)
  return _internal_payment_route();
}
inline void SendResponse::unsafe_arena_set_allocated_payment_route(::lnrpc::Route* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.payment_route_);
  }
  _impl_.payment_route_ = reinterpret_cast<::lnrpc::Route*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.SendResponse.payment_route)
}
inline ::lnrpc::Route* SendResponse::release_payment_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Route* released = _impl_.payment_route_;
  _impl_.payment_route_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Route* SendResponse::unsafe_arena_release_payment_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendResponse.payment_route)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Route* temp = _impl_.payment_route_;
  _impl_.payment_route_ = nullptr;
  return temp;
}
inline ::lnrpc::Route* SendResponse::_internal_mutable_payment_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.payment_route_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Route>(GetArena());
    _impl_.payment_route_ = reinterpret_cast<::lnrpc::Route*>(p);
  }
  return _impl_.payment_route_;
}
inline ::lnrpc::Route* SendResponse::mutable_payment_route() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::Route* _msg = _internal_mutable_payment_route();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendResponse.payment_route)
  return _msg;
}
inline void SendResponse::set_allocated_payment_route(::lnrpc::Route* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.payment_route_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.payment_route_ = reinterpret_cast<::lnrpc::Route*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendResponse.payment_route)
}

// bytes payment_hash = 4;
inline void SendResponse::clear_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.ClearToEmpty();
}
inline const std::string& SendResponse::payment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendResponse.payment_hash)
  return _internal_payment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendResponse::set_payment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendResponse.payment_hash)
}
inline std::string* SendResponse::mutable_payment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendResponse.payment_hash)
  return _s;
}
inline const std::string& SendResponse::_internal_payment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_.Get();
}
inline void SendResponse::_internal_set_payment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(value, GetArena());
}
inline std::string* SendResponse::_internal_mutable_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_.Mutable( GetArena());
}
inline std::string* SendResponse::release_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendResponse.payment_hash)
  return _impl_.payment_hash_.Release();
}
inline void SendResponse::set_allocated_payment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_.IsDefault()) {
          _impl_.payment_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendResponse.payment_hash)
}

// -------------------------------------------------------------------

// SendToRouteRequest

// bytes payment_hash = 1;
inline void SendToRouteRequest::clear_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.ClearToEmpty();
}
inline const std::string& SendToRouteRequest::payment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendToRouteRequest.payment_hash)
  return _internal_payment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendToRouteRequest::set_payment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendToRouteRequest.payment_hash)
}
inline std::string* SendToRouteRequest::mutable_payment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendToRouteRequest.payment_hash)
  return _s;
}
inline const std::string& SendToRouteRequest::_internal_payment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_.Get();
}
inline void SendToRouteRequest::_internal_set_payment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(value, GetArena());
}
inline std::string* SendToRouteRequest::_internal_mutable_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_.Mutable( GetArena());
}
inline std::string* SendToRouteRequest::release_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendToRouteRequest.payment_hash)
  return _impl_.payment_hash_.Release();
}
inline void SendToRouteRequest::set_allocated_payment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_.IsDefault()) {
          _impl_.payment_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendToRouteRequest.payment_hash)
}

// string payment_hash_string = 2 [deprecated = true];
inline void SendToRouteRequest::clear_payment_hash_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.ClearToEmpty();
}
inline const std::string& SendToRouteRequest::payment_hash_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendToRouteRequest.payment_hash_string)
  return _internal_payment_hash_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendToRouteRequest::set_payment_hash_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendToRouteRequest.payment_hash_string)
}
inline std::string* SendToRouteRequest::mutable_payment_hash_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash_string();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendToRouteRequest.payment_hash_string)
  return _s;
}
inline const std::string& SendToRouteRequest::_internal_payment_hash_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_string_.Get();
}
inline void SendToRouteRequest::_internal_set_payment_hash_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.Set(value, GetArena());
}
inline std::string* SendToRouteRequest::_internal_mutable_payment_hash_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_string_.Mutable( GetArena());
}
inline std::string* SendToRouteRequest::release_payment_hash_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendToRouteRequest.payment_hash_string)
  return _impl_.payment_hash_string_.Release();
}
inline void SendToRouteRequest::set_allocated_payment_hash_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_string_.IsDefault()) {
          _impl_.payment_hash_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendToRouteRequest.payment_hash_string)
}

// .lnrpc.Route route = 4;
inline bool SendToRouteRequest::has_route() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.route_ != nullptr);
  return value;
}
inline void SendToRouteRequest::clear_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.route_ != nullptr) _impl_.route_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::Route& SendToRouteRequest::_internal_route() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Route* p = _impl_.route_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Route&>(::lnrpc::_Route_default_instance_);
}
inline const ::lnrpc::Route& SendToRouteRequest::route() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendToRouteRequest.route)
  return _internal_route();
}
inline void SendToRouteRequest::unsafe_arena_set_allocated_route(::lnrpc::Route* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.route_);
  }
  _impl_.route_ = reinterpret_cast<::lnrpc::Route*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.SendToRouteRequest.route)
}
inline ::lnrpc::Route* SendToRouteRequest::release_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Route* released = _impl_.route_;
  _impl_.route_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Route* SendToRouteRequest::unsafe_arena_release_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendToRouteRequest.route)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Route* temp = _impl_.route_;
  _impl_.route_ = nullptr;
  return temp;
}
inline ::lnrpc::Route* SendToRouteRequest::_internal_mutable_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.route_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Route>(GetArena());
    _impl_.route_ = reinterpret_cast<::lnrpc::Route*>(p);
  }
  return _impl_.route_;
}
inline ::lnrpc::Route* SendToRouteRequest::mutable_route() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::Route* _msg = _internal_mutable_route();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendToRouteRequest.route)
  return _msg;
}
inline void SendToRouteRequest::set_allocated_route(::lnrpc::Route* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.route_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.route_ = reinterpret_cast<::lnrpc::Route*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendToRouteRequest.route)
}

// -------------------------------------------------------------------

// ChannelAcceptRequest

// bytes node_pubkey = 1;
inline void ChannelAcceptRequest::clear_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.ClearToEmpty();
}
inline const std::string& ChannelAcceptRequest::node_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.node_pubkey)
  return _internal_node_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelAcceptRequest::set_node_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.node_pubkey)
}
inline std::string* ChannelAcceptRequest::mutable_node_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelAcceptRequest.node_pubkey)
  return _s;
}
inline const std::string& ChannelAcceptRequest::_internal_node_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_pubkey_.Get();
}
inline void ChannelAcceptRequest::_internal_set_node_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.Set(value, GetArena());
}
inline std::string* ChannelAcceptRequest::_internal_mutable_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_pubkey_.Mutable( GetArena());
}
inline std::string* ChannelAcceptRequest::release_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelAcceptRequest.node_pubkey)
  return _impl_.node_pubkey_.Release();
}
inline void ChannelAcceptRequest::set_allocated_node_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_pubkey_.IsDefault()) {
          _impl_.node_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelAcceptRequest.node_pubkey)
}

// bytes chain_hash = 2;
inline void ChannelAcceptRequest::clear_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.ClearToEmpty();
}
inline const std::string& ChannelAcceptRequest::chain_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.chain_hash)
  return _internal_chain_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelAcceptRequest::set_chain_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.chain_hash)
}
inline std::string* ChannelAcceptRequest::mutable_chain_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chain_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelAcceptRequest.chain_hash)
  return _s;
}
inline const std::string& ChannelAcceptRequest::_internal_chain_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chain_hash_.Get();
}
inline void ChannelAcceptRequest::_internal_set_chain_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.Set(value, GetArena());
}
inline std::string* ChannelAcceptRequest::_internal_mutable_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chain_hash_.Mutable( GetArena());
}
inline std::string* ChannelAcceptRequest::release_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelAcceptRequest.chain_hash)
  return _impl_.chain_hash_.Release();
}
inline void ChannelAcceptRequest::set_allocated_chain_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chain_hash_.IsDefault()) {
          _impl_.chain_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelAcceptRequest.chain_hash)
}

// bytes pending_chan_id = 3;
inline void ChannelAcceptRequest::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& ChannelAcceptRequest::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelAcceptRequest::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.pending_chan_id)
}
inline std::string* ChannelAcceptRequest::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelAcceptRequest.pending_chan_id)
  return _s;
}
inline const std::string& ChannelAcceptRequest::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void ChannelAcceptRequest::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* ChannelAcceptRequest::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* ChannelAcceptRequest::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelAcceptRequest.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void ChannelAcceptRequest::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelAcceptRequest.pending_chan_id)
}

// uint64 funding_amt = 4;
inline void ChannelAcceptRequest::clear_funding_amt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_amt_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::funding_amt() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.funding_amt)
  return _internal_funding_amt();
}
inline void ChannelAcceptRequest::set_funding_amt(::uint64_t value) {
  _internal_set_funding_amt(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.funding_amt)
}
inline ::uint64_t ChannelAcceptRequest::_internal_funding_amt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_amt_;
}
inline void ChannelAcceptRequest::_internal_set_funding_amt(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_amt_ = value;
}

// uint64 push_amt = 5;
inline void ChannelAcceptRequest::clear_push_amt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_amt_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::push_amt() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.push_amt)
  return _internal_push_amt();
}
inline void ChannelAcceptRequest::set_push_amt(::uint64_t value) {
  _internal_set_push_amt(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.push_amt)
}
inline ::uint64_t ChannelAcceptRequest::_internal_push_amt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.push_amt_;
}
inline void ChannelAcceptRequest::_internal_set_push_amt(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_amt_ = value;
}

// uint64 dust_limit = 6;
inline void ChannelAcceptRequest::clear_dust_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dust_limit_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::dust_limit() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.dust_limit)
  return _internal_dust_limit();
}
inline void ChannelAcceptRequest::set_dust_limit(::uint64_t value) {
  _internal_set_dust_limit(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.dust_limit)
}
inline ::uint64_t ChannelAcceptRequest::_internal_dust_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dust_limit_;
}
inline void ChannelAcceptRequest::_internal_set_dust_limit(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dust_limit_ = value;
}

// uint64 max_value_in_flight = 7;
inline void ChannelAcceptRequest::clear_max_value_in_flight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_value_in_flight_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::max_value_in_flight() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.max_value_in_flight)
  return _internal_max_value_in_flight();
}
inline void ChannelAcceptRequest::set_max_value_in_flight(::uint64_t value) {
  _internal_set_max_value_in_flight(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.max_value_in_flight)
}
inline ::uint64_t ChannelAcceptRequest::_internal_max_value_in_flight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_value_in_flight_;
}
inline void ChannelAcceptRequest::_internal_set_max_value_in_flight(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_value_in_flight_ = value;
}

// uint64 channel_reserve = 8;
inline void ChannelAcceptRequest::clear_channel_reserve() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_reserve_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::channel_reserve() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.channel_reserve)
  return _internal_channel_reserve();
}
inline void ChannelAcceptRequest::set_channel_reserve(::uint64_t value) {
  _internal_set_channel_reserve(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.channel_reserve)
}
inline ::uint64_t ChannelAcceptRequest::_internal_channel_reserve() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_reserve_;
}
inline void ChannelAcceptRequest::_internal_set_channel_reserve(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_reserve_ = value;
}

// uint64 min_htlc = 9;
inline void ChannelAcceptRequest::clear_min_htlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::min_htlc() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.min_htlc)
  return _internal_min_htlc();
}
inline void ChannelAcceptRequest::set_min_htlc(::uint64_t value) {
  _internal_set_min_htlc(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.min_htlc)
}
inline ::uint64_t ChannelAcceptRequest::_internal_min_htlc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_;
}
inline void ChannelAcceptRequest::_internal_set_min_htlc(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_ = value;
}

// uint64 fee_per_kw = 10;
inline void ChannelAcceptRequest::clear_fee_per_kw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_kw_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptRequest::fee_per_kw() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.fee_per_kw)
  return _internal_fee_per_kw();
}
inline void ChannelAcceptRequest::set_fee_per_kw(::uint64_t value) {
  _internal_set_fee_per_kw(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.fee_per_kw)
}
inline ::uint64_t ChannelAcceptRequest::_internal_fee_per_kw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_per_kw_;
}
inline void ChannelAcceptRequest::_internal_set_fee_per_kw(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_kw_ = value;
}

// uint32 csv_delay = 11;
inline void ChannelAcceptRequest::clear_csv_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = 0u;
}
inline ::uint32_t ChannelAcceptRequest::csv_delay() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.csv_delay)
  return _internal_csv_delay();
}
inline void ChannelAcceptRequest::set_csv_delay(::uint32_t value) {
  _internal_set_csv_delay(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.csv_delay)
}
inline ::uint32_t ChannelAcceptRequest::_internal_csv_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.csv_delay_;
}
inline void ChannelAcceptRequest::_internal_set_csv_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = value;
}

// uint32 max_accepted_htlcs = 12;
inline void ChannelAcceptRequest::clear_max_accepted_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_accepted_htlcs_ = 0u;
}
inline ::uint32_t ChannelAcceptRequest::max_accepted_htlcs() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.max_accepted_htlcs)
  return _internal_max_accepted_htlcs();
}
inline void ChannelAcceptRequest::set_max_accepted_htlcs(::uint32_t value) {
  _internal_set_max_accepted_htlcs(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.max_accepted_htlcs)
}
inline ::uint32_t ChannelAcceptRequest::_internal_max_accepted_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_accepted_htlcs_;
}
inline void ChannelAcceptRequest::_internal_set_max_accepted_htlcs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_accepted_htlcs_ = value;
}

// uint32 channel_flags = 13;
inline void ChannelAcceptRequest::clear_channel_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_flags_ = 0u;
}
inline ::uint32_t ChannelAcceptRequest::channel_flags() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.channel_flags)
  return _internal_channel_flags();
}
inline void ChannelAcceptRequest::set_channel_flags(::uint32_t value) {
  _internal_set_channel_flags(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.channel_flags)
}
inline ::uint32_t ChannelAcceptRequest::_internal_channel_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_flags_;
}
inline void ChannelAcceptRequest::_internal_set_channel_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_flags_ = value;
}

// .lnrpc.CommitmentType commitment_type = 14;
inline void ChannelAcceptRequest::clear_commitment_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = 0;
}
inline ::lnrpc::CommitmentType ChannelAcceptRequest::commitment_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.commitment_type)
  return _internal_commitment_type();
}
inline void ChannelAcceptRequest::set_commitment_type(::lnrpc::CommitmentType value) {
  _internal_set_commitment_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.commitment_type)
}
inline ::lnrpc::CommitmentType ChannelAcceptRequest::_internal_commitment_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CommitmentType>(_impl_.commitment_type_);
}
inline void ChannelAcceptRequest::_internal_set_commitment_type(::lnrpc::CommitmentType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = value;
}

// bool wants_zero_conf = 15;
inline void ChannelAcceptRequest::clear_wants_zero_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wants_zero_conf_ = false;
}
inline bool ChannelAcceptRequest::wants_zero_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.wants_zero_conf)
  return _internal_wants_zero_conf();
}
inline void ChannelAcceptRequest::set_wants_zero_conf(bool value) {
  _internal_set_wants_zero_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.wants_zero_conf)
}
inline bool ChannelAcceptRequest::_internal_wants_zero_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wants_zero_conf_;
}
inline void ChannelAcceptRequest::_internal_set_wants_zero_conf(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wants_zero_conf_ = value;
}

// bool wants_scid_alias = 16;
inline void ChannelAcceptRequest::clear_wants_scid_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wants_scid_alias_ = false;
}
inline bool ChannelAcceptRequest::wants_scid_alias() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptRequest.wants_scid_alias)
  return _internal_wants_scid_alias();
}
inline void ChannelAcceptRequest::set_wants_scid_alias(bool value) {
  _internal_set_wants_scid_alias(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptRequest.wants_scid_alias)
}
inline bool ChannelAcceptRequest::_internal_wants_scid_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wants_scid_alias_;
}
inline void ChannelAcceptRequest::_internal_set_wants_scid_alias(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wants_scid_alias_ = value;
}

// -------------------------------------------------------------------

// ChannelAcceptResponse

// bool accept = 1;
inline void ChannelAcceptResponse::clear_accept() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_ = false;
}
inline bool ChannelAcceptResponse::accept() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.accept)
  return _internal_accept();
}
inline void ChannelAcceptResponse::set_accept(bool value) {
  _internal_set_accept(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.accept)
}
inline bool ChannelAcceptResponse::_internal_accept() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accept_;
}
inline void ChannelAcceptResponse::_internal_set_accept(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_ = value;
}

// bytes pending_chan_id = 2;
inline void ChannelAcceptResponse::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& ChannelAcceptResponse::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelAcceptResponse::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.pending_chan_id)
}
inline std::string* ChannelAcceptResponse::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelAcceptResponse.pending_chan_id)
  return _s;
}
inline const std::string& ChannelAcceptResponse::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void ChannelAcceptResponse::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* ChannelAcceptResponse::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* ChannelAcceptResponse::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelAcceptResponse.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void ChannelAcceptResponse::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelAcceptResponse.pending_chan_id)
}

// string error = 3;
inline void ChannelAcceptResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& ChannelAcceptResponse::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelAcceptResponse::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.error)
}
inline std::string* ChannelAcceptResponse::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelAcceptResponse.error)
  return _s;
}
inline const std::string& ChannelAcceptResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void ChannelAcceptResponse::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* ChannelAcceptResponse::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* ChannelAcceptResponse::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelAcceptResponse.error)
  return _impl_.error_.Release();
}
inline void ChannelAcceptResponse::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelAcceptResponse.error)
}

// string upfront_shutdown = 4;
inline void ChannelAcceptResponse::clear_upfront_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upfront_shutdown_.ClearToEmpty();
}
inline const std::string& ChannelAcceptResponse::upfront_shutdown() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.upfront_shutdown)
  return _internal_upfront_shutdown();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelAcceptResponse::set_upfront_shutdown(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upfront_shutdown_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.upfront_shutdown)
}
inline std::string* ChannelAcceptResponse::mutable_upfront_shutdown() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_upfront_shutdown();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelAcceptResponse.upfront_shutdown)
  return _s;
}
inline const std::string& ChannelAcceptResponse::_internal_upfront_shutdown() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.upfront_shutdown_.Get();
}
inline void ChannelAcceptResponse::_internal_set_upfront_shutdown(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upfront_shutdown_.Set(value, GetArena());
}
inline std::string* ChannelAcceptResponse::_internal_mutable_upfront_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.upfront_shutdown_.Mutable( GetArena());
}
inline std::string* ChannelAcceptResponse::release_upfront_shutdown() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelAcceptResponse.upfront_shutdown)
  return _impl_.upfront_shutdown_.Release();
}
inline void ChannelAcceptResponse::set_allocated_upfront_shutdown(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.upfront_shutdown_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.upfront_shutdown_.IsDefault()) {
          _impl_.upfront_shutdown_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelAcceptResponse.upfront_shutdown)
}

// uint32 csv_delay = 5;
inline void ChannelAcceptResponse::clear_csv_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = 0u;
}
inline ::uint32_t ChannelAcceptResponse::csv_delay() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.csv_delay)
  return _internal_csv_delay();
}
inline void ChannelAcceptResponse::set_csv_delay(::uint32_t value) {
  _internal_set_csv_delay(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.csv_delay)
}
inline ::uint32_t ChannelAcceptResponse::_internal_csv_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.csv_delay_;
}
inline void ChannelAcceptResponse::_internal_set_csv_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = value;
}

// uint64 reserve_sat = 6;
inline void ChannelAcceptResponse::clear_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserve_sat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptResponse::reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.reserve_sat)
  return _internal_reserve_sat();
}
inline void ChannelAcceptResponse::set_reserve_sat(::uint64_t value) {
  _internal_set_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.reserve_sat)
}
inline ::uint64_t ChannelAcceptResponse::_internal_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reserve_sat_;
}
inline void ChannelAcceptResponse::_internal_set_reserve_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserve_sat_ = value;
}

// uint64 in_flight_max_msat = 7;
inline void ChannelAcceptResponse::clear_in_flight_max_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_flight_max_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptResponse::in_flight_max_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.in_flight_max_msat)
  return _internal_in_flight_max_msat();
}
inline void ChannelAcceptResponse::set_in_flight_max_msat(::uint64_t value) {
  _internal_set_in_flight_max_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.in_flight_max_msat)
}
inline ::uint64_t ChannelAcceptResponse::_internal_in_flight_max_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.in_flight_max_msat_;
}
inline void ChannelAcceptResponse::_internal_set_in_flight_max_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.in_flight_max_msat_ = value;
}

// uint32 max_htlc_count = 8;
inline void ChannelAcceptResponse::clear_max_htlc_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_htlc_count_ = 0u;
}
inline ::uint32_t ChannelAcceptResponse::max_htlc_count() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.max_htlc_count)
  return _internal_max_htlc_count();
}
inline void ChannelAcceptResponse::set_max_htlc_count(::uint32_t value) {
  _internal_set_max_htlc_count(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.max_htlc_count)
}
inline ::uint32_t ChannelAcceptResponse::_internal_max_htlc_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_htlc_count_;
}
inline void ChannelAcceptResponse::_internal_set_max_htlc_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_htlc_count_ = value;
}

// uint64 min_htlc_in = 9;
inline void ChannelAcceptResponse::clear_min_htlc_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_in_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelAcceptResponse::min_htlc_in() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.min_htlc_in)
  return _internal_min_htlc_in();
}
inline void ChannelAcceptResponse::set_min_htlc_in(::uint64_t value) {
  _internal_set_min_htlc_in(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.min_htlc_in)
}
inline ::uint64_t ChannelAcceptResponse::_internal_min_htlc_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_in_;
}
inline void ChannelAcceptResponse::_internal_set_min_htlc_in(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_in_ = value;
}

// uint32 min_accept_depth = 10;
inline void ChannelAcceptResponse::clear_min_accept_depth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_accept_depth_ = 0u;
}
inline ::uint32_t ChannelAcceptResponse::min_accept_depth() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.min_accept_depth)
  return _internal_min_accept_depth();
}
inline void ChannelAcceptResponse::set_min_accept_depth(::uint32_t value) {
  _internal_set_min_accept_depth(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.min_accept_depth)
}
inline ::uint32_t ChannelAcceptResponse::_internal_min_accept_depth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_accept_depth_;
}
inline void ChannelAcceptResponse::_internal_set_min_accept_depth(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_accept_depth_ = value;
}

// bool zero_conf = 11;
inline void ChannelAcceptResponse::clear_zero_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = false;
}
inline bool ChannelAcceptResponse::zero_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelAcceptResponse.zero_conf)
  return _internal_zero_conf();
}
inline void ChannelAcceptResponse::set_zero_conf(bool value) {
  _internal_set_zero_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelAcceptResponse.zero_conf)
}
inline bool ChannelAcceptResponse::_internal_zero_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_conf_;
}
inline void ChannelAcceptResponse::_internal_set_zero_conf(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = value;
}

// -------------------------------------------------------------------

// ChannelPoint

// bytes funding_txid_bytes = 1;
inline bool ChannelPoint::has_funding_txid_bytes() const {
  return funding_txid_case() == kFundingTxidBytes;
}
inline void ChannelPoint::set_has_funding_txid_bytes() {
  _impl_._oneof_case_[0] = kFundingTxidBytes;
}
inline void ChannelPoint::clear_funding_txid_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() == kFundingTxidBytes) {
    _impl_.funding_txid_.funding_txid_bytes_.Destroy();
    clear_has_funding_txid();
  }
}
inline const std::string& ChannelPoint::funding_txid_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelPoint.funding_txid_bytes)
  return _internal_funding_txid_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelPoint::set_funding_txid_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() != kFundingTxidBytes) {
    clear_funding_txid();

    set_has_funding_txid_bytes();
    _impl_.funding_txid_.funding_txid_bytes_.InitDefault();
  }
  _impl_.funding_txid_.funding_txid_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelPoint.funding_txid_bytes)
}
inline std::string* ChannelPoint::mutable_funding_txid_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funding_txid_bytes();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelPoint.funding_txid_bytes)
  return _s;
}
inline const std::string& ChannelPoint::_internal_funding_txid_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (funding_txid_case() != kFundingTxidBytes) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.funding_txid_.funding_txid_bytes_.Get();
}
inline void ChannelPoint::_internal_set_funding_txid_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() != kFundingTxidBytes) {
    clear_funding_txid();

    set_has_funding_txid_bytes();
    _impl_.funding_txid_.funding_txid_bytes_.InitDefault();
  }
  _impl_.funding_txid_.funding_txid_bytes_.Set(value, GetArena());
}
inline std::string* ChannelPoint::_internal_mutable_funding_txid_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() != kFundingTxidBytes) {
    clear_funding_txid();

    set_has_funding_txid_bytes();
    _impl_.funding_txid_.funding_txid_bytes_.InitDefault();
  }
  return _impl_.funding_txid_.funding_txid_bytes_.Mutable( GetArena());
}
inline std::string* ChannelPoint::release_funding_txid_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelPoint.funding_txid_bytes)
  if (funding_txid_case() != kFundingTxidBytes) {
    return nullptr;
  }
  clear_has_funding_txid();
  return _impl_.funding_txid_.funding_txid_bytes_.Release();
}
inline void ChannelPoint::set_allocated_funding_txid_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_funding_txid()) {
    clear_funding_txid();
  }
  if (value != nullptr) {
    set_has_funding_txid_bytes();
    _impl_.funding_txid_.funding_txid_bytes_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelPoint.funding_txid_bytes)
}

// string funding_txid_str = 2;
inline bool ChannelPoint::has_funding_txid_str() const {
  return funding_txid_case() == kFundingTxidStr;
}
inline void ChannelPoint::set_has_funding_txid_str() {
  _impl_._oneof_case_[0] = kFundingTxidStr;
}
inline void ChannelPoint::clear_funding_txid_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() == kFundingTxidStr) {
    _impl_.funding_txid_.funding_txid_str_.Destroy();
    clear_has_funding_txid();
  }
}
inline const std::string& ChannelPoint::funding_txid_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelPoint.funding_txid_str)
  return _internal_funding_txid_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelPoint::set_funding_txid_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() != kFundingTxidStr) {
    clear_funding_txid();

    set_has_funding_txid_str();
    _impl_.funding_txid_.funding_txid_str_.InitDefault();
  }
  _impl_.funding_txid_.funding_txid_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelPoint.funding_txid_str)
}
inline std::string* ChannelPoint::mutable_funding_txid_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funding_txid_str();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelPoint.funding_txid_str)
  return _s;
}
inline const std::string& ChannelPoint::_internal_funding_txid_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (funding_txid_case() != kFundingTxidStr) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.funding_txid_.funding_txid_str_.Get();
}
inline void ChannelPoint::_internal_set_funding_txid_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() != kFundingTxidStr) {
    clear_funding_txid();

    set_has_funding_txid_str();
    _impl_.funding_txid_.funding_txid_str_.InitDefault();
  }
  _impl_.funding_txid_.funding_txid_str_.Set(value, GetArena());
}
inline std::string* ChannelPoint::_internal_mutable_funding_txid_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (funding_txid_case() != kFundingTxidStr) {
    clear_funding_txid();

    set_has_funding_txid_str();
    _impl_.funding_txid_.funding_txid_str_.InitDefault();
  }
  return _impl_.funding_txid_.funding_txid_str_.Mutable( GetArena());
}
inline std::string* ChannelPoint::release_funding_txid_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelPoint.funding_txid_str)
  if (funding_txid_case() != kFundingTxidStr) {
    return nullptr;
  }
  clear_has_funding_txid();
  return _impl_.funding_txid_.funding_txid_str_.Release();
}
inline void ChannelPoint::set_allocated_funding_txid_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_funding_txid()) {
    clear_funding_txid();
  }
  if (value != nullptr) {
    set_has_funding_txid_str();
    _impl_.funding_txid_.funding_txid_str_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelPoint.funding_txid_str)
}

// uint32 output_index = 3;
inline void ChannelPoint::clear_output_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = 0u;
}
inline ::uint32_t ChannelPoint::output_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelPoint.output_index)
  return _internal_output_index();
}
inline void ChannelPoint::set_output_index(::uint32_t value) {
  _internal_set_output_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelPoint.output_index)
}
inline ::uint32_t ChannelPoint::_internal_output_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_index_;
}
inline void ChannelPoint::_internal_set_output_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = value;
}

inline bool ChannelPoint::has_funding_txid() const {
  return funding_txid_case() != FUNDING_TXID_NOT_SET;
}
inline void ChannelPoint::clear_has_funding_txid() {
  _impl_._oneof_case_[0] = FUNDING_TXID_NOT_SET;
}
inline ChannelPoint::FundingTxidCase ChannelPoint::funding_txid_case() const {
  return ChannelPoint::FundingTxidCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// OutPoint

// bytes txid_bytes = 1;
inline void OutPoint::clear_txid_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_bytes_.ClearToEmpty();
}
inline const std::string& OutPoint::txid_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OutPoint.txid_bytes)
  return _internal_txid_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OutPoint::set_txid_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OutPoint.txid_bytes)
}
inline std::string* OutPoint::mutable_txid_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid_bytes();
  // @@protoc_insertion_point(field_mutable:lnrpc.OutPoint.txid_bytes)
  return _s;
}
inline const std::string& OutPoint::_internal_txid_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_bytes_.Get();
}
inline void OutPoint::_internal_set_txid_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_bytes_.Set(value, GetArena());
}
inline std::string* OutPoint::_internal_mutable_txid_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_bytes_.Mutable( GetArena());
}
inline std::string* OutPoint::release_txid_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OutPoint.txid_bytes)
  return _impl_.txid_bytes_.Release();
}
inline void OutPoint::set_allocated_txid_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_bytes_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_bytes_.IsDefault()) {
          _impl_.txid_bytes_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OutPoint.txid_bytes)
}

// string txid_str = 2;
inline void OutPoint::clear_txid_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_str_.ClearToEmpty();
}
inline const std::string& OutPoint::txid_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OutPoint.txid_str)
  return _internal_txid_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OutPoint::set_txid_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OutPoint.txid_str)
}
inline std::string* OutPoint::mutable_txid_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid_str();
  // @@protoc_insertion_point(field_mutable:lnrpc.OutPoint.txid_str)
  return _s;
}
inline const std::string& OutPoint::_internal_txid_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_str_.Get();
}
inline void OutPoint::_internal_set_txid_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_str_.Set(value, GetArena());
}
inline std::string* OutPoint::_internal_mutable_txid_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_str_.Mutable( GetArena());
}
inline std::string* OutPoint::release_txid_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OutPoint.txid_str)
  return _impl_.txid_str_.Release();
}
inline void OutPoint::set_allocated_txid_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_str_.IsDefault()) {
          _impl_.txid_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OutPoint.txid_str)
}

// uint32 output_index = 3;
inline void OutPoint::clear_output_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = 0u;
}
inline ::uint32_t OutPoint::output_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.OutPoint.output_index)
  return _internal_output_index();
}
inline void OutPoint::set_output_index(::uint32_t value) {
  _internal_set_output_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.OutPoint.output_index)
}
inline ::uint32_t OutPoint::_internal_output_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_index_;
}
inline void OutPoint::_internal_set_output_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = value;
}

// -------------------------------------------------------------------

// PreviousOutPoint

// string outpoint = 1;
inline void PreviousOutPoint::clear_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.ClearToEmpty();
}
inline const std::string& PreviousOutPoint::outpoint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PreviousOutPoint.outpoint)
  return _internal_outpoint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreviousOutPoint::set_outpoint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PreviousOutPoint.outpoint)
}
inline std::string* PreviousOutPoint::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:lnrpc.PreviousOutPoint.outpoint)
  return _s;
}
inline const std::string& PreviousOutPoint::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outpoint_.Get();
}
inline void PreviousOutPoint::_internal_set_outpoint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.Set(value, GetArena());
}
inline std::string* PreviousOutPoint::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.outpoint_.Mutable( GetArena());
}
inline std::string* PreviousOutPoint::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PreviousOutPoint.outpoint)
  return _impl_.outpoint_.Release();
}
inline void PreviousOutPoint::set_allocated_outpoint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.outpoint_.IsDefault()) {
          _impl_.outpoint_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PreviousOutPoint.outpoint)
}

// bool is_our_output = 2;
inline void PreviousOutPoint::clear_is_our_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_our_output_ = false;
}
inline bool PreviousOutPoint::is_our_output() const {
  // @@protoc_insertion_point(field_get:lnrpc.PreviousOutPoint.is_our_output)
  return _internal_is_our_output();
}
inline void PreviousOutPoint::set_is_our_output(bool value) {
  _internal_set_is_our_output(value);
  // @@protoc_insertion_point(field_set:lnrpc.PreviousOutPoint.is_our_output)
}
inline bool PreviousOutPoint::_internal_is_our_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_our_output_;
}
inline void PreviousOutPoint::_internal_set_is_our_output(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_our_output_ = value;
}

// -------------------------------------------------------------------

// LightningAddress

// string pubkey = 1;
inline void LightningAddress::clear_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.ClearToEmpty();
}
inline const std::string& LightningAddress::pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.LightningAddress.pubkey)
  return _internal_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightningAddress::set_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.LightningAddress.pubkey)
}
inline std::string* LightningAddress::mutable_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.LightningAddress.pubkey)
  return _s;
}
inline const std::string& LightningAddress::_internal_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pubkey_.Get();
}
inline void LightningAddress::_internal_set_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.Set(value, GetArena());
}
inline std::string* LightningAddress::_internal_mutable_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pubkey_.Mutable( GetArena());
}
inline std::string* LightningAddress::release_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.LightningAddress.pubkey)
  return _impl_.pubkey_.Release();
}
inline void LightningAddress::set_allocated_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubkey_.IsDefault()) {
          _impl_.pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.LightningAddress.pubkey)
}

// string host = 2;
inline void LightningAddress::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& LightningAddress::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.LightningAddress.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightningAddress::set_host(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.LightningAddress.host)
}
inline std::string* LightningAddress::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:lnrpc.LightningAddress.host)
  return _s;
}
inline const std::string& LightningAddress::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void LightningAddress::_internal_set_host(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(value, GetArena());
}
inline std::string* LightningAddress::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* LightningAddress::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.LightningAddress.host)
  return _impl_.host_.Release();
}
inline void LightningAddress::set_allocated_host(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.host_.IsDefault()) {
          _impl_.host_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.LightningAddress.host)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// EstimateFeeRequest

// map<string, int64> AddrToAmount = 1;
inline int EstimateFeeRequest::_internal_addrtoamount_size() const {
  return _internal_addrtoamount().size();
}
inline int EstimateFeeRequest::addrtoamount_size() const {
  return _internal_addrtoamount_size();
}
inline void EstimateFeeRequest::clear_addrtoamount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addrtoamount_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& EstimateFeeRequest::_internal_addrtoamount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addrtoamount_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& EstimateFeeRequest::addrtoamount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.EstimateFeeRequest.AddrToAmount)
  return _internal_addrtoamount();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* EstimateFeeRequest::_internal_mutable_addrtoamount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addrtoamount_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* EstimateFeeRequest::mutable_addrtoamount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.EstimateFeeRequest.AddrToAmount)
  return _internal_mutable_addrtoamount();
}

// int32 target_conf = 2;
inline void EstimateFeeRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0;
}
inline ::int32_t EstimateFeeRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeRequest.target_conf)
  return _internal_target_conf();
}
inline void EstimateFeeRequest::set_target_conf(::int32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeRequest.target_conf)
}
inline ::int32_t EstimateFeeRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void EstimateFeeRequest::_internal_set_target_conf(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// int32 min_confs = 3;
inline void EstimateFeeRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t EstimateFeeRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeRequest.min_confs)
  return _internal_min_confs();
}
inline void EstimateFeeRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeRequest.min_confs)
}
inline ::int32_t EstimateFeeRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void EstimateFeeRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 4;
inline void EstimateFeeRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool EstimateFeeRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void EstimateFeeRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeRequest.spend_unconfirmed)
}
inline bool EstimateFeeRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void EstimateFeeRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// .lnrpc.CoinSelectionStrategy coin_selection_strategy = 5;
inline void EstimateFeeRequest::clear_coin_selection_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = 0;
}
inline ::lnrpc::CoinSelectionStrategy EstimateFeeRequest::coin_selection_strategy() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeRequest.coin_selection_strategy)
  return _internal_coin_selection_strategy();
}
inline void EstimateFeeRequest::set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  _internal_set_coin_selection_strategy(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeRequest.coin_selection_strategy)
}
inline ::lnrpc::CoinSelectionStrategy EstimateFeeRequest::_internal_coin_selection_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CoinSelectionStrategy>(_impl_.coin_selection_strategy_);
}
inline void EstimateFeeRequest::_internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = value;
}

// -------------------------------------------------------------------

// EstimateFeeResponse

// int64 fee_sat = 1;
inline void EstimateFeeResponse::clear_fee_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_sat_ = ::int64_t{0};
}
inline ::int64_t EstimateFeeResponse::fee_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeResponse.fee_sat)
  return _internal_fee_sat();
}
inline void EstimateFeeResponse::set_fee_sat(::int64_t value) {
  _internal_set_fee_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeResponse.fee_sat)
}
inline ::int64_t EstimateFeeResponse::_internal_fee_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_sat_;
}
inline void EstimateFeeResponse::_internal_set_fee_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_sat_ = value;
}

// int64 feerate_sat_per_byte = 2 [deprecated = true];
inline void EstimateFeeResponse::clear_feerate_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feerate_sat_per_byte_ = ::int64_t{0};
}
inline ::int64_t EstimateFeeResponse::feerate_sat_per_byte() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeResponse.feerate_sat_per_byte)
  return _internal_feerate_sat_per_byte();
}
inline void EstimateFeeResponse::set_feerate_sat_per_byte(::int64_t value) {
  _internal_set_feerate_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeResponse.feerate_sat_per_byte)
}
inline ::int64_t EstimateFeeResponse::_internal_feerate_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.feerate_sat_per_byte_;
}
inline void EstimateFeeResponse::_internal_set_feerate_sat_per_byte(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.feerate_sat_per_byte_ = value;
}

// uint64 sat_per_vbyte = 3;
inline void EstimateFeeResponse::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t EstimateFeeResponse::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.EstimateFeeResponse.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void EstimateFeeResponse::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.EstimateFeeResponse.sat_per_vbyte)
}
inline ::uint64_t EstimateFeeResponse::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void EstimateFeeResponse::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// SendManyRequest

// map<string, int64> AddrToAmount = 1;
inline int SendManyRequest::_internal_addrtoamount_size() const {
  return _internal_addrtoamount().size();
}
inline int SendManyRequest::addrtoamount_size() const {
  return _internal_addrtoamount_size();
}
inline void SendManyRequest::clear_addrtoamount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addrtoamount_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& SendManyRequest::_internal_addrtoamount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addrtoamount_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::int64_t>& SendManyRequest::addrtoamount() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.SendManyRequest.AddrToAmount)
  return _internal_addrtoamount();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* SendManyRequest::_internal_mutable_addrtoamount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addrtoamount_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::int64_t>* SendManyRequest::mutable_addrtoamount() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.SendManyRequest.AddrToAmount)
  return _internal_mutable_addrtoamount();
}

// int32 target_conf = 3;
inline void SendManyRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0;
}
inline ::int32_t SendManyRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.target_conf)
  return _internal_target_conf();
}
inline void SendManyRequest::set_target_conf(::int32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.target_conf)
}
inline ::int32_t SendManyRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void SendManyRequest::_internal_set_target_conf(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// uint64 sat_per_vbyte = 4;
inline void SendManyRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t SendManyRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void SendManyRequest::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.sat_per_vbyte)
}
inline ::uint64_t SendManyRequest::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void SendManyRequest::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// int64 sat_per_byte = 5 [deprecated = true];
inline void SendManyRequest::clear_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = ::int64_t{0};
}
inline ::int64_t SendManyRequest::sat_per_byte() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.sat_per_byte)
  return _internal_sat_per_byte();
}
inline void SendManyRequest::set_sat_per_byte(::int64_t value) {
  _internal_set_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.sat_per_byte)
}
inline ::int64_t SendManyRequest::_internal_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_byte_;
}
inline void SendManyRequest::_internal_set_sat_per_byte(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = value;
}

// string label = 6;
inline void SendManyRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& SendManyRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendManyRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.label)
}
inline std::string* SendManyRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendManyRequest.label)
  return _s;
}
inline const std::string& SendManyRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void SendManyRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* SendManyRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* SendManyRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendManyRequest.label)
  return _impl_.label_.Release();
}
inline void SendManyRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendManyRequest.label)
}

// int32 min_confs = 7;
inline void SendManyRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t SendManyRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.min_confs)
  return _internal_min_confs();
}
inline void SendManyRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.min_confs)
}
inline ::int32_t SendManyRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void SendManyRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 8;
inline void SendManyRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool SendManyRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void SendManyRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.spend_unconfirmed)
}
inline bool SendManyRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void SendManyRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// .lnrpc.CoinSelectionStrategy coin_selection_strategy = 9;
inline void SendManyRequest::clear_coin_selection_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = 0;
}
inline ::lnrpc::CoinSelectionStrategy SendManyRequest::coin_selection_strategy() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyRequest.coin_selection_strategy)
  return _internal_coin_selection_strategy();
}
inline void SendManyRequest::set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  _internal_set_coin_selection_strategy(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendManyRequest.coin_selection_strategy)
}
inline ::lnrpc::CoinSelectionStrategy SendManyRequest::_internal_coin_selection_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CoinSelectionStrategy>(_impl_.coin_selection_strategy_);
}
inline void SendManyRequest::_internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = value;
}

// -------------------------------------------------------------------

// SendManyResponse

// string txid = 1;
inline void SendManyResponse::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
}
inline const std::string& SendManyResponse::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendManyResponse.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendManyResponse::set_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendManyResponse.txid)
}
inline std::string* SendManyResponse::mutable_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendManyResponse.txid)
  return _s;
}
inline const std::string& SendManyResponse::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void SendManyResponse::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* SendManyResponse::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* SendManyResponse::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendManyResponse.txid)
  return _impl_.txid_.Release();
}
inline void SendManyResponse::set_allocated_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_.IsDefault()) {
          _impl_.txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendManyResponse.txid)
}

// -------------------------------------------------------------------

// SendCoinsRequest

// string addr = 1;
inline void SendCoinsRequest::clear_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.ClearToEmpty();
}
inline const std::string& SendCoinsRequest::addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.addr)
  return _internal_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendCoinsRequest::set_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.addr)
}
inline std::string* SendCoinsRequest::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendCoinsRequest.addr)
  return _s;
}
inline const std::string& SendCoinsRequest::_internal_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addr_.Get();
}
inline void SendCoinsRequest::_internal_set_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(value, GetArena());
}
inline std::string* SendCoinsRequest::_internal_mutable_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addr_.Mutable( GetArena());
}
inline std::string* SendCoinsRequest::release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendCoinsRequest.addr)
  return _impl_.addr_.Release();
}
inline void SendCoinsRequest::set_allocated_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.addr_.IsDefault()) {
          _impl_.addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendCoinsRequest.addr)
}

// int64 amount = 2;
inline void SendCoinsRequest::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t SendCoinsRequest::amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.amount)
  return _internal_amount();
}
inline void SendCoinsRequest::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.amount)
}
inline ::int64_t SendCoinsRequest::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void SendCoinsRequest::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// int32 target_conf = 3;
inline void SendCoinsRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0;
}
inline ::int32_t SendCoinsRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.target_conf)
  return _internal_target_conf();
}
inline void SendCoinsRequest::set_target_conf(::int32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.target_conf)
}
inline ::int32_t SendCoinsRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void SendCoinsRequest::_internal_set_target_conf(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// uint64 sat_per_vbyte = 4;
inline void SendCoinsRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t SendCoinsRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void SendCoinsRequest::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.sat_per_vbyte)
}
inline ::uint64_t SendCoinsRequest::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void SendCoinsRequest::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// int64 sat_per_byte = 5 [deprecated = true];
inline void SendCoinsRequest::clear_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = ::int64_t{0};
}
inline ::int64_t SendCoinsRequest::sat_per_byte() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.sat_per_byte)
  return _internal_sat_per_byte();
}
inline void SendCoinsRequest::set_sat_per_byte(::int64_t value) {
  _internal_set_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.sat_per_byte)
}
inline ::int64_t SendCoinsRequest::_internal_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_byte_;
}
inline void SendCoinsRequest::_internal_set_sat_per_byte(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = value;
}

// bool send_all = 6;
inline void SendCoinsRequest::clear_send_all() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_all_ = false;
}
inline bool SendCoinsRequest::send_all() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.send_all)
  return _internal_send_all();
}
inline void SendCoinsRequest::set_send_all(bool value) {
  _internal_set_send_all(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.send_all)
}
inline bool SendCoinsRequest::_internal_send_all() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.send_all_;
}
inline void SendCoinsRequest::_internal_set_send_all(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.send_all_ = value;
}

// string label = 7;
inline void SendCoinsRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& SendCoinsRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendCoinsRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.label)
}
inline std::string* SendCoinsRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendCoinsRequest.label)
  return _s;
}
inline const std::string& SendCoinsRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void SendCoinsRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* SendCoinsRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* SendCoinsRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendCoinsRequest.label)
  return _impl_.label_.Release();
}
inline void SendCoinsRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendCoinsRequest.label)
}

// int32 min_confs = 8;
inline void SendCoinsRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t SendCoinsRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.min_confs)
  return _internal_min_confs();
}
inline void SendCoinsRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.min_confs)
}
inline ::int32_t SendCoinsRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void SendCoinsRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 9;
inline void SendCoinsRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool SendCoinsRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void SendCoinsRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.spend_unconfirmed)
}
inline bool SendCoinsRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void SendCoinsRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// .lnrpc.CoinSelectionStrategy coin_selection_strategy = 10;
inline void SendCoinsRequest::clear_coin_selection_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = 0;
}
inline ::lnrpc::CoinSelectionStrategy SendCoinsRequest::coin_selection_strategy() const {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.coin_selection_strategy)
  return _internal_coin_selection_strategy();
}
inline void SendCoinsRequest::set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  _internal_set_coin_selection_strategy(value);
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsRequest.coin_selection_strategy)
}
inline ::lnrpc::CoinSelectionStrategy SendCoinsRequest::_internal_coin_selection_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CoinSelectionStrategy>(_impl_.coin_selection_strategy_);
}
inline void SendCoinsRequest::_internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = value;
}

// repeated .lnrpc.OutPoint outpoints = 11;
inline int SendCoinsRequest::_internal_outpoints_size() const {
  return _internal_outpoints().size();
}
inline int SendCoinsRequest::outpoints_size() const {
  return _internal_outpoints_size();
}
inline void SendCoinsRequest::clear_outpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoints_.Clear();
}
inline ::lnrpc::OutPoint* SendCoinsRequest::mutable_outpoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.SendCoinsRequest.outpoints)
  return _internal_mutable_outpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* SendCoinsRequest::mutable_outpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.SendCoinsRequest.outpoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outpoints();
}
inline const ::lnrpc::OutPoint& SendCoinsRequest::outpoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsRequest.outpoints)
  return _internal_outpoints().Get(index);
}
inline ::lnrpc::OutPoint* SendCoinsRequest::add_outpoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::OutPoint* _add = _internal_mutable_outpoints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.SendCoinsRequest.outpoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& SendCoinsRequest::outpoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.SendCoinsRequest.outpoints)
  return _internal_outpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>&
SendCoinsRequest::_internal_outpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>*
SendCoinsRequest::_internal_mutable_outpoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outpoints_;
}

// -------------------------------------------------------------------

// SendCoinsResponse

// string txid = 1;
inline void SendCoinsResponse::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
}
inline const std::string& SendCoinsResponse::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SendCoinsResponse.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendCoinsResponse::set_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SendCoinsResponse.txid)
}
inline std::string* SendCoinsResponse::mutable_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.SendCoinsResponse.txid)
  return _s;
}
inline const std::string& SendCoinsResponse::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void SendCoinsResponse::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* SendCoinsResponse::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* SendCoinsResponse::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SendCoinsResponse.txid)
  return _impl_.txid_.Release();
}
inline void SendCoinsResponse::set_allocated_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_.IsDefault()) {
          _impl_.txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SendCoinsResponse.txid)
}

// -------------------------------------------------------------------

// ListUnspentRequest

// int32 min_confs = 1;
inline void ListUnspentRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t ListUnspentRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListUnspentRequest.min_confs)
  return _internal_min_confs();
}
inline void ListUnspentRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListUnspentRequest.min_confs)
}
inline ::int32_t ListUnspentRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void ListUnspentRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// int32 max_confs = 2;
inline void ListUnspentRequest::clear_max_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_confs_ = 0;
}
inline ::int32_t ListUnspentRequest::max_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListUnspentRequest.max_confs)
  return _internal_max_confs();
}
inline void ListUnspentRequest::set_max_confs(::int32_t value) {
  _internal_set_max_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListUnspentRequest.max_confs)
}
inline ::int32_t ListUnspentRequest::_internal_max_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_confs_;
}
inline void ListUnspentRequest::_internal_set_max_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_confs_ = value;
}

// string account = 3;
inline void ListUnspentRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& ListUnspentRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListUnspentRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListUnspentRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ListUnspentRequest.account)
}
inline std::string* ListUnspentRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:lnrpc.ListUnspentRequest.account)
  return _s;
}
inline const std::string& ListUnspentRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void ListUnspentRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* ListUnspentRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* ListUnspentRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ListUnspentRequest.account)
  return _impl_.account_.Release();
}
inline void ListUnspentRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ListUnspentRequest.account)
}

// -------------------------------------------------------------------

// ListUnspentResponse

// repeated .lnrpc.Utxo utxos = 1;
inline int ListUnspentResponse::_internal_utxos_size() const {
  return _internal_utxos().size();
}
inline int ListUnspentResponse::utxos_size() const {
  return _internal_utxos_size();
}
inline void ListUnspentResponse::clear_utxos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.utxos_.Clear();
}
inline ::lnrpc::Utxo* ListUnspentResponse::mutable_utxos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ListUnspentResponse.utxos)
  return _internal_mutable_utxos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>* ListUnspentResponse::mutable_utxos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListUnspentResponse.utxos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_utxos();
}
inline const ::lnrpc::Utxo& ListUnspentResponse::utxos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListUnspentResponse.utxos)
  return _internal_utxos().Get(index);
}
inline ::lnrpc::Utxo* ListUnspentResponse::add_utxos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Utxo* _add = _internal_mutable_utxos()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ListUnspentResponse.utxos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>& ListUnspentResponse::utxos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListUnspentResponse.utxos)
  return _internal_utxos();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>&
ListUnspentResponse::_internal_utxos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.utxos_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>*
ListUnspentResponse::_internal_mutable_utxos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.utxos_;
}

// -------------------------------------------------------------------

// NewAddressRequest

// .lnrpc.AddressType type = 1;
inline void NewAddressRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::lnrpc::AddressType NewAddressRequest::type() const {
  // @@protoc_insertion_point(field_get:lnrpc.NewAddressRequest.type)
  return _internal_type();
}
inline void NewAddressRequest::set_type(::lnrpc::AddressType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.NewAddressRequest.type)
}
inline ::lnrpc::AddressType NewAddressRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::AddressType>(_impl_.type_);
}
inline void NewAddressRequest::_internal_set_type(::lnrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// string account = 2;
inline void NewAddressRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& NewAddressRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NewAddressRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewAddressRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NewAddressRequest.account)
}
inline std::string* NewAddressRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:lnrpc.NewAddressRequest.account)
  return _s;
}
inline const std::string& NewAddressRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void NewAddressRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* NewAddressRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* NewAddressRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NewAddressRequest.account)
  return _impl_.account_.Release();
}
inline void NewAddressRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NewAddressRequest.account)
}

// -------------------------------------------------------------------

// NewAddressResponse

// string address = 1;
inline void NewAddressResponse::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& NewAddressResponse::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NewAddressResponse.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NewAddressResponse::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NewAddressResponse.address)
}
inline std::string* NewAddressResponse::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.NewAddressResponse.address)
  return _s;
}
inline const std::string& NewAddressResponse::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void NewAddressResponse::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* NewAddressResponse::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* NewAddressResponse::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NewAddressResponse.address)
  return _impl_.address_.Release();
}
inline void NewAddressResponse::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NewAddressResponse.address)
}

// -------------------------------------------------------------------

// SignMessageRequest

// bytes msg = 1;
inline void SignMessageRequest::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SignMessageRequest::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SignMessageRequest.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignMessageRequest::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SignMessageRequest.msg)
}
inline std::string* SignMessageRequest::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:lnrpc.SignMessageRequest.msg)
  return _s;
}
inline const std::string& SignMessageRequest::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void SignMessageRequest::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* SignMessageRequest::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* SignMessageRequest::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SignMessageRequest.msg)
  return _impl_.msg_.Release();
}
inline void SignMessageRequest::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SignMessageRequest.msg)
}

// bool single_hash = 2;
inline void SignMessageRequest::clear_single_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.single_hash_ = false;
}
inline bool SignMessageRequest::single_hash() const {
  // @@protoc_insertion_point(field_get:lnrpc.SignMessageRequest.single_hash)
  return _internal_single_hash();
}
inline void SignMessageRequest::set_single_hash(bool value) {
  _internal_set_single_hash(value);
  // @@protoc_insertion_point(field_set:lnrpc.SignMessageRequest.single_hash)
}
inline bool SignMessageRequest::_internal_single_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.single_hash_;
}
inline void SignMessageRequest::_internal_set_single_hash(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.single_hash_ = value;
}

// -------------------------------------------------------------------

// SignMessageResponse

// string signature = 1;
inline void SignMessageResponse::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& SignMessageResponse::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SignMessageResponse.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignMessageResponse::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SignMessageResponse.signature)
}
inline std::string* SignMessageResponse::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:lnrpc.SignMessageResponse.signature)
  return _s;
}
inline const std::string& SignMessageResponse::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void SignMessageResponse::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* SignMessageResponse::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* SignMessageResponse::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SignMessageResponse.signature)
  return _impl_.signature_.Release();
}
inline void SignMessageResponse::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SignMessageResponse.signature)
}

// -------------------------------------------------------------------

// VerifyMessageRequest

// bytes msg = 1;
inline void VerifyMessageRequest::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& VerifyMessageRequest::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.VerifyMessageRequest.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageRequest::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.VerifyMessageRequest.msg)
}
inline std::string* VerifyMessageRequest::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:lnrpc.VerifyMessageRequest.msg)
  return _s;
}
inline const std::string& VerifyMessageRequest::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void VerifyMessageRequest::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* VerifyMessageRequest::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* VerifyMessageRequest::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.VerifyMessageRequest.msg)
  return _impl_.msg_.Release();
}
inline void VerifyMessageRequest::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.VerifyMessageRequest.msg)
}

// string signature = 2;
inline void VerifyMessageRequest::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& VerifyMessageRequest::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.VerifyMessageRequest.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageRequest::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.VerifyMessageRequest.signature)
}
inline std::string* VerifyMessageRequest::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:lnrpc.VerifyMessageRequest.signature)
  return _s;
}
inline const std::string& VerifyMessageRequest::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void VerifyMessageRequest::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* VerifyMessageRequest::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* VerifyMessageRequest::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.VerifyMessageRequest.signature)
  return _impl_.signature_.Release();
}
inline void VerifyMessageRequest::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.VerifyMessageRequest.signature)
}

// -------------------------------------------------------------------

// VerifyMessageResponse

// bool valid = 1;
inline void VerifyMessageResponse::clear_valid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = false;
}
inline bool VerifyMessageResponse::valid() const {
  // @@protoc_insertion_point(field_get:lnrpc.VerifyMessageResponse.valid)
  return _internal_valid();
}
inline void VerifyMessageResponse::set_valid(bool value) {
  _internal_set_valid(value);
  // @@protoc_insertion_point(field_set:lnrpc.VerifyMessageResponse.valid)
}
inline bool VerifyMessageResponse::_internal_valid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.valid_;
}
inline void VerifyMessageResponse::_internal_set_valid(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = value;
}

// string pubkey = 2;
inline void VerifyMessageResponse::clear_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.ClearToEmpty();
}
inline const std::string& VerifyMessageResponse::pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.VerifyMessageResponse.pubkey)
  return _internal_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageResponse::set_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.VerifyMessageResponse.pubkey)
}
inline std::string* VerifyMessageResponse::mutable_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.VerifyMessageResponse.pubkey)
  return _s;
}
inline const std::string& VerifyMessageResponse::_internal_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pubkey_.Get();
}
inline void VerifyMessageResponse::_internal_set_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.Set(value, GetArena());
}
inline std::string* VerifyMessageResponse::_internal_mutable_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pubkey_.Mutable( GetArena());
}
inline std::string* VerifyMessageResponse::release_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.VerifyMessageResponse.pubkey)
  return _impl_.pubkey_.Release();
}
inline void VerifyMessageResponse::set_allocated_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubkey_.IsDefault()) {
          _impl_.pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.VerifyMessageResponse.pubkey)
}

// -------------------------------------------------------------------

// ConnectPeerRequest

// .lnrpc.LightningAddress addr = 1;
inline bool ConnectPeerRequest::has_addr() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.addr_ != nullptr);
  return value;
}
inline void ConnectPeerRequest::clear_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.addr_ != nullptr) _impl_.addr_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::LightningAddress& ConnectPeerRequest::_internal_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::LightningAddress* p = _impl_.addr_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::LightningAddress&>(::lnrpc::_LightningAddress_default_instance_);
}
inline const ::lnrpc::LightningAddress& ConnectPeerRequest::addr() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ConnectPeerRequest.addr)
  return _internal_addr();
}
inline void ConnectPeerRequest::unsafe_arena_set_allocated_addr(::lnrpc::LightningAddress* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.addr_);
  }
  _impl_.addr_ = reinterpret_cast<::lnrpc::LightningAddress*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ConnectPeerRequest.addr)
}
inline ::lnrpc::LightningAddress* ConnectPeerRequest::release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::LightningAddress* released = _impl_.addr_;
  _impl_.addr_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::LightningAddress* ConnectPeerRequest::unsafe_arena_release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ConnectPeerRequest.addr)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::LightningAddress* temp = _impl_.addr_;
  _impl_.addr_ = nullptr;
  return temp;
}
inline ::lnrpc::LightningAddress* ConnectPeerRequest::_internal_mutable_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.addr_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::LightningAddress>(GetArena());
    _impl_.addr_ = reinterpret_cast<::lnrpc::LightningAddress*>(p);
  }
  return _impl_.addr_;
}
inline ::lnrpc::LightningAddress* ConnectPeerRequest::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::LightningAddress* _msg = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.ConnectPeerRequest.addr)
  return _msg;
}
inline void ConnectPeerRequest::set_allocated_addr(::lnrpc::LightningAddress* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.addr_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.addr_ = reinterpret_cast<::lnrpc::LightningAddress*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ConnectPeerRequest.addr)
}

// bool perm = 2;
inline void ConnectPeerRequest::clear_perm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perm_ = false;
}
inline bool ConnectPeerRequest::perm() const {
  // @@protoc_insertion_point(field_get:lnrpc.ConnectPeerRequest.perm)
  return _internal_perm();
}
inline void ConnectPeerRequest::set_perm(bool value) {
  _internal_set_perm(value);
  // @@protoc_insertion_point(field_set:lnrpc.ConnectPeerRequest.perm)
}
inline bool ConnectPeerRequest::_internal_perm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perm_;
}
inline void ConnectPeerRequest::_internal_set_perm(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perm_ = value;
}

// uint64 timeout = 3;
inline void ConnectPeerRequest::clear_timeout() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = ::uint64_t{0u};
}
inline ::uint64_t ConnectPeerRequest::timeout() const {
  // @@protoc_insertion_point(field_get:lnrpc.ConnectPeerRequest.timeout)
  return _internal_timeout();
}
inline void ConnectPeerRequest::set_timeout(::uint64_t value) {
  _internal_set_timeout(value);
  // @@protoc_insertion_point(field_set:lnrpc.ConnectPeerRequest.timeout)
}
inline ::uint64_t ConnectPeerRequest::_internal_timeout() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timeout_;
}
inline void ConnectPeerRequest::_internal_set_timeout(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timeout_ = value;
}

// -------------------------------------------------------------------

// ConnectPeerResponse

// -------------------------------------------------------------------

// DisconnectPeerRequest

// string pub_key = 1;
inline void DisconnectPeerRequest::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& DisconnectPeerRequest::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.DisconnectPeerRequest.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DisconnectPeerRequest::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.DisconnectPeerRequest.pub_key)
}
inline std::string* DisconnectPeerRequest::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.DisconnectPeerRequest.pub_key)
  return _s;
}
inline const std::string& DisconnectPeerRequest::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void DisconnectPeerRequest::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* DisconnectPeerRequest::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* DisconnectPeerRequest::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.DisconnectPeerRequest.pub_key)
  return _impl_.pub_key_.Release();
}
inline void DisconnectPeerRequest::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.DisconnectPeerRequest.pub_key)
}

// -------------------------------------------------------------------

// DisconnectPeerResponse

// -------------------------------------------------------------------

// HTLC

// bool incoming = 1;
inline void HTLC::clear_incoming() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incoming_ = false;
}
inline bool HTLC::incoming() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.incoming)
  return _internal_incoming();
}
inline void HTLC::set_incoming(bool value) {
  _internal_set_incoming(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.incoming)
}
inline bool HTLC::_internal_incoming() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.incoming_;
}
inline void HTLC::_internal_set_incoming(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incoming_ = value;
}

// int64 amount = 2;
inline void HTLC::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t HTLC::amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.amount)
  return _internal_amount();
}
inline void HTLC::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.amount)
}
inline ::int64_t HTLC::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void HTLC::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// bytes hash_lock = 3;
inline void HTLC::clear_hash_lock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_lock_.ClearToEmpty();
}
inline const std::string& HTLC::hash_lock() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.hash_lock)
  return _internal_hash_lock();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HTLC::set_hash_lock(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_lock_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.hash_lock)
}
inline std::string* HTLC::mutable_hash_lock() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash_lock();
  // @@protoc_insertion_point(field_mutable:lnrpc.HTLC.hash_lock)
  return _s;
}
inline const std::string& HTLC::_internal_hash_lock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_lock_.Get();
}
inline void HTLC::_internal_set_hash_lock(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_lock_.Set(value, GetArena());
}
inline std::string* HTLC::_internal_mutable_hash_lock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_lock_.Mutable( GetArena());
}
inline std::string* HTLC::release_hash_lock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.HTLC.hash_lock)
  return _impl_.hash_lock_.Release();
}
inline void HTLC::set_allocated_hash_lock(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_lock_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_lock_.IsDefault()) {
          _impl_.hash_lock_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.HTLC.hash_lock)
}

// uint32 expiration_height = 4;
inline void HTLC::clear_expiration_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_height_ = 0u;
}
inline ::uint32_t HTLC::expiration_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.expiration_height)
  return _internal_expiration_height();
}
inline void HTLC::set_expiration_height(::uint32_t value) {
  _internal_set_expiration_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.expiration_height)
}
inline ::uint32_t HTLC::_internal_expiration_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiration_height_;
}
inline void HTLC::_internal_set_expiration_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_height_ = value;
}

// uint64 htlc_index = 5;
inline void HTLC::clear_htlc_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_index_ = ::uint64_t{0u};
}
inline ::uint64_t HTLC::htlc_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.htlc_index)
  return _internal_htlc_index();
}
inline void HTLC::set_htlc_index(::uint64_t value) {
  _internal_set_htlc_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.htlc_index)
}
inline ::uint64_t HTLC::_internal_htlc_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_index_;
}
inline void HTLC::_internal_set_htlc_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_index_ = value;
}

// uint64 forwarding_channel = 6;
inline void HTLC::clear_forwarding_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forwarding_channel_ = ::uint64_t{0u};
}
inline ::uint64_t HTLC::forwarding_channel() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.forwarding_channel)
  return _internal_forwarding_channel();
}
inline void HTLC::set_forwarding_channel(::uint64_t value) {
  _internal_set_forwarding_channel(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.forwarding_channel)
}
inline ::uint64_t HTLC::_internal_forwarding_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forwarding_channel_;
}
inline void HTLC::_internal_set_forwarding_channel(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forwarding_channel_ = value;
}

// uint64 forwarding_htlc_index = 7;
inline void HTLC::clear_forwarding_htlc_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forwarding_htlc_index_ = ::uint64_t{0u};
}
inline ::uint64_t HTLC::forwarding_htlc_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLC.forwarding_htlc_index)
  return _internal_forwarding_htlc_index();
}
inline void HTLC::set_forwarding_htlc_index(::uint64_t value) {
  _internal_set_forwarding_htlc_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLC.forwarding_htlc_index)
}
inline ::uint64_t HTLC::_internal_forwarding_htlc_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forwarding_htlc_index_;
}
inline void HTLC::_internal_set_forwarding_htlc_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forwarding_htlc_index_ = value;
}

// -------------------------------------------------------------------

// ChannelConstraints

// uint32 csv_delay = 1;
inline void ChannelConstraints::clear_csv_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = 0u;
}
inline ::uint32_t ChannelConstraints::csv_delay() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelConstraints.csv_delay)
  return _internal_csv_delay();
}
inline void ChannelConstraints::set_csv_delay(::uint32_t value) {
  _internal_set_csv_delay(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelConstraints.csv_delay)
}
inline ::uint32_t ChannelConstraints::_internal_csv_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.csv_delay_;
}
inline void ChannelConstraints::_internal_set_csv_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = value;
}

// uint64 chan_reserve_sat = 2;
inline void ChannelConstraints::clear_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_reserve_sat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelConstraints::chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelConstraints.chan_reserve_sat)
  return _internal_chan_reserve_sat();
}
inline void ChannelConstraints::set_chan_reserve_sat(::uint64_t value) {
  _internal_set_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelConstraints.chan_reserve_sat)
}
inline ::uint64_t ChannelConstraints::_internal_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_reserve_sat_;
}
inline void ChannelConstraints::_internal_set_chan_reserve_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_reserve_sat_ = value;
}

// uint64 dust_limit_sat = 3;
inline void ChannelConstraints::clear_dust_limit_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dust_limit_sat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelConstraints::dust_limit_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelConstraints.dust_limit_sat)
  return _internal_dust_limit_sat();
}
inline void ChannelConstraints::set_dust_limit_sat(::uint64_t value) {
  _internal_set_dust_limit_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelConstraints.dust_limit_sat)
}
inline ::uint64_t ChannelConstraints::_internal_dust_limit_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dust_limit_sat_;
}
inline void ChannelConstraints::_internal_set_dust_limit_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dust_limit_sat_ = value;
}

// uint64 max_pending_amt_msat = 4;
inline void ChannelConstraints::clear_max_pending_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_pending_amt_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelConstraints::max_pending_amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelConstraints.max_pending_amt_msat)
  return _internal_max_pending_amt_msat();
}
inline void ChannelConstraints::set_max_pending_amt_msat(::uint64_t value) {
  _internal_set_max_pending_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelConstraints.max_pending_amt_msat)
}
inline ::uint64_t ChannelConstraints::_internal_max_pending_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_pending_amt_msat_;
}
inline void ChannelConstraints::_internal_set_max_pending_amt_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_pending_amt_msat_ = value;
}

// uint64 min_htlc_msat = 5;
inline void ChannelConstraints::clear_min_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelConstraints::min_htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelConstraints.min_htlc_msat)
  return _internal_min_htlc_msat();
}
inline void ChannelConstraints::set_min_htlc_msat(::uint64_t value) {
  _internal_set_min_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelConstraints.min_htlc_msat)
}
inline ::uint64_t ChannelConstraints::_internal_min_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_msat_;
}
inline void ChannelConstraints::_internal_set_min_htlc_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = value;
}

// uint32 max_accepted_htlcs = 6;
inline void ChannelConstraints::clear_max_accepted_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_accepted_htlcs_ = 0u;
}
inline ::uint32_t ChannelConstraints::max_accepted_htlcs() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelConstraints.max_accepted_htlcs)
  return _internal_max_accepted_htlcs();
}
inline void ChannelConstraints::set_max_accepted_htlcs(::uint32_t value) {
  _internal_set_max_accepted_htlcs(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelConstraints.max_accepted_htlcs)
}
inline ::uint32_t ChannelConstraints::_internal_max_accepted_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_accepted_htlcs_;
}
inline void ChannelConstraints::_internal_set_max_accepted_htlcs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_accepted_htlcs_ = value;
}

// -------------------------------------------------------------------

// Channel

// bool active = 1;
inline void Channel::clear_active() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = false;
}
inline bool Channel::active() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.active)
  return _internal_active();
}
inline void Channel::set_active(bool value) {
  _internal_set_active(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.active)
}
inline bool Channel::_internal_active() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_;
}
inline void Channel::_internal_set_active(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_ = value;
}

// string remote_pubkey = 2;
inline void Channel::clear_remote_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.ClearToEmpty();
}
inline const std::string& Channel::remote_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.remote_pubkey)
  return _internal_remote_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_remote_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.remote_pubkey)
}
inline std::string* Channel::mutable_remote_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.remote_pubkey)
  return _s;
}
inline const std::string& Channel::_internal_remote_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_pubkey_.Get();
}
inline void Channel::_internal_set_remote_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_remote_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_pubkey_.Mutable( GetArena());
}
inline std::string* Channel::release_remote_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.remote_pubkey)
  return _impl_.remote_pubkey_.Release();
}
inline void Channel::set_allocated_remote_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_pubkey_.IsDefault()) {
          _impl_.remote_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.remote_pubkey)
}

// string channel_point = 3;
inline void Channel::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.ClearToEmpty();
}
inline const std::string& Channel::channel_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.channel_point)
  return _internal_channel_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_channel_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.channel_point)
}
inline std::string* Channel::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.channel_point)
  return _s;
}
inline const std::string& Channel::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_point_.Get();
}
inline void Channel::_internal_set_channel_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_point_.Mutable( GetArena());
}
inline std::string* Channel::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.channel_point)
  return _impl_.channel_point_.Release();
}
inline void Channel::set_allocated_channel_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_point_.IsDefault()) {
          _impl_.channel_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.channel_point)
}

// uint64 chan_id = 4 [jstype = JS_STRING];
inline void Channel::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t Channel::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.chan_id)
  return _internal_chan_id();
}
inline void Channel::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.chan_id)
}
inline ::uint64_t Channel::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void Channel::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// int64 capacity = 5;
inline void Channel::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::int64_t{0};
}
inline ::int64_t Channel::capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.capacity)
  return _internal_capacity();
}
inline void Channel::set_capacity(::int64_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.capacity)
}
inline ::int64_t Channel::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void Channel::_internal_set_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// int64 local_balance = 6;
inline void Channel::clear_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_balance_ = ::int64_t{0};
}
inline ::int64_t Channel::local_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.local_balance)
  return _internal_local_balance();
}
inline void Channel::set_local_balance(::int64_t value) {
  _internal_set_local_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.local_balance)
}
inline ::int64_t Channel::_internal_local_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_balance_;
}
inline void Channel::_internal_set_local_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_balance_ = value;
}

// int64 remote_balance = 7;
inline void Channel::clear_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_balance_ = ::int64_t{0};
}
inline ::int64_t Channel::remote_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.remote_balance)
  return _internal_remote_balance();
}
inline void Channel::set_remote_balance(::int64_t value) {
  _internal_set_remote_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.remote_balance)
}
inline ::int64_t Channel::_internal_remote_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_balance_;
}
inline void Channel::_internal_set_remote_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_balance_ = value;
}

// int64 commit_fee = 8;
inline void Channel::clear_commit_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_fee_ = ::int64_t{0};
}
inline ::int64_t Channel::commit_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.commit_fee)
  return _internal_commit_fee();
}
inline void Channel::set_commit_fee(::int64_t value) {
  _internal_set_commit_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.commit_fee)
}
inline ::int64_t Channel::_internal_commit_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commit_fee_;
}
inline void Channel::_internal_set_commit_fee(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_fee_ = value;
}

// int64 commit_weight = 9;
inline void Channel::clear_commit_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_weight_ = ::int64_t{0};
}
inline ::int64_t Channel::commit_weight() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.commit_weight)
  return _internal_commit_weight();
}
inline void Channel::set_commit_weight(::int64_t value) {
  _internal_set_commit_weight(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.commit_weight)
}
inline ::int64_t Channel::_internal_commit_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commit_weight_;
}
inline void Channel::_internal_set_commit_weight(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_weight_ = value;
}

// int64 fee_per_kw = 10;
inline void Channel::clear_fee_per_kw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_kw_ = ::int64_t{0};
}
inline ::int64_t Channel::fee_per_kw() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.fee_per_kw)
  return _internal_fee_per_kw();
}
inline void Channel::set_fee_per_kw(::int64_t value) {
  _internal_set_fee_per_kw(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.fee_per_kw)
}
inline ::int64_t Channel::_internal_fee_per_kw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_per_kw_;
}
inline void Channel::_internal_set_fee_per_kw(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_kw_ = value;
}

// int64 unsettled_balance = 11;
inline void Channel::clear_unsettled_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unsettled_balance_ = ::int64_t{0};
}
inline ::int64_t Channel::unsettled_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.unsettled_balance)
  return _internal_unsettled_balance();
}
inline void Channel::set_unsettled_balance(::int64_t value) {
  _internal_set_unsettled_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.unsettled_balance)
}
inline ::int64_t Channel::_internal_unsettled_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unsettled_balance_;
}
inline void Channel::_internal_set_unsettled_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unsettled_balance_ = value;
}

// int64 total_satoshis_sent = 12;
inline void Channel::clear_total_satoshis_sent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_satoshis_sent_ = ::int64_t{0};
}
inline ::int64_t Channel::total_satoshis_sent() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.total_satoshis_sent)
  return _internal_total_satoshis_sent();
}
inline void Channel::set_total_satoshis_sent(::int64_t value) {
  _internal_set_total_satoshis_sent(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.total_satoshis_sent)
}
inline ::int64_t Channel::_internal_total_satoshis_sent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_satoshis_sent_;
}
inline void Channel::_internal_set_total_satoshis_sent(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_satoshis_sent_ = value;
}

// int64 total_satoshis_received = 13;
inline void Channel::clear_total_satoshis_received() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_satoshis_received_ = ::int64_t{0};
}
inline ::int64_t Channel::total_satoshis_received() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.total_satoshis_received)
  return _internal_total_satoshis_received();
}
inline void Channel::set_total_satoshis_received(::int64_t value) {
  _internal_set_total_satoshis_received(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.total_satoshis_received)
}
inline ::int64_t Channel::_internal_total_satoshis_received() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_satoshis_received_;
}
inline void Channel::_internal_set_total_satoshis_received(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_satoshis_received_ = value;
}

// uint64 num_updates = 14;
inline void Channel::clear_num_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_updates_ = ::uint64_t{0u};
}
inline ::uint64_t Channel::num_updates() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.num_updates)
  return _internal_num_updates();
}
inline void Channel::set_num_updates(::uint64_t value) {
  _internal_set_num_updates(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.num_updates)
}
inline ::uint64_t Channel::_internal_num_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_updates_;
}
inline void Channel::_internal_set_num_updates(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_updates_ = value;
}

// repeated .lnrpc.HTLC pending_htlcs = 15;
inline int Channel::_internal_pending_htlcs_size() const {
  return _internal_pending_htlcs().size();
}
inline int Channel::pending_htlcs_size() const {
  return _internal_pending_htlcs_size();
}
inline void Channel::clear_pending_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_htlcs_.Clear();
}
inline ::lnrpc::HTLC* Channel::mutable_pending_htlcs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.pending_htlcs)
  return _internal_mutable_pending_htlcs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>* Channel::mutable_pending_htlcs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Channel.pending_htlcs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_htlcs();
}
inline const ::lnrpc::HTLC& Channel::pending_htlcs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.pending_htlcs)
  return _internal_pending_htlcs().Get(index);
}
inline ::lnrpc::HTLC* Channel::add_pending_htlcs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::HTLC* _add = _internal_mutable_pending_htlcs()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Channel.pending_htlcs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>& Channel::pending_htlcs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Channel.pending_htlcs)
  return _internal_pending_htlcs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>&
Channel::_internal_pending_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_htlcs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::HTLC>*
Channel::_internal_mutable_pending_htlcs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_htlcs_;
}

// uint32 csv_delay = 16 [deprecated = true];
inline void Channel::clear_csv_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = 0u;
}
inline ::uint32_t Channel::csv_delay() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.csv_delay)
  return _internal_csv_delay();
}
inline void Channel::set_csv_delay(::uint32_t value) {
  _internal_set_csv_delay(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.csv_delay)
}
inline ::uint32_t Channel::_internal_csv_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.csv_delay_;
}
inline void Channel::_internal_set_csv_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.csv_delay_ = value;
}

// bool private = 17;
inline void Channel::clear_private_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = false;
}
inline bool Channel::private_() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.private)
  return _internal_private_();
}
inline void Channel::set_private_(bool value) {
  _internal_set_private_(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.private)
}
inline bool Channel::_internal_private_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private__;
}
inline void Channel::_internal_set_private_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = value;
}

// bool initiator = 18;
inline void Channel::clear_initiator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiator_ = false;
}
inline bool Channel::initiator() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.initiator)
  return _internal_initiator();
}
inline void Channel::set_initiator(bool value) {
  _internal_set_initiator(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.initiator)
}
inline bool Channel::_internal_initiator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initiator_;
}
inline void Channel::_internal_set_initiator(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiator_ = value;
}

// string chan_status_flags = 19;
inline void Channel::clear_chan_status_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.ClearToEmpty();
}
inline const std::string& Channel::chan_status_flags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.chan_status_flags)
  return _internal_chan_status_flags();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_chan_status_flags(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.chan_status_flags)
}
inline std::string* Channel::mutable_chan_status_flags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chan_status_flags();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.chan_status_flags)
  return _s;
}
inline const std::string& Channel::_internal_chan_status_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_status_flags_.Get();
}
inline void Channel::_internal_set_chan_status_flags(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_chan_status_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chan_status_flags_.Mutable( GetArena());
}
inline std::string* Channel::release_chan_status_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.chan_status_flags)
  return _impl_.chan_status_flags_.Release();
}
inline void Channel::set_allocated_chan_status_flags(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chan_status_flags_.IsDefault()) {
          _impl_.chan_status_flags_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.chan_status_flags)
}

// int64 local_chan_reserve_sat = 20 [deprecated = true];
inline void Channel::clear_local_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_chan_reserve_sat_ = ::int64_t{0};
}
inline ::int64_t Channel::local_chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.local_chan_reserve_sat)
  return _internal_local_chan_reserve_sat();
}
inline void Channel::set_local_chan_reserve_sat(::int64_t value) {
  _internal_set_local_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.local_chan_reserve_sat)
}
inline ::int64_t Channel::_internal_local_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_chan_reserve_sat_;
}
inline void Channel::_internal_set_local_chan_reserve_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_chan_reserve_sat_ = value;
}

// int64 remote_chan_reserve_sat = 21 [deprecated = true];
inline void Channel::clear_remote_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = ::int64_t{0};
}
inline ::int64_t Channel::remote_chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.remote_chan_reserve_sat)
  return _internal_remote_chan_reserve_sat();
}
inline void Channel::set_remote_chan_reserve_sat(::int64_t value) {
  _internal_set_remote_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.remote_chan_reserve_sat)
}
inline ::int64_t Channel::_internal_remote_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_chan_reserve_sat_;
}
inline void Channel::_internal_set_remote_chan_reserve_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = value;
}

// bool static_remote_key = 22 [deprecated = true];
inline void Channel::clear_static_remote_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.static_remote_key_ = false;
}
inline bool Channel::static_remote_key() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.static_remote_key)
  return _internal_static_remote_key();
}
inline void Channel::set_static_remote_key(bool value) {
  _internal_set_static_remote_key(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.static_remote_key)
}
inline bool Channel::_internal_static_remote_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.static_remote_key_;
}
inline void Channel::_internal_set_static_remote_key(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.static_remote_key_ = value;
}

// .lnrpc.CommitmentType commitment_type = 26;
inline void Channel::clear_commitment_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = 0;
}
inline ::lnrpc::CommitmentType Channel::commitment_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.commitment_type)
  return _internal_commitment_type();
}
inline void Channel::set_commitment_type(::lnrpc::CommitmentType value) {
  _internal_set_commitment_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.commitment_type)
}
inline ::lnrpc::CommitmentType Channel::_internal_commitment_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CommitmentType>(_impl_.commitment_type_);
}
inline void Channel::_internal_set_commitment_type(::lnrpc::CommitmentType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = value;
}

// int64 lifetime = 23;
inline void Channel::clear_lifetime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lifetime_ = ::int64_t{0};
}
inline ::int64_t Channel::lifetime() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.lifetime)
  return _internal_lifetime();
}
inline void Channel::set_lifetime(::int64_t value) {
  _internal_set_lifetime(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.lifetime)
}
inline ::int64_t Channel::_internal_lifetime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lifetime_;
}
inline void Channel::_internal_set_lifetime(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lifetime_ = value;
}

// int64 uptime = 24;
inline void Channel::clear_uptime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uptime_ = ::int64_t{0};
}
inline ::int64_t Channel::uptime() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.uptime)
  return _internal_uptime();
}
inline void Channel::set_uptime(::int64_t value) {
  _internal_set_uptime(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.uptime)
}
inline ::int64_t Channel::_internal_uptime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uptime_;
}
inline void Channel::_internal_set_uptime(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uptime_ = value;
}

// string close_address = 25;
inline void Channel::clear_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.ClearToEmpty();
}
inline const std::string& Channel::close_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.close_address)
  return _internal_close_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_close_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.close_address)
}
inline std::string* Channel::mutable_close_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_close_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.close_address)
  return _s;
}
inline const std::string& Channel::_internal_close_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.close_address_.Get();
}
inline void Channel::_internal_set_close_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.close_address_.Mutable( GetArena());
}
inline std::string* Channel::release_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.close_address)
  return _impl_.close_address_.Release();
}
inline void Channel::set_allocated_close_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.close_address_.IsDefault()) {
          _impl_.close_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.close_address)
}

// uint64 push_amount_sat = 27;
inline void Channel::clear_push_amount_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_amount_sat_ = ::uint64_t{0u};
}
inline ::uint64_t Channel::push_amount_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.push_amount_sat)
  return _internal_push_amount_sat();
}
inline void Channel::set_push_amount_sat(::uint64_t value) {
  _internal_set_push_amount_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.push_amount_sat)
}
inline ::uint64_t Channel::_internal_push_amount_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.push_amount_sat_;
}
inline void Channel::_internal_set_push_amount_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_amount_sat_ = value;
}

// uint32 thaw_height = 28;
inline void Channel::clear_thaw_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thaw_height_ = 0u;
}
inline ::uint32_t Channel::thaw_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.thaw_height)
  return _internal_thaw_height();
}
inline void Channel::set_thaw_height(::uint32_t value) {
  _internal_set_thaw_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.thaw_height)
}
inline ::uint32_t Channel::_internal_thaw_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.thaw_height_;
}
inline void Channel::_internal_set_thaw_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thaw_height_ = value;
}

// .lnrpc.ChannelConstraints local_constraints = 29;
inline bool Channel::has_local_constraints() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.local_constraints_ != nullptr);
  return value;
}
inline void Channel::clear_local_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_constraints_ != nullptr) _impl_.local_constraints_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelConstraints& Channel::_internal_local_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelConstraints* p = _impl_.local_constraints_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelConstraints&>(::lnrpc::_ChannelConstraints_default_instance_);
}
inline const ::lnrpc::ChannelConstraints& Channel::local_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.local_constraints)
  return _internal_local_constraints();
}
inline void Channel::unsafe_arena_set_allocated_local_constraints(::lnrpc::ChannelConstraints* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.local_constraints_);
  }
  _impl_.local_constraints_ = reinterpret_cast<::lnrpc::ChannelConstraints*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Channel.local_constraints)
}
inline ::lnrpc::ChannelConstraints* Channel::release_local_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelConstraints* released = _impl_.local_constraints_;
  _impl_.local_constraints_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelConstraints* Channel::unsafe_arena_release_local_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.local_constraints)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelConstraints* temp = _impl_.local_constraints_;
  _impl_.local_constraints_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelConstraints* Channel::_internal_mutable_local_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_constraints_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelConstraints>(GetArena());
    _impl_.local_constraints_ = reinterpret_cast<::lnrpc::ChannelConstraints*>(p);
  }
  return _impl_.local_constraints_;
}
inline ::lnrpc::ChannelConstraints* Channel::mutable_local_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelConstraints* _msg = _internal_mutable_local_constraints();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.local_constraints)
  return _msg;
}
inline void Channel::set_allocated_local_constraints(::lnrpc::ChannelConstraints* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.local_constraints_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.local_constraints_ = reinterpret_cast<::lnrpc::ChannelConstraints*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.local_constraints)
}

// .lnrpc.ChannelConstraints remote_constraints = 30;
inline bool Channel::has_remote_constraints() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_constraints_ != nullptr);
  return value;
}
inline void Channel::clear_remote_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_constraints_ != nullptr) _impl_.remote_constraints_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::ChannelConstraints& Channel::_internal_remote_constraints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelConstraints* p = _impl_.remote_constraints_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelConstraints&>(::lnrpc::_ChannelConstraints_default_instance_);
}
inline const ::lnrpc::ChannelConstraints& Channel::remote_constraints() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.remote_constraints)
  return _internal_remote_constraints();
}
inline void Channel::unsafe_arena_set_allocated_remote_constraints(::lnrpc::ChannelConstraints* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_constraints_);
  }
  _impl_.remote_constraints_ = reinterpret_cast<::lnrpc::ChannelConstraints*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Channel.remote_constraints)
}
inline ::lnrpc::ChannelConstraints* Channel::release_remote_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::ChannelConstraints* released = _impl_.remote_constraints_;
  _impl_.remote_constraints_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelConstraints* Channel::unsafe_arena_release_remote_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.remote_constraints)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::ChannelConstraints* temp = _impl_.remote_constraints_;
  _impl_.remote_constraints_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelConstraints* Channel::_internal_mutable_remote_constraints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_constraints_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelConstraints>(GetArena());
    _impl_.remote_constraints_ = reinterpret_cast<::lnrpc::ChannelConstraints*>(p);
  }
  return _impl_.remote_constraints_;
}
inline ::lnrpc::ChannelConstraints* Channel::mutable_remote_constraints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::ChannelConstraints* _msg = _internal_mutable_remote_constraints();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.remote_constraints)
  return _msg;
}
inline void Channel::set_allocated_remote_constraints(::lnrpc::ChannelConstraints* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.remote_constraints_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.remote_constraints_ = reinterpret_cast<::lnrpc::ChannelConstraints*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.remote_constraints)
}

// repeated uint64 alias_scids = 31;
inline int Channel::_internal_alias_scids_size() const {
  return _internal_alias_scids().size();
}
inline int Channel::alias_scids_size() const {
  return _internal_alias_scids_size();
}
inline void Channel::clear_alias_scids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_scids_.Clear();
}
inline ::uint64_t Channel::alias_scids(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.alias_scids)
  return _internal_alias_scids().Get(index);
}
inline void Channel::set_alias_scids(int index, ::uint64_t value) {
  _internal_mutable_alias_scids()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.alias_scids)
}
inline void Channel::add_alias_scids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_alias_scids()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.Channel.alias_scids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& Channel::alias_scids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Channel.alias_scids)
  return _internal_alias_scids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Channel::mutable_alias_scids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Channel.alias_scids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alias_scids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
Channel::_internal_alias_scids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_scids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* Channel::_internal_mutable_alias_scids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alias_scids_;
}

// bool zero_conf = 32;
inline void Channel::clear_zero_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = false;
}
inline bool Channel::zero_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.zero_conf)
  return _internal_zero_conf();
}
inline void Channel::set_zero_conf(bool value) {
  _internal_set_zero_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.zero_conf)
}
inline bool Channel::_internal_zero_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_conf_;
}
inline void Channel::_internal_set_zero_conf(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = value;
}

// uint64 zero_conf_confirmed_scid = 33;
inline void Channel::clear_zero_conf_confirmed_scid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_confirmed_scid_ = ::uint64_t{0u};
}
inline ::uint64_t Channel::zero_conf_confirmed_scid() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.zero_conf_confirmed_scid)
  return _internal_zero_conf_confirmed_scid();
}
inline void Channel::set_zero_conf_confirmed_scid(::uint64_t value) {
  _internal_set_zero_conf_confirmed_scid(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.zero_conf_confirmed_scid)
}
inline ::uint64_t Channel::_internal_zero_conf_confirmed_scid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_conf_confirmed_scid_;
}
inline void Channel::_internal_set_zero_conf_confirmed_scid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_confirmed_scid_ = value;
}

// string peer_alias = 34;
inline void Channel::clear_peer_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_.ClearToEmpty();
}
inline const std::string& Channel::peer_alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.peer_alias)
  return _internal_peer_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_peer_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.peer_alias)
}
inline std::string* Channel::mutable_peer_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer_alias();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.peer_alias)
  return _s;
}
inline const std::string& Channel::_internal_peer_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_alias_.Get();
}
inline void Channel::_internal_set_peer_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_peer_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_alias_.Mutable( GetArena());
}
inline std::string* Channel::release_peer_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.peer_alias)
  return _impl_.peer_alias_.Release();
}
inline void Channel::set_allocated_peer_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.peer_alias_.IsDefault()) {
          _impl_.peer_alias_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.peer_alias)
}

// uint64 peer_scid_alias = 35 [jstype = JS_STRING];
inline void Channel::clear_peer_scid_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_scid_alias_ = ::uint64_t{0u};
}
inline ::uint64_t Channel::peer_scid_alias() const {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.peer_scid_alias)
  return _internal_peer_scid_alias();
}
inline void Channel::set_peer_scid_alias(::uint64_t value) {
  _internal_set_peer_scid_alias(value);
  // @@protoc_insertion_point(field_set:lnrpc.Channel.peer_scid_alias)
}
inline ::uint64_t Channel::_internal_peer_scid_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_scid_alias_;
}
inline void Channel::_internal_set_peer_scid_alias(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_scid_alias_ = value;
}

// string memo = 36;
inline void Channel::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& Channel::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.memo)
}
inline std::string* Channel::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.memo)
  return _s;
}
inline const std::string& Channel::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void Channel::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* Channel::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.memo)
  return _impl_.memo_.Release();
}
inline void Channel::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.memo)
}

// bytes custom_channel_data = 37;
inline void Channel::clear_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.ClearToEmpty();
}
inline const std::string& Channel::custom_channel_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Channel.custom_channel_data)
  return _internal_custom_channel_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Channel::set_custom_channel_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Channel.custom_channel_data)
}
inline std::string* Channel::mutable_custom_channel_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_channel_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.Channel.custom_channel_data)
  return _s;
}
inline const std::string& Channel::_internal_custom_channel_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_channel_data_.Get();
}
inline void Channel::_internal_set_custom_channel_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.Set(value, GetArena());
}
inline std::string* Channel::_internal_mutable_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_channel_data_.Mutable( GetArena());
}
inline std::string* Channel::release_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Channel.custom_channel_data)
  return _impl_.custom_channel_data_.Release();
}
inline void Channel::set_allocated_custom_channel_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_channel_data_.IsDefault()) {
          _impl_.custom_channel_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Channel.custom_channel_data)
}

// -------------------------------------------------------------------

// ListChannelsRequest

// bool active_only = 1;
inline void ListChannelsRequest::clear_active_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = false;
}
inline bool ListChannelsRequest::active_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsRequest.active_only)
  return _internal_active_only();
}
inline void ListChannelsRequest::set_active_only(bool value) {
  _internal_set_active_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListChannelsRequest.active_only)
}
inline bool ListChannelsRequest::_internal_active_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_only_;
}
inline void ListChannelsRequest::_internal_set_active_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_only_ = value;
}

// bool inactive_only = 2;
inline void ListChannelsRequest::clear_inactive_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inactive_only_ = false;
}
inline bool ListChannelsRequest::inactive_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsRequest.inactive_only)
  return _internal_inactive_only();
}
inline void ListChannelsRequest::set_inactive_only(bool value) {
  _internal_set_inactive_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListChannelsRequest.inactive_only)
}
inline bool ListChannelsRequest::_internal_inactive_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inactive_only_;
}
inline void ListChannelsRequest::_internal_set_inactive_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inactive_only_ = value;
}

// bool public_only = 3;
inline void ListChannelsRequest::clear_public_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_only_ = false;
}
inline bool ListChannelsRequest::public_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsRequest.public_only)
  return _internal_public_only();
}
inline void ListChannelsRequest::set_public_only(bool value) {
  _internal_set_public_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListChannelsRequest.public_only)
}
inline bool ListChannelsRequest::_internal_public_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_only_;
}
inline void ListChannelsRequest::_internal_set_public_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_only_ = value;
}

// bool private_only = 4;
inline void ListChannelsRequest::clear_private_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_only_ = false;
}
inline bool ListChannelsRequest::private_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsRequest.private_only)
  return _internal_private_only();
}
inline void ListChannelsRequest::set_private_only(bool value) {
  _internal_set_private_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListChannelsRequest.private_only)
}
inline bool ListChannelsRequest::_internal_private_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private_only_;
}
inline void ListChannelsRequest::_internal_set_private_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private_only_ = value;
}

// bytes peer = 5;
inline void ListChannelsRequest::clear_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.ClearToEmpty();
}
inline const std::string& ListChannelsRequest::peer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsRequest.peer)
  return _internal_peer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListChannelsRequest::set_peer(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ListChannelsRequest.peer)
}
inline std::string* ListChannelsRequest::mutable_peer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer();
  // @@protoc_insertion_point(field_mutable:lnrpc.ListChannelsRequest.peer)
  return _s;
}
inline const std::string& ListChannelsRequest::_internal_peer() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_.Get();
}
inline void ListChannelsRequest::_internal_set_peer(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.Set(value, GetArena());
}
inline std::string* ListChannelsRequest::_internal_mutable_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_.Mutable( GetArena());
}
inline std::string* ListChannelsRequest::release_peer() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ListChannelsRequest.peer)
  return _impl_.peer_.Release();
}
inline void ListChannelsRequest::set_allocated_peer(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.peer_.IsDefault()) {
          _impl_.peer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ListChannelsRequest.peer)
}

// bool peer_alias_lookup = 6;
inline void ListChannelsRequest::clear_peer_alias_lookup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_lookup_ = false;
}
inline bool ListChannelsRequest::peer_alias_lookup() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsRequest.peer_alias_lookup)
  return _internal_peer_alias_lookup();
}
inline void ListChannelsRequest::set_peer_alias_lookup(bool value) {
  _internal_set_peer_alias_lookup(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListChannelsRequest.peer_alias_lookup)
}
inline bool ListChannelsRequest::_internal_peer_alias_lookup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_alias_lookup_;
}
inline void ListChannelsRequest::_internal_set_peer_alias_lookup(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_lookup_ = value;
}

// -------------------------------------------------------------------

// ListChannelsResponse

// repeated .lnrpc.Channel channels = 11;
inline int ListChannelsResponse::_internal_channels_size() const {
  return _internal_channels().size();
}
inline int ListChannelsResponse::channels_size() const {
  return _internal_channels_size();
}
inline void ListChannelsResponse::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
inline ::lnrpc::Channel* ListChannelsResponse::mutable_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ListChannelsResponse.channels)
  return _internal_mutable_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>* ListChannelsResponse::mutable_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListChannelsResponse.channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channels();
}
inline const ::lnrpc::Channel& ListChannelsResponse::channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListChannelsResponse.channels)
  return _internal_channels().Get(index);
}
inline ::lnrpc::Channel* ListChannelsResponse::add_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Channel* _add = _internal_mutable_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ListChannelsResponse.channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>& ListChannelsResponse::channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListChannelsResponse.channels)
  return _internal_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>&
ListChannelsResponse::_internal_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Channel>*
ListChannelsResponse::_internal_mutable_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channels_;
}

// -------------------------------------------------------------------

// AliasMap

// uint64 base_scid = 1;
inline void AliasMap::clear_base_scid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_scid_ = ::uint64_t{0u};
}
inline ::uint64_t AliasMap::base_scid() const {
  // @@protoc_insertion_point(field_get:lnrpc.AliasMap.base_scid)
  return _internal_base_scid();
}
inline void AliasMap::set_base_scid(::uint64_t value) {
  _internal_set_base_scid(value);
  // @@protoc_insertion_point(field_set:lnrpc.AliasMap.base_scid)
}
inline ::uint64_t AliasMap::_internal_base_scid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_scid_;
}
inline void AliasMap::_internal_set_base_scid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_scid_ = value;
}

// repeated uint64 aliases = 2;
inline int AliasMap::_internal_aliases_size() const {
  return _internal_aliases().size();
}
inline int AliasMap::aliases_size() const {
  return _internal_aliases_size();
}
inline void AliasMap::clear_aliases() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.aliases_.Clear();
}
inline ::uint64_t AliasMap::aliases(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.AliasMap.aliases)
  return _internal_aliases().Get(index);
}
inline void AliasMap::set_aliases(int index, ::uint64_t value) {
  _internal_mutable_aliases()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.AliasMap.aliases)
}
inline void AliasMap::add_aliases(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_aliases()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.AliasMap.aliases)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& AliasMap::aliases() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.AliasMap.aliases)
  return _internal_aliases();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* AliasMap::mutable_aliases()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.AliasMap.aliases)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_aliases();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
AliasMap::_internal_aliases() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.aliases_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* AliasMap::_internal_mutable_aliases() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.aliases_;
}

// -------------------------------------------------------------------

// ListAliasesRequest

// -------------------------------------------------------------------

// ListAliasesResponse

// repeated .lnrpc.AliasMap alias_maps = 1;
inline int ListAliasesResponse::_internal_alias_maps_size() const {
  return _internal_alias_maps().size();
}
inline int ListAliasesResponse::alias_maps_size() const {
  return _internal_alias_maps_size();
}
inline void ListAliasesResponse::clear_alias_maps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_maps_.Clear();
}
inline ::lnrpc::AliasMap* ListAliasesResponse::mutable_alias_maps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ListAliasesResponse.alias_maps)
  return _internal_mutable_alias_maps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>* ListAliasesResponse::mutable_alias_maps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListAliasesResponse.alias_maps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alias_maps();
}
inline const ::lnrpc::AliasMap& ListAliasesResponse::alias_maps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListAliasesResponse.alias_maps)
  return _internal_alias_maps().Get(index);
}
inline ::lnrpc::AliasMap* ListAliasesResponse::add_alias_maps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::AliasMap* _add = _internal_mutable_alias_maps()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ListAliasesResponse.alias_maps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>& ListAliasesResponse::alias_maps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListAliasesResponse.alias_maps)
  return _internal_alias_maps();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>&
ListAliasesResponse::_internal_alias_maps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_maps_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::AliasMap>*
ListAliasesResponse::_internal_mutable_alias_maps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alias_maps_;
}

// -------------------------------------------------------------------

// ChannelCloseSummary

// string channel_point = 1;
inline void ChannelCloseSummary::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.ClearToEmpty();
}
inline const std::string& ChannelCloseSummary::channel_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.channel_point)
  return _internal_channel_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelCloseSummary::set_channel_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.channel_point)
}
inline std::string* ChannelCloseSummary::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseSummary.channel_point)
  return _s;
}
inline const std::string& ChannelCloseSummary::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_point_.Get();
}
inline void ChannelCloseSummary::_internal_set_channel_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(value, GetArena());
}
inline std::string* ChannelCloseSummary::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_point_.Mutable( GetArena());
}
inline std::string* ChannelCloseSummary::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseSummary.channel_point)
  return _impl_.channel_point_.Release();
}
inline void ChannelCloseSummary::set_allocated_channel_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_point_.IsDefault()) {
          _impl_.channel_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseSummary.channel_point)
}

// uint64 chan_id = 2 [jstype = JS_STRING];
inline void ChannelCloseSummary::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelCloseSummary::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.chan_id)
  return _internal_chan_id();
}
inline void ChannelCloseSummary::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.chan_id)
}
inline ::uint64_t ChannelCloseSummary::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void ChannelCloseSummary::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// string chain_hash = 3;
inline void ChannelCloseSummary::clear_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.ClearToEmpty();
}
inline const std::string& ChannelCloseSummary::chain_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.chain_hash)
  return _internal_chain_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelCloseSummary::set_chain_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.chain_hash)
}
inline std::string* ChannelCloseSummary::mutable_chain_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chain_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseSummary.chain_hash)
  return _s;
}
inline const std::string& ChannelCloseSummary::_internal_chain_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chain_hash_.Get();
}
inline void ChannelCloseSummary::_internal_set_chain_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.Set(value, GetArena());
}
inline std::string* ChannelCloseSummary::_internal_mutable_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chain_hash_.Mutable( GetArena());
}
inline std::string* ChannelCloseSummary::release_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseSummary.chain_hash)
  return _impl_.chain_hash_.Release();
}
inline void ChannelCloseSummary::set_allocated_chain_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chain_hash_.IsDefault()) {
          _impl_.chain_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseSummary.chain_hash)
}

// string closing_tx_hash = 4;
inline void ChannelCloseSummary::clear_closing_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hash_.ClearToEmpty();
}
inline const std::string& ChannelCloseSummary::closing_tx_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.closing_tx_hash)
  return _internal_closing_tx_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelCloseSummary::set_closing_tx_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.closing_tx_hash)
}
inline std::string* ChannelCloseSummary::mutable_closing_tx_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_closing_tx_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseSummary.closing_tx_hash)
  return _s;
}
inline const std::string& ChannelCloseSummary::_internal_closing_tx_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closing_tx_hash_.Get();
}
inline void ChannelCloseSummary::_internal_set_closing_tx_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hash_.Set(value, GetArena());
}
inline std::string* ChannelCloseSummary::_internal_mutable_closing_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.closing_tx_hash_.Mutable( GetArena());
}
inline std::string* ChannelCloseSummary::release_closing_tx_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseSummary.closing_tx_hash)
  return _impl_.closing_tx_hash_.Release();
}
inline void ChannelCloseSummary::set_allocated_closing_tx_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.closing_tx_hash_.IsDefault()) {
          _impl_.closing_tx_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseSummary.closing_tx_hash)
}

// string remote_pubkey = 5;
inline void ChannelCloseSummary::clear_remote_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.ClearToEmpty();
}
inline const std::string& ChannelCloseSummary::remote_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.remote_pubkey)
  return _internal_remote_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelCloseSummary::set_remote_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.remote_pubkey)
}
inline std::string* ChannelCloseSummary::mutable_remote_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseSummary.remote_pubkey)
  return _s;
}
inline const std::string& ChannelCloseSummary::_internal_remote_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_pubkey_.Get();
}
inline void ChannelCloseSummary::_internal_set_remote_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.Set(value, GetArena());
}
inline std::string* ChannelCloseSummary::_internal_mutable_remote_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_pubkey_.Mutable( GetArena());
}
inline std::string* ChannelCloseSummary::release_remote_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseSummary.remote_pubkey)
  return _impl_.remote_pubkey_.Release();
}
inline void ChannelCloseSummary::set_allocated_remote_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_pubkey_.IsDefault()) {
          _impl_.remote_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseSummary.remote_pubkey)
}

// int64 capacity = 6;
inline void ChannelCloseSummary::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::int64_t{0};
}
inline ::int64_t ChannelCloseSummary::capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.capacity)
  return _internal_capacity();
}
inline void ChannelCloseSummary::set_capacity(::int64_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.capacity)
}
inline ::int64_t ChannelCloseSummary::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void ChannelCloseSummary::_internal_set_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// uint32 close_height = 7;
inline void ChannelCloseSummary::clear_close_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_height_ = 0u;
}
inline ::uint32_t ChannelCloseSummary::close_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.close_height)
  return _internal_close_height();
}
inline void ChannelCloseSummary::set_close_height(::uint32_t value) {
  _internal_set_close_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.close_height)
}
inline ::uint32_t ChannelCloseSummary::_internal_close_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.close_height_;
}
inline void ChannelCloseSummary::_internal_set_close_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_height_ = value;
}

// int64 settled_balance = 8;
inline void ChannelCloseSummary::clear_settled_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settled_balance_ = ::int64_t{0};
}
inline ::int64_t ChannelCloseSummary::settled_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.settled_balance)
  return _internal_settled_balance();
}
inline void ChannelCloseSummary::set_settled_balance(::int64_t value) {
  _internal_set_settled_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.settled_balance)
}
inline ::int64_t ChannelCloseSummary::_internal_settled_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settled_balance_;
}
inline void ChannelCloseSummary::_internal_set_settled_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settled_balance_ = value;
}

// int64 time_locked_balance = 9;
inline void ChannelCloseSummary::clear_time_locked_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_locked_balance_ = ::int64_t{0};
}
inline ::int64_t ChannelCloseSummary::time_locked_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.time_locked_balance)
  return _internal_time_locked_balance();
}
inline void ChannelCloseSummary::set_time_locked_balance(::int64_t value) {
  _internal_set_time_locked_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.time_locked_balance)
}
inline ::int64_t ChannelCloseSummary::_internal_time_locked_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_locked_balance_;
}
inline void ChannelCloseSummary::_internal_set_time_locked_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_locked_balance_ = value;
}

// .lnrpc.ChannelCloseSummary.ClosureType close_type = 10;
inline void ChannelCloseSummary::clear_close_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_type_ = 0;
}
inline ::lnrpc::ChannelCloseSummary_ClosureType ChannelCloseSummary::close_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.close_type)
  return _internal_close_type();
}
inline void ChannelCloseSummary::set_close_type(::lnrpc::ChannelCloseSummary_ClosureType value) {
  _internal_set_close_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.close_type)
}
inline ::lnrpc::ChannelCloseSummary_ClosureType ChannelCloseSummary::_internal_close_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::ChannelCloseSummary_ClosureType>(_impl_.close_type_);
}
inline void ChannelCloseSummary::_internal_set_close_type(::lnrpc::ChannelCloseSummary_ClosureType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_type_ = value;
}

// .lnrpc.Initiator open_initiator = 11;
inline void ChannelCloseSummary::clear_open_initiator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_initiator_ = 0;
}
inline ::lnrpc::Initiator ChannelCloseSummary::open_initiator() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.open_initiator)
  return _internal_open_initiator();
}
inline void ChannelCloseSummary::set_open_initiator(::lnrpc::Initiator value) {
  _internal_set_open_initiator(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.open_initiator)
}
inline ::lnrpc::Initiator ChannelCloseSummary::_internal_open_initiator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Initiator>(_impl_.open_initiator_);
}
inline void ChannelCloseSummary::_internal_set_open_initiator(::lnrpc::Initiator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_initiator_ = value;
}

// .lnrpc.Initiator close_initiator = 12;
inline void ChannelCloseSummary::clear_close_initiator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_initiator_ = 0;
}
inline ::lnrpc::Initiator ChannelCloseSummary::close_initiator() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.close_initiator)
  return _internal_close_initiator();
}
inline void ChannelCloseSummary::set_close_initiator(::lnrpc::Initiator value) {
  _internal_set_close_initiator(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.close_initiator)
}
inline ::lnrpc::Initiator ChannelCloseSummary::_internal_close_initiator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Initiator>(_impl_.close_initiator_);
}
inline void ChannelCloseSummary::_internal_set_close_initiator(::lnrpc::Initiator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_initiator_ = value;
}

// repeated .lnrpc.Resolution resolutions = 13;
inline int ChannelCloseSummary::_internal_resolutions_size() const {
  return _internal_resolutions().size();
}
inline int ChannelCloseSummary::resolutions_size() const {
  return _internal_resolutions_size();
}
inline void ChannelCloseSummary::clear_resolutions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolutions_.Clear();
}
inline ::lnrpc::Resolution* ChannelCloseSummary::mutable_resolutions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseSummary.resolutions)
  return _internal_mutable_resolutions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>* ChannelCloseSummary::mutable_resolutions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ChannelCloseSummary.resolutions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_resolutions();
}
inline const ::lnrpc::Resolution& ChannelCloseSummary::resolutions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.resolutions)
  return _internal_resolutions().Get(index);
}
inline ::lnrpc::Resolution* ChannelCloseSummary::add_resolutions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Resolution* _add = _internal_mutable_resolutions()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ChannelCloseSummary.resolutions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>& ChannelCloseSummary::resolutions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ChannelCloseSummary.resolutions)
  return _internal_resolutions();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>&
ChannelCloseSummary::_internal_resolutions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolutions_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Resolution>*
ChannelCloseSummary::_internal_mutable_resolutions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.resolutions_;
}

// repeated uint64 alias_scids = 14;
inline int ChannelCloseSummary::_internal_alias_scids_size() const {
  return _internal_alias_scids().size();
}
inline int ChannelCloseSummary::alias_scids_size() const {
  return _internal_alias_scids_size();
}
inline void ChannelCloseSummary::clear_alias_scids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_scids_.Clear();
}
inline ::uint64_t ChannelCloseSummary::alias_scids(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.alias_scids)
  return _internal_alias_scids().Get(index);
}
inline void ChannelCloseSummary::set_alias_scids(int index, ::uint64_t value) {
  _internal_mutable_alias_scids()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.alias_scids)
}
inline void ChannelCloseSummary::add_alias_scids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_alias_scids()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.ChannelCloseSummary.alias_scids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& ChannelCloseSummary::alias_scids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ChannelCloseSummary.alias_scids)
  return _internal_alias_scids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ChannelCloseSummary::mutable_alias_scids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ChannelCloseSummary.alias_scids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_alias_scids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
ChannelCloseSummary::_internal_alias_scids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_scids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ChannelCloseSummary::_internal_mutable_alias_scids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.alias_scids_;
}

// uint64 zero_conf_confirmed_scid = 15 [jstype = JS_STRING];
inline void ChannelCloseSummary::clear_zero_conf_confirmed_scid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_confirmed_scid_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelCloseSummary::zero_conf_confirmed_scid() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseSummary.zero_conf_confirmed_scid)
  return _internal_zero_conf_confirmed_scid();
}
inline void ChannelCloseSummary::set_zero_conf_confirmed_scid(::uint64_t value) {
  _internal_set_zero_conf_confirmed_scid(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseSummary.zero_conf_confirmed_scid)
}
inline ::uint64_t ChannelCloseSummary::_internal_zero_conf_confirmed_scid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_conf_confirmed_scid_;
}
inline void ChannelCloseSummary::_internal_set_zero_conf_confirmed_scid(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_confirmed_scid_ = value;
}

// -------------------------------------------------------------------

// Resolution

// .lnrpc.ResolutionType resolution_type = 1;
inline void Resolution::clear_resolution_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_type_ = 0;
}
inline ::lnrpc::ResolutionType Resolution::resolution_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.Resolution.resolution_type)
  return _internal_resolution_type();
}
inline void Resolution::set_resolution_type(::lnrpc::ResolutionType value) {
  _internal_set_resolution_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.Resolution.resolution_type)
}
inline ::lnrpc::ResolutionType Resolution::_internal_resolution_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::ResolutionType>(_impl_.resolution_type_);
}
inline void Resolution::_internal_set_resolution_type(::lnrpc::ResolutionType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_type_ = value;
}

// .lnrpc.ResolutionOutcome outcome = 2;
inline void Resolution::clear_outcome() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outcome_ = 0;
}
inline ::lnrpc::ResolutionOutcome Resolution::outcome() const {
  // @@protoc_insertion_point(field_get:lnrpc.Resolution.outcome)
  return _internal_outcome();
}
inline void Resolution::set_outcome(::lnrpc::ResolutionOutcome value) {
  _internal_set_outcome(value);
  // @@protoc_insertion_point(field_set:lnrpc.Resolution.outcome)
}
inline ::lnrpc::ResolutionOutcome Resolution::_internal_outcome() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::ResolutionOutcome>(_impl_.outcome_);
}
inline void Resolution::_internal_set_outcome(::lnrpc::ResolutionOutcome value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outcome_ = value;
}

// .lnrpc.OutPoint outpoint = 3;
inline bool Resolution::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline void Resolution::clear_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ != nullptr) _impl_.outpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::OutPoint& Resolution::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& Resolution::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Resolution.outpoint)
  return _internal_outpoint();
}
inline void Resolution::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Resolution.outpoint)
}
inline ::lnrpc::OutPoint* Resolution::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* Resolution::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Resolution.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* Resolution::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* Resolution::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:lnrpc.Resolution.outpoint)
  return _msg;
}
inline void Resolution::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Resolution.outpoint)
}

// uint64 amount_sat = 4;
inline void Resolution::clear_amount_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = ::uint64_t{0u};
}
inline ::uint64_t Resolution::amount_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Resolution.amount_sat)
  return _internal_amount_sat();
}
inline void Resolution::set_amount_sat(::uint64_t value) {
  _internal_set_amount_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Resolution.amount_sat)
}
inline ::uint64_t Resolution::_internal_amount_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_sat_;
}
inline void Resolution::_internal_set_amount_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = value;
}

// string sweep_txid = 5;
inline void Resolution::clear_sweep_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sweep_txid_.ClearToEmpty();
}
inline const std::string& Resolution::sweep_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Resolution.sweep_txid)
  return _internal_sweep_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Resolution::set_sweep_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sweep_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Resolution.sweep_txid)
}
inline std::string* Resolution::mutable_sweep_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sweep_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.Resolution.sweep_txid)
  return _s;
}
inline const std::string& Resolution::_internal_sweep_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sweep_txid_.Get();
}
inline void Resolution::_internal_set_sweep_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sweep_txid_.Set(value, GetArena());
}
inline std::string* Resolution::_internal_mutable_sweep_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sweep_txid_.Mutable( GetArena());
}
inline std::string* Resolution::release_sweep_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Resolution.sweep_txid)
  return _impl_.sweep_txid_.Release();
}
inline void Resolution::set_allocated_sweep_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sweep_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sweep_txid_.IsDefault()) {
          _impl_.sweep_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Resolution.sweep_txid)
}

// -------------------------------------------------------------------

// ClosedChannelsRequest

// bool cooperative = 1;
inline void ClosedChannelsRequest::clear_cooperative() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cooperative_ = false;
}
inline bool ClosedChannelsRequest::cooperative() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsRequest.cooperative)
  return _internal_cooperative();
}
inline void ClosedChannelsRequest::set_cooperative(bool value) {
  _internal_set_cooperative(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelsRequest.cooperative)
}
inline bool ClosedChannelsRequest::_internal_cooperative() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cooperative_;
}
inline void ClosedChannelsRequest::_internal_set_cooperative(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cooperative_ = value;
}

// bool local_force = 2;
inline void ClosedChannelsRequest::clear_local_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_force_ = false;
}
inline bool ClosedChannelsRequest::local_force() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsRequest.local_force)
  return _internal_local_force();
}
inline void ClosedChannelsRequest::set_local_force(bool value) {
  _internal_set_local_force(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelsRequest.local_force)
}
inline bool ClosedChannelsRequest::_internal_local_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_force_;
}
inline void ClosedChannelsRequest::_internal_set_local_force(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_force_ = value;
}

// bool remote_force = 3;
inline void ClosedChannelsRequest::clear_remote_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_force_ = false;
}
inline bool ClosedChannelsRequest::remote_force() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsRequest.remote_force)
  return _internal_remote_force();
}
inline void ClosedChannelsRequest::set_remote_force(bool value) {
  _internal_set_remote_force(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelsRequest.remote_force)
}
inline bool ClosedChannelsRequest::_internal_remote_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_force_;
}
inline void ClosedChannelsRequest::_internal_set_remote_force(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_force_ = value;
}

// bool breach = 4;
inline void ClosedChannelsRequest::clear_breach() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.breach_ = false;
}
inline bool ClosedChannelsRequest::breach() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsRequest.breach)
  return _internal_breach();
}
inline void ClosedChannelsRequest::set_breach(bool value) {
  _internal_set_breach(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelsRequest.breach)
}
inline bool ClosedChannelsRequest::_internal_breach() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.breach_;
}
inline void ClosedChannelsRequest::_internal_set_breach(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.breach_ = value;
}

// bool funding_canceled = 5;
inline void ClosedChannelsRequest::clear_funding_canceled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_canceled_ = false;
}
inline bool ClosedChannelsRequest::funding_canceled() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsRequest.funding_canceled)
  return _internal_funding_canceled();
}
inline void ClosedChannelsRequest::set_funding_canceled(bool value) {
  _internal_set_funding_canceled(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelsRequest.funding_canceled)
}
inline bool ClosedChannelsRequest::_internal_funding_canceled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_canceled_;
}
inline void ClosedChannelsRequest::_internal_set_funding_canceled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_canceled_ = value;
}

// bool abandoned = 6;
inline void ClosedChannelsRequest::clear_abandoned() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.abandoned_ = false;
}
inline bool ClosedChannelsRequest::abandoned() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsRequest.abandoned)
  return _internal_abandoned();
}
inline void ClosedChannelsRequest::set_abandoned(bool value) {
  _internal_set_abandoned(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelsRequest.abandoned)
}
inline bool ClosedChannelsRequest::_internal_abandoned() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.abandoned_;
}
inline void ClosedChannelsRequest::_internal_set_abandoned(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.abandoned_ = value;
}

// -------------------------------------------------------------------

// ClosedChannelsResponse

// repeated .lnrpc.ChannelCloseSummary channels = 1;
inline int ClosedChannelsResponse::_internal_channels_size() const {
  return _internal_channels().size();
}
inline int ClosedChannelsResponse::channels_size() const {
  return _internal_channels_size();
}
inline void ClosedChannelsResponse::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
inline ::lnrpc::ChannelCloseSummary* ClosedChannelsResponse::mutable_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ClosedChannelsResponse.channels)
  return _internal_mutable_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>* ClosedChannelsResponse::mutable_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ClosedChannelsResponse.channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channels();
}
inline const ::lnrpc::ChannelCloseSummary& ClosedChannelsResponse::channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelsResponse.channels)
  return _internal_channels().Get(index);
}
inline ::lnrpc::ChannelCloseSummary* ClosedChannelsResponse::add_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelCloseSummary* _add = _internal_mutable_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ClosedChannelsResponse.channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>& ClosedChannelsResponse::channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ClosedChannelsResponse.channels)
  return _internal_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>&
ClosedChannelsResponse::_internal_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelCloseSummary>*
ClosedChannelsResponse::_internal_mutable_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channels_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Peer

// string pub_key = 1;
inline void Peer::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& Peer::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Peer::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Peer.pub_key)
}
inline std::string* Peer::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.Peer.pub_key)
  return _s;
}
inline const std::string& Peer::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void Peer::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* Peer::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* Peer::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Peer.pub_key)
  return _impl_.pub_key_.Release();
}
inline void Peer::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Peer.pub_key)
}

// string address = 3;
inline void Peer::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& Peer::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Peer::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Peer.address)
}
inline std::string* Peer::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.Peer.address)
  return _s;
}
inline const std::string& Peer::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void Peer::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* Peer::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* Peer::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Peer.address)
  return _impl_.address_.Release();
}
inline void Peer::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Peer.address)
}

// uint64 bytes_sent = 4;
inline void Peer::clear_bytes_sent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_sent_ = ::uint64_t{0u};
}
inline ::uint64_t Peer::bytes_sent() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.bytes_sent)
  return _internal_bytes_sent();
}
inline void Peer::set_bytes_sent(::uint64_t value) {
  _internal_set_bytes_sent(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.bytes_sent)
}
inline ::uint64_t Peer::_internal_bytes_sent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_sent_;
}
inline void Peer::_internal_set_bytes_sent(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_sent_ = value;
}

// uint64 bytes_recv = 5;
inline void Peer::clear_bytes_recv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_recv_ = ::uint64_t{0u};
}
inline ::uint64_t Peer::bytes_recv() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.bytes_recv)
  return _internal_bytes_recv();
}
inline void Peer::set_bytes_recv(::uint64_t value) {
  _internal_set_bytes_recv(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.bytes_recv)
}
inline ::uint64_t Peer::_internal_bytes_recv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bytes_recv_;
}
inline void Peer::_internal_set_bytes_recv(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bytes_recv_ = value;
}

// int64 sat_sent = 6;
inline void Peer::clear_sat_sent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_sent_ = ::int64_t{0};
}
inline ::int64_t Peer::sat_sent() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.sat_sent)
  return _internal_sat_sent();
}
inline void Peer::set_sat_sent(::int64_t value) {
  _internal_set_sat_sent(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.sat_sent)
}
inline ::int64_t Peer::_internal_sat_sent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_sent_;
}
inline void Peer::_internal_set_sat_sent(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_sent_ = value;
}

// int64 sat_recv = 7;
inline void Peer::clear_sat_recv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_recv_ = ::int64_t{0};
}
inline ::int64_t Peer::sat_recv() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.sat_recv)
  return _internal_sat_recv();
}
inline void Peer::set_sat_recv(::int64_t value) {
  _internal_set_sat_recv(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.sat_recv)
}
inline ::int64_t Peer::_internal_sat_recv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_recv_;
}
inline void Peer::_internal_set_sat_recv(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_recv_ = value;
}

// bool inbound = 8;
inline void Peer::clear_inbound() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_ = false;
}
inline bool Peer::inbound() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.inbound)
  return _internal_inbound();
}
inline void Peer::set_inbound(bool value) {
  _internal_set_inbound(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.inbound)
}
inline bool Peer::_internal_inbound() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inbound_;
}
inline void Peer::_internal_set_inbound(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_ = value;
}

// int64 ping_time = 9;
inline void Peer::clear_ping_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_time_ = ::int64_t{0};
}
inline ::int64_t Peer::ping_time() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.ping_time)
  return _internal_ping_time();
}
inline void Peer::set_ping_time(::int64_t value) {
  _internal_set_ping_time(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.ping_time)
}
inline ::int64_t Peer::_internal_ping_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ping_time_;
}
inline void Peer::_internal_set_ping_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ping_time_ = value;
}

// .lnrpc.Peer.SyncType sync_type = 10;
inline void Peer::clear_sync_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_type_ = 0;
}
inline ::lnrpc::Peer_SyncType Peer::sync_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.sync_type)
  return _internal_sync_type();
}
inline void Peer::set_sync_type(::lnrpc::Peer_SyncType value) {
  _internal_set_sync_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.sync_type)
}
inline ::lnrpc::Peer_SyncType Peer::_internal_sync_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Peer_SyncType>(_impl_.sync_type_);
}
inline void Peer::_internal_set_sync_type(::lnrpc::Peer_SyncType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sync_type_ = value;
}

// map<uint32, .lnrpc.Feature> features = 11;
inline int Peer::_internal_features_size() const {
  return _internal_features().size();
}
inline int Peer::features_size() const {
  return _internal_features_size();
}
inline void Peer::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& Peer::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& Peer::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.Peer.features)
  return _internal_features();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* Peer::_internal_mutable_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.features_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* Peer::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.Peer.features)
  return _internal_mutable_features();
}

// repeated .lnrpc.TimestampedError errors = 12;
inline int Peer::_internal_errors_size() const {
  return _internal_errors().size();
}
inline int Peer::errors_size() const {
  return _internal_errors_size();
}
inline void Peer::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
inline ::lnrpc::TimestampedError* Peer::mutable_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Peer.errors)
  return _internal_mutable_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>* Peer::mutable_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Peer.errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_errors();
}
inline const ::lnrpc::TimestampedError& Peer::errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.errors)
  return _internal_errors().Get(index);
}
inline ::lnrpc::TimestampedError* Peer::add_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::TimestampedError* _add = _internal_mutable_errors()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Peer.errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>& Peer::errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Peer.errors)
  return _internal_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>&
Peer::_internal_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::TimestampedError>*
Peer::_internal_mutable_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.errors_;
}

// int32 flap_count = 13;
inline void Peer::clear_flap_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flap_count_ = 0;
}
inline ::int32_t Peer::flap_count() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.flap_count)
  return _internal_flap_count();
}
inline void Peer::set_flap_count(::int32_t value) {
  _internal_set_flap_count(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.flap_count)
}
inline ::int32_t Peer::_internal_flap_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flap_count_;
}
inline void Peer::_internal_set_flap_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flap_count_ = value;
}

// int64 last_flap_ns = 14;
inline void Peer::clear_last_flap_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_flap_ns_ = ::int64_t{0};
}
inline ::int64_t Peer::last_flap_ns() const {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.last_flap_ns)
  return _internal_last_flap_ns();
}
inline void Peer::set_last_flap_ns(::int64_t value) {
  _internal_set_last_flap_ns(value);
  // @@protoc_insertion_point(field_set:lnrpc.Peer.last_flap_ns)
}
inline ::int64_t Peer::_internal_last_flap_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_flap_ns_;
}
inline void Peer::_internal_set_last_flap_ns(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_flap_ns_ = value;
}

// bytes last_ping_payload = 15;
inline void Peer::clear_last_ping_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_payload_.ClearToEmpty();
}
inline const std::string& Peer::last_ping_payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Peer.last_ping_payload)
  return _internal_last_ping_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Peer::set_last_ping_payload(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Peer.last_ping_payload)
}
inline std::string* Peer::mutable_last_ping_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_ping_payload();
  // @@protoc_insertion_point(field_mutable:lnrpc.Peer.last_ping_payload)
  return _s;
}
inline const std::string& Peer::_internal_last_ping_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_ping_payload_.Get();
}
inline void Peer::_internal_set_last_ping_payload(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_payload_.Set(value, GetArena());
}
inline std::string* Peer::_internal_mutable_last_ping_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_ping_payload_.Mutable( GetArena());
}
inline std::string* Peer::release_last_ping_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Peer.last_ping_payload)
  return _impl_.last_ping_payload_.Release();
}
inline void Peer::set_allocated_last_ping_payload(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_ping_payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.last_ping_payload_.IsDefault()) {
          _impl_.last_ping_payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Peer.last_ping_payload)
}

// -------------------------------------------------------------------

// TimestampedError

// uint64 timestamp = 1;
inline void TimestampedError::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t TimestampedError::timestamp() const {
  // @@protoc_insertion_point(field_get:lnrpc.TimestampedError.timestamp)
  return _internal_timestamp();
}
inline void TimestampedError::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:lnrpc.TimestampedError.timestamp)
}
inline ::uint64_t TimestampedError::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void TimestampedError::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// string error = 2;
inline void TimestampedError::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& TimestampedError::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.TimestampedError.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TimestampedError::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.TimestampedError.error)
}
inline std::string* TimestampedError::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:lnrpc.TimestampedError.error)
  return _s;
}
inline const std::string& TimestampedError::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void TimestampedError::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* TimestampedError::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* TimestampedError::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.TimestampedError.error)
  return _impl_.error_.Release();
}
inline void TimestampedError::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.TimestampedError.error)
}

// -------------------------------------------------------------------

// ListPeersRequest

// bool latest_error = 1;
inline void ListPeersRequest::clear_latest_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latest_error_ = false;
}
inline bool ListPeersRequest::latest_error() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPeersRequest.latest_error)
  return _internal_latest_error();
}
inline void ListPeersRequest::set_latest_error(bool value) {
  _internal_set_latest_error(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPeersRequest.latest_error)
}
inline bool ListPeersRequest::_internal_latest_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.latest_error_;
}
inline void ListPeersRequest::_internal_set_latest_error(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.latest_error_ = value;
}

// -------------------------------------------------------------------

// ListPeersResponse

// repeated .lnrpc.Peer peers = 1;
inline int ListPeersResponse::_internal_peers_size() const {
  return _internal_peers().size();
}
inline int ListPeersResponse::peers_size() const {
  return _internal_peers_size();
}
inline void ListPeersResponse::clear_peers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peers_.Clear();
}
inline ::lnrpc::Peer* ListPeersResponse::mutable_peers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ListPeersResponse.peers)
  return _internal_mutable_peers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>* ListPeersResponse::mutable_peers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListPeersResponse.peers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_peers();
}
inline const ::lnrpc::Peer& ListPeersResponse::peers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListPeersResponse.peers)
  return _internal_peers().Get(index);
}
inline ::lnrpc::Peer* ListPeersResponse::add_peers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Peer* _add = _internal_mutable_peers()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ListPeersResponse.peers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>& ListPeersResponse::peers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListPeersResponse.peers)
  return _internal_peers();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>&
ListPeersResponse::_internal_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peers_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Peer>*
ListPeersResponse::_internal_mutable_peers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.peers_;
}

// -------------------------------------------------------------------

// PeerEventSubscription

// -------------------------------------------------------------------

// PeerEvent

// string pub_key = 1;
inline void PeerEvent::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& PeerEvent::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PeerEvent.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PeerEvent::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PeerEvent.pub_key)
}
inline std::string* PeerEvent::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.PeerEvent.pub_key)
  return _s;
}
inline const std::string& PeerEvent::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void PeerEvent::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* PeerEvent::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* PeerEvent::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PeerEvent.pub_key)
  return _impl_.pub_key_.Release();
}
inline void PeerEvent::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PeerEvent.pub_key)
}

// .lnrpc.PeerEvent.EventType type = 2;
inline void PeerEvent::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::lnrpc::PeerEvent_EventType PeerEvent::type() const {
  // @@protoc_insertion_point(field_get:lnrpc.PeerEvent.type)
  return _internal_type();
}
inline void PeerEvent::set_type(::lnrpc::PeerEvent_EventType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.PeerEvent.type)
}
inline ::lnrpc::PeerEvent_EventType PeerEvent::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::PeerEvent_EventType>(_impl_.type_);
}
inline void PeerEvent::_internal_set_type(::lnrpc::PeerEvent_EventType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// -------------------------------------------------------------------

// GetInfoRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetInfoResponse

// string version = 14;
inline void GetInfoResponse::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.version)
}
inline std::string* GetInfoResponse::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.version)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void GetInfoResponse::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetInfoResponse.version)
  return _impl_.version_.Release();
}
inline void GetInfoResponse::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetInfoResponse.version)
}

// string commit_hash = 20;
inline void GetInfoResponse::clear_commit_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_hash_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::commit_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.commit_hash)
  return _internal_commit_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_commit_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.commit_hash)
}
inline std::string* GetInfoResponse::mutable_commit_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_commit_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.commit_hash)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_commit_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commit_hash_.Get();
}
inline void GetInfoResponse::_internal_set_commit_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_hash_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_commit_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.commit_hash_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_commit_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetInfoResponse.commit_hash)
  return _impl_.commit_hash_.Release();
}
inline void GetInfoResponse::set_allocated_commit_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.commit_hash_.IsDefault()) {
          _impl_.commit_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetInfoResponse.commit_hash)
}

// string identity_pubkey = 1;
inline void GetInfoResponse::clear_identity_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_pubkey_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::identity_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.identity_pubkey)
  return _internal_identity_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_identity_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_pubkey_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.identity_pubkey)
}
inline std::string* GetInfoResponse::mutable_identity_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.identity_pubkey)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_identity_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_pubkey_.Get();
}
inline void GetInfoResponse::_internal_set_identity_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_pubkey_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_identity_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.identity_pubkey_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_identity_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetInfoResponse.identity_pubkey)
  return _impl_.identity_pubkey_.Release();
}
inline void GetInfoResponse::set_allocated_identity_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.identity_pubkey_.IsDefault()) {
          _impl_.identity_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetInfoResponse.identity_pubkey)
}

// string alias = 2;
inline void GetInfoResponse::clear_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.alias)
  return _internal_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.alias)
}
inline std::string* GetInfoResponse::mutable_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alias();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.alias)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_.Get();
}
inline void GetInfoResponse::_internal_set_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alias_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetInfoResponse.alias)
  return _impl_.alias_.Release();
}
inline void GetInfoResponse::set_allocated_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.alias_.IsDefault()) {
          _impl_.alias_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetInfoResponse.alias)
}

// string color = 17;
inline void GetInfoResponse::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::color() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.color)
  return _internal_color();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_color(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.color)
}
inline std::string* GetInfoResponse::mutable_color() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.color)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_.Get();
}
inline void GetInfoResponse::_internal_set_color(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.color_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetInfoResponse.color)
  return _impl_.color_.Release();
}
inline void GetInfoResponse::set_allocated_color(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.color_.IsDefault()) {
          _impl_.color_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetInfoResponse.color)
}

// uint32 num_pending_channels = 3;
inline void GetInfoResponse::clear_num_pending_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_pending_channels_ = 0u;
}
inline ::uint32_t GetInfoResponse::num_pending_channels() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.num_pending_channels)
  return _internal_num_pending_channels();
}
inline void GetInfoResponse::set_num_pending_channels(::uint32_t value) {
  _internal_set_num_pending_channels(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.num_pending_channels)
}
inline ::uint32_t GetInfoResponse::_internal_num_pending_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_pending_channels_;
}
inline void GetInfoResponse::_internal_set_num_pending_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_pending_channels_ = value;
}

// uint32 num_active_channels = 4;
inline void GetInfoResponse::clear_num_active_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_active_channels_ = 0u;
}
inline ::uint32_t GetInfoResponse::num_active_channels() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.num_active_channels)
  return _internal_num_active_channels();
}
inline void GetInfoResponse::set_num_active_channels(::uint32_t value) {
  _internal_set_num_active_channels(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.num_active_channels)
}
inline ::uint32_t GetInfoResponse::_internal_num_active_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_active_channels_;
}
inline void GetInfoResponse::_internal_set_num_active_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_active_channels_ = value;
}

// uint32 num_inactive_channels = 15;
inline void GetInfoResponse::clear_num_inactive_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_inactive_channels_ = 0u;
}
inline ::uint32_t GetInfoResponse::num_inactive_channels() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.num_inactive_channels)
  return _internal_num_inactive_channels();
}
inline void GetInfoResponse::set_num_inactive_channels(::uint32_t value) {
  _internal_set_num_inactive_channels(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.num_inactive_channels)
}
inline ::uint32_t GetInfoResponse::_internal_num_inactive_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_inactive_channels_;
}
inline void GetInfoResponse::_internal_set_num_inactive_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_inactive_channels_ = value;
}

// uint32 num_peers = 5;
inline void GetInfoResponse::clear_num_peers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_peers_ = 0u;
}
inline ::uint32_t GetInfoResponse::num_peers() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.num_peers)
  return _internal_num_peers();
}
inline void GetInfoResponse::set_num_peers(::uint32_t value) {
  _internal_set_num_peers(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.num_peers)
}
inline ::uint32_t GetInfoResponse::_internal_num_peers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_peers_;
}
inline void GetInfoResponse::_internal_set_num_peers(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_peers_ = value;
}

// uint32 block_height = 6;
inline void GetInfoResponse::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0u;
}
inline ::uint32_t GetInfoResponse::block_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.block_height)
  return _internal_block_height();
}
inline void GetInfoResponse::set_block_height(::uint32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.block_height)
}
inline ::uint32_t GetInfoResponse::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void GetInfoResponse::_internal_set_block_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// string block_hash = 8;
inline void GetInfoResponse::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& GetInfoResponse::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetInfoResponse::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.block_hash)
}
inline std::string* GetInfoResponse::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.block_hash)
  return _s;
}
inline const std::string& GetInfoResponse::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void GetInfoResponse::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* GetInfoResponse::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* GetInfoResponse::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.GetInfoResponse.block_hash)
  return _impl_.block_hash_.Release();
}
inline void GetInfoResponse::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.GetInfoResponse.block_hash)
}

// int64 best_header_timestamp = 13;
inline void GetInfoResponse::clear_best_header_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_header_timestamp_ = ::int64_t{0};
}
inline ::int64_t GetInfoResponse::best_header_timestamp() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.best_header_timestamp)
  return _internal_best_header_timestamp();
}
inline void GetInfoResponse::set_best_header_timestamp(::int64_t value) {
  _internal_set_best_header_timestamp(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.best_header_timestamp)
}
inline ::int64_t GetInfoResponse::_internal_best_header_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.best_header_timestamp_;
}
inline void GetInfoResponse::_internal_set_best_header_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.best_header_timestamp_ = value;
}

// bool synced_to_chain = 9;
inline void GetInfoResponse::clear_synced_to_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.synced_to_chain_ = false;
}
inline bool GetInfoResponse::synced_to_chain() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.synced_to_chain)
  return _internal_synced_to_chain();
}
inline void GetInfoResponse::set_synced_to_chain(bool value) {
  _internal_set_synced_to_chain(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.synced_to_chain)
}
inline bool GetInfoResponse::_internal_synced_to_chain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.synced_to_chain_;
}
inline void GetInfoResponse::_internal_set_synced_to_chain(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.synced_to_chain_ = value;
}

// bool synced_to_graph = 18;
inline void GetInfoResponse::clear_synced_to_graph() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.synced_to_graph_ = false;
}
inline bool GetInfoResponse::synced_to_graph() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.synced_to_graph)
  return _internal_synced_to_graph();
}
inline void GetInfoResponse::set_synced_to_graph(bool value) {
  _internal_set_synced_to_graph(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.synced_to_graph)
}
inline bool GetInfoResponse::_internal_synced_to_graph() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.synced_to_graph_;
}
inline void GetInfoResponse::_internal_set_synced_to_graph(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.synced_to_graph_ = value;
}

// bool testnet = 10 [deprecated = true];
inline void GetInfoResponse::clear_testnet() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testnet_ = false;
}
inline bool GetInfoResponse::testnet() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.testnet)
  return _internal_testnet();
}
inline void GetInfoResponse::set_testnet(bool value) {
  _internal_set_testnet(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.testnet)
}
inline bool GetInfoResponse::_internal_testnet() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.testnet_;
}
inline void GetInfoResponse::_internal_set_testnet(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.testnet_ = value;
}

// repeated .lnrpc.Chain chains = 16;
inline int GetInfoResponse::_internal_chains_size() const {
  return _internal_chains().size();
}
inline int GetInfoResponse::chains_size() const {
  return _internal_chains_size();
}
inline void GetInfoResponse::clear_chains() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chains_.Clear();
}
inline ::lnrpc::Chain* GetInfoResponse::mutable_chains(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.chains)
  return _internal_mutable_chains()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>* GetInfoResponse::mutable_chains()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.GetInfoResponse.chains)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chains();
}
inline const ::lnrpc::Chain& GetInfoResponse::chains(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.chains)
  return _internal_chains().Get(index);
}
inline ::lnrpc::Chain* GetInfoResponse::add_chains() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Chain* _add = _internal_mutable_chains()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.GetInfoResponse.chains)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>& GetInfoResponse::chains() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.GetInfoResponse.chains)
  return _internal_chains();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>&
GetInfoResponse::_internal_chains() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chains_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Chain>*
GetInfoResponse::_internal_mutable_chains() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chains_;
}

// repeated string uris = 12;
inline int GetInfoResponse::_internal_uris_size() const {
  return _internal_uris().size();
}
inline int GetInfoResponse::uris_size() const {
  return _internal_uris_size();
}
inline void GetInfoResponse::clear_uris() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.uris_.Clear();
}
inline std::string* GetInfoResponse::add_uris() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_uris()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.GetInfoResponse.uris)
  return _s;
}
inline const std::string& GetInfoResponse::uris(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.uris)
  return _internal_uris().Get(index);
}
inline std::string* GetInfoResponse::mutable_uris(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.GetInfoResponse.uris)
  return _internal_mutable_uris()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetInfoResponse::set_uris(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_uris()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.uris)
}
template <typename Arg_, typename... Args_>
inline void GetInfoResponse::add_uris(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_uris(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:lnrpc.GetInfoResponse.uris)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetInfoResponse::uris() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.GetInfoResponse.uris)
  return _internal_uris();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetInfoResponse::mutable_uris() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.GetInfoResponse.uris)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_uris();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetInfoResponse::_internal_uris() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.uris_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetInfoResponse::_internal_mutable_uris() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.uris_;
}

// map<uint32, .lnrpc.Feature> features = 19;
inline int GetInfoResponse::_internal_features_size() const {
  return _internal_features().size();
}
inline int GetInfoResponse::features_size() const {
  return _internal_features_size();
}
inline void GetInfoResponse::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& GetInfoResponse::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& GetInfoResponse::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.GetInfoResponse.features)
  return _internal_features();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* GetInfoResponse::_internal_mutable_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.features_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* GetInfoResponse::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.GetInfoResponse.features)
  return _internal_mutable_features();
}

// bool require_htlc_interceptor = 21;
inline void GetInfoResponse::clear_require_htlc_interceptor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_htlc_interceptor_ = false;
}
inline bool GetInfoResponse::require_htlc_interceptor() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.require_htlc_interceptor)
  return _internal_require_htlc_interceptor();
}
inline void GetInfoResponse::set_require_htlc_interceptor(bool value) {
  _internal_set_require_htlc_interceptor(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.require_htlc_interceptor)
}
inline bool GetInfoResponse::_internal_require_htlc_interceptor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.require_htlc_interceptor_;
}
inline void GetInfoResponse::_internal_set_require_htlc_interceptor(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.require_htlc_interceptor_ = value;
}

// bool store_final_htlc_resolutions = 22;
inline void GetInfoResponse::clear_store_final_htlc_resolutions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_final_htlc_resolutions_ = false;
}
inline bool GetInfoResponse::store_final_htlc_resolutions() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetInfoResponse.store_final_htlc_resolutions)
  return _internal_store_final_htlc_resolutions();
}
inline void GetInfoResponse::set_store_final_htlc_resolutions(bool value) {
  _internal_set_store_final_htlc_resolutions(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetInfoResponse.store_final_htlc_resolutions)
}
inline bool GetInfoResponse::_internal_store_final_htlc_resolutions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.store_final_htlc_resolutions_;
}
inline void GetInfoResponse::_internal_set_store_final_htlc_resolutions(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.store_final_htlc_resolutions_ = value;
}

// -------------------------------------------------------------------

// GetDebugInfoRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetDebugInfoResponse

// map<string, string> config = 1;
inline int GetDebugInfoResponse::_internal_config_size() const {
  return _internal_config().size();
}
inline int GetDebugInfoResponse::config_size() const {
  return _internal_config_size();
}
inline void GetDebugInfoResponse::clear_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.config_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetDebugInfoResponse::_internal_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.config_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& GetDebugInfoResponse::config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.GetDebugInfoResponse.config)
  return _internal_config();
}
inline ::google::protobuf::Map<std::string, std::string>* GetDebugInfoResponse::_internal_mutable_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.config_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* GetDebugInfoResponse::mutable_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.GetDebugInfoResponse.config)
  return _internal_mutable_config();
}

// repeated string log = 2;
inline int GetDebugInfoResponse::_internal_log_size() const {
  return _internal_log().size();
}
inline int GetDebugInfoResponse::log_size() const {
  return _internal_log_size();
}
inline void GetDebugInfoResponse::clear_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.Clear();
}
inline std::string* GetDebugInfoResponse::add_log() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_log()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.GetDebugInfoResponse.log)
  return _s;
}
inline const std::string& GetDebugInfoResponse::log(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GetDebugInfoResponse.log)
  return _internal_log().Get(index);
}
inline std::string* GetDebugInfoResponse::mutable_log(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.GetDebugInfoResponse.log)
  return _internal_mutable_log()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void GetDebugInfoResponse::set_log(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_log()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:lnrpc.GetDebugInfoResponse.log)
}
template <typename Arg_, typename... Args_>
inline void GetDebugInfoResponse::add_log(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_log(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:lnrpc.GetDebugInfoResponse.log)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetDebugInfoResponse::log() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.GetDebugInfoResponse.log)
  return _internal_log();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetDebugInfoResponse::mutable_log() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.GetDebugInfoResponse.log)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_log();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetDebugInfoResponse::_internal_log() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetDebugInfoResponse::_internal_mutable_log() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.log_;
}

// -------------------------------------------------------------------

// GetRecoveryInfoRequest

// -------------------------------------------------------------------

// GetRecoveryInfoResponse

// bool recovery_mode = 1;
inline void GetRecoveryInfoResponse::clear_recovery_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_mode_ = false;
}
inline bool GetRecoveryInfoResponse::recovery_mode() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetRecoveryInfoResponse.recovery_mode)
  return _internal_recovery_mode();
}
inline void GetRecoveryInfoResponse::set_recovery_mode(bool value) {
  _internal_set_recovery_mode(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetRecoveryInfoResponse.recovery_mode)
}
inline bool GetRecoveryInfoResponse::_internal_recovery_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_mode_;
}
inline void GetRecoveryInfoResponse::_internal_set_recovery_mode(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_mode_ = value;
}

// bool recovery_finished = 2;
inline void GetRecoveryInfoResponse::clear_recovery_finished() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_finished_ = false;
}
inline bool GetRecoveryInfoResponse::recovery_finished() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetRecoveryInfoResponse.recovery_finished)
  return _internal_recovery_finished();
}
inline void GetRecoveryInfoResponse::set_recovery_finished(bool value) {
  _internal_set_recovery_finished(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetRecoveryInfoResponse.recovery_finished)
}
inline bool GetRecoveryInfoResponse::_internal_recovery_finished() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovery_finished_;
}
inline void GetRecoveryInfoResponse::_internal_set_recovery_finished(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovery_finished_ = value;
}

// double progress = 3;
inline void GetRecoveryInfoResponse::clear_progress() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_ = 0;
}
inline double GetRecoveryInfoResponse::progress() const {
  // @@protoc_insertion_point(field_get:lnrpc.GetRecoveryInfoResponse.progress)
  return _internal_progress();
}
inline void GetRecoveryInfoResponse::set_progress(double value) {
  _internal_set_progress(value);
  // @@protoc_insertion_point(field_set:lnrpc.GetRecoveryInfoResponse.progress)
}
inline double GetRecoveryInfoResponse::_internal_progress() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.progress_;
}
inline void GetRecoveryInfoResponse::_internal_set_progress(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.progress_ = value;
}

// -------------------------------------------------------------------

// Chain

// string chain = 1 [deprecated = true];
inline void Chain::clear_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_.ClearToEmpty();
}
inline const std::string& Chain::chain() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Chain.chain)
  return _internal_chain();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Chain::set_chain(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Chain.chain)
}
inline std::string* Chain::mutable_chain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chain();
  // @@protoc_insertion_point(field_mutable:lnrpc.Chain.chain)
  return _s;
}
inline const std::string& Chain::_internal_chain() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chain_.Get();
}
inline void Chain::_internal_set_chain(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_.Set(value, GetArena());
}
inline std::string* Chain::_internal_mutable_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chain_.Mutable( GetArena());
}
inline std::string* Chain::release_chain() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Chain.chain)
  return _impl_.chain_.Release();
}
inline void Chain::set_allocated_chain(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chain_.IsDefault()) {
          _impl_.chain_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Chain.chain)
}

// string network = 2;
inline void Chain::clear_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.ClearToEmpty();
}
inline const std::string& Chain::network() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Chain.network)
  return _internal_network();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Chain::set_network(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Chain.network)
}
inline std::string* Chain::mutable_network() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_network();
  // @@protoc_insertion_point(field_mutable:lnrpc.Chain.network)
  return _s;
}
inline const std::string& Chain::_internal_network() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_.Get();
}
inline void Chain::_internal_set_network(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.Set(value, GetArena());
}
inline std::string* Chain::_internal_mutable_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.network_.Mutable( GetArena());
}
inline std::string* Chain::release_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Chain.network)
  return _impl_.network_.Release();
}
inline void Chain::set_allocated_network(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.network_.IsDefault()) {
          _impl_.network_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Chain.network)
}

// -------------------------------------------------------------------

// ConfirmationUpdate

// bytes block_sha = 1;
inline void ConfirmationUpdate::clear_block_sha() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_sha_.ClearToEmpty();
}
inline const std::string& ConfirmationUpdate::block_sha() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ConfirmationUpdate.block_sha)
  return _internal_block_sha();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ConfirmationUpdate::set_block_sha(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_sha_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ConfirmationUpdate.block_sha)
}
inline std::string* ConfirmationUpdate::mutable_block_sha() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_sha();
  // @@protoc_insertion_point(field_mutable:lnrpc.ConfirmationUpdate.block_sha)
  return _s;
}
inline const std::string& ConfirmationUpdate::_internal_block_sha() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_sha_.Get();
}
inline void ConfirmationUpdate::_internal_set_block_sha(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_sha_.Set(value, GetArena());
}
inline std::string* ConfirmationUpdate::_internal_mutable_block_sha() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_sha_.Mutable( GetArena());
}
inline std::string* ConfirmationUpdate::release_block_sha() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ConfirmationUpdate.block_sha)
  return _impl_.block_sha_.Release();
}
inline void ConfirmationUpdate::set_allocated_block_sha(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_sha_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_sha_.IsDefault()) {
          _impl_.block_sha_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ConfirmationUpdate.block_sha)
}

// int32 block_height = 2;
inline void ConfirmationUpdate::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0;
}
inline ::int32_t ConfirmationUpdate::block_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.ConfirmationUpdate.block_height)
  return _internal_block_height();
}
inline void ConfirmationUpdate::set_block_height(::int32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.ConfirmationUpdate.block_height)
}
inline ::int32_t ConfirmationUpdate::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void ConfirmationUpdate::_internal_set_block_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// uint32 num_confs_left = 3;
inline void ConfirmationUpdate::clear_num_confs_left() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_confs_left_ = 0u;
}
inline ::uint32_t ConfirmationUpdate::num_confs_left() const {
  // @@protoc_insertion_point(field_get:lnrpc.ConfirmationUpdate.num_confs_left)
  return _internal_num_confs_left();
}
inline void ConfirmationUpdate::set_num_confs_left(::uint32_t value) {
  _internal_set_num_confs_left(value);
  // @@protoc_insertion_point(field_set:lnrpc.ConfirmationUpdate.num_confs_left)
}
inline ::uint32_t ConfirmationUpdate::_internal_num_confs_left() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_confs_left_;
}
inline void ConfirmationUpdate::_internal_set_num_confs_left(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_confs_left_ = value;
}

// -------------------------------------------------------------------

// ChannelOpenUpdate

// .lnrpc.ChannelPoint channel_point = 1;
inline bool ChannelOpenUpdate::has_channel_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_point_ != nullptr);
  return value;
}
inline void ChannelOpenUpdate::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_point_ != nullptr) _impl_.channel_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& ChannelOpenUpdate::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.channel_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChannelOpenUpdate::channel_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelOpenUpdate.channel_point)
  return _internal_channel_point();
}
inline void ChannelOpenUpdate::unsafe_arena_set_allocated_channel_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_point_);
  }
  _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelOpenUpdate.channel_point)
}
inline ::lnrpc::ChannelPoint* ChannelOpenUpdate::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.channel_point_;
  _impl_.channel_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* ChannelOpenUpdate::unsafe_arena_release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelOpenUpdate.channel_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.channel_point_;
  _impl_.channel_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* ChannelOpenUpdate::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.channel_point_;
}
inline ::lnrpc::ChannelPoint* ChannelOpenUpdate::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelOpenUpdate.channel_point)
  return _msg;
}
inline void ChannelOpenUpdate::set_allocated_channel_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelOpenUpdate.channel_point)
}

// -------------------------------------------------------------------

// CloseOutput

// int64 amount_sat = 1;
inline void CloseOutput::clear_amount_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = ::int64_t{0};
}
inline ::int64_t CloseOutput::amount_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseOutput.amount_sat)
  return _internal_amount_sat();
}
inline void CloseOutput::set_amount_sat(::int64_t value) {
  _internal_set_amount_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseOutput.amount_sat)
}
inline ::int64_t CloseOutput::_internal_amount_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_sat_;
}
inline void CloseOutput::_internal_set_amount_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = value;
}

// bytes pk_script = 2;
inline void CloseOutput::clear_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.ClearToEmpty();
}
inline const std::string& CloseOutput::pk_script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseOutput.pk_script)
  return _internal_pk_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloseOutput::set_pk_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CloseOutput.pk_script)
}
inline std::string* CloseOutput::mutable_pk_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pk_script();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseOutput.pk_script)
  return _s;
}
inline const std::string& CloseOutput::_internal_pk_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pk_script_.Get();
}
inline void CloseOutput::_internal_set_pk_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.Set(value, GetArena());
}
inline std::string* CloseOutput::_internal_mutable_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pk_script_.Mutable( GetArena());
}
inline std::string* CloseOutput::release_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CloseOutput.pk_script)
  return _impl_.pk_script_.Release();
}
inline void CloseOutput::set_allocated_pk_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pk_script_.IsDefault()) {
          _impl_.pk_script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CloseOutput.pk_script)
}

// bool is_local = 3;
inline void CloseOutput::clear_is_local() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_local_ = false;
}
inline bool CloseOutput::is_local() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseOutput.is_local)
  return _internal_is_local();
}
inline void CloseOutput::set_is_local(bool value) {
  _internal_set_is_local(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseOutput.is_local)
}
inline bool CloseOutput::_internal_is_local() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_local_;
}
inline void CloseOutput::_internal_set_is_local(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_local_ = value;
}

// bytes custom_channel_data = 4;
inline void CloseOutput::clear_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.ClearToEmpty();
}
inline const std::string& CloseOutput::custom_channel_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseOutput.custom_channel_data)
  return _internal_custom_channel_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloseOutput::set_custom_channel_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CloseOutput.custom_channel_data)
}
inline std::string* CloseOutput::mutable_custom_channel_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_channel_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseOutput.custom_channel_data)
  return _s;
}
inline const std::string& CloseOutput::_internal_custom_channel_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_channel_data_.Get();
}
inline void CloseOutput::_internal_set_custom_channel_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.Set(value, GetArena());
}
inline std::string* CloseOutput::_internal_mutable_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_channel_data_.Mutable( GetArena());
}
inline std::string* CloseOutput::release_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CloseOutput.custom_channel_data)
  return _impl_.custom_channel_data_.Release();
}
inline void CloseOutput::set_allocated_custom_channel_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_channel_data_.IsDefault()) {
          _impl_.custom_channel_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CloseOutput.custom_channel_data)
}

// -------------------------------------------------------------------

// ChannelCloseUpdate

// bytes closing_txid = 1;
inline void ChannelCloseUpdate::clear_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.ClearToEmpty();
}
inline const std::string& ChannelCloseUpdate::closing_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseUpdate.closing_txid)
  return _internal_closing_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelCloseUpdate::set_closing_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseUpdate.closing_txid)
}
inline std::string* ChannelCloseUpdate::mutable_closing_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_closing_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseUpdate.closing_txid)
  return _s;
}
inline const std::string& ChannelCloseUpdate::_internal_closing_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closing_txid_.Get();
}
inline void ChannelCloseUpdate::_internal_set_closing_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(value, GetArena());
}
inline std::string* ChannelCloseUpdate::_internal_mutable_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.closing_txid_.Mutable( GetArena());
}
inline std::string* ChannelCloseUpdate::release_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseUpdate.closing_txid)
  return _impl_.closing_txid_.Release();
}
inline void ChannelCloseUpdate::set_allocated_closing_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.closing_txid_.IsDefault()) {
          _impl_.closing_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseUpdate.closing_txid)
}

// bool success = 2;
inline void ChannelCloseUpdate::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ChannelCloseUpdate::success() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseUpdate.success)
  return _internal_success();
}
inline void ChannelCloseUpdate::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelCloseUpdate.success)
}
inline bool ChannelCloseUpdate::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ChannelCloseUpdate::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// .lnrpc.CloseOutput local_close_output = 3;
inline bool ChannelCloseUpdate::has_local_close_output() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.local_close_output_ != nullptr);
  return value;
}
inline void ChannelCloseUpdate::clear_local_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_close_output_ != nullptr) _impl_.local_close_output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::CloseOutput& ChannelCloseUpdate::_internal_local_close_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::CloseOutput* p = _impl_.local_close_output_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::CloseOutput&>(::lnrpc::_CloseOutput_default_instance_);
}
inline const ::lnrpc::CloseOutput& ChannelCloseUpdate::local_close_output() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseUpdate.local_close_output)
  return _internal_local_close_output();
}
inline void ChannelCloseUpdate::unsafe_arena_set_allocated_local_close_output(::lnrpc::CloseOutput* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.local_close_output_);
  }
  _impl_.local_close_output_ = reinterpret_cast<::lnrpc::CloseOutput*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelCloseUpdate.local_close_output)
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::release_local_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::CloseOutput* released = _impl_.local_close_output_;
  _impl_.local_close_output_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::unsafe_arena_release_local_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseUpdate.local_close_output)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::CloseOutput* temp = _impl_.local_close_output_;
  _impl_.local_close_output_ = nullptr;
  return temp;
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::_internal_mutable_local_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_close_output_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::CloseOutput>(GetArena());
    _impl_.local_close_output_ = reinterpret_cast<::lnrpc::CloseOutput*>(p);
  }
  return _impl_.local_close_output_;
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::mutable_local_close_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::CloseOutput* _msg = _internal_mutable_local_close_output();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseUpdate.local_close_output)
  return _msg;
}
inline void ChannelCloseUpdate::set_allocated_local_close_output(::lnrpc::CloseOutput* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.local_close_output_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.local_close_output_ = reinterpret_cast<::lnrpc::CloseOutput*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseUpdate.local_close_output)
}

// .lnrpc.CloseOutput remote_close_output = 4;
inline bool ChannelCloseUpdate::has_remote_close_output() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_close_output_ != nullptr);
  return value;
}
inline void ChannelCloseUpdate::clear_remote_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_close_output_ != nullptr) _impl_.remote_close_output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::CloseOutput& ChannelCloseUpdate::_internal_remote_close_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::CloseOutput* p = _impl_.remote_close_output_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::CloseOutput&>(::lnrpc::_CloseOutput_default_instance_);
}
inline const ::lnrpc::CloseOutput& ChannelCloseUpdate::remote_close_output() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseUpdate.remote_close_output)
  return _internal_remote_close_output();
}
inline void ChannelCloseUpdate::unsafe_arena_set_allocated_remote_close_output(::lnrpc::CloseOutput* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_close_output_);
  }
  _impl_.remote_close_output_ = reinterpret_cast<::lnrpc::CloseOutput*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelCloseUpdate.remote_close_output)
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::release_remote_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::CloseOutput* released = _impl_.remote_close_output_;
  _impl_.remote_close_output_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::unsafe_arena_release_remote_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelCloseUpdate.remote_close_output)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::CloseOutput* temp = _impl_.remote_close_output_;
  _impl_.remote_close_output_ = nullptr;
  return temp;
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::_internal_mutable_remote_close_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_close_output_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::CloseOutput>(GetArena());
    _impl_.remote_close_output_ = reinterpret_cast<::lnrpc::CloseOutput*>(p);
  }
  return _impl_.remote_close_output_;
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::mutable_remote_close_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::CloseOutput* _msg = _internal_mutable_remote_close_output();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseUpdate.remote_close_output)
  return _msg;
}
inline void ChannelCloseUpdate::set_allocated_remote_close_output(::lnrpc::CloseOutput* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.remote_close_output_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.remote_close_output_ = reinterpret_cast<::lnrpc::CloseOutput*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelCloseUpdate.remote_close_output)
}

// repeated .lnrpc.CloseOutput additional_outputs = 5;
inline int ChannelCloseUpdate::_internal_additional_outputs_size() const {
  return _internal_additional_outputs().size();
}
inline int ChannelCloseUpdate::additional_outputs_size() const {
  return _internal_additional_outputs_size();
}
inline void ChannelCloseUpdate::clear_additional_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_outputs_.Clear();
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::mutable_additional_outputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelCloseUpdate.additional_outputs)
  return _internal_mutable_additional_outputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>* ChannelCloseUpdate::mutable_additional_outputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ChannelCloseUpdate.additional_outputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_additional_outputs();
}
inline const ::lnrpc::CloseOutput& ChannelCloseUpdate::additional_outputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelCloseUpdate.additional_outputs)
  return _internal_additional_outputs().Get(index);
}
inline ::lnrpc::CloseOutput* ChannelCloseUpdate::add_additional_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::CloseOutput* _add = _internal_mutable_additional_outputs()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ChannelCloseUpdate.additional_outputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>& ChannelCloseUpdate::additional_outputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ChannelCloseUpdate.additional_outputs)
  return _internal_additional_outputs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>&
ChannelCloseUpdate::_internal_additional_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_outputs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::CloseOutput>*
ChannelCloseUpdate::_internal_mutable_additional_outputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.additional_outputs_;
}

// -------------------------------------------------------------------

// CloseChannelRequest

// .lnrpc.ChannelPoint channel_point = 1;
inline bool CloseChannelRequest::has_channel_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_point_ != nullptr);
  return value;
}
inline void CloseChannelRequest::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_point_ != nullptr) _impl_.channel_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& CloseChannelRequest::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.channel_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& CloseChannelRequest::channel_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.channel_point)
  return _internal_channel_point();
}
inline void CloseChannelRequest::unsafe_arena_set_allocated_channel_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_point_);
  }
  _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.CloseChannelRequest.channel_point)
}
inline ::lnrpc::ChannelPoint* CloseChannelRequest::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.channel_point_;
  _impl_.channel_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* CloseChannelRequest::unsafe_arena_release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CloseChannelRequest.channel_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.channel_point_;
  _impl_.channel_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* CloseChannelRequest::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.channel_point_;
}
inline ::lnrpc::ChannelPoint* CloseChannelRequest::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseChannelRequest.channel_point)
  return _msg;
}
inline void CloseChannelRequest::set_allocated_channel_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CloseChannelRequest.channel_point)
}

// bool force = 2;
inline void CloseChannelRequest::clear_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = false;
}
inline bool CloseChannelRequest::force() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.force)
  return _internal_force();
}
inline void CloseChannelRequest::set_force(bool value) {
  _internal_set_force(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.force)
}
inline bool CloseChannelRequest::_internal_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_;
}
inline void CloseChannelRequest::_internal_set_force(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = value;
}

// int32 target_conf = 3;
inline void CloseChannelRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0;
}
inline ::int32_t CloseChannelRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.target_conf)
  return _internal_target_conf();
}
inline void CloseChannelRequest::set_target_conf(::int32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.target_conf)
}
inline ::int32_t CloseChannelRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void CloseChannelRequest::_internal_set_target_conf(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// int64 sat_per_byte = 4 [deprecated = true];
inline void CloseChannelRequest::clear_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = ::int64_t{0};
}
inline ::int64_t CloseChannelRequest::sat_per_byte() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.sat_per_byte)
  return _internal_sat_per_byte();
}
inline void CloseChannelRequest::set_sat_per_byte(::int64_t value) {
  _internal_set_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.sat_per_byte)
}
inline ::int64_t CloseChannelRequest::_internal_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_byte_;
}
inline void CloseChannelRequest::_internal_set_sat_per_byte(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = value;
}

// string delivery_address = 5;
inline void CloseChannelRequest::clear_delivery_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delivery_address_.ClearToEmpty();
}
inline const std::string& CloseChannelRequest::delivery_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.delivery_address)
  return _internal_delivery_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CloseChannelRequest::set_delivery_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delivery_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.delivery_address)
}
inline std::string* CloseChannelRequest::mutable_delivery_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_delivery_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseChannelRequest.delivery_address)
  return _s;
}
inline const std::string& CloseChannelRequest::_internal_delivery_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delivery_address_.Get();
}
inline void CloseChannelRequest::_internal_set_delivery_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delivery_address_.Set(value, GetArena());
}
inline std::string* CloseChannelRequest::_internal_mutable_delivery_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.delivery_address_.Mutable( GetArena());
}
inline std::string* CloseChannelRequest::release_delivery_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CloseChannelRequest.delivery_address)
  return _impl_.delivery_address_.Release();
}
inline void CloseChannelRequest::set_allocated_delivery_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delivery_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.delivery_address_.IsDefault()) {
          _impl_.delivery_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CloseChannelRequest.delivery_address)
}

// uint64 sat_per_vbyte = 6;
inline void CloseChannelRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t CloseChannelRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void CloseChannelRequest::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.sat_per_vbyte)
}
inline ::uint64_t CloseChannelRequest::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void CloseChannelRequest::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// uint64 max_fee_per_vbyte = 7;
inline void CloseChannelRequest::clear_max_fee_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_fee_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t CloseChannelRequest::max_fee_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.max_fee_per_vbyte)
  return _internal_max_fee_per_vbyte();
}
inline void CloseChannelRequest::set_max_fee_per_vbyte(::uint64_t value) {
  _internal_set_max_fee_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.max_fee_per_vbyte)
}
inline ::uint64_t CloseChannelRequest::_internal_max_fee_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_fee_per_vbyte_;
}
inline void CloseChannelRequest::_internal_set_max_fee_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_fee_per_vbyte_ = value;
}

// bool no_wait = 8;
inline void CloseChannelRequest::clear_no_wait() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_wait_ = false;
}
inline bool CloseChannelRequest::no_wait() const {
  // @@protoc_insertion_point(field_get:lnrpc.CloseChannelRequest.no_wait)
  return _internal_no_wait();
}
inline void CloseChannelRequest::set_no_wait(bool value) {
  _internal_set_no_wait(value);
  // @@protoc_insertion_point(field_set:lnrpc.CloseChannelRequest.no_wait)
}
inline bool CloseChannelRequest::_internal_no_wait() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_wait_;
}
inline void CloseChannelRequest::_internal_set_no_wait(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_wait_ = value;
}

// -------------------------------------------------------------------

// CloseStatusUpdate

// .lnrpc.PendingUpdate close_pending = 1;
inline bool CloseStatusUpdate::has_close_pending() const {
  return update_case() == kClosePending;
}
inline bool CloseStatusUpdate::_internal_has_close_pending() const {
  return update_case() == kClosePending;
}
inline void CloseStatusUpdate::set_has_close_pending() {
  _impl_._oneof_case_[0] = kClosePending;
}
inline void CloseStatusUpdate::clear_close_pending() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kClosePending) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.close_pending_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.close_pending_);
    }
    clear_has_update();
  }
}
inline ::lnrpc::PendingUpdate* CloseStatusUpdate::release_close_pending() {
  // @@protoc_insertion_point(field_release:lnrpc.CloseStatusUpdate.close_pending)
  if (update_case() == kClosePending) {
    clear_has_update();
    auto* temp = _impl_.update_.close_pending_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.close_pending_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::PendingUpdate& CloseStatusUpdate::_internal_close_pending() const {
  return update_case() == kClosePending ? *_impl_.update_.close_pending_ : reinterpret_cast<::lnrpc::PendingUpdate&>(::lnrpc::_PendingUpdate_default_instance_);
}
inline const ::lnrpc::PendingUpdate& CloseStatusUpdate::close_pending() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseStatusUpdate.close_pending)
  return _internal_close_pending();
}
inline ::lnrpc::PendingUpdate* CloseStatusUpdate::unsafe_arena_release_close_pending() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.CloseStatusUpdate.close_pending)
  if (update_case() == kClosePending) {
    clear_has_update();
    auto* temp = _impl_.update_.close_pending_;
    _impl_.update_.close_pending_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloseStatusUpdate::unsafe_arena_set_allocated_close_pending(::lnrpc::PendingUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_close_pending();
    _impl_.update_.close_pending_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.CloseStatusUpdate.close_pending)
}
inline ::lnrpc::PendingUpdate* CloseStatusUpdate::_internal_mutable_close_pending() {
  if (update_case() != kClosePending) {
    clear_update();
    set_has_close_pending();
    _impl_.update_.close_pending_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingUpdate>(GetArena());
  }
  return _impl_.update_.close_pending_;
}
inline ::lnrpc::PendingUpdate* CloseStatusUpdate::mutable_close_pending() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::PendingUpdate* _msg = _internal_mutable_close_pending();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseStatusUpdate.close_pending)
  return _msg;
}

// .lnrpc.ChannelCloseUpdate chan_close = 3;
inline bool CloseStatusUpdate::has_chan_close() const {
  return update_case() == kChanClose;
}
inline bool CloseStatusUpdate::_internal_has_chan_close() const {
  return update_case() == kChanClose;
}
inline void CloseStatusUpdate::set_has_chan_close() {
  _impl_._oneof_case_[0] = kChanClose;
}
inline void CloseStatusUpdate::clear_chan_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kChanClose) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.chan_close_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.chan_close_);
    }
    clear_has_update();
  }
}
inline ::lnrpc::ChannelCloseUpdate* CloseStatusUpdate::release_chan_close() {
  // @@protoc_insertion_point(field_release:lnrpc.CloseStatusUpdate.chan_close)
  if (update_case() == kChanClose) {
    clear_has_update();
    auto* temp = _impl_.update_.chan_close_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.chan_close_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelCloseUpdate& CloseStatusUpdate::_internal_chan_close() const {
  return update_case() == kChanClose ? *_impl_.update_.chan_close_ : reinterpret_cast<::lnrpc::ChannelCloseUpdate&>(::lnrpc::_ChannelCloseUpdate_default_instance_);
}
inline const ::lnrpc::ChannelCloseUpdate& CloseStatusUpdate::chan_close() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseStatusUpdate.chan_close)
  return _internal_chan_close();
}
inline ::lnrpc::ChannelCloseUpdate* CloseStatusUpdate::unsafe_arena_release_chan_close() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.CloseStatusUpdate.chan_close)
  if (update_case() == kChanClose) {
    clear_has_update();
    auto* temp = _impl_.update_.chan_close_;
    _impl_.update_.chan_close_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloseStatusUpdate::unsafe_arena_set_allocated_chan_close(::lnrpc::ChannelCloseUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_chan_close();
    _impl_.update_.chan_close_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.CloseStatusUpdate.chan_close)
}
inline ::lnrpc::ChannelCloseUpdate* CloseStatusUpdate::_internal_mutable_chan_close() {
  if (update_case() != kChanClose) {
    clear_update();
    set_has_chan_close();
    _impl_.update_.chan_close_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelCloseUpdate>(GetArena());
  }
  return _impl_.update_.chan_close_;
}
inline ::lnrpc::ChannelCloseUpdate* CloseStatusUpdate::mutable_chan_close() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelCloseUpdate* _msg = _internal_mutable_chan_close();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseStatusUpdate.chan_close)
  return _msg;
}

// .lnrpc.InstantUpdate close_instant = 4;
inline bool CloseStatusUpdate::has_close_instant() const {
  return update_case() == kCloseInstant;
}
inline bool CloseStatusUpdate::_internal_has_close_instant() const {
  return update_case() == kCloseInstant;
}
inline void CloseStatusUpdate::set_has_close_instant() {
  _impl_._oneof_case_[0] = kCloseInstant;
}
inline void CloseStatusUpdate::clear_close_instant() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kCloseInstant) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.close_instant_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.close_instant_);
    }
    clear_has_update();
  }
}
inline ::lnrpc::InstantUpdate* CloseStatusUpdate::release_close_instant() {
  // @@protoc_insertion_point(field_release:lnrpc.CloseStatusUpdate.close_instant)
  if (update_case() == kCloseInstant) {
    clear_has_update();
    auto* temp = _impl_.update_.close_instant_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.close_instant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::InstantUpdate& CloseStatusUpdate::_internal_close_instant() const {
  return update_case() == kCloseInstant ? *_impl_.update_.close_instant_ : reinterpret_cast<::lnrpc::InstantUpdate&>(::lnrpc::_InstantUpdate_default_instance_);
}
inline const ::lnrpc::InstantUpdate& CloseStatusUpdate::close_instant() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CloseStatusUpdate.close_instant)
  return _internal_close_instant();
}
inline ::lnrpc::InstantUpdate* CloseStatusUpdate::unsafe_arena_release_close_instant() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.CloseStatusUpdate.close_instant)
  if (update_case() == kCloseInstant) {
    clear_has_update();
    auto* temp = _impl_.update_.close_instant_;
    _impl_.update_.close_instant_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void CloseStatusUpdate::unsafe_arena_set_allocated_close_instant(::lnrpc::InstantUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_close_instant();
    _impl_.update_.close_instant_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.CloseStatusUpdate.close_instant)
}
inline ::lnrpc::InstantUpdate* CloseStatusUpdate::_internal_mutable_close_instant() {
  if (update_case() != kCloseInstant) {
    clear_update();
    set_has_close_instant();
    _impl_.update_.close_instant_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::InstantUpdate>(GetArena());
  }
  return _impl_.update_.close_instant_;
}
inline ::lnrpc::InstantUpdate* CloseStatusUpdate::mutable_close_instant() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::InstantUpdate* _msg = _internal_mutable_close_instant();
  // @@protoc_insertion_point(field_mutable:lnrpc.CloseStatusUpdate.close_instant)
  return _msg;
}

inline bool CloseStatusUpdate::has_update() const {
  return update_case() != UPDATE_NOT_SET;
}
inline void CloseStatusUpdate::clear_has_update() {
  _impl_._oneof_case_[0] = UPDATE_NOT_SET;
}
inline CloseStatusUpdate::UpdateCase CloseStatusUpdate::update_case() const {
  return CloseStatusUpdate::UpdateCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// PendingUpdate

// bytes txid = 1;
inline void PendingUpdate::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
}
inline const std::string& PendingUpdate::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingUpdate.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingUpdate::set_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingUpdate.txid)
}
inline std::string* PendingUpdate::mutable_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingUpdate.txid)
  return _s;
}
inline const std::string& PendingUpdate::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void PendingUpdate::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* PendingUpdate::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* PendingUpdate::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingUpdate.txid)
  return _impl_.txid_.Release();
}
inline void PendingUpdate::set_allocated_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_.IsDefault()) {
          _impl_.txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingUpdate.txid)
}

// uint32 output_index = 2;
inline void PendingUpdate::clear_output_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = 0u;
}
inline ::uint32_t PendingUpdate::output_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingUpdate.output_index)
  return _internal_output_index();
}
inline void PendingUpdate::set_output_index(::uint32_t value) {
  _internal_set_output_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingUpdate.output_index)
}
inline ::uint32_t PendingUpdate::_internal_output_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_index_;
}
inline void PendingUpdate::_internal_set_output_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_index_ = value;
}

// -------------------------------------------------------------------

// InstantUpdate

// -------------------------------------------------------------------

// ReadyForPsbtFunding

// string funding_address = 1;
inline void ReadyForPsbtFunding::clear_funding_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_address_.ClearToEmpty();
}
inline const std::string& ReadyForPsbtFunding::funding_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ReadyForPsbtFunding.funding_address)
  return _internal_funding_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadyForPsbtFunding::set_funding_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ReadyForPsbtFunding.funding_address)
}
inline std::string* ReadyForPsbtFunding::mutable_funding_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funding_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.ReadyForPsbtFunding.funding_address)
  return _s;
}
inline const std::string& ReadyForPsbtFunding::_internal_funding_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_address_.Get();
}
inline void ReadyForPsbtFunding::_internal_set_funding_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_address_.Set(value, GetArena());
}
inline std::string* ReadyForPsbtFunding::_internal_mutable_funding_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.funding_address_.Mutable( GetArena());
}
inline std::string* ReadyForPsbtFunding::release_funding_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ReadyForPsbtFunding.funding_address)
  return _impl_.funding_address_.Release();
}
inline void ReadyForPsbtFunding::set_allocated_funding_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.funding_address_.IsDefault()) {
          _impl_.funding_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ReadyForPsbtFunding.funding_address)
}

// int64 funding_amount = 2;
inline void ReadyForPsbtFunding::clear_funding_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_amount_ = ::int64_t{0};
}
inline ::int64_t ReadyForPsbtFunding::funding_amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.ReadyForPsbtFunding.funding_amount)
  return _internal_funding_amount();
}
inline void ReadyForPsbtFunding::set_funding_amount(::int64_t value) {
  _internal_set_funding_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.ReadyForPsbtFunding.funding_amount)
}
inline ::int64_t ReadyForPsbtFunding::_internal_funding_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_amount_;
}
inline void ReadyForPsbtFunding::_internal_set_funding_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_amount_ = value;
}

// bytes psbt = 3;
inline void ReadyForPsbtFunding::clear_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.ClearToEmpty();
}
inline const std::string& ReadyForPsbtFunding::psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ReadyForPsbtFunding.psbt)
  return _internal_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReadyForPsbtFunding::set_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ReadyForPsbtFunding.psbt)
}
inline std::string* ReadyForPsbtFunding::mutable_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_psbt();
  // @@protoc_insertion_point(field_mutable:lnrpc.ReadyForPsbtFunding.psbt)
  return _s;
}
inline const std::string& ReadyForPsbtFunding::_internal_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.psbt_.Get();
}
inline void ReadyForPsbtFunding::_internal_set_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.Set(value, GetArena());
}
inline std::string* ReadyForPsbtFunding::_internal_mutable_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.psbt_.Mutable( GetArena());
}
inline std::string* ReadyForPsbtFunding::release_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ReadyForPsbtFunding.psbt)
  return _impl_.psbt_.Release();
}
inline void ReadyForPsbtFunding::set_allocated_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.psbt_.IsDefault()) {
          _impl_.psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ReadyForPsbtFunding.psbt)
}

// -------------------------------------------------------------------

// BatchOpenChannelRequest

// repeated .lnrpc.BatchOpenChannel channels = 1;
inline int BatchOpenChannelRequest::_internal_channels_size() const {
  return _internal_channels().size();
}
inline int BatchOpenChannelRequest::channels_size() const {
  return _internal_channels_size();
}
inline void BatchOpenChannelRequest::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
inline ::lnrpc::BatchOpenChannel* BatchOpenChannelRequest::mutable_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannelRequest.channels)
  return _internal_mutable_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>* BatchOpenChannelRequest::mutable_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.BatchOpenChannelRequest.channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channels();
}
inline const ::lnrpc::BatchOpenChannel& BatchOpenChannelRequest::channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.channels)
  return _internal_channels().Get(index);
}
inline ::lnrpc::BatchOpenChannel* BatchOpenChannelRequest::add_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::BatchOpenChannel* _add = _internal_mutable_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.BatchOpenChannelRequest.channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>& BatchOpenChannelRequest::channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.BatchOpenChannelRequest.channels)
  return _internal_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>&
BatchOpenChannelRequest::_internal_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BatchOpenChannel>*
BatchOpenChannelRequest::_internal_mutable_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channels_;
}

// int32 target_conf = 2;
inline void BatchOpenChannelRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0;
}
inline ::int32_t BatchOpenChannelRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.target_conf)
  return _internal_target_conf();
}
inline void BatchOpenChannelRequest::set_target_conf(::int32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannelRequest.target_conf)
}
inline ::int32_t BatchOpenChannelRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void BatchOpenChannelRequest::_internal_set_target_conf(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// int64 sat_per_vbyte = 3;
inline void BatchOpenChannelRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::int64_t{0};
}
inline ::int64_t BatchOpenChannelRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void BatchOpenChannelRequest::set_sat_per_vbyte(::int64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannelRequest.sat_per_vbyte)
}
inline ::int64_t BatchOpenChannelRequest::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void BatchOpenChannelRequest::_internal_set_sat_per_vbyte(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// int32 min_confs = 4;
inline void BatchOpenChannelRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t BatchOpenChannelRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.min_confs)
  return _internal_min_confs();
}
inline void BatchOpenChannelRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannelRequest.min_confs)
}
inline ::int32_t BatchOpenChannelRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void BatchOpenChannelRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 5;
inline void BatchOpenChannelRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool BatchOpenChannelRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void BatchOpenChannelRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannelRequest.spend_unconfirmed)
}
inline bool BatchOpenChannelRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void BatchOpenChannelRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// string label = 6;
inline void BatchOpenChannelRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& BatchOpenChannelRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BatchOpenChannelRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannelRequest.label)
}
inline std::string* BatchOpenChannelRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannelRequest.label)
  return _s;
}
inline const std::string& BatchOpenChannelRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void BatchOpenChannelRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* BatchOpenChannelRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* BatchOpenChannelRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BatchOpenChannelRequest.label)
  return _impl_.label_.Release();
}
inline void BatchOpenChannelRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BatchOpenChannelRequest.label)
}

// .lnrpc.CoinSelectionStrategy coin_selection_strategy = 7;
inline void BatchOpenChannelRequest::clear_coin_selection_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = 0;
}
inline ::lnrpc::CoinSelectionStrategy BatchOpenChannelRequest::coin_selection_strategy() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelRequest.coin_selection_strategy)
  return _internal_coin_selection_strategy();
}
inline void BatchOpenChannelRequest::set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  _internal_set_coin_selection_strategy(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannelRequest.coin_selection_strategy)
}
inline ::lnrpc::CoinSelectionStrategy BatchOpenChannelRequest::_internal_coin_selection_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CoinSelectionStrategy>(_impl_.coin_selection_strategy_);
}
inline void BatchOpenChannelRequest::_internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = value;
}

// -------------------------------------------------------------------

// BatchOpenChannel

// bytes node_pubkey = 1;
inline void BatchOpenChannel::clear_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.ClearToEmpty();
}
inline const std::string& BatchOpenChannel::node_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.node_pubkey)
  return _internal_node_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BatchOpenChannel::set_node_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.node_pubkey)
}
inline std::string* BatchOpenChannel::mutable_node_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannel.node_pubkey)
  return _s;
}
inline const std::string& BatchOpenChannel::_internal_node_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_pubkey_.Get();
}
inline void BatchOpenChannel::_internal_set_node_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.Set(value, GetArena());
}
inline std::string* BatchOpenChannel::_internal_mutable_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_pubkey_.Mutable( GetArena());
}
inline std::string* BatchOpenChannel::release_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BatchOpenChannel.node_pubkey)
  return _impl_.node_pubkey_.Release();
}
inline void BatchOpenChannel::set_allocated_node_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_pubkey_.IsDefault()) {
          _impl_.node_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BatchOpenChannel.node_pubkey)
}

// int64 local_funding_amount = 2;
inline void BatchOpenChannel::clear_local_funding_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_funding_amount_ = ::int64_t{0};
}
inline ::int64_t BatchOpenChannel::local_funding_amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.local_funding_amount)
  return _internal_local_funding_amount();
}
inline void BatchOpenChannel::set_local_funding_amount(::int64_t value) {
  _internal_set_local_funding_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.local_funding_amount)
}
inline ::int64_t BatchOpenChannel::_internal_local_funding_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_funding_amount_;
}
inline void BatchOpenChannel::_internal_set_local_funding_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_funding_amount_ = value;
}

// int64 push_sat = 3;
inline void BatchOpenChannel::clear_push_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_sat_ = ::int64_t{0};
}
inline ::int64_t BatchOpenChannel::push_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.push_sat)
  return _internal_push_sat();
}
inline void BatchOpenChannel::set_push_sat(::int64_t value) {
  _internal_set_push_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.push_sat)
}
inline ::int64_t BatchOpenChannel::_internal_push_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.push_sat_;
}
inline void BatchOpenChannel::_internal_set_push_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_sat_ = value;
}

// bool private = 4;
inline void BatchOpenChannel::clear_private_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = false;
}
inline bool BatchOpenChannel::private_() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.private)
  return _internal_private_();
}
inline void BatchOpenChannel::set_private_(bool value) {
  _internal_set_private_(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.private)
}
inline bool BatchOpenChannel::_internal_private_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private__;
}
inline void BatchOpenChannel::_internal_set_private_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = value;
}

// int64 min_htlc_msat = 5;
inline void BatchOpenChannel::clear_min_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = ::int64_t{0};
}
inline ::int64_t BatchOpenChannel::min_htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.min_htlc_msat)
  return _internal_min_htlc_msat();
}
inline void BatchOpenChannel::set_min_htlc_msat(::int64_t value) {
  _internal_set_min_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.min_htlc_msat)
}
inline ::int64_t BatchOpenChannel::_internal_min_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_msat_;
}
inline void BatchOpenChannel::_internal_set_min_htlc_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = value;
}

// uint32 remote_csv_delay = 6;
inline void BatchOpenChannel::clear_remote_csv_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_csv_delay_ = 0u;
}
inline ::uint32_t BatchOpenChannel::remote_csv_delay() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.remote_csv_delay)
  return _internal_remote_csv_delay();
}
inline void BatchOpenChannel::set_remote_csv_delay(::uint32_t value) {
  _internal_set_remote_csv_delay(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.remote_csv_delay)
}
inline ::uint32_t BatchOpenChannel::_internal_remote_csv_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_csv_delay_;
}
inline void BatchOpenChannel::_internal_set_remote_csv_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_csv_delay_ = value;
}

// string close_address = 7;
inline void BatchOpenChannel::clear_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.ClearToEmpty();
}
inline const std::string& BatchOpenChannel::close_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.close_address)
  return _internal_close_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BatchOpenChannel::set_close_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.close_address)
}
inline std::string* BatchOpenChannel::mutable_close_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_close_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannel.close_address)
  return _s;
}
inline const std::string& BatchOpenChannel::_internal_close_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.close_address_.Get();
}
inline void BatchOpenChannel::_internal_set_close_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.Set(value, GetArena());
}
inline std::string* BatchOpenChannel::_internal_mutable_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.close_address_.Mutable( GetArena());
}
inline std::string* BatchOpenChannel::release_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BatchOpenChannel.close_address)
  return _impl_.close_address_.Release();
}
inline void BatchOpenChannel::set_allocated_close_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.close_address_.IsDefault()) {
          _impl_.close_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BatchOpenChannel.close_address)
}

// bytes pending_chan_id = 8;
inline void BatchOpenChannel::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& BatchOpenChannel::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BatchOpenChannel::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.pending_chan_id)
}
inline std::string* BatchOpenChannel::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannel.pending_chan_id)
  return _s;
}
inline const std::string& BatchOpenChannel::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void BatchOpenChannel::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* BatchOpenChannel::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* BatchOpenChannel::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BatchOpenChannel.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void BatchOpenChannel::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BatchOpenChannel.pending_chan_id)
}

// .lnrpc.CommitmentType commitment_type = 9;
inline void BatchOpenChannel::clear_commitment_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = 0;
}
inline ::lnrpc::CommitmentType BatchOpenChannel::commitment_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.commitment_type)
  return _internal_commitment_type();
}
inline void BatchOpenChannel::set_commitment_type(::lnrpc::CommitmentType value) {
  _internal_set_commitment_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.commitment_type)
}
inline ::lnrpc::CommitmentType BatchOpenChannel::_internal_commitment_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CommitmentType>(_impl_.commitment_type_);
}
inline void BatchOpenChannel::_internal_set_commitment_type(::lnrpc::CommitmentType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = value;
}

// uint64 remote_max_value_in_flight_msat = 10;
inline void BatchOpenChannel::clear_remote_max_value_in_flight_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_value_in_flight_msat_ = ::uint64_t{0u};
}
inline ::uint64_t BatchOpenChannel::remote_max_value_in_flight_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.remote_max_value_in_flight_msat)
  return _internal_remote_max_value_in_flight_msat();
}
inline void BatchOpenChannel::set_remote_max_value_in_flight_msat(::uint64_t value) {
  _internal_set_remote_max_value_in_flight_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.remote_max_value_in_flight_msat)
}
inline ::uint64_t BatchOpenChannel::_internal_remote_max_value_in_flight_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_max_value_in_flight_msat_;
}
inline void BatchOpenChannel::_internal_set_remote_max_value_in_flight_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_value_in_flight_msat_ = value;
}

// uint32 remote_max_htlcs = 11;
inline void BatchOpenChannel::clear_remote_max_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_htlcs_ = 0u;
}
inline ::uint32_t BatchOpenChannel::remote_max_htlcs() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.remote_max_htlcs)
  return _internal_remote_max_htlcs();
}
inline void BatchOpenChannel::set_remote_max_htlcs(::uint32_t value) {
  _internal_set_remote_max_htlcs(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.remote_max_htlcs)
}
inline ::uint32_t BatchOpenChannel::_internal_remote_max_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_max_htlcs_;
}
inline void BatchOpenChannel::_internal_set_remote_max_htlcs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_htlcs_ = value;
}

// uint32 max_local_csv = 12;
inline void BatchOpenChannel::clear_max_local_csv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_local_csv_ = 0u;
}
inline ::uint32_t BatchOpenChannel::max_local_csv() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.max_local_csv)
  return _internal_max_local_csv();
}
inline void BatchOpenChannel::set_max_local_csv(::uint32_t value) {
  _internal_set_max_local_csv(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.max_local_csv)
}
inline ::uint32_t BatchOpenChannel::_internal_max_local_csv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_local_csv_;
}
inline void BatchOpenChannel::_internal_set_max_local_csv(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_local_csv_ = value;
}

// bool zero_conf = 13;
inline void BatchOpenChannel::clear_zero_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = false;
}
inline bool BatchOpenChannel::zero_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.zero_conf)
  return _internal_zero_conf();
}
inline void BatchOpenChannel::set_zero_conf(bool value) {
  _internal_set_zero_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.zero_conf)
}
inline bool BatchOpenChannel::_internal_zero_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_conf_;
}
inline void BatchOpenChannel::_internal_set_zero_conf(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = value;
}

// bool scid_alias = 14;
inline void BatchOpenChannel::clear_scid_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scid_alias_ = false;
}
inline bool BatchOpenChannel::scid_alias() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.scid_alias)
  return _internal_scid_alias();
}
inline void BatchOpenChannel::set_scid_alias(bool value) {
  _internal_set_scid_alias(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.scid_alias)
}
inline bool BatchOpenChannel::_internal_scid_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scid_alias_;
}
inline void BatchOpenChannel::_internal_set_scid_alias(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scid_alias_ = value;
}

// uint64 base_fee = 15;
inline void BatchOpenChannel::clear_base_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_ = ::uint64_t{0u};
}
inline ::uint64_t BatchOpenChannel::base_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.base_fee)
  return _internal_base_fee();
}
inline void BatchOpenChannel::set_base_fee(::uint64_t value) {
  _internal_set_base_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.base_fee)
}
inline ::uint64_t BatchOpenChannel::_internal_base_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_;
}
inline void BatchOpenChannel::_internal_set_base_fee(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_ = value;
}

// uint64 fee_rate = 16;
inline void BatchOpenChannel::clear_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = ::uint64_t{0u};
}
inline ::uint64_t BatchOpenChannel::fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.fee_rate)
  return _internal_fee_rate();
}
inline void BatchOpenChannel::set_fee_rate(::uint64_t value) {
  _internal_set_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.fee_rate)
}
inline ::uint64_t BatchOpenChannel::_internal_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_;
}
inline void BatchOpenChannel::_internal_set_fee_rate(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = value;
}

// bool use_base_fee = 17;
inline void BatchOpenChannel::clear_use_base_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_base_fee_ = false;
}
inline bool BatchOpenChannel::use_base_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.use_base_fee)
  return _internal_use_base_fee();
}
inline void BatchOpenChannel::set_use_base_fee(bool value) {
  _internal_set_use_base_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.use_base_fee)
}
inline bool BatchOpenChannel::_internal_use_base_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_base_fee_;
}
inline void BatchOpenChannel::_internal_set_use_base_fee(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_base_fee_ = value;
}

// bool use_fee_rate = 18;
inline void BatchOpenChannel::clear_use_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_fee_rate_ = false;
}
inline bool BatchOpenChannel::use_fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.use_fee_rate)
  return _internal_use_fee_rate();
}
inline void BatchOpenChannel::set_use_fee_rate(bool value) {
  _internal_set_use_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.use_fee_rate)
}
inline bool BatchOpenChannel::_internal_use_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_fee_rate_;
}
inline void BatchOpenChannel::_internal_set_use_fee_rate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_fee_rate_ = value;
}

// uint64 remote_chan_reserve_sat = 19;
inline void BatchOpenChannel::clear_remote_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = ::uint64_t{0u};
}
inline ::uint64_t BatchOpenChannel::remote_chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.remote_chan_reserve_sat)
  return _internal_remote_chan_reserve_sat();
}
inline void BatchOpenChannel::set_remote_chan_reserve_sat(::uint64_t value) {
  _internal_set_remote_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.remote_chan_reserve_sat)
}
inline ::uint64_t BatchOpenChannel::_internal_remote_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_chan_reserve_sat_;
}
inline void BatchOpenChannel::_internal_set_remote_chan_reserve_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = value;
}

// string memo = 20;
inline void BatchOpenChannel::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& BatchOpenChannel::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannel.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BatchOpenChannel::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BatchOpenChannel.memo)
}
inline std::string* BatchOpenChannel::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannel.memo)
  return _s;
}
inline const std::string& BatchOpenChannel::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void BatchOpenChannel::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* BatchOpenChannel::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* BatchOpenChannel::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BatchOpenChannel.memo)
  return _impl_.memo_.Release();
}
inline void BatchOpenChannel::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BatchOpenChannel.memo)
}

// -------------------------------------------------------------------

// BatchOpenChannelResponse

// repeated .lnrpc.PendingUpdate pending_channels = 1;
inline int BatchOpenChannelResponse::_internal_pending_channels_size() const {
  return _internal_pending_channels().size();
}
inline int BatchOpenChannelResponse::pending_channels_size() const {
  return _internal_pending_channels_size();
}
inline void BatchOpenChannelResponse::clear_pending_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_channels_.Clear();
}
inline ::lnrpc::PendingUpdate* BatchOpenChannelResponse::mutable_pending_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.BatchOpenChannelResponse.pending_channels)
  return _internal_mutable_pending_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>* BatchOpenChannelResponse::mutable_pending_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.BatchOpenChannelResponse.pending_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_channels();
}
inline const ::lnrpc::PendingUpdate& BatchOpenChannelResponse::pending_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BatchOpenChannelResponse.pending_channels)
  return _internal_pending_channels().Get(index);
}
inline ::lnrpc::PendingUpdate* BatchOpenChannelResponse::add_pending_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PendingUpdate* _add = _internal_mutable_pending_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.BatchOpenChannelResponse.pending_channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>& BatchOpenChannelResponse::pending_channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.BatchOpenChannelResponse.pending_channels)
  return _internal_pending_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>&
BatchOpenChannelResponse::_internal_pending_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingUpdate>*
BatchOpenChannelResponse::_internal_mutable_pending_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_channels_;
}

// -------------------------------------------------------------------

// OpenChannelRequest

// uint64 sat_per_vbyte = 1;
inline void OpenChannelRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t OpenChannelRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void OpenChannelRequest::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.sat_per_vbyte)
}
inline ::uint64_t OpenChannelRequest::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void OpenChannelRequest::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// bytes node_pubkey = 2;
inline void OpenChannelRequest::clear_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.ClearToEmpty();
}
inline const std::string& OpenChannelRequest::node_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.node_pubkey)
  return _internal_node_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpenChannelRequest::set_node_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.node_pubkey)
}
inline std::string* OpenChannelRequest::mutable_node_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenChannelRequest.node_pubkey)
  return _s;
}
inline const std::string& OpenChannelRequest::_internal_node_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_pubkey_.Get();
}
inline void OpenChannelRequest::_internal_set_node_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.Set(value, GetArena());
}
inline std::string* OpenChannelRequest::_internal_mutable_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_pubkey_.Mutable( GetArena());
}
inline std::string* OpenChannelRequest::release_node_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OpenChannelRequest.node_pubkey)
  return _impl_.node_pubkey_.Release();
}
inline void OpenChannelRequest::set_allocated_node_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_pubkey_.IsDefault()) {
          _impl_.node_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OpenChannelRequest.node_pubkey)
}

// string node_pubkey_string = 3 [deprecated = true];
inline void OpenChannelRequest::clear_node_pubkey_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_string_.ClearToEmpty();
}
inline const std::string& OpenChannelRequest::node_pubkey_string() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.node_pubkey_string)
  return _internal_node_pubkey_string();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpenChannelRequest::set_node_pubkey_string(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_string_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.node_pubkey_string)
}
inline std::string* OpenChannelRequest::mutable_node_pubkey_string() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_pubkey_string();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenChannelRequest.node_pubkey_string)
  return _s;
}
inline const std::string& OpenChannelRequest::_internal_node_pubkey_string() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_pubkey_string_.Get();
}
inline void OpenChannelRequest::_internal_set_node_pubkey_string(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_string_.Set(value, GetArena());
}
inline std::string* OpenChannelRequest::_internal_mutable_node_pubkey_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_pubkey_string_.Mutable( GetArena());
}
inline std::string* OpenChannelRequest::release_node_pubkey_string() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OpenChannelRequest.node_pubkey_string)
  return _impl_.node_pubkey_string_.Release();
}
inline void OpenChannelRequest::set_allocated_node_pubkey_string(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_pubkey_string_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_pubkey_string_.IsDefault()) {
          _impl_.node_pubkey_string_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OpenChannelRequest.node_pubkey_string)
}

// int64 local_funding_amount = 4;
inline void OpenChannelRequest::clear_local_funding_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_funding_amount_ = ::int64_t{0};
}
inline ::int64_t OpenChannelRequest::local_funding_amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.local_funding_amount)
  return _internal_local_funding_amount();
}
inline void OpenChannelRequest::set_local_funding_amount(::int64_t value) {
  _internal_set_local_funding_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.local_funding_amount)
}
inline ::int64_t OpenChannelRequest::_internal_local_funding_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_funding_amount_;
}
inline void OpenChannelRequest::_internal_set_local_funding_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_funding_amount_ = value;
}

// int64 push_sat = 5;
inline void OpenChannelRequest::clear_push_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_sat_ = ::int64_t{0};
}
inline ::int64_t OpenChannelRequest::push_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.push_sat)
  return _internal_push_sat();
}
inline void OpenChannelRequest::set_push_sat(::int64_t value) {
  _internal_set_push_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.push_sat)
}
inline ::int64_t OpenChannelRequest::_internal_push_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.push_sat_;
}
inline void OpenChannelRequest::_internal_set_push_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.push_sat_ = value;
}

// int32 target_conf = 6;
inline void OpenChannelRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0;
}
inline ::int32_t OpenChannelRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.target_conf)
  return _internal_target_conf();
}
inline void OpenChannelRequest::set_target_conf(::int32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.target_conf)
}
inline ::int32_t OpenChannelRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void OpenChannelRequest::_internal_set_target_conf(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// int64 sat_per_byte = 7 [deprecated = true];
inline void OpenChannelRequest::clear_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = ::int64_t{0};
}
inline ::int64_t OpenChannelRequest::sat_per_byte() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.sat_per_byte)
  return _internal_sat_per_byte();
}
inline void OpenChannelRequest::set_sat_per_byte(::int64_t value) {
  _internal_set_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.sat_per_byte)
}
inline ::int64_t OpenChannelRequest::_internal_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_byte_;
}
inline void OpenChannelRequest::_internal_set_sat_per_byte(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = value;
}

// bool private = 8;
inline void OpenChannelRequest::clear_private_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = false;
}
inline bool OpenChannelRequest::private_() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.private)
  return _internal_private_();
}
inline void OpenChannelRequest::set_private_(bool value) {
  _internal_set_private_(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.private)
}
inline bool OpenChannelRequest::_internal_private_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private__;
}
inline void OpenChannelRequest::_internal_set_private_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = value;
}

// int64 min_htlc_msat = 9;
inline void OpenChannelRequest::clear_min_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = ::int64_t{0};
}
inline ::int64_t OpenChannelRequest::min_htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.min_htlc_msat)
  return _internal_min_htlc_msat();
}
inline void OpenChannelRequest::set_min_htlc_msat(::int64_t value) {
  _internal_set_min_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.min_htlc_msat)
}
inline ::int64_t OpenChannelRequest::_internal_min_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_msat_;
}
inline void OpenChannelRequest::_internal_set_min_htlc_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = value;
}

// uint32 remote_csv_delay = 10;
inline void OpenChannelRequest::clear_remote_csv_delay() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_csv_delay_ = 0u;
}
inline ::uint32_t OpenChannelRequest::remote_csv_delay() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.remote_csv_delay)
  return _internal_remote_csv_delay();
}
inline void OpenChannelRequest::set_remote_csv_delay(::uint32_t value) {
  _internal_set_remote_csv_delay(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.remote_csv_delay)
}
inline ::uint32_t OpenChannelRequest::_internal_remote_csv_delay() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_csv_delay_;
}
inline void OpenChannelRequest::_internal_set_remote_csv_delay(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_csv_delay_ = value;
}

// int32 min_confs = 11;
inline void OpenChannelRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t OpenChannelRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.min_confs)
  return _internal_min_confs();
}
inline void OpenChannelRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.min_confs)
}
inline ::int32_t OpenChannelRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void OpenChannelRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 12;
inline void OpenChannelRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool OpenChannelRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void OpenChannelRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.spend_unconfirmed)
}
inline bool OpenChannelRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void OpenChannelRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// string close_address = 13;
inline void OpenChannelRequest::clear_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.ClearToEmpty();
}
inline const std::string& OpenChannelRequest::close_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.close_address)
  return _internal_close_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpenChannelRequest::set_close_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.close_address)
}
inline std::string* OpenChannelRequest::mutable_close_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_close_address();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenChannelRequest.close_address)
  return _s;
}
inline const std::string& OpenChannelRequest::_internal_close_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.close_address_.Get();
}
inline void OpenChannelRequest::_internal_set_close_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.Set(value, GetArena());
}
inline std::string* OpenChannelRequest::_internal_mutable_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.close_address_.Mutable( GetArena());
}
inline std::string* OpenChannelRequest::release_close_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OpenChannelRequest.close_address)
  return _impl_.close_address_.Release();
}
inline void OpenChannelRequest::set_allocated_close_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.close_address_.IsDefault()) {
          _impl_.close_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OpenChannelRequest.close_address)
}

// .lnrpc.FundingShim funding_shim = 14;
inline bool OpenChannelRequest::has_funding_shim() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.funding_shim_ != nullptr);
  return value;
}
inline void OpenChannelRequest::clear_funding_shim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.funding_shim_ != nullptr) _impl_.funding_shim_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::FundingShim& OpenChannelRequest::_internal_funding_shim() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::FundingShim* p = _impl_.funding_shim_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::FundingShim&>(::lnrpc::_FundingShim_default_instance_);
}
inline const ::lnrpc::FundingShim& OpenChannelRequest::funding_shim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.funding_shim)
  return _internal_funding_shim();
}
inline void OpenChannelRequest::unsafe_arena_set_allocated_funding_shim(::lnrpc::FundingShim* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.funding_shim_);
  }
  _impl_.funding_shim_ = reinterpret_cast<::lnrpc::FundingShim*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.OpenChannelRequest.funding_shim)
}
inline ::lnrpc::FundingShim* OpenChannelRequest::release_funding_shim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::FundingShim* released = _impl_.funding_shim_;
  _impl_.funding_shim_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::FundingShim* OpenChannelRequest::unsafe_arena_release_funding_shim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OpenChannelRequest.funding_shim)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::FundingShim* temp = _impl_.funding_shim_;
  _impl_.funding_shim_ = nullptr;
  return temp;
}
inline ::lnrpc::FundingShim* OpenChannelRequest::_internal_mutable_funding_shim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.funding_shim_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::FundingShim>(GetArena());
    _impl_.funding_shim_ = reinterpret_cast<::lnrpc::FundingShim*>(p);
  }
  return _impl_.funding_shim_;
}
inline ::lnrpc::FundingShim* OpenChannelRequest::mutable_funding_shim() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::FundingShim* _msg = _internal_mutable_funding_shim();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenChannelRequest.funding_shim)
  return _msg;
}
inline void OpenChannelRequest::set_allocated_funding_shim(::lnrpc::FundingShim* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.funding_shim_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.funding_shim_ = reinterpret_cast<::lnrpc::FundingShim*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OpenChannelRequest.funding_shim)
}

// uint64 remote_max_value_in_flight_msat = 15;
inline void OpenChannelRequest::clear_remote_max_value_in_flight_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_value_in_flight_msat_ = ::uint64_t{0u};
}
inline ::uint64_t OpenChannelRequest::remote_max_value_in_flight_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.remote_max_value_in_flight_msat)
  return _internal_remote_max_value_in_flight_msat();
}
inline void OpenChannelRequest::set_remote_max_value_in_flight_msat(::uint64_t value) {
  _internal_set_remote_max_value_in_flight_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.remote_max_value_in_flight_msat)
}
inline ::uint64_t OpenChannelRequest::_internal_remote_max_value_in_flight_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_max_value_in_flight_msat_;
}
inline void OpenChannelRequest::_internal_set_remote_max_value_in_flight_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_value_in_flight_msat_ = value;
}

// uint32 remote_max_htlcs = 16;
inline void OpenChannelRequest::clear_remote_max_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_htlcs_ = 0u;
}
inline ::uint32_t OpenChannelRequest::remote_max_htlcs() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.remote_max_htlcs)
  return _internal_remote_max_htlcs();
}
inline void OpenChannelRequest::set_remote_max_htlcs(::uint32_t value) {
  _internal_set_remote_max_htlcs(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.remote_max_htlcs)
}
inline ::uint32_t OpenChannelRequest::_internal_remote_max_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_max_htlcs_;
}
inline void OpenChannelRequest::_internal_set_remote_max_htlcs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_max_htlcs_ = value;
}

// uint32 max_local_csv = 17;
inline void OpenChannelRequest::clear_max_local_csv() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_local_csv_ = 0u;
}
inline ::uint32_t OpenChannelRequest::max_local_csv() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.max_local_csv)
  return _internal_max_local_csv();
}
inline void OpenChannelRequest::set_max_local_csv(::uint32_t value) {
  _internal_set_max_local_csv(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.max_local_csv)
}
inline ::uint32_t OpenChannelRequest::_internal_max_local_csv() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_local_csv_;
}
inline void OpenChannelRequest::_internal_set_max_local_csv(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_local_csv_ = value;
}

// .lnrpc.CommitmentType commitment_type = 18;
inline void OpenChannelRequest::clear_commitment_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = 0;
}
inline ::lnrpc::CommitmentType OpenChannelRequest::commitment_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.commitment_type)
  return _internal_commitment_type();
}
inline void OpenChannelRequest::set_commitment_type(::lnrpc::CommitmentType value) {
  _internal_set_commitment_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.commitment_type)
}
inline ::lnrpc::CommitmentType OpenChannelRequest::_internal_commitment_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CommitmentType>(_impl_.commitment_type_);
}
inline void OpenChannelRequest::_internal_set_commitment_type(::lnrpc::CommitmentType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = value;
}

// bool zero_conf = 19;
inline void OpenChannelRequest::clear_zero_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = false;
}
inline bool OpenChannelRequest::zero_conf() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.zero_conf)
  return _internal_zero_conf();
}
inline void OpenChannelRequest::set_zero_conf(bool value) {
  _internal_set_zero_conf(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.zero_conf)
}
inline bool OpenChannelRequest::_internal_zero_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.zero_conf_;
}
inline void OpenChannelRequest::_internal_set_zero_conf(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.zero_conf_ = value;
}

// bool scid_alias = 20;
inline void OpenChannelRequest::clear_scid_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scid_alias_ = false;
}
inline bool OpenChannelRequest::scid_alias() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.scid_alias)
  return _internal_scid_alias();
}
inline void OpenChannelRequest::set_scid_alias(bool value) {
  _internal_set_scid_alias(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.scid_alias)
}
inline bool OpenChannelRequest::_internal_scid_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scid_alias_;
}
inline void OpenChannelRequest::_internal_set_scid_alias(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scid_alias_ = value;
}

// uint64 base_fee = 21;
inline void OpenChannelRequest::clear_base_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_ = ::uint64_t{0u};
}
inline ::uint64_t OpenChannelRequest::base_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.base_fee)
  return _internal_base_fee();
}
inline void OpenChannelRequest::set_base_fee(::uint64_t value) {
  _internal_set_base_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.base_fee)
}
inline ::uint64_t OpenChannelRequest::_internal_base_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_;
}
inline void OpenChannelRequest::_internal_set_base_fee(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_ = value;
}

// uint64 fee_rate = 22;
inline void OpenChannelRequest::clear_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = ::uint64_t{0u};
}
inline ::uint64_t OpenChannelRequest::fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.fee_rate)
  return _internal_fee_rate();
}
inline void OpenChannelRequest::set_fee_rate(::uint64_t value) {
  _internal_set_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.fee_rate)
}
inline ::uint64_t OpenChannelRequest::_internal_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_;
}
inline void OpenChannelRequest::_internal_set_fee_rate(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = value;
}

// bool use_base_fee = 23;
inline void OpenChannelRequest::clear_use_base_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_base_fee_ = false;
}
inline bool OpenChannelRequest::use_base_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.use_base_fee)
  return _internal_use_base_fee();
}
inline void OpenChannelRequest::set_use_base_fee(bool value) {
  _internal_set_use_base_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.use_base_fee)
}
inline bool OpenChannelRequest::_internal_use_base_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_base_fee_;
}
inline void OpenChannelRequest::_internal_set_use_base_fee(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_base_fee_ = value;
}

// bool use_fee_rate = 24;
inline void OpenChannelRequest::clear_use_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_fee_rate_ = false;
}
inline bool OpenChannelRequest::use_fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.use_fee_rate)
  return _internal_use_fee_rate();
}
inline void OpenChannelRequest::set_use_fee_rate(bool value) {
  _internal_set_use_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.use_fee_rate)
}
inline bool OpenChannelRequest::_internal_use_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_fee_rate_;
}
inline void OpenChannelRequest::_internal_set_use_fee_rate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_fee_rate_ = value;
}

// uint64 remote_chan_reserve_sat = 25;
inline void OpenChannelRequest::clear_remote_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = ::uint64_t{0u};
}
inline ::uint64_t OpenChannelRequest::remote_chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.remote_chan_reserve_sat)
  return _internal_remote_chan_reserve_sat();
}
inline void OpenChannelRequest::set_remote_chan_reserve_sat(::uint64_t value) {
  _internal_set_remote_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.remote_chan_reserve_sat)
}
inline ::uint64_t OpenChannelRequest::_internal_remote_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_chan_reserve_sat_;
}
inline void OpenChannelRequest::_internal_set_remote_chan_reserve_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = value;
}

// bool fund_max = 26;
inline void OpenChannelRequest::clear_fund_max() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fund_max_ = false;
}
inline bool OpenChannelRequest::fund_max() const {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.fund_max)
  return _internal_fund_max();
}
inline void OpenChannelRequest::set_fund_max(bool value) {
  _internal_set_fund_max(value);
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.fund_max)
}
inline bool OpenChannelRequest::_internal_fund_max() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fund_max_;
}
inline void OpenChannelRequest::_internal_set_fund_max(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fund_max_ = value;
}

// string memo = 27;
inline void OpenChannelRequest::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& OpenChannelRequest::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpenChannelRequest::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OpenChannelRequest.memo)
}
inline std::string* OpenChannelRequest::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenChannelRequest.memo)
  return _s;
}
inline const std::string& OpenChannelRequest::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void OpenChannelRequest::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* OpenChannelRequest::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* OpenChannelRequest::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OpenChannelRequest.memo)
  return _impl_.memo_.Release();
}
inline void OpenChannelRequest::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OpenChannelRequest.memo)
}

// repeated .lnrpc.OutPoint outpoints = 28;
inline int OpenChannelRequest::_internal_outpoints_size() const {
  return _internal_outpoints().size();
}
inline int OpenChannelRequest::outpoints_size() const {
  return _internal_outpoints_size();
}
inline void OpenChannelRequest::clear_outpoints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoints_.Clear();
}
inline ::lnrpc::OutPoint* OpenChannelRequest::mutable_outpoints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenChannelRequest.outpoints)
  return _internal_mutable_outpoints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* OpenChannelRequest::mutable_outpoints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.OpenChannelRequest.outpoints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outpoints();
}
inline const ::lnrpc::OutPoint& OpenChannelRequest::outpoints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenChannelRequest.outpoints)
  return _internal_outpoints().Get(index);
}
inline ::lnrpc::OutPoint* OpenChannelRequest::add_outpoints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::OutPoint* _add = _internal_mutable_outpoints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.OpenChannelRequest.outpoints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& OpenChannelRequest::outpoints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.OpenChannelRequest.outpoints)
  return _internal_outpoints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>&
OpenChannelRequest::_internal_outpoints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outpoints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>*
OpenChannelRequest::_internal_mutable_outpoints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outpoints_;
}

// -------------------------------------------------------------------

// OpenStatusUpdate

// .lnrpc.PendingUpdate chan_pending = 1;
inline bool OpenStatusUpdate::has_chan_pending() const {
  return update_case() == kChanPending;
}
inline bool OpenStatusUpdate::_internal_has_chan_pending() const {
  return update_case() == kChanPending;
}
inline void OpenStatusUpdate::set_has_chan_pending() {
  _impl_._oneof_case_[0] = kChanPending;
}
inline void OpenStatusUpdate::clear_chan_pending() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kChanPending) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.chan_pending_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.chan_pending_);
    }
    clear_has_update();
  }
}
inline ::lnrpc::PendingUpdate* OpenStatusUpdate::release_chan_pending() {
  // @@protoc_insertion_point(field_release:lnrpc.OpenStatusUpdate.chan_pending)
  if (update_case() == kChanPending) {
    clear_has_update();
    auto* temp = _impl_.update_.chan_pending_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.chan_pending_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::PendingUpdate& OpenStatusUpdate::_internal_chan_pending() const {
  return update_case() == kChanPending ? *_impl_.update_.chan_pending_ : reinterpret_cast<::lnrpc::PendingUpdate&>(::lnrpc::_PendingUpdate_default_instance_);
}
inline const ::lnrpc::PendingUpdate& OpenStatusUpdate::chan_pending() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenStatusUpdate.chan_pending)
  return _internal_chan_pending();
}
inline ::lnrpc::PendingUpdate* OpenStatusUpdate::unsafe_arena_release_chan_pending() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.OpenStatusUpdate.chan_pending)
  if (update_case() == kChanPending) {
    clear_has_update();
    auto* temp = _impl_.update_.chan_pending_;
    _impl_.update_.chan_pending_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OpenStatusUpdate::unsafe_arena_set_allocated_chan_pending(::lnrpc::PendingUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_chan_pending();
    _impl_.update_.chan_pending_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.OpenStatusUpdate.chan_pending)
}
inline ::lnrpc::PendingUpdate* OpenStatusUpdate::_internal_mutable_chan_pending() {
  if (update_case() != kChanPending) {
    clear_update();
    set_has_chan_pending();
    _impl_.update_.chan_pending_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingUpdate>(GetArena());
  }
  return _impl_.update_.chan_pending_;
}
inline ::lnrpc::PendingUpdate* OpenStatusUpdate::mutable_chan_pending() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::PendingUpdate* _msg = _internal_mutable_chan_pending();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenStatusUpdate.chan_pending)
  return _msg;
}

// .lnrpc.ChannelOpenUpdate chan_open = 3;
inline bool OpenStatusUpdate::has_chan_open() const {
  return update_case() == kChanOpen;
}
inline bool OpenStatusUpdate::_internal_has_chan_open() const {
  return update_case() == kChanOpen;
}
inline void OpenStatusUpdate::set_has_chan_open() {
  _impl_._oneof_case_[0] = kChanOpen;
}
inline void OpenStatusUpdate::clear_chan_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kChanOpen) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.chan_open_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.chan_open_);
    }
    clear_has_update();
  }
}
inline ::lnrpc::ChannelOpenUpdate* OpenStatusUpdate::release_chan_open() {
  // @@protoc_insertion_point(field_release:lnrpc.OpenStatusUpdate.chan_open)
  if (update_case() == kChanOpen) {
    clear_has_update();
    auto* temp = _impl_.update_.chan_open_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.chan_open_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelOpenUpdate& OpenStatusUpdate::_internal_chan_open() const {
  return update_case() == kChanOpen ? *_impl_.update_.chan_open_ : reinterpret_cast<::lnrpc::ChannelOpenUpdate&>(::lnrpc::_ChannelOpenUpdate_default_instance_);
}
inline const ::lnrpc::ChannelOpenUpdate& OpenStatusUpdate::chan_open() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenStatusUpdate.chan_open)
  return _internal_chan_open();
}
inline ::lnrpc::ChannelOpenUpdate* OpenStatusUpdate::unsafe_arena_release_chan_open() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.OpenStatusUpdate.chan_open)
  if (update_case() == kChanOpen) {
    clear_has_update();
    auto* temp = _impl_.update_.chan_open_;
    _impl_.update_.chan_open_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OpenStatusUpdate::unsafe_arena_set_allocated_chan_open(::lnrpc::ChannelOpenUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_chan_open();
    _impl_.update_.chan_open_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.OpenStatusUpdate.chan_open)
}
inline ::lnrpc::ChannelOpenUpdate* OpenStatusUpdate::_internal_mutable_chan_open() {
  if (update_case() != kChanOpen) {
    clear_update();
    set_has_chan_open();
    _impl_.update_.chan_open_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelOpenUpdate>(GetArena());
  }
  return _impl_.update_.chan_open_;
}
inline ::lnrpc::ChannelOpenUpdate* OpenStatusUpdate::mutable_chan_open() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelOpenUpdate* _msg = _internal_mutable_chan_open();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenStatusUpdate.chan_open)
  return _msg;
}

// .lnrpc.ReadyForPsbtFunding psbt_fund = 5;
inline bool OpenStatusUpdate::has_psbt_fund() const {
  return update_case() == kPsbtFund;
}
inline bool OpenStatusUpdate::_internal_has_psbt_fund() const {
  return update_case() == kPsbtFund;
}
inline void OpenStatusUpdate::set_has_psbt_fund() {
  _impl_._oneof_case_[0] = kPsbtFund;
}
inline void OpenStatusUpdate::clear_psbt_fund() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (update_case() == kPsbtFund) {
    if (GetArena() == nullptr) {
      delete _impl_.update_.psbt_fund_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.update_.psbt_fund_);
    }
    clear_has_update();
  }
}
inline ::lnrpc::ReadyForPsbtFunding* OpenStatusUpdate::release_psbt_fund() {
  // @@protoc_insertion_point(field_release:lnrpc.OpenStatusUpdate.psbt_fund)
  if (update_case() == kPsbtFund) {
    clear_has_update();
    auto* temp = _impl_.update_.psbt_fund_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.update_.psbt_fund_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ReadyForPsbtFunding& OpenStatusUpdate::_internal_psbt_fund() const {
  return update_case() == kPsbtFund ? *_impl_.update_.psbt_fund_ : reinterpret_cast<::lnrpc::ReadyForPsbtFunding&>(::lnrpc::_ReadyForPsbtFunding_default_instance_);
}
inline const ::lnrpc::ReadyForPsbtFunding& OpenStatusUpdate::psbt_fund() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenStatusUpdate.psbt_fund)
  return _internal_psbt_fund();
}
inline ::lnrpc::ReadyForPsbtFunding* OpenStatusUpdate::unsafe_arena_release_psbt_fund() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.OpenStatusUpdate.psbt_fund)
  if (update_case() == kPsbtFund) {
    clear_has_update();
    auto* temp = _impl_.update_.psbt_fund_;
    _impl_.update_.psbt_fund_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void OpenStatusUpdate::unsafe_arena_set_allocated_psbt_fund(::lnrpc::ReadyForPsbtFunding* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_update();
  if (value) {
    set_has_psbt_fund();
    _impl_.update_.psbt_fund_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.OpenStatusUpdate.psbt_fund)
}
inline ::lnrpc::ReadyForPsbtFunding* OpenStatusUpdate::_internal_mutable_psbt_fund() {
  if (update_case() != kPsbtFund) {
    clear_update();
    set_has_psbt_fund();
    _impl_.update_.psbt_fund_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ReadyForPsbtFunding>(GetArena());
  }
  return _impl_.update_.psbt_fund_;
}
inline ::lnrpc::ReadyForPsbtFunding* OpenStatusUpdate::mutable_psbt_fund() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ReadyForPsbtFunding* _msg = _internal_mutable_psbt_fund();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenStatusUpdate.psbt_fund)
  return _msg;
}

// bytes pending_chan_id = 4;
inline void OpenStatusUpdate::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& OpenStatusUpdate::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.OpenStatusUpdate.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OpenStatusUpdate::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.OpenStatusUpdate.pending_chan_id)
}
inline std::string* OpenStatusUpdate::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.OpenStatusUpdate.pending_chan_id)
  return _s;
}
inline const std::string& OpenStatusUpdate::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void OpenStatusUpdate::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* OpenStatusUpdate::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* OpenStatusUpdate::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.OpenStatusUpdate.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void OpenStatusUpdate::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.OpenStatusUpdate.pending_chan_id)
}

inline bool OpenStatusUpdate::has_update() const {
  return update_case() != UPDATE_NOT_SET;
}
inline void OpenStatusUpdate::clear_has_update() {
  _impl_._oneof_case_[0] = UPDATE_NOT_SET;
}
inline OpenStatusUpdate::UpdateCase OpenStatusUpdate::update_case() const {
  return OpenStatusUpdate::UpdateCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// KeyLocator

// int32 key_family = 1;
inline void KeyLocator::clear_key_family() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_family_ = 0;
}
inline ::int32_t KeyLocator::key_family() const {
  // @@protoc_insertion_point(field_get:lnrpc.KeyLocator.key_family)
  return _internal_key_family();
}
inline void KeyLocator::set_key_family(::int32_t value) {
  _internal_set_key_family(value);
  // @@protoc_insertion_point(field_set:lnrpc.KeyLocator.key_family)
}
inline ::int32_t KeyLocator::_internal_key_family() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_family_;
}
inline void KeyLocator::_internal_set_key_family(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_family_ = value;
}

// int32 key_index = 2;
inline void KeyLocator::clear_key_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_index_ = 0;
}
inline ::int32_t KeyLocator::key_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.KeyLocator.key_index)
  return _internal_key_index();
}
inline void KeyLocator::set_key_index(::int32_t value) {
  _internal_set_key_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.KeyLocator.key_index)
}
inline ::int32_t KeyLocator::_internal_key_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_index_;
}
inline void KeyLocator::_internal_set_key_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_index_ = value;
}

// -------------------------------------------------------------------

// KeyDescriptor

// bytes raw_key_bytes = 1;
inline void KeyDescriptor::clear_raw_key_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_key_bytes_.ClearToEmpty();
}
inline const std::string& KeyDescriptor::raw_key_bytes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.KeyDescriptor.raw_key_bytes)
  return _internal_raw_key_bytes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KeyDescriptor::set_raw_key_bytes(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_key_bytes_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.KeyDescriptor.raw_key_bytes)
}
inline std::string* KeyDescriptor::mutable_raw_key_bytes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_key_bytes();
  // @@protoc_insertion_point(field_mutable:lnrpc.KeyDescriptor.raw_key_bytes)
  return _s;
}
inline const std::string& KeyDescriptor::_internal_raw_key_bytes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_key_bytes_.Get();
}
inline void KeyDescriptor::_internal_set_raw_key_bytes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_key_bytes_.Set(value, GetArena());
}
inline std::string* KeyDescriptor::_internal_mutable_raw_key_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_key_bytes_.Mutable( GetArena());
}
inline std::string* KeyDescriptor::release_raw_key_bytes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.KeyDescriptor.raw_key_bytes)
  return _impl_.raw_key_bytes_.Release();
}
inline void KeyDescriptor::set_allocated_raw_key_bytes(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_key_bytes_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_key_bytes_.IsDefault()) {
          _impl_.raw_key_bytes_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.KeyDescriptor.raw_key_bytes)
}

// .lnrpc.KeyLocator key_loc = 2;
inline bool KeyDescriptor::has_key_loc() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.key_loc_ != nullptr);
  return value;
}
inline void KeyDescriptor::clear_key_loc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_loc_ != nullptr) _impl_.key_loc_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::KeyLocator& KeyDescriptor::_internal_key_loc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::KeyLocator* p = _impl_.key_loc_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::KeyLocator&>(::lnrpc::_KeyLocator_default_instance_);
}
inline const ::lnrpc::KeyLocator& KeyDescriptor::key_loc() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.KeyDescriptor.key_loc)
  return _internal_key_loc();
}
inline void KeyDescriptor::unsafe_arena_set_allocated_key_loc(::lnrpc::KeyLocator* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.key_loc_);
  }
  _impl_.key_loc_ = reinterpret_cast<::lnrpc::KeyLocator*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.KeyDescriptor.key_loc)
}
inline ::lnrpc::KeyLocator* KeyDescriptor::release_key_loc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::KeyLocator* released = _impl_.key_loc_;
  _impl_.key_loc_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::KeyLocator* KeyDescriptor::unsafe_arena_release_key_loc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.KeyDescriptor.key_loc)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::KeyLocator* temp = _impl_.key_loc_;
  _impl_.key_loc_ = nullptr;
  return temp;
}
inline ::lnrpc::KeyLocator* KeyDescriptor::_internal_mutable_key_loc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_loc_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::KeyLocator>(GetArena());
    _impl_.key_loc_ = reinterpret_cast<::lnrpc::KeyLocator*>(p);
  }
  return _impl_.key_loc_;
}
inline ::lnrpc::KeyLocator* KeyDescriptor::mutable_key_loc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::KeyLocator* _msg = _internal_mutable_key_loc();
  // @@protoc_insertion_point(field_mutable:lnrpc.KeyDescriptor.key_loc)
  return _msg;
}
inline void KeyDescriptor::set_allocated_key_loc(::lnrpc::KeyLocator* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.key_loc_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.key_loc_ = reinterpret_cast<::lnrpc::KeyLocator*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.KeyDescriptor.key_loc)
}

// -------------------------------------------------------------------

// ChanPointShim

// int64 amt = 1;
inline void ChanPointShim::clear_amt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_ = ::int64_t{0};
}
inline ::int64_t ChanPointShim::amt() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.amt)
  return _internal_amt();
}
inline void ChanPointShim::set_amt(::int64_t value) {
  _internal_set_amt(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChanPointShim.amt)
}
inline ::int64_t ChanPointShim::_internal_amt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_;
}
inline void ChanPointShim::_internal_set_amt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_ = value;
}

// .lnrpc.ChannelPoint chan_point = 2;
inline bool ChanPointShim::has_chan_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chan_point_ != nullptr);
  return value;
}
inline void ChanPointShim::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ != nullptr) _impl_.chan_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& ChanPointShim::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.chan_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChanPointShim::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.chan_point)
  return _internal_chan_point();
}
inline void ChanPointShim::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }
  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChanPointShim.chan_point)
}
inline ::lnrpc::ChannelPoint* ChanPointShim::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* ChanPointShim::unsafe_arena_release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanPointShim.chan_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* ChanPointShim::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.chan_point_;
}
inline ::lnrpc::ChannelPoint* ChanPointShim::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanPointShim.chan_point)
  return _msg;
}
inline void ChanPointShim::set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chan_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanPointShim.chan_point)
}

// .lnrpc.KeyDescriptor local_key = 3;
inline bool ChanPointShim::has_local_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.local_key_ != nullptr);
  return value;
}
inline void ChanPointShim::clear_local_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_key_ != nullptr) _impl_.local_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::KeyDescriptor& ChanPointShim::_internal_local_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::KeyDescriptor* p = _impl_.local_key_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::KeyDescriptor&>(::lnrpc::_KeyDescriptor_default_instance_);
}
inline const ::lnrpc::KeyDescriptor& ChanPointShim::local_key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.local_key)
  return _internal_local_key();
}
inline void ChanPointShim::unsafe_arena_set_allocated_local_key(::lnrpc::KeyDescriptor* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.local_key_);
  }
  _impl_.local_key_ = reinterpret_cast<::lnrpc::KeyDescriptor*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChanPointShim.local_key)
}
inline ::lnrpc::KeyDescriptor* ChanPointShim::release_local_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::KeyDescriptor* released = _impl_.local_key_;
  _impl_.local_key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::KeyDescriptor* ChanPointShim::unsafe_arena_release_local_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanPointShim.local_key)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::KeyDescriptor* temp = _impl_.local_key_;
  _impl_.local_key_ = nullptr;
  return temp;
}
inline ::lnrpc::KeyDescriptor* ChanPointShim::_internal_mutable_local_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::KeyDescriptor>(GetArena());
    _impl_.local_key_ = reinterpret_cast<::lnrpc::KeyDescriptor*>(p);
  }
  return _impl_.local_key_;
}
inline ::lnrpc::KeyDescriptor* ChanPointShim::mutable_local_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::KeyDescriptor* _msg = _internal_mutable_local_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanPointShim.local_key)
  return _msg;
}
inline void ChanPointShim::set_allocated_local_key(::lnrpc::KeyDescriptor* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.local_key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.local_key_ = reinterpret_cast<::lnrpc::KeyDescriptor*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanPointShim.local_key)
}

// bytes remote_key = 4;
inline void ChanPointShim::clear_remote_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_key_.ClearToEmpty();
}
inline const std::string& ChanPointShim::remote_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.remote_key)
  return _internal_remote_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChanPointShim::set_remote_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChanPointShim.remote_key)
}
inline std::string* ChanPointShim::mutable_remote_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanPointShim.remote_key)
  return _s;
}
inline const std::string& ChanPointShim::_internal_remote_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_key_.Get();
}
inline void ChanPointShim::_internal_set_remote_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_key_.Set(value, GetArena());
}
inline std::string* ChanPointShim::_internal_mutable_remote_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_key_.Mutable( GetArena());
}
inline std::string* ChanPointShim::release_remote_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanPointShim.remote_key)
  return _impl_.remote_key_.Release();
}
inline void ChanPointShim::set_allocated_remote_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_key_.IsDefault()) {
          _impl_.remote_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanPointShim.remote_key)
}

// bytes pending_chan_id = 5;
inline void ChanPointShim::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& ChanPointShim::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChanPointShim::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChanPointShim.pending_chan_id)
}
inline std::string* ChanPointShim::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanPointShim.pending_chan_id)
  return _s;
}
inline const std::string& ChanPointShim::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void ChanPointShim::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* ChanPointShim::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* ChanPointShim::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanPointShim.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void ChanPointShim::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanPointShim.pending_chan_id)
}

// uint32 thaw_height = 6;
inline void ChanPointShim::clear_thaw_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thaw_height_ = 0u;
}
inline ::uint32_t ChanPointShim::thaw_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.thaw_height)
  return _internal_thaw_height();
}
inline void ChanPointShim::set_thaw_height(::uint32_t value) {
  _internal_set_thaw_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChanPointShim.thaw_height)
}
inline ::uint32_t ChanPointShim::_internal_thaw_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.thaw_height_;
}
inline void ChanPointShim::_internal_set_thaw_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.thaw_height_ = value;
}

// bool musig2 = 7;
inline void ChanPointShim::clear_musig2() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.musig2_ = false;
}
inline bool ChanPointShim::musig2() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChanPointShim.musig2)
  return _internal_musig2();
}
inline void ChanPointShim::set_musig2(bool value) {
  _internal_set_musig2(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChanPointShim.musig2)
}
inline bool ChanPointShim::_internal_musig2() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.musig2_;
}
inline void ChanPointShim::_internal_set_musig2(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.musig2_ = value;
}

// -------------------------------------------------------------------

// PsbtShim

// bytes pending_chan_id = 1;
inline void PsbtShim::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& PsbtShim::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PsbtShim.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PsbtShim::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PsbtShim.pending_chan_id)
}
inline std::string* PsbtShim::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.PsbtShim.pending_chan_id)
  return _s;
}
inline const std::string& PsbtShim::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void PsbtShim::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* PsbtShim::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* PsbtShim::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PsbtShim.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void PsbtShim::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PsbtShim.pending_chan_id)
}

// bytes base_psbt = 2;
inline void PsbtShim::clear_base_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_psbt_.ClearToEmpty();
}
inline const std::string& PsbtShim::base_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PsbtShim.base_psbt)
  return _internal_base_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PsbtShim::set_base_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PsbtShim.base_psbt)
}
inline std::string* PsbtShim::mutable_base_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_base_psbt();
  // @@protoc_insertion_point(field_mutable:lnrpc.PsbtShim.base_psbt)
  return _s;
}
inline const std::string& PsbtShim::_internal_base_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_psbt_.Get();
}
inline void PsbtShim::_internal_set_base_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_psbt_.Set(value, GetArena());
}
inline std::string* PsbtShim::_internal_mutable_base_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.base_psbt_.Mutable( GetArena());
}
inline std::string* PsbtShim::release_base_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PsbtShim.base_psbt)
  return _impl_.base_psbt_.Release();
}
inline void PsbtShim::set_allocated_base_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.base_psbt_.IsDefault()) {
          _impl_.base_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PsbtShim.base_psbt)
}

// bool no_publish = 3;
inline void PsbtShim::clear_no_publish() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_publish_ = false;
}
inline bool PsbtShim::no_publish() const {
  // @@protoc_insertion_point(field_get:lnrpc.PsbtShim.no_publish)
  return _internal_no_publish();
}
inline void PsbtShim::set_no_publish(bool value) {
  _internal_set_no_publish(value);
  // @@protoc_insertion_point(field_set:lnrpc.PsbtShim.no_publish)
}
inline bool PsbtShim::_internal_no_publish() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.no_publish_;
}
inline void PsbtShim::_internal_set_no_publish(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.no_publish_ = value;
}

// -------------------------------------------------------------------

// FundingShim

// .lnrpc.ChanPointShim chan_point_shim = 1;
inline bool FundingShim::has_chan_point_shim() const {
  return shim_case() == kChanPointShim;
}
inline bool FundingShim::_internal_has_chan_point_shim() const {
  return shim_case() == kChanPointShim;
}
inline void FundingShim::set_has_chan_point_shim() {
  _impl_._oneof_case_[0] = kChanPointShim;
}
inline void FundingShim::clear_chan_point_shim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (shim_case() == kChanPointShim) {
    if (GetArena() == nullptr) {
      delete _impl_.shim_.chan_point_shim_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shim_.chan_point_shim_);
    }
    clear_has_shim();
  }
}
inline ::lnrpc::ChanPointShim* FundingShim::release_chan_point_shim() {
  // @@protoc_insertion_point(field_release:lnrpc.FundingShim.chan_point_shim)
  if (shim_case() == kChanPointShim) {
    clear_has_shim();
    auto* temp = _impl_.shim_.chan_point_shim_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.shim_.chan_point_shim_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChanPointShim& FundingShim::_internal_chan_point_shim() const {
  return shim_case() == kChanPointShim ? *_impl_.shim_.chan_point_shim_ : reinterpret_cast<::lnrpc::ChanPointShim&>(::lnrpc::_ChanPointShim_default_instance_);
}
inline const ::lnrpc::ChanPointShim& FundingShim::chan_point_shim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingShim.chan_point_shim)
  return _internal_chan_point_shim();
}
inline ::lnrpc::ChanPointShim* FundingShim::unsafe_arena_release_chan_point_shim() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.FundingShim.chan_point_shim)
  if (shim_case() == kChanPointShim) {
    clear_has_shim();
    auto* temp = _impl_.shim_.chan_point_shim_;
    _impl_.shim_.chan_point_shim_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundingShim::unsafe_arena_set_allocated_chan_point_shim(::lnrpc::ChanPointShim* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_shim();
  if (value) {
    set_has_chan_point_shim();
    _impl_.shim_.chan_point_shim_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FundingShim.chan_point_shim)
}
inline ::lnrpc::ChanPointShim* FundingShim::_internal_mutable_chan_point_shim() {
  if (shim_case() != kChanPointShim) {
    clear_shim();
    set_has_chan_point_shim();
    _impl_.shim_.chan_point_shim_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChanPointShim>(GetArena());
  }
  return _impl_.shim_.chan_point_shim_;
}
inline ::lnrpc::ChanPointShim* FundingShim::mutable_chan_point_shim() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChanPointShim* _msg = _internal_mutable_chan_point_shim();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingShim.chan_point_shim)
  return _msg;
}

// .lnrpc.PsbtShim psbt_shim = 2;
inline bool FundingShim::has_psbt_shim() const {
  return shim_case() == kPsbtShim;
}
inline bool FundingShim::_internal_has_psbt_shim() const {
  return shim_case() == kPsbtShim;
}
inline void FundingShim::set_has_psbt_shim() {
  _impl_._oneof_case_[0] = kPsbtShim;
}
inline void FundingShim::clear_psbt_shim() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (shim_case() == kPsbtShim) {
    if (GetArena() == nullptr) {
      delete _impl_.shim_.psbt_shim_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.shim_.psbt_shim_);
    }
    clear_has_shim();
  }
}
inline ::lnrpc::PsbtShim* FundingShim::release_psbt_shim() {
  // @@protoc_insertion_point(field_release:lnrpc.FundingShim.psbt_shim)
  if (shim_case() == kPsbtShim) {
    clear_has_shim();
    auto* temp = _impl_.shim_.psbt_shim_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.shim_.psbt_shim_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::PsbtShim& FundingShim::_internal_psbt_shim() const {
  return shim_case() == kPsbtShim ? *_impl_.shim_.psbt_shim_ : reinterpret_cast<::lnrpc::PsbtShim&>(::lnrpc::_PsbtShim_default_instance_);
}
inline const ::lnrpc::PsbtShim& FundingShim::psbt_shim() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingShim.psbt_shim)
  return _internal_psbt_shim();
}
inline ::lnrpc::PsbtShim* FundingShim::unsafe_arena_release_psbt_shim() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.FundingShim.psbt_shim)
  if (shim_case() == kPsbtShim) {
    clear_has_shim();
    auto* temp = _impl_.shim_.psbt_shim_;
    _impl_.shim_.psbt_shim_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundingShim::unsafe_arena_set_allocated_psbt_shim(::lnrpc::PsbtShim* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_shim();
  if (value) {
    set_has_psbt_shim();
    _impl_.shim_.psbt_shim_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FundingShim.psbt_shim)
}
inline ::lnrpc::PsbtShim* FundingShim::_internal_mutable_psbt_shim() {
  if (shim_case() != kPsbtShim) {
    clear_shim();
    set_has_psbt_shim();
    _impl_.shim_.psbt_shim_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::PsbtShim>(GetArena());
  }
  return _impl_.shim_.psbt_shim_;
}
inline ::lnrpc::PsbtShim* FundingShim::mutable_psbt_shim() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::PsbtShim* _msg = _internal_mutable_psbt_shim();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingShim.psbt_shim)
  return _msg;
}

inline bool FundingShim::has_shim() const {
  return shim_case() != SHIM_NOT_SET;
}
inline void FundingShim::clear_has_shim() {
  _impl_._oneof_case_[0] = SHIM_NOT_SET;
}
inline FundingShim::ShimCase FundingShim::shim_case() const {
  return FundingShim::ShimCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FundingShimCancel

// bytes pending_chan_id = 1;
inline void FundingShimCancel::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& FundingShimCancel::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingShimCancel.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingShimCancel::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FundingShimCancel.pending_chan_id)
}
inline std::string* FundingShimCancel::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingShimCancel.pending_chan_id)
  return _s;
}
inline const std::string& FundingShimCancel::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void FundingShimCancel::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* FundingShimCancel::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* FundingShimCancel::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FundingShimCancel.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void FundingShimCancel::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FundingShimCancel.pending_chan_id)
}

// -------------------------------------------------------------------

// FundingPsbtVerify

// bytes funded_psbt = 1;
inline void FundingPsbtVerify::clear_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.ClearToEmpty();
}
inline const std::string& FundingPsbtVerify::funded_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingPsbtVerify.funded_psbt)
  return _internal_funded_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingPsbtVerify::set_funded_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FundingPsbtVerify.funded_psbt)
}
inline std::string* FundingPsbtVerify::mutable_funded_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funded_psbt();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingPsbtVerify.funded_psbt)
  return _s;
}
inline const std::string& FundingPsbtVerify::_internal_funded_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funded_psbt_.Get();
}
inline void FundingPsbtVerify::_internal_set_funded_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.Set(value, GetArena());
}
inline std::string* FundingPsbtVerify::_internal_mutable_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.funded_psbt_.Mutable( GetArena());
}
inline std::string* FundingPsbtVerify::release_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FundingPsbtVerify.funded_psbt)
  return _impl_.funded_psbt_.Release();
}
inline void FundingPsbtVerify::set_allocated_funded_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.funded_psbt_.IsDefault()) {
          _impl_.funded_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FundingPsbtVerify.funded_psbt)
}

// bytes pending_chan_id = 2;
inline void FundingPsbtVerify::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& FundingPsbtVerify::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingPsbtVerify.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingPsbtVerify::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FundingPsbtVerify.pending_chan_id)
}
inline std::string* FundingPsbtVerify::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingPsbtVerify.pending_chan_id)
  return _s;
}
inline const std::string& FundingPsbtVerify::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void FundingPsbtVerify::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* FundingPsbtVerify::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* FundingPsbtVerify::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FundingPsbtVerify.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void FundingPsbtVerify::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FundingPsbtVerify.pending_chan_id)
}

// bool skip_finalize = 3;
inline void FundingPsbtVerify::clear_skip_finalize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_finalize_ = false;
}
inline bool FundingPsbtVerify::skip_finalize() const {
  // @@protoc_insertion_point(field_get:lnrpc.FundingPsbtVerify.skip_finalize)
  return _internal_skip_finalize();
}
inline void FundingPsbtVerify::set_skip_finalize(bool value) {
  _internal_set_skip_finalize(value);
  // @@protoc_insertion_point(field_set:lnrpc.FundingPsbtVerify.skip_finalize)
}
inline bool FundingPsbtVerify::_internal_skip_finalize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.skip_finalize_;
}
inline void FundingPsbtVerify::_internal_set_skip_finalize(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.skip_finalize_ = value;
}

// -------------------------------------------------------------------

// FundingPsbtFinalize

// bytes signed_psbt = 1;
inline void FundingPsbtFinalize::clear_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.ClearToEmpty();
}
inline const std::string& FundingPsbtFinalize::signed_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingPsbtFinalize.signed_psbt)
  return _internal_signed_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingPsbtFinalize::set_signed_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FundingPsbtFinalize.signed_psbt)
}
inline std::string* FundingPsbtFinalize::mutable_signed_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signed_psbt();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingPsbtFinalize.signed_psbt)
  return _s;
}
inline const std::string& FundingPsbtFinalize::_internal_signed_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_psbt_.Get();
}
inline void FundingPsbtFinalize::_internal_set_signed_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.Set(value, GetArena());
}
inline std::string* FundingPsbtFinalize::_internal_mutable_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signed_psbt_.Mutable( GetArena());
}
inline std::string* FundingPsbtFinalize::release_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FundingPsbtFinalize.signed_psbt)
  return _impl_.signed_psbt_.Release();
}
inline void FundingPsbtFinalize::set_allocated_signed_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signed_psbt_.IsDefault()) {
          _impl_.signed_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FundingPsbtFinalize.signed_psbt)
}

// bytes pending_chan_id = 2;
inline void FundingPsbtFinalize::clear_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.ClearToEmpty();
}
inline const std::string& FundingPsbtFinalize::pending_chan_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingPsbtFinalize.pending_chan_id)
  return _internal_pending_chan_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingPsbtFinalize::set_pending_chan_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FundingPsbtFinalize.pending_chan_id)
}
inline std::string* FundingPsbtFinalize::mutable_pending_chan_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pending_chan_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingPsbtFinalize.pending_chan_id)
  return _s;
}
inline const std::string& FundingPsbtFinalize::_internal_pending_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_chan_id_.Get();
}
inline void FundingPsbtFinalize::_internal_set_pending_chan_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.Set(value, GetArena());
}
inline std::string* FundingPsbtFinalize::_internal_mutable_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pending_chan_id_.Mutable( GetArena());
}
inline std::string* FundingPsbtFinalize::release_pending_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FundingPsbtFinalize.pending_chan_id)
  return _impl_.pending_chan_id_.Release();
}
inline void FundingPsbtFinalize::set_allocated_pending_chan_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_chan_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pending_chan_id_.IsDefault()) {
          _impl_.pending_chan_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FundingPsbtFinalize.pending_chan_id)
}

// bytes final_raw_tx = 3;
inline void FundingPsbtFinalize::clear_final_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_raw_tx_.ClearToEmpty();
}
inline const std::string& FundingPsbtFinalize::final_raw_tx() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingPsbtFinalize.final_raw_tx)
  return _internal_final_raw_tx();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundingPsbtFinalize::set_final_raw_tx(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_raw_tx_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FundingPsbtFinalize.final_raw_tx)
}
inline std::string* FundingPsbtFinalize::mutable_final_raw_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_final_raw_tx();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingPsbtFinalize.final_raw_tx)
  return _s;
}
inline const std::string& FundingPsbtFinalize::_internal_final_raw_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_raw_tx_.Get();
}
inline void FundingPsbtFinalize::_internal_set_final_raw_tx(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_raw_tx_.Set(value, GetArena());
}
inline std::string* FundingPsbtFinalize::_internal_mutable_final_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.final_raw_tx_.Mutable( GetArena());
}
inline std::string* FundingPsbtFinalize::release_final_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FundingPsbtFinalize.final_raw_tx)
  return _impl_.final_raw_tx_.Release();
}
inline void FundingPsbtFinalize::set_allocated_final_raw_tx(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_raw_tx_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.final_raw_tx_.IsDefault()) {
          _impl_.final_raw_tx_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FundingPsbtFinalize.final_raw_tx)
}

// -------------------------------------------------------------------

// FundingTransitionMsg

// .lnrpc.FundingShim shim_register = 1;
inline bool FundingTransitionMsg::has_shim_register() const {
  return trigger_case() == kShimRegister;
}
inline bool FundingTransitionMsg::_internal_has_shim_register() const {
  return trigger_case() == kShimRegister;
}
inline void FundingTransitionMsg::set_has_shim_register() {
  _impl_._oneof_case_[0] = kShimRegister;
}
inline void FundingTransitionMsg::clear_shim_register() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (trigger_case() == kShimRegister) {
    if (GetArena() == nullptr) {
      delete _impl_.trigger_.shim_register_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.trigger_.shim_register_);
    }
    clear_has_trigger();
  }
}
inline ::lnrpc::FundingShim* FundingTransitionMsg::release_shim_register() {
  // @@protoc_insertion_point(field_release:lnrpc.FundingTransitionMsg.shim_register)
  if (trigger_case() == kShimRegister) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.shim_register_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.trigger_.shim_register_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::FundingShim& FundingTransitionMsg::_internal_shim_register() const {
  return trigger_case() == kShimRegister ? *_impl_.trigger_.shim_register_ : reinterpret_cast<::lnrpc::FundingShim&>(::lnrpc::_FundingShim_default_instance_);
}
inline const ::lnrpc::FundingShim& FundingTransitionMsg::shim_register() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingTransitionMsg.shim_register)
  return _internal_shim_register();
}
inline ::lnrpc::FundingShim* FundingTransitionMsg::unsafe_arena_release_shim_register() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.FundingTransitionMsg.shim_register)
  if (trigger_case() == kShimRegister) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.shim_register_;
    _impl_.trigger_.shim_register_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundingTransitionMsg::unsafe_arena_set_allocated_shim_register(::lnrpc::FundingShim* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_trigger();
  if (value) {
    set_has_shim_register();
    _impl_.trigger_.shim_register_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FundingTransitionMsg.shim_register)
}
inline ::lnrpc::FundingShim* FundingTransitionMsg::_internal_mutable_shim_register() {
  if (trigger_case() != kShimRegister) {
    clear_trigger();
    set_has_shim_register();
    _impl_.trigger_.shim_register_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::FundingShim>(GetArena());
  }
  return _impl_.trigger_.shim_register_;
}
inline ::lnrpc::FundingShim* FundingTransitionMsg::mutable_shim_register() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::FundingShim* _msg = _internal_mutable_shim_register();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingTransitionMsg.shim_register)
  return _msg;
}

// .lnrpc.FundingShimCancel shim_cancel = 2;
inline bool FundingTransitionMsg::has_shim_cancel() const {
  return trigger_case() == kShimCancel;
}
inline bool FundingTransitionMsg::_internal_has_shim_cancel() const {
  return trigger_case() == kShimCancel;
}
inline void FundingTransitionMsg::set_has_shim_cancel() {
  _impl_._oneof_case_[0] = kShimCancel;
}
inline void FundingTransitionMsg::clear_shim_cancel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (trigger_case() == kShimCancel) {
    if (GetArena() == nullptr) {
      delete _impl_.trigger_.shim_cancel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.trigger_.shim_cancel_);
    }
    clear_has_trigger();
  }
}
inline ::lnrpc::FundingShimCancel* FundingTransitionMsg::release_shim_cancel() {
  // @@protoc_insertion_point(field_release:lnrpc.FundingTransitionMsg.shim_cancel)
  if (trigger_case() == kShimCancel) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.shim_cancel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.trigger_.shim_cancel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::FundingShimCancel& FundingTransitionMsg::_internal_shim_cancel() const {
  return trigger_case() == kShimCancel ? *_impl_.trigger_.shim_cancel_ : reinterpret_cast<::lnrpc::FundingShimCancel&>(::lnrpc::_FundingShimCancel_default_instance_);
}
inline const ::lnrpc::FundingShimCancel& FundingTransitionMsg::shim_cancel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingTransitionMsg.shim_cancel)
  return _internal_shim_cancel();
}
inline ::lnrpc::FundingShimCancel* FundingTransitionMsg::unsafe_arena_release_shim_cancel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.FundingTransitionMsg.shim_cancel)
  if (trigger_case() == kShimCancel) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.shim_cancel_;
    _impl_.trigger_.shim_cancel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundingTransitionMsg::unsafe_arena_set_allocated_shim_cancel(::lnrpc::FundingShimCancel* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_trigger();
  if (value) {
    set_has_shim_cancel();
    _impl_.trigger_.shim_cancel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FundingTransitionMsg.shim_cancel)
}
inline ::lnrpc::FundingShimCancel* FundingTransitionMsg::_internal_mutable_shim_cancel() {
  if (trigger_case() != kShimCancel) {
    clear_trigger();
    set_has_shim_cancel();
    _impl_.trigger_.shim_cancel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::FundingShimCancel>(GetArena());
  }
  return _impl_.trigger_.shim_cancel_;
}
inline ::lnrpc::FundingShimCancel* FundingTransitionMsg::mutable_shim_cancel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::FundingShimCancel* _msg = _internal_mutable_shim_cancel();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingTransitionMsg.shim_cancel)
  return _msg;
}

// .lnrpc.FundingPsbtVerify psbt_verify = 3;
inline bool FundingTransitionMsg::has_psbt_verify() const {
  return trigger_case() == kPsbtVerify;
}
inline bool FundingTransitionMsg::_internal_has_psbt_verify() const {
  return trigger_case() == kPsbtVerify;
}
inline void FundingTransitionMsg::set_has_psbt_verify() {
  _impl_._oneof_case_[0] = kPsbtVerify;
}
inline void FundingTransitionMsg::clear_psbt_verify() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (trigger_case() == kPsbtVerify) {
    if (GetArena() == nullptr) {
      delete _impl_.trigger_.psbt_verify_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.trigger_.psbt_verify_);
    }
    clear_has_trigger();
  }
}
inline ::lnrpc::FundingPsbtVerify* FundingTransitionMsg::release_psbt_verify() {
  // @@protoc_insertion_point(field_release:lnrpc.FundingTransitionMsg.psbt_verify)
  if (trigger_case() == kPsbtVerify) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.psbt_verify_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.trigger_.psbt_verify_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::FundingPsbtVerify& FundingTransitionMsg::_internal_psbt_verify() const {
  return trigger_case() == kPsbtVerify ? *_impl_.trigger_.psbt_verify_ : reinterpret_cast<::lnrpc::FundingPsbtVerify&>(::lnrpc::_FundingPsbtVerify_default_instance_);
}
inline const ::lnrpc::FundingPsbtVerify& FundingTransitionMsg::psbt_verify() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingTransitionMsg.psbt_verify)
  return _internal_psbt_verify();
}
inline ::lnrpc::FundingPsbtVerify* FundingTransitionMsg::unsafe_arena_release_psbt_verify() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.FundingTransitionMsg.psbt_verify)
  if (trigger_case() == kPsbtVerify) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.psbt_verify_;
    _impl_.trigger_.psbt_verify_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundingTransitionMsg::unsafe_arena_set_allocated_psbt_verify(::lnrpc::FundingPsbtVerify* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_trigger();
  if (value) {
    set_has_psbt_verify();
    _impl_.trigger_.psbt_verify_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FundingTransitionMsg.psbt_verify)
}
inline ::lnrpc::FundingPsbtVerify* FundingTransitionMsg::_internal_mutable_psbt_verify() {
  if (trigger_case() != kPsbtVerify) {
    clear_trigger();
    set_has_psbt_verify();
    _impl_.trigger_.psbt_verify_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::FundingPsbtVerify>(GetArena());
  }
  return _impl_.trigger_.psbt_verify_;
}
inline ::lnrpc::FundingPsbtVerify* FundingTransitionMsg::mutable_psbt_verify() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::FundingPsbtVerify* _msg = _internal_mutable_psbt_verify();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingTransitionMsg.psbt_verify)
  return _msg;
}

// .lnrpc.FundingPsbtFinalize psbt_finalize = 4;
inline bool FundingTransitionMsg::has_psbt_finalize() const {
  return trigger_case() == kPsbtFinalize;
}
inline bool FundingTransitionMsg::_internal_has_psbt_finalize() const {
  return trigger_case() == kPsbtFinalize;
}
inline void FundingTransitionMsg::set_has_psbt_finalize() {
  _impl_._oneof_case_[0] = kPsbtFinalize;
}
inline void FundingTransitionMsg::clear_psbt_finalize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (trigger_case() == kPsbtFinalize) {
    if (GetArena() == nullptr) {
      delete _impl_.trigger_.psbt_finalize_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.trigger_.psbt_finalize_);
    }
    clear_has_trigger();
  }
}
inline ::lnrpc::FundingPsbtFinalize* FundingTransitionMsg::release_psbt_finalize() {
  // @@protoc_insertion_point(field_release:lnrpc.FundingTransitionMsg.psbt_finalize)
  if (trigger_case() == kPsbtFinalize) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.psbt_finalize_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.trigger_.psbt_finalize_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::FundingPsbtFinalize& FundingTransitionMsg::_internal_psbt_finalize() const {
  return trigger_case() == kPsbtFinalize ? *_impl_.trigger_.psbt_finalize_ : reinterpret_cast<::lnrpc::FundingPsbtFinalize&>(::lnrpc::_FundingPsbtFinalize_default_instance_);
}
inline const ::lnrpc::FundingPsbtFinalize& FundingTransitionMsg::psbt_finalize() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FundingTransitionMsg.psbt_finalize)
  return _internal_psbt_finalize();
}
inline ::lnrpc::FundingPsbtFinalize* FundingTransitionMsg::unsafe_arena_release_psbt_finalize() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.FundingTransitionMsg.psbt_finalize)
  if (trigger_case() == kPsbtFinalize) {
    clear_has_trigger();
    auto* temp = _impl_.trigger_.psbt_finalize_;
    _impl_.trigger_.psbt_finalize_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundingTransitionMsg::unsafe_arena_set_allocated_psbt_finalize(::lnrpc::FundingPsbtFinalize* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_trigger();
  if (value) {
    set_has_psbt_finalize();
    _impl_.trigger_.psbt_finalize_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FundingTransitionMsg.psbt_finalize)
}
inline ::lnrpc::FundingPsbtFinalize* FundingTransitionMsg::_internal_mutable_psbt_finalize() {
  if (trigger_case() != kPsbtFinalize) {
    clear_trigger();
    set_has_psbt_finalize();
    _impl_.trigger_.psbt_finalize_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::FundingPsbtFinalize>(GetArena());
  }
  return _impl_.trigger_.psbt_finalize_;
}
inline ::lnrpc::FundingPsbtFinalize* FundingTransitionMsg::mutable_psbt_finalize() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::FundingPsbtFinalize* _msg = _internal_mutable_psbt_finalize();
  // @@protoc_insertion_point(field_mutable:lnrpc.FundingTransitionMsg.psbt_finalize)
  return _msg;
}

inline bool FundingTransitionMsg::has_trigger() const {
  return trigger_case() != TRIGGER_NOT_SET;
}
inline void FundingTransitionMsg::clear_has_trigger() {
  _impl_._oneof_case_[0] = TRIGGER_NOT_SET;
}
inline FundingTransitionMsg::TriggerCase FundingTransitionMsg::trigger_case() const {
  return FundingTransitionMsg::TriggerCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FundingStateStepResp

// -------------------------------------------------------------------

// PendingHTLC

// bool incoming = 1;
inline void PendingHTLC::clear_incoming() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incoming_ = false;
}
inline bool PendingHTLC::incoming() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingHTLC.incoming)
  return _internal_incoming();
}
inline void PendingHTLC::set_incoming(bool value) {
  _internal_set_incoming(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingHTLC.incoming)
}
inline bool PendingHTLC::_internal_incoming() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.incoming_;
}
inline void PendingHTLC::_internal_set_incoming(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.incoming_ = value;
}

// int64 amount = 2;
inline void PendingHTLC::clear_amount() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = ::int64_t{0};
}
inline ::int64_t PendingHTLC::amount() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingHTLC.amount)
  return _internal_amount();
}
inline void PendingHTLC::set_amount(::int64_t value) {
  _internal_set_amount(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingHTLC.amount)
}
inline ::int64_t PendingHTLC::_internal_amount() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_;
}
inline void PendingHTLC::_internal_set_amount(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_ = value;
}

// string outpoint = 3;
inline void PendingHTLC::clear_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.ClearToEmpty();
}
inline const std::string& PendingHTLC::outpoint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingHTLC.outpoint)
  return _internal_outpoint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingHTLC::set_outpoint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingHTLC.outpoint)
}
inline std::string* PendingHTLC::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingHTLC.outpoint)
  return _s;
}
inline const std::string& PendingHTLC::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outpoint_.Get();
}
inline void PendingHTLC::_internal_set_outpoint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.Set(value, GetArena());
}
inline std::string* PendingHTLC::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.outpoint_.Mutable( GetArena());
}
inline std::string* PendingHTLC::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingHTLC.outpoint)
  return _impl_.outpoint_.Release();
}
inline void PendingHTLC::set_allocated_outpoint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outpoint_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.outpoint_.IsDefault()) {
          _impl_.outpoint_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingHTLC.outpoint)
}

// uint32 maturity_height = 4;
inline void PendingHTLC::clear_maturity_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maturity_height_ = 0u;
}
inline ::uint32_t PendingHTLC::maturity_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingHTLC.maturity_height)
  return _internal_maturity_height();
}
inline void PendingHTLC::set_maturity_height(::uint32_t value) {
  _internal_set_maturity_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingHTLC.maturity_height)
}
inline ::uint32_t PendingHTLC::_internal_maturity_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maturity_height_;
}
inline void PendingHTLC::_internal_set_maturity_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maturity_height_ = value;
}

// int32 blocks_til_maturity = 5;
inline void PendingHTLC::clear_blocks_til_maturity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_til_maturity_ = 0;
}
inline ::int32_t PendingHTLC::blocks_til_maturity() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingHTLC.blocks_til_maturity)
  return _internal_blocks_til_maturity();
}
inline void PendingHTLC::set_blocks_til_maturity(::int32_t value) {
  _internal_set_blocks_til_maturity(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingHTLC.blocks_til_maturity)
}
inline ::int32_t PendingHTLC::_internal_blocks_til_maturity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocks_til_maturity_;
}
inline void PendingHTLC::_internal_set_blocks_til_maturity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_til_maturity_ = value;
}

// uint32 stage = 6;
inline void PendingHTLC::clear_stage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = 0u;
}
inline ::uint32_t PendingHTLC::stage() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingHTLC.stage)
  return _internal_stage();
}
inline void PendingHTLC::set_stage(::uint32_t value) {
  _internal_set_stage(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingHTLC.stage)
}
inline ::uint32_t PendingHTLC::_internal_stage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stage_;
}
inline void PendingHTLC::_internal_set_stage(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stage_ = value;
}

// -------------------------------------------------------------------

// PendingChannelsRequest

// bool include_raw_tx = 1;
inline void PendingChannelsRequest::clear_include_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_raw_tx_ = false;
}
inline bool PendingChannelsRequest::include_raw_tx() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsRequest.include_raw_tx)
  return _internal_include_raw_tx();
}
inline void PendingChannelsRequest::set_include_raw_tx(bool value) {
  _internal_set_include_raw_tx(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsRequest.include_raw_tx)
}
inline bool PendingChannelsRequest::_internal_include_raw_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_raw_tx_;
}
inline void PendingChannelsRequest::_internal_set_include_raw_tx(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_raw_tx_ = value;
}

// -------------------------------------------------------------------

// PendingChannelsResponse_PendingChannel

// string remote_node_pub = 1;
inline void PendingChannelsResponse_PendingChannel::clear_remote_node_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_node_pub_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_PendingChannel::remote_node_pub() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.remote_node_pub)
  return _internal_remote_node_pub();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_PendingChannel::set_remote_node_pub(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_node_pub_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.remote_node_pub)
}
inline std::string* PendingChannelsResponse_PendingChannel::mutable_remote_node_pub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_node_pub();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.PendingChannel.remote_node_pub)
  return _s;
}
inline const std::string& PendingChannelsResponse_PendingChannel::_internal_remote_node_pub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_node_pub_.Get();
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_remote_node_pub(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_node_pub_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::_internal_mutable_remote_node_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_node_pub_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::release_remote_node_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.PendingChannel.remote_node_pub)
  return _impl_.remote_node_pub_.Release();
}
inline void PendingChannelsResponse_PendingChannel::set_allocated_remote_node_pub(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_node_pub_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_node_pub_.IsDefault()) {
          _impl_.remote_node_pub_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.PendingChannel.remote_node_pub)
}

// string channel_point = 2;
inline void PendingChannelsResponse_PendingChannel::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_PendingChannel::channel_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.channel_point)
  return _internal_channel_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_PendingChannel::set_channel_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.channel_point)
}
inline std::string* PendingChannelsResponse_PendingChannel::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.PendingChannel.channel_point)
  return _s;
}
inline const std::string& PendingChannelsResponse_PendingChannel::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_point_.Get();
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_channel_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_point_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.PendingChannel.channel_point)
  return _impl_.channel_point_.Release();
}
inline void PendingChannelsResponse_PendingChannel::set_allocated_channel_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_point_.IsDefault()) {
          _impl_.channel_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.PendingChannel.channel_point)
}

// int64 capacity = 3;
inline void PendingChannelsResponse_PendingChannel::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingChannel::capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.capacity)
  return _internal_capacity();
}
inline void PendingChannelsResponse_PendingChannel::set_capacity(::int64_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.capacity)
}
inline ::int64_t PendingChannelsResponse_PendingChannel::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// int64 local_balance = 4;
inline void PendingChannelsResponse_PendingChannel::clear_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_balance_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingChannel::local_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.local_balance)
  return _internal_local_balance();
}
inline void PendingChannelsResponse_PendingChannel::set_local_balance(::int64_t value) {
  _internal_set_local_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.local_balance)
}
inline ::int64_t PendingChannelsResponse_PendingChannel::_internal_local_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_balance_;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_local_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_balance_ = value;
}

// int64 remote_balance = 5;
inline void PendingChannelsResponse_PendingChannel::clear_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_balance_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingChannel::remote_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.remote_balance)
  return _internal_remote_balance();
}
inline void PendingChannelsResponse_PendingChannel::set_remote_balance(::int64_t value) {
  _internal_set_remote_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.remote_balance)
}
inline ::int64_t PendingChannelsResponse_PendingChannel::_internal_remote_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_balance_;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_remote_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_balance_ = value;
}

// int64 local_chan_reserve_sat = 6;
inline void PendingChannelsResponse_PendingChannel::clear_local_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_chan_reserve_sat_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingChannel::local_chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.local_chan_reserve_sat)
  return _internal_local_chan_reserve_sat();
}
inline void PendingChannelsResponse_PendingChannel::set_local_chan_reserve_sat(::int64_t value) {
  _internal_set_local_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.local_chan_reserve_sat)
}
inline ::int64_t PendingChannelsResponse_PendingChannel::_internal_local_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_chan_reserve_sat_;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_local_chan_reserve_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_chan_reserve_sat_ = value;
}

// int64 remote_chan_reserve_sat = 7;
inline void PendingChannelsResponse_PendingChannel::clear_remote_chan_reserve_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingChannel::remote_chan_reserve_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.remote_chan_reserve_sat)
  return _internal_remote_chan_reserve_sat();
}
inline void PendingChannelsResponse_PendingChannel::set_remote_chan_reserve_sat(::int64_t value) {
  _internal_set_remote_chan_reserve_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.remote_chan_reserve_sat)
}
inline ::int64_t PendingChannelsResponse_PendingChannel::_internal_remote_chan_reserve_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_chan_reserve_sat_;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_remote_chan_reserve_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_chan_reserve_sat_ = value;
}

// .lnrpc.Initiator initiator = 8;
inline void PendingChannelsResponse_PendingChannel::clear_initiator() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiator_ = 0;
}
inline ::lnrpc::Initiator PendingChannelsResponse_PendingChannel::initiator() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.initiator)
  return _internal_initiator();
}
inline void PendingChannelsResponse_PendingChannel::set_initiator(::lnrpc::Initiator value) {
  _internal_set_initiator(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.initiator)
}
inline ::lnrpc::Initiator PendingChannelsResponse_PendingChannel::_internal_initiator() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Initiator>(_impl_.initiator_);
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_initiator(::lnrpc::Initiator value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initiator_ = value;
}

// .lnrpc.CommitmentType commitment_type = 9;
inline void PendingChannelsResponse_PendingChannel::clear_commitment_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = 0;
}
inline ::lnrpc::CommitmentType PendingChannelsResponse_PendingChannel::commitment_type() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.commitment_type)
  return _internal_commitment_type();
}
inline void PendingChannelsResponse_PendingChannel::set_commitment_type(::lnrpc::CommitmentType value) {
  _internal_set_commitment_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.commitment_type)
}
inline ::lnrpc::CommitmentType PendingChannelsResponse_PendingChannel::_internal_commitment_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CommitmentType>(_impl_.commitment_type_);
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_commitment_type(::lnrpc::CommitmentType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commitment_type_ = value;
}

// int64 num_forwarding_packages = 10;
inline void PendingChannelsResponse_PendingChannel::clear_num_forwarding_packages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_forwarding_packages_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingChannel::num_forwarding_packages() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.num_forwarding_packages)
  return _internal_num_forwarding_packages();
}
inline void PendingChannelsResponse_PendingChannel::set_num_forwarding_packages(::int64_t value) {
  _internal_set_num_forwarding_packages(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.num_forwarding_packages)
}
inline ::int64_t PendingChannelsResponse_PendingChannel::_internal_num_forwarding_packages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_forwarding_packages_;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_num_forwarding_packages(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_forwarding_packages_ = value;
}

// string chan_status_flags = 11;
inline void PendingChannelsResponse_PendingChannel::clear_chan_status_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_PendingChannel::chan_status_flags() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.chan_status_flags)
  return _internal_chan_status_flags();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_PendingChannel::set_chan_status_flags(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.chan_status_flags)
}
inline std::string* PendingChannelsResponse_PendingChannel::mutable_chan_status_flags() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chan_status_flags();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.PendingChannel.chan_status_flags)
  return _s;
}
inline const std::string& PendingChannelsResponse_PendingChannel::_internal_chan_status_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_status_flags_.Get();
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_chan_status_flags(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::_internal_mutable_chan_status_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chan_status_flags_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::release_chan_status_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.PendingChannel.chan_status_flags)
  return _impl_.chan_status_flags_.Release();
}
inline void PendingChannelsResponse_PendingChannel::set_allocated_chan_status_flags(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_status_flags_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chan_status_flags_.IsDefault()) {
          _impl_.chan_status_flags_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.PendingChannel.chan_status_flags)
}

// bool private = 12;
inline void PendingChannelsResponse_PendingChannel::clear_private_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = false;
}
inline bool PendingChannelsResponse_PendingChannel::private_() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.private)
  return _internal_private_();
}
inline void PendingChannelsResponse_PendingChannel::set_private_(bool value) {
  _internal_set_private_(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.private)
}
inline bool PendingChannelsResponse_PendingChannel::_internal_private_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private__;
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_private_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = value;
}

// string memo = 13;
inline void PendingChannelsResponse_PendingChannel::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_PendingChannel::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_PendingChannel::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.memo)
}
inline std::string* PendingChannelsResponse_PendingChannel::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.PendingChannel.memo)
  return _s;
}
inline const std::string& PendingChannelsResponse_PendingChannel::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.PendingChannel.memo)
  return _impl_.memo_.Release();
}
inline void PendingChannelsResponse_PendingChannel::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.PendingChannel.memo)
}

// bytes custom_channel_data = 34;
inline void PendingChannelsResponse_PendingChannel::clear_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_PendingChannel::custom_channel_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingChannel.custom_channel_data)
  return _internal_custom_channel_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_PendingChannel::set_custom_channel_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingChannel.custom_channel_data)
}
inline std::string* PendingChannelsResponse_PendingChannel::mutable_custom_channel_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_channel_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.PendingChannel.custom_channel_data)
  return _s;
}
inline const std::string& PendingChannelsResponse_PendingChannel::_internal_custom_channel_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_channel_data_.Get();
}
inline void PendingChannelsResponse_PendingChannel::_internal_set_custom_channel_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::_internal_mutable_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_channel_data_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_PendingChannel::release_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.PendingChannel.custom_channel_data)
  return _impl_.custom_channel_data_.Release();
}
inline void PendingChannelsResponse_PendingChannel::set_allocated_custom_channel_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_channel_data_.IsDefault()) {
          _impl_.custom_channel_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.PendingChannel.custom_channel_data)
}

// -------------------------------------------------------------------

// PendingChannelsResponse_PendingOpenChannel

// .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
inline bool PendingChannelsResponse_PendingOpenChannel::has_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_ != nullptr);
  return value;
}
inline void PendingChannelsResponse_PendingOpenChannel::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ != nullptr) _impl_.channel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_PendingOpenChannel::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::PendingChannelsResponse_PendingChannel* p = _impl_.channel_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::PendingChannelsResponse_PendingChannel&>(::lnrpc::_PendingChannelsResponse_PendingChannel_default_instance_);
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_PendingOpenChannel::channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingOpenChannel.channel)
  return _internal_channel();
}
inline void PendingChannelsResponse_PendingOpenChannel::unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_);
  }
  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PendingChannelsResponse.PendingOpenChannel.channel)
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_PendingOpenChannel::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* released = _impl_.channel_;
  _impl_.channel_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_PendingOpenChannel::unsafe_arena_release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.PendingOpenChannel.channel)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* temp = _impl_.channel_;
  _impl_.channel_ = nullptr;
  return temp;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_PendingOpenChannel::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingChannelsResponse_PendingChannel>(GetArena());
    _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(p);
  }
  return _impl_.channel_;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_PendingOpenChannel::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _msg = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.PendingOpenChannel.channel)
  return _msg;
}
inline void PendingChannelsResponse_PendingOpenChannel::set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.PendingOpenChannel.channel)
}

// int64 commit_fee = 4;
inline void PendingChannelsResponse_PendingOpenChannel::clear_commit_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_fee_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingOpenChannel::commit_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingOpenChannel.commit_fee)
  return _internal_commit_fee();
}
inline void PendingChannelsResponse_PendingOpenChannel::set_commit_fee(::int64_t value) {
  _internal_set_commit_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingOpenChannel.commit_fee)
}
inline ::int64_t PendingChannelsResponse_PendingOpenChannel::_internal_commit_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commit_fee_;
}
inline void PendingChannelsResponse_PendingOpenChannel::_internal_set_commit_fee(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_fee_ = value;
}

// int64 commit_weight = 5;
inline void PendingChannelsResponse_PendingOpenChannel::clear_commit_weight() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_weight_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingOpenChannel::commit_weight() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingOpenChannel.commit_weight)
  return _internal_commit_weight();
}
inline void PendingChannelsResponse_PendingOpenChannel::set_commit_weight(::int64_t value) {
  _internal_set_commit_weight(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingOpenChannel.commit_weight)
}
inline ::int64_t PendingChannelsResponse_PendingOpenChannel::_internal_commit_weight() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commit_weight_;
}
inline void PendingChannelsResponse_PendingOpenChannel::_internal_set_commit_weight(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commit_weight_ = value;
}

// int64 fee_per_kw = 6;
inline void PendingChannelsResponse_PendingOpenChannel::clear_fee_per_kw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_kw_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_PendingOpenChannel::fee_per_kw() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingOpenChannel.fee_per_kw)
  return _internal_fee_per_kw();
}
inline void PendingChannelsResponse_PendingOpenChannel::set_fee_per_kw(::int64_t value) {
  _internal_set_fee_per_kw(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingOpenChannel.fee_per_kw)
}
inline ::int64_t PendingChannelsResponse_PendingOpenChannel::_internal_fee_per_kw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_per_kw_;
}
inline void PendingChannelsResponse_PendingOpenChannel::_internal_set_fee_per_kw(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_kw_ = value;
}

// int32 funding_expiry_blocks = 3;
inline void PendingChannelsResponse_PendingOpenChannel::clear_funding_expiry_blocks() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_expiry_blocks_ = 0;
}
inline ::int32_t PendingChannelsResponse_PendingOpenChannel::funding_expiry_blocks() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.PendingOpenChannel.funding_expiry_blocks)
  return _internal_funding_expiry_blocks();
}
inline void PendingChannelsResponse_PendingOpenChannel::set_funding_expiry_blocks(::int32_t value) {
  _internal_set_funding_expiry_blocks(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.PendingOpenChannel.funding_expiry_blocks)
}
inline ::int32_t PendingChannelsResponse_PendingOpenChannel::_internal_funding_expiry_blocks() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funding_expiry_blocks_;
}
inline void PendingChannelsResponse_PendingOpenChannel::_internal_set_funding_expiry_blocks(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funding_expiry_blocks_ = value;
}

// -------------------------------------------------------------------

// PendingChannelsResponse_WaitingCloseChannel

// .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
inline bool PendingChannelsResponse_WaitingCloseChannel::has_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_ != nullptr);
  return value;
}
inline void PendingChannelsResponse_WaitingCloseChannel::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ != nullptr) _impl_.channel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_WaitingCloseChannel::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::PendingChannelsResponse_PendingChannel* p = _impl_.channel_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::PendingChannelsResponse_PendingChannel&>(::lnrpc::_PendingChannelsResponse_PendingChannel_default_instance_);
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_WaitingCloseChannel::channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.WaitingCloseChannel.channel)
  return _internal_channel();
}
inline void PendingChannelsResponse_WaitingCloseChannel::unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_);
  }
  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PendingChannelsResponse.WaitingCloseChannel.channel)
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_WaitingCloseChannel::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* released = _impl_.channel_;
  _impl_.channel_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_WaitingCloseChannel::unsafe_arena_release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.WaitingCloseChannel.channel)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* temp = _impl_.channel_;
  _impl_.channel_ = nullptr;
  return temp;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_WaitingCloseChannel::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingChannelsResponse_PendingChannel>(GetArena());
    _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(p);
  }
  return _impl_.channel_;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_WaitingCloseChannel::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _msg = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.WaitingCloseChannel.channel)
  return _msg;
}
inline void PendingChannelsResponse_WaitingCloseChannel::set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.WaitingCloseChannel.channel)
}

// int64 limbo_balance = 2;
inline void PendingChannelsResponse_WaitingCloseChannel::clear_limbo_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limbo_balance_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_WaitingCloseChannel::limbo_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.WaitingCloseChannel.limbo_balance)
  return _internal_limbo_balance();
}
inline void PendingChannelsResponse_WaitingCloseChannel::set_limbo_balance(::int64_t value) {
  _internal_set_limbo_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.WaitingCloseChannel.limbo_balance)
}
inline ::int64_t PendingChannelsResponse_WaitingCloseChannel::_internal_limbo_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limbo_balance_;
}
inline void PendingChannelsResponse_WaitingCloseChannel::_internal_set_limbo_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limbo_balance_ = value;
}

// .lnrpc.PendingChannelsResponse.Commitments commitments = 3;
inline bool PendingChannelsResponse_WaitingCloseChannel::has_commitments() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.commitments_ != nullptr);
  return value;
}
inline void PendingChannelsResponse_WaitingCloseChannel::clear_commitments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.commitments_ != nullptr) _impl_.commitments_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::PendingChannelsResponse_Commitments& PendingChannelsResponse_WaitingCloseChannel::_internal_commitments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::PendingChannelsResponse_Commitments* p = _impl_.commitments_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::PendingChannelsResponse_Commitments&>(::lnrpc::_PendingChannelsResponse_Commitments_default_instance_);
}
inline const ::lnrpc::PendingChannelsResponse_Commitments& PendingChannelsResponse_WaitingCloseChannel::commitments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.WaitingCloseChannel.commitments)
  return _internal_commitments();
}
inline void PendingChannelsResponse_WaitingCloseChannel::unsafe_arena_set_allocated_commitments(::lnrpc::PendingChannelsResponse_Commitments* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.commitments_);
  }
  _impl_.commitments_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_Commitments*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PendingChannelsResponse.WaitingCloseChannel.commitments)
}
inline ::lnrpc::PendingChannelsResponse_Commitments* PendingChannelsResponse_WaitingCloseChannel::release_commitments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::PendingChannelsResponse_Commitments* released = _impl_.commitments_;
  _impl_.commitments_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::PendingChannelsResponse_Commitments* PendingChannelsResponse_WaitingCloseChannel::unsafe_arena_release_commitments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.WaitingCloseChannel.commitments)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::PendingChannelsResponse_Commitments* temp = _impl_.commitments_;
  _impl_.commitments_ = nullptr;
  return temp;
}
inline ::lnrpc::PendingChannelsResponse_Commitments* PendingChannelsResponse_WaitingCloseChannel::_internal_mutable_commitments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.commitments_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingChannelsResponse_Commitments>(GetArena());
    _impl_.commitments_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_Commitments*>(p);
  }
  return _impl_.commitments_;
}
inline ::lnrpc::PendingChannelsResponse_Commitments* PendingChannelsResponse_WaitingCloseChannel::mutable_commitments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::PendingChannelsResponse_Commitments* _msg = _internal_mutable_commitments();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.WaitingCloseChannel.commitments)
  return _msg;
}
inline void PendingChannelsResponse_WaitingCloseChannel::set_allocated_commitments(::lnrpc::PendingChannelsResponse_Commitments* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.commitments_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.commitments_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_Commitments*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.WaitingCloseChannel.commitments)
}

// string closing_txid = 4;
inline void PendingChannelsResponse_WaitingCloseChannel::clear_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_WaitingCloseChannel::closing_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_txid)
  return _internal_closing_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_WaitingCloseChannel::set_closing_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_txid)
}
inline std::string* PendingChannelsResponse_WaitingCloseChannel::mutable_closing_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_closing_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_txid)
  return _s;
}
inline const std::string& PendingChannelsResponse_WaitingCloseChannel::_internal_closing_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closing_txid_.Get();
}
inline void PendingChannelsResponse_WaitingCloseChannel::_internal_set_closing_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_WaitingCloseChannel::_internal_mutable_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.closing_txid_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_WaitingCloseChannel::release_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_txid)
  return _impl_.closing_txid_.Release();
}
inline void PendingChannelsResponse_WaitingCloseChannel::set_allocated_closing_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.closing_txid_.IsDefault()) {
          _impl_.closing_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_txid)
}

// string closing_tx_hex = 5;
inline void PendingChannelsResponse_WaitingCloseChannel::clear_closing_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hex_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_WaitingCloseChannel::closing_tx_hex() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_tx_hex)
  return _internal_closing_tx_hex();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_WaitingCloseChannel::set_closing_tx_hex(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hex_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_tx_hex)
}
inline std::string* PendingChannelsResponse_WaitingCloseChannel::mutable_closing_tx_hex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_closing_tx_hex();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_tx_hex)
  return _s;
}
inline const std::string& PendingChannelsResponse_WaitingCloseChannel::_internal_closing_tx_hex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closing_tx_hex_.Get();
}
inline void PendingChannelsResponse_WaitingCloseChannel::_internal_set_closing_tx_hex(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hex_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_WaitingCloseChannel::_internal_mutable_closing_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.closing_tx_hex_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_WaitingCloseChannel::release_closing_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_tx_hex)
  return _impl_.closing_tx_hex_.Release();
}
inline void PendingChannelsResponse_WaitingCloseChannel::set_allocated_closing_tx_hex(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_tx_hex_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.closing_tx_hex_.IsDefault()) {
          _impl_.closing_tx_hex_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.WaitingCloseChannel.closing_tx_hex)
}

// -------------------------------------------------------------------

// PendingChannelsResponse_Commitments

// string local_txid = 1;
inline void PendingChannelsResponse_Commitments::clear_local_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_txid_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_Commitments::local_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.Commitments.local_txid)
  return _internal_local_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_Commitments::set_local_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.Commitments.local_txid)
}
inline std::string* PendingChannelsResponse_Commitments::mutable_local_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_local_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.Commitments.local_txid)
  return _s;
}
inline const std::string& PendingChannelsResponse_Commitments::_internal_local_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_txid_.Get();
}
inline void PendingChannelsResponse_Commitments::_internal_set_local_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_txid_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_Commitments::_internal_mutable_local_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.local_txid_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_Commitments::release_local_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.Commitments.local_txid)
  return _impl_.local_txid_.Release();
}
inline void PendingChannelsResponse_Commitments::set_allocated_local_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.local_txid_.IsDefault()) {
          _impl_.local_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.Commitments.local_txid)
}

// string remote_txid = 2;
inline void PendingChannelsResponse_Commitments::clear_remote_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_txid_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_Commitments::remote_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.Commitments.remote_txid)
  return _internal_remote_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_Commitments::set_remote_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.Commitments.remote_txid)
}
inline std::string* PendingChannelsResponse_Commitments::mutable_remote_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.Commitments.remote_txid)
  return _s;
}
inline const std::string& PendingChannelsResponse_Commitments::_internal_remote_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_txid_.Get();
}
inline void PendingChannelsResponse_Commitments::_internal_set_remote_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_txid_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_Commitments::_internal_mutable_remote_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_txid_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_Commitments::release_remote_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.Commitments.remote_txid)
  return _impl_.remote_txid_.Release();
}
inline void PendingChannelsResponse_Commitments::set_allocated_remote_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_txid_.IsDefault()) {
          _impl_.remote_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.Commitments.remote_txid)
}

// string remote_pending_txid = 3;
inline void PendingChannelsResponse_Commitments::clear_remote_pending_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pending_txid_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_Commitments::remote_pending_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.Commitments.remote_pending_txid)
  return _internal_remote_pending_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_Commitments::set_remote_pending_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pending_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.Commitments.remote_pending_txid)
}
inline std::string* PendingChannelsResponse_Commitments::mutable_remote_pending_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remote_pending_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.Commitments.remote_pending_txid)
  return _s;
}
inline const std::string& PendingChannelsResponse_Commitments::_internal_remote_pending_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_pending_txid_.Get();
}
inline void PendingChannelsResponse_Commitments::_internal_set_remote_pending_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pending_txid_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_Commitments::_internal_mutable_remote_pending_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.remote_pending_txid_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_Commitments::release_remote_pending_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.Commitments.remote_pending_txid)
  return _impl_.remote_pending_txid_.Release();
}
inline void PendingChannelsResponse_Commitments::set_allocated_remote_pending_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pending_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.remote_pending_txid_.IsDefault()) {
          _impl_.remote_pending_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.Commitments.remote_pending_txid)
}

// uint64 local_commit_fee_sat = 4;
inline void PendingChannelsResponse_Commitments::clear_local_commit_fee_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_commit_fee_sat_ = ::uint64_t{0u};
}
inline ::uint64_t PendingChannelsResponse_Commitments::local_commit_fee_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.Commitments.local_commit_fee_sat)
  return _internal_local_commit_fee_sat();
}
inline void PendingChannelsResponse_Commitments::set_local_commit_fee_sat(::uint64_t value) {
  _internal_set_local_commit_fee_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.Commitments.local_commit_fee_sat)
}
inline ::uint64_t PendingChannelsResponse_Commitments::_internal_local_commit_fee_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.local_commit_fee_sat_;
}
inline void PendingChannelsResponse_Commitments::_internal_set_local_commit_fee_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.local_commit_fee_sat_ = value;
}

// uint64 remote_commit_fee_sat = 5;
inline void PendingChannelsResponse_Commitments::clear_remote_commit_fee_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_commit_fee_sat_ = ::uint64_t{0u};
}
inline ::uint64_t PendingChannelsResponse_Commitments::remote_commit_fee_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.Commitments.remote_commit_fee_sat)
  return _internal_remote_commit_fee_sat();
}
inline void PendingChannelsResponse_Commitments::set_remote_commit_fee_sat(::uint64_t value) {
  _internal_set_remote_commit_fee_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.Commitments.remote_commit_fee_sat)
}
inline ::uint64_t PendingChannelsResponse_Commitments::_internal_remote_commit_fee_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_commit_fee_sat_;
}
inline void PendingChannelsResponse_Commitments::_internal_set_remote_commit_fee_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_commit_fee_sat_ = value;
}

// uint64 remote_pending_commit_fee_sat = 6;
inline void PendingChannelsResponse_Commitments::clear_remote_pending_commit_fee_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pending_commit_fee_sat_ = ::uint64_t{0u};
}
inline ::uint64_t PendingChannelsResponse_Commitments::remote_pending_commit_fee_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.Commitments.remote_pending_commit_fee_sat)
  return _internal_remote_pending_commit_fee_sat();
}
inline void PendingChannelsResponse_Commitments::set_remote_pending_commit_fee_sat(::uint64_t value) {
  _internal_set_remote_pending_commit_fee_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.Commitments.remote_pending_commit_fee_sat)
}
inline ::uint64_t PendingChannelsResponse_Commitments::_internal_remote_pending_commit_fee_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remote_pending_commit_fee_sat_;
}
inline void PendingChannelsResponse_Commitments::_internal_set_remote_pending_commit_fee_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remote_pending_commit_fee_sat_ = value;
}

// -------------------------------------------------------------------

// PendingChannelsResponse_ClosedChannel

// .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
inline bool PendingChannelsResponse_ClosedChannel::has_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_ != nullptr);
  return value;
}
inline void PendingChannelsResponse_ClosedChannel::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ != nullptr) _impl_.channel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_ClosedChannel::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::PendingChannelsResponse_PendingChannel* p = _impl_.channel_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::PendingChannelsResponse_PendingChannel&>(::lnrpc::_PendingChannelsResponse_PendingChannel_default_instance_);
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_ClosedChannel::channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ClosedChannel.channel)
  return _internal_channel();
}
inline void PendingChannelsResponse_ClosedChannel::unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_);
  }
  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PendingChannelsResponse.ClosedChannel.channel)
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ClosedChannel::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* released = _impl_.channel_;
  _impl_.channel_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ClosedChannel::unsafe_arena_release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.ClosedChannel.channel)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* temp = _impl_.channel_;
  _impl_.channel_ = nullptr;
  return temp;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ClosedChannel::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingChannelsResponse_PendingChannel>(GetArena());
    _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(p);
  }
  return _impl_.channel_;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ClosedChannel::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _msg = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.ClosedChannel.channel)
  return _msg;
}
inline void PendingChannelsResponse_ClosedChannel::set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.ClosedChannel.channel)
}

// string closing_txid = 2;
inline void PendingChannelsResponse_ClosedChannel::clear_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_ClosedChannel::closing_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ClosedChannel.closing_txid)
  return _internal_closing_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_ClosedChannel::set_closing_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ClosedChannel.closing_txid)
}
inline std::string* PendingChannelsResponse_ClosedChannel::mutable_closing_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_closing_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.ClosedChannel.closing_txid)
  return _s;
}
inline const std::string& PendingChannelsResponse_ClosedChannel::_internal_closing_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closing_txid_.Get();
}
inline void PendingChannelsResponse_ClosedChannel::_internal_set_closing_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_ClosedChannel::_internal_mutable_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.closing_txid_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_ClosedChannel::release_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.ClosedChannel.closing_txid)
  return _impl_.closing_txid_.Release();
}
inline void PendingChannelsResponse_ClosedChannel::set_allocated_closing_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.closing_txid_.IsDefault()) {
          _impl_.closing_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.ClosedChannel.closing_txid)
}

// -------------------------------------------------------------------

// PendingChannelsResponse_ForceClosedChannel

// .lnrpc.PendingChannelsResponse.PendingChannel channel = 1;
inline bool PendingChannelsResponse_ForceClosedChannel::has_channel() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_ != nullptr);
  return value;
}
inline void PendingChannelsResponse_ForceClosedChannel::clear_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ != nullptr) _impl_.channel_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_ForceClosedChannel::_internal_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::PendingChannelsResponse_PendingChannel* p = _impl_.channel_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::PendingChannelsResponse_PendingChannel&>(::lnrpc::_PendingChannelsResponse_PendingChannel_default_instance_);
}
inline const ::lnrpc::PendingChannelsResponse_PendingChannel& PendingChannelsResponse_ForceClosedChannel::channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.channel)
  return _internal_channel();
}
inline void PendingChannelsResponse_ForceClosedChannel::unsafe_arena_set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_);
  }
  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PendingChannelsResponse.ForceClosedChannel.channel)
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ForceClosedChannel::release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* released = _impl_.channel_;
  _impl_.channel_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ForceClosedChannel::unsafe_arena_release_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.ForceClosedChannel.channel)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* temp = _impl_.channel_;
  _impl_.channel_ = nullptr;
  return temp;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ForceClosedChannel::_internal_mutable_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingChannelsResponse_PendingChannel>(GetArena());
    _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(p);
  }
  return _impl_.channel_;
}
inline ::lnrpc::PendingChannelsResponse_PendingChannel* PendingChannelsResponse_ForceClosedChannel::mutable_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::PendingChannelsResponse_PendingChannel* _msg = _internal_mutable_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.ForceClosedChannel.channel)
  return _msg;
}
inline void PendingChannelsResponse_ForceClosedChannel::set_allocated_channel(::lnrpc::PendingChannelsResponse_PendingChannel* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_ = reinterpret_cast<::lnrpc::PendingChannelsResponse_PendingChannel*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.ForceClosedChannel.channel)
}

// string closing_txid = 2;
inline void PendingChannelsResponse_ForceClosedChannel::clear_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.ClearToEmpty();
}
inline const std::string& PendingChannelsResponse_ForceClosedChannel::closing_txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.closing_txid)
  return _internal_closing_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PendingChannelsResponse_ForceClosedChannel::set_closing_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ForceClosedChannel.closing_txid)
}
inline std::string* PendingChannelsResponse_ForceClosedChannel::mutable_closing_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_closing_txid();
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.ForceClosedChannel.closing_txid)
  return _s;
}
inline const std::string& PendingChannelsResponse_ForceClosedChannel::_internal_closing_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closing_txid_.Get();
}
inline void PendingChannelsResponse_ForceClosedChannel::_internal_set_closing_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.Set(value, GetArena());
}
inline std::string* PendingChannelsResponse_ForceClosedChannel::_internal_mutable_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.closing_txid_.Mutable( GetArena());
}
inline std::string* PendingChannelsResponse_ForceClosedChannel::release_closing_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PendingChannelsResponse.ForceClosedChannel.closing_txid)
  return _impl_.closing_txid_.Release();
}
inline void PendingChannelsResponse_ForceClosedChannel::set_allocated_closing_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closing_txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.closing_txid_.IsDefault()) {
          _impl_.closing_txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PendingChannelsResponse.ForceClosedChannel.closing_txid)
}

// int64 limbo_balance = 3;
inline void PendingChannelsResponse_ForceClosedChannel::clear_limbo_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limbo_balance_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_ForceClosedChannel::limbo_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.limbo_balance)
  return _internal_limbo_balance();
}
inline void PendingChannelsResponse_ForceClosedChannel::set_limbo_balance(::int64_t value) {
  _internal_set_limbo_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ForceClosedChannel.limbo_balance)
}
inline ::int64_t PendingChannelsResponse_ForceClosedChannel::_internal_limbo_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.limbo_balance_;
}
inline void PendingChannelsResponse_ForceClosedChannel::_internal_set_limbo_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.limbo_balance_ = value;
}

// uint32 maturity_height = 4;
inline void PendingChannelsResponse_ForceClosedChannel::clear_maturity_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maturity_height_ = 0u;
}
inline ::uint32_t PendingChannelsResponse_ForceClosedChannel::maturity_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.maturity_height)
  return _internal_maturity_height();
}
inline void PendingChannelsResponse_ForceClosedChannel::set_maturity_height(::uint32_t value) {
  _internal_set_maturity_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ForceClosedChannel.maturity_height)
}
inline ::uint32_t PendingChannelsResponse_ForceClosedChannel::_internal_maturity_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maturity_height_;
}
inline void PendingChannelsResponse_ForceClosedChannel::_internal_set_maturity_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maturity_height_ = value;
}

// int32 blocks_til_maturity = 5;
inline void PendingChannelsResponse_ForceClosedChannel::clear_blocks_til_maturity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_til_maturity_ = 0;
}
inline ::int32_t PendingChannelsResponse_ForceClosedChannel::blocks_til_maturity() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.blocks_til_maturity)
  return _internal_blocks_til_maturity();
}
inline void PendingChannelsResponse_ForceClosedChannel::set_blocks_til_maturity(::int32_t value) {
  _internal_set_blocks_til_maturity(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ForceClosedChannel.blocks_til_maturity)
}
inline ::int32_t PendingChannelsResponse_ForceClosedChannel::_internal_blocks_til_maturity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blocks_til_maturity_;
}
inline void PendingChannelsResponse_ForceClosedChannel::_internal_set_blocks_til_maturity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blocks_til_maturity_ = value;
}

// int64 recovered_balance = 6;
inline void PendingChannelsResponse_ForceClosedChannel::clear_recovered_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovered_balance_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse_ForceClosedChannel::recovered_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.recovered_balance)
  return _internal_recovered_balance();
}
inline void PendingChannelsResponse_ForceClosedChannel::set_recovered_balance(::int64_t value) {
  _internal_set_recovered_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ForceClosedChannel.recovered_balance)
}
inline ::int64_t PendingChannelsResponse_ForceClosedChannel::_internal_recovered_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.recovered_balance_;
}
inline void PendingChannelsResponse_ForceClosedChannel::_internal_set_recovered_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.recovered_balance_ = value;
}

// repeated .lnrpc.PendingHTLC pending_htlcs = 8;
inline int PendingChannelsResponse_ForceClosedChannel::_internal_pending_htlcs_size() const {
  return _internal_pending_htlcs().size();
}
inline int PendingChannelsResponse_ForceClosedChannel::pending_htlcs_size() const {
  return _internal_pending_htlcs_size();
}
inline void PendingChannelsResponse_ForceClosedChannel::clear_pending_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_htlcs_.Clear();
}
inline ::lnrpc::PendingHTLC* PendingChannelsResponse_ForceClosedChannel::mutable_pending_htlcs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.ForceClosedChannel.pending_htlcs)
  return _internal_mutable_pending_htlcs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>* PendingChannelsResponse_ForceClosedChannel::mutable_pending_htlcs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PendingChannelsResponse.ForceClosedChannel.pending_htlcs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_htlcs();
}
inline const ::lnrpc::PendingHTLC& PendingChannelsResponse_ForceClosedChannel::pending_htlcs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.pending_htlcs)
  return _internal_pending_htlcs().Get(index);
}
inline ::lnrpc::PendingHTLC* PendingChannelsResponse_ForceClosedChannel::add_pending_htlcs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PendingHTLC* _add = _internal_mutable_pending_htlcs()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PendingChannelsResponse.ForceClosedChannel.pending_htlcs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>& PendingChannelsResponse_ForceClosedChannel::pending_htlcs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PendingChannelsResponse.ForceClosedChannel.pending_htlcs)
  return _internal_pending_htlcs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>&
PendingChannelsResponse_ForceClosedChannel::_internal_pending_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_htlcs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingHTLC>*
PendingChannelsResponse_ForceClosedChannel::_internal_mutable_pending_htlcs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_htlcs_;
}

// .lnrpc.PendingChannelsResponse.ForceClosedChannel.AnchorState anchor = 9;
inline void PendingChannelsResponse_ForceClosedChannel::clear_anchor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.anchor_ = 0;
}
inline ::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState PendingChannelsResponse_ForceClosedChannel::anchor() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.ForceClosedChannel.anchor)
  return _internal_anchor();
}
inline void PendingChannelsResponse_ForceClosedChannel::set_anchor(::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState value) {
  _internal_set_anchor(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.ForceClosedChannel.anchor)
}
inline ::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState PendingChannelsResponse_ForceClosedChannel::_internal_anchor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState>(_impl_.anchor_);
}
inline void PendingChannelsResponse_ForceClosedChannel::_internal_set_anchor(::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.anchor_ = value;
}

// -------------------------------------------------------------------

// PendingChannelsResponse

// int64 total_limbo_balance = 1;
inline void PendingChannelsResponse::clear_total_limbo_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_limbo_balance_ = ::int64_t{0};
}
inline ::int64_t PendingChannelsResponse::total_limbo_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.total_limbo_balance)
  return _internal_total_limbo_balance();
}
inline void PendingChannelsResponse::set_total_limbo_balance(::int64_t value) {
  _internal_set_total_limbo_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.PendingChannelsResponse.total_limbo_balance)
}
inline ::int64_t PendingChannelsResponse::_internal_total_limbo_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_limbo_balance_;
}
inline void PendingChannelsResponse::_internal_set_total_limbo_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_limbo_balance_ = value;
}

// repeated .lnrpc.PendingChannelsResponse.PendingOpenChannel pending_open_channels = 2;
inline int PendingChannelsResponse::_internal_pending_open_channels_size() const {
  return _internal_pending_open_channels().size();
}
inline int PendingChannelsResponse::pending_open_channels_size() const {
  return _internal_pending_open_channels_size();
}
inline void PendingChannelsResponse::clear_pending_open_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_open_channels_.Clear();
}
inline ::lnrpc::PendingChannelsResponse_PendingOpenChannel* PendingChannelsResponse::mutable_pending_open_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.pending_open_channels)
  return _internal_mutable_pending_open_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>* PendingChannelsResponse::mutable_pending_open_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PendingChannelsResponse.pending_open_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_open_channels();
}
inline const ::lnrpc::PendingChannelsResponse_PendingOpenChannel& PendingChannelsResponse::pending_open_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.pending_open_channels)
  return _internal_pending_open_channels().Get(index);
}
inline ::lnrpc::PendingChannelsResponse_PendingOpenChannel* PendingChannelsResponse::add_pending_open_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PendingChannelsResponse_PendingOpenChannel* _add = _internal_mutable_pending_open_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PendingChannelsResponse.pending_open_channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>& PendingChannelsResponse::pending_open_channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PendingChannelsResponse.pending_open_channels)
  return _internal_pending_open_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>&
PendingChannelsResponse::_internal_pending_open_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_open_channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_PendingOpenChannel>*
PendingChannelsResponse::_internal_mutable_pending_open_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_open_channels_;
}

// repeated .lnrpc.PendingChannelsResponse.ClosedChannel pending_closing_channels = 3 [deprecated = true];
inline int PendingChannelsResponse::_internal_pending_closing_channels_size() const {
  return _internal_pending_closing_channels().size();
}
inline int PendingChannelsResponse::pending_closing_channels_size() const {
  return _internal_pending_closing_channels_size();
}
inline void PendingChannelsResponse::clear_pending_closing_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_closing_channels_.Clear();
}
inline ::lnrpc::PendingChannelsResponse_ClosedChannel* PendingChannelsResponse::mutable_pending_closing_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.pending_closing_channels)
  return _internal_mutable_pending_closing_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>* PendingChannelsResponse::mutable_pending_closing_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PendingChannelsResponse.pending_closing_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_closing_channels();
}
inline const ::lnrpc::PendingChannelsResponse_ClosedChannel& PendingChannelsResponse::pending_closing_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.pending_closing_channels)
  return _internal_pending_closing_channels().Get(index);
}
inline ::lnrpc::PendingChannelsResponse_ClosedChannel* PendingChannelsResponse::add_pending_closing_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PendingChannelsResponse_ClosedChannel* _add = _internal_mutable_pending_closing_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PendingChannelsResponse.pending_closing_channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>& PendingChannelsResponse::pending_closing_channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PendingChannelsResponse.pending_closing_channels)
  return _internal_pending_closing_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>&
PendingChannelsResponse::_internal_pending_closing_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_closing_channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ClosedChannel>*
PendingChannelsResponse::_internal_mutable_pending_closing_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_closing_channels_;
}

// repeated .lnrpc.PendingChannelsResponse.ForceClosedChannel pending_force_closing_channels = 4;
inline int PendingChannelsResponse::_internal_pending_force_closing_channels_size() const {
  return _internal_pending_force_closing_channels().size();
}
inline int PendingChannelsResponse::pending_force_closing_channels_size() const {
  return _internal_pending_force_closing_channels_size();
}
inline void PendingChannelsResponse::clear_pending_force_closing_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_force_closing_channels_.Clear();
}
inline ::lnrpc::PendingChannelsResponse_ForceClosedChannel* PendingChannelsResponse::mutable_pending_force_closing_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.pending_force_closing_channels)
  return _internal_mutable_pending_force_closing_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>* PendingChannelsResponse::mutable_pending_force_closing_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PendingChannelsResponse.pending_force_closing_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_force_closing_channels();
}
inline const ::lnrpc::PendingChannelsResponse_ForceClosedChannel& PendingChannelsResponse::pending_force_closing_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.pending_force_closing_channels)
  return _internal_pending_force_closing_channels().Get(index);
}
inline ::lnrpc::PendingChannelsResponse_ForceClosedChannel* PendingChannelsResponse::add_pending_force_closing_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PendingChannelsResponse_ForceClosedChannel* _add = _internal_mutable_pending_force_closing_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PendingChannelsResponse.pending_force_closing_channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>& PendingChannelsResponse::pending_force_closing_channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PendingChannelsResponse.pending_force_closing_channels)
  return _internal_pending_force_closing_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>&
PendingChannelsResponse::_internal_pending_force_closing_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_force_closing_channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_ForceClosedChannel>*
PendingChannelsResponse::_internal_mutable_pending_force_closing_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_force_closing_channels_;
}

// repeated .lnrpc.PendingChannelsResponse.WaitingCloseChannel waiting_close_channels = 5;
inline int PendingChannelsResponse::_internal_waiting_close_channels_size() const {
  return _internal_waiting_close_channels().size();
}
inline int PendingChannelsResponse::waiting_close_channels_size() const {
  return _internal_waiting_close_channels_size();
}
inline void PendingChannelsResponse::clear_waiting_close_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.waiting_close_channels_.Clear();
}
inline ::lnrpc::PendingChannelsResponse_WaitingCloseChannel* PendingChannelsResponse::mutable_waiting_close_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PendingChannelsResponse.waiting_close_channels)
  return _internal_mutable_waiting_close_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>* PendingChannelsResponse::mutable_waiting_close_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PendingChannelsResponse.waiting_close_channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_waiting_close_channels();
}
inline const ::lnrpc::PendingChannelsResponse_WaitingCloseChannel& PendingChannelsResponse::waiting_close_channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PendingChannelsResponse.waiting_close_channels)
  return _internal_waiting_close_channels().Get(index);
}
inline ::lnrpc::PendingChannelsResponse_WaitingCloseChannel* PendingChannelsResponse::add_waiting_close_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::PendingChannelsResponse_WaitingCloseChannel* _add = _internal_mutable_waiting_close_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PendingChannelsResponse.waiting_close_channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>& PendingChannelsResponse::waiting_close_channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PendingChannelsResponse.waiting_close_channels)
  return _internal_waiting_close_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>&
PendingChannelsResponse::_internal_waiting_close_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.waiting_close_channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::PendingChannelsResponse_WaitingCloseChannel>*
PendingChannelsResponse::_internal_mutable_waiting_close_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.waiting_close_channels_;
}

// -------------------------------------------------------------------

// ChannelEventSubscription

// -------------------------------------------------------------------

// ChannelEventUpdate

// .lnrpc.Channel open_channel = 1;
inline bool ChannelEventUpdate::has_open_channel() const {
  return channel_case() == kOpenChannel;
}
inline bool ChannelEventUpdate::_internal_has_open_channel() const {
  return channel_case() == kOpenChannel;
}
inline void ChannelEventUpdate::set_has_open_channel() {
  _impl_._oneof_case_[0] = kOpenChannel;
}
inline void ChannelEventUpdate::clear_open_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (channel_case() == kOpenChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.channel_.open_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.channel_.open_channel_);
    }
    clear_has_channel();
  }
}
inline ::lnrpc::Channel* ChannelEventUpdate::release_open_channel() {
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEventUpdate.open_channel)
  if (channel_case() == kOpenChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.open_channel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.channel_.open_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::Channel& ChannelEventUpdate::_internal_open_channel() const {
  return channel_case() == kOpenChannel ? *_impl_.channel_.open_channel_ : reinterpret_cast<::lnrpc::Channel&>(::lnrpc::_Channel_default_instance_);
}
inline const ::lnrpc::Channel& ChannelEventUpdate::open_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.open_channel)
  return _internal_open_channel();
}
inline ::lnrpc::Channel* ChannelEventUpdate::unsafe_arena_release_open_channel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.ChannelEventUpdate.open_channel)
  if (channel_case() == kOpenChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.open_channel_;
    _impl_.channel_.open_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChannelEventUpdate::unsafe_arena_set_allocated_open_channel(::lnrpc::Channel* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_channel();
  if (value) {
    set_has_open_channel();
    _impl_.channel_.open_channel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEventUpdate.open_channel)
}
inline ::lnrpc::Channel* ChannelEventUpdate::_internal_mutable_open_channel() {
  if (channel_case() != kOpenChannel) {
    clear_channel();
    set_has_open_channel();
    _impl_.channel_.open_channel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::Channel>(GetArena());
  }
  return _impl_.channel_.open_channel_;
}
inline ::lnrpc::Channel* ChannelEventUpdate::mutable_open_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::Channel* _msg = _internal_mutable_open_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEventUpdate.open_channel)
  return _msg;
}

// .lnrpc.ChannelCloseSummary closed_channel = 2;
inline bool ChannelEventUpdate::has_closed_channel() const {
  return channel_case() == kClosedChannel;
}
inline bool ChannelEventUpdate::_internal_has_closed_channel() const {
  return channel_case() == kClosedChannel;
}
inline void ChannelEventUpdate::set_has_closed_channel() {
  _impl_._oneof_case_[0] = kClosedChannel;
}
inline void ChannelEventUpdate::clear_closed_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (channel_case() == kClosedChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.channel_.closed_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.channel_.closed_channel_);
    }
    clear_has_channel();
  }
}
inline ::lnrpc::ChannelCloseSummary* ChannelEventUpdate::release_closed_channel() {
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEventUpdate.closed_channel)
  if (channel_case() == kClosedChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.closed_channel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.channel_.closed_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelCloseSummary& ChannelEventUpdate::_internal_closed_channel() const {
  return channel_case() == kClosedChannel ? *_impl_.channel_.closed_channel_ : reinterpret_cast<::lnrpc::ChannelCloseSummary&>(::lnrpc::_ChannelCloseSummary_default_instance_);
}
inline const ::lnrpc::ChannelCloseSummary& ChannelEventUpdate::closed_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.closed_channel)
  return _internal_closed_channel();
}
inline ::lnrpc::ChannelCloseSummary* ChannelEventUpdate::unsafe_arena_release_closed_channel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.ChannelEventUpdate.closed_channel)
  if (channel_case() == kClosedChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.closed_channel_;
    _impl_.channel_.closed_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChannelEventUpdate::unsafe_arena_set_allocated_closed_channel(::lnrpc::ChannelCloseSummary* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_channel();
  if (value) {
    set_has_closed_channel();
    _impl_.channel_.closed_channel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEventUpdate.closed_channel)
}
inline ::lnrpc::ChannelCloseSummary* ChannelEventUpdate::_internal_mutable_closed_channel() {
  if (channel_case() != kClosedChannel) {
    clear_channel();
    set_has_closed_channel();
    _impl_.channel_.closed_channel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelCloseSummary>(GetArena());
  }
  return _impl_.channel_.closed_channel_;
}
inline ::lnrpc::ChannelCloseSummary* ChannelEventUpdate::mutable_closed_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelCloseSummary* _msg = _internal_mutable_closed_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEventUpdate.closed_channel)
  return _msg;
}

// .lnrpc.ChannelPoint active_channel = 3;
inline bool ChannelEventUpdate::has_active_channel() const {
  return channel_case() == kActiveChannel;
}
inline bool ChannelEventUpdate::_internal_has_active_channel() const {
  return channel_case() == kActiveChannel;
}
inline void ChannelEventUpdate::set_has_active_channel() {
  _impl_._oneof_case_[0] = kActiveChannel;
}
inline void ChannelEventUpdate::clear_active_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (channel_case() == kActiveChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.channel_.active_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.channel_.active_channel_);
    }
    clear_has_channel();
  }
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::release_active_channel() {
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEventUpdate.active_channel)
  if (channel_case() == kActiveChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.active_channel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.channel_.active_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelPoint& ChannelEventUpdate::_internal_active_channel() const {
  return channel_case() == kActiveChannel ? *_impl_.channel_.active_channel_ : reinterpret_cast<::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChannelEventUpdate::active_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.active_channel)
  return _internal_active_channel();
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::unsafe_arena_release_active_channel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.ChannelEventUpdate.active_channel)
  if (channel_case() == kActiveChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.active_channel_;
    _impl_.channel_.active_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChannelEventUpdate::unsafe_arena_set_allocated_active_channel(::lnrpc::ChannelPoint* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_channel();
  if (value) {
    set_has_active_channel();
    _impl_.channel_.active_channel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEventUpdate.active_channel)
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::_internal_mutable_active_channel() {
  if (channel_case() != kActiveChannel) {
    clear_channel();
    set_has_active_channel();
    _impl_.channel_.active_channel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
  }
  return _impl_.channel_.active_channel_;
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::mutable_active_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_active_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEventUpdate.active_channel)
  return _msg;
}

// .lnrpc.ChannelPoint inactive_channel = 4;
inline bool ChannelEventUpdate::has_inactive_channel() const {
  return channel_case() == kInactiveChannel;
}
inline bool ChannelEventUpdate::_internal_has_inactive_channel() const {
  return channel_case() == kInactiveChannel;
}
inline void ChannelEventUpdate::set_has_inactive_channel() {
  _impl_._oneof_case_[0] = kInactiveChannel;
}
inline void ChannelEventUpdate::clear_inactive_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (channel_case() == kInactiveChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.channel_.inactive_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.channel_.inactive_channel_);
    }
    clear_has_channel();
  }
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::release_inactive_channel() {
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEventUpdate.inactive_channel)
  if (channel_case() == kInactiveChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.inactive_channel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.channel_.inactive_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelPoint& ChannelEventUpdate::_internal_inactive_channel() const {
  return channel_case() == kInactiveChannel ? *_impl_.channel_.inactive_channel_ : reinterpret_cast<::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChannelEventUpdate::inactive_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.inactive_channel)
  return _internal_inactive_channel();
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::unsafe_arena_release_inactive_channel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.ChannelEventUpdate.inactive_channel)
  if (channel_case() == kInactiveChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.inactive_channel_;
    _impl_.channel_.inactive_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChannelEventUpdate::unsafe_arena_set_allocated_inactive_channel(::lnrpc::ChannelPoint* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_channel();
  if (value) {
    set_has_inactive_channel();
    _impl_.channel_.inactive_channel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEventUpdate.inactive_channel)
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::_internal_mutable_inactive_channel() {
  if (channel_case() != kInactiveChannel) {
    clear_channel();
    set_has_inactive_channel();
    _impl_.channel_.inactive_channel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
  }
  return _impl_.channel_.inactive_channel_;
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::mutable_inactive_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_inactive_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEventUpdate.inactive_channel)
  return _msg;
}

// .lnrpc.PendingUpdate pending_open_channel = 6;
inline bool ChannelEventUpdate::has_pending_open_channel() const {
  return channel_case() == kPendingOpenChannel;
}
inline bool ChannelEventUpdate::_internal_has_pending_open_channel() const {
  return channel_case() == kPendingOpenChannel;
}
inline void ChannelEventUpdate::set_has_pending_open_channel() {
  _impl_._oneof_case_[0] = kPendingOpenChannel;
}
inline void ChannelEventUpdate::clear_pending_open_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (channel_case() == kPendingOpenChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.channel_.pending_open_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.channel_.pending_open_channel_);
    }
    clear_has_channel();
  }
}
inline ::lnrpc::PendingUpdate* ChannelEventUpdate::release_pending_open_channel() {
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEventUpdate.pending_open_channel)
  if (channel_case() == kPendingOpenChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.pending_open_channel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.channel_.pending_open_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::PendingUpdate& ChannelEventUpdate::_internal_pending_open_channel() const {
  return channel_case() == kPendingOpenChannel ? *_impl_.channel_.pending_open_channel_ : reinterpret_cast<::lnrpc::PendingUpdate&>(::lnrpc::_PendingUpdate_default_instance_);
}
inline const ::lnrpc::PendingUpdate& ChannelEventUpdate::pending_open_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.pending_open_channel)
  return _internal_pending_open_channel();
}
inline ::lnrpc::PendingUpdate* ChannelEventUpdate::unsafe_arena_release_pending_open_channel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.ChannelEventUpdate.pending_open_channel)
  if (channel_case() == kPendingOpenChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.pending_open_channel_;
    _impl_.channel_.pending_open_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChannelEventUpdate::unsafe_arena_set_allocated_pending_open_channel(::lnrpc::PendingUpdate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_channel();
  if (value) {
    set_has_pending_open_channel();
    _impl_.channel_.pending_open_channel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEventUpdate.pending_open_channel)
}
inline ::lnrpc::PendingUpdate* ChannelEventUpdate::_internal_mutable_pending_open_channel() {
  if (channel_case() != kPendingOpenChannel) {
    clear_channel();
    set_has_pending_open_channel();
    _impl_.channel_.pending_open_channel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::PendingUpdate>(GetArena());
  }
  return _impl_.channel_.pending_open_channel_;
}
inline ::lnrpc::PendingUpdate* ChannelEventUpdate::mutable_pending_open_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::PendingUpdate* _msg = _internal_mutable_pending_open_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEventUpdate.pending_open_channel)
  return _msg;
}

// .lnrpc.ChannelPoint fully_resolved_channel = 7;
inline bool ChannelEventUpdate::has_fully_resolved_channel() const {
  return channel_case() == kFullyResolvedChannel;
}
inline bool ChannelEventUpdate::_internal_has_fully_resolved_channel() const {
  return channel_case() == kFullyResolvedChannel;
}
inline void ChannelEventUpdate::set_has_fully_resolved_channel() {
  _impl_._oneof_case_[0] = kFullyResolvedChannel;
}
inline void ChannelEventUpdate::clear_fully_resolved_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (channel_case() == kFullyResolvedChannel) {
    if (GetArena() == nullptr) {
      delete _impl_.channel_.fully_resolved_channel_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.channel_.fully_resolved_channel_);
    }
    clear_has_channel();
  }
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::release_fully_resolved_channel() {
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEventUpdate.fully_resolved_channel)
  if (channel_case() == kFullyResolvedChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.fully_resolved_channel_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.channel_.fully_resolved_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelPoint& ChannelEventUpdate::_internal_fully_resolved_channel() const {
  return channel_case() == kFullyResolvedChannel ? *_impl_.channel_.fully_resolved_channel_ : reinterpret_cast<::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChannelEventUpdate::fully_resolved_channel() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.fully_resolved_channel)
  return _internal_fully_resolved_channel();
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::unsafe_arena_release_fully_resolved_channel() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.ChannelEventUpdate.fully_resolved_channel)
  if (channel_case() == kFullyResolvedChannel) {
    clear_has_channel();
    auto* temp = _impl_.channel_.fully_resolved_channel_;
    _impl_.channel_.fully_resolved_channel_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ChannelEventUpdate::unsafe_arena_set_allocated_fully_resolved_channel(::lnrpc::ChannelPoint* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_channel();
  if (value) {
    set_has_fully_resolved_channel();
    _impl_.channel_.fully_resolved_channel_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEventUpdate.fully_resolved_channel)
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::_internal_mutable_fully_resolved_channel() {
  if (channel_case() != kFullyResolvedChannel) {
    clear_channel();
    set_has_fully_resolved_channel();
    _impl_.channel_.fully_resolved_channel_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
  }
  return _impl_.channel_.fully_resolved_channel_;
}
inline ::lnrpc::ChannelPoint* ChannelEventUpdate::mutable_fully_resolved_channel() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_fully_resolved_channel();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEventUpdate.fully_resolved_channel)
  return _msg;
}

// .lnrpc.ChannelEventUpdate.UpdateType type = 5;
inline void ChannelEventUpdate::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::lnrpc::ChannelEventUpdate_UpdateType ChannelEventUpdate::type() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEventUpdate.type)
  return _internal_type();
}
inline void ChannelEventUpdate::set_type(::lnrpc::ChannelEventUpdate_UpdateType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEventUpdate.type)
}
inline ::lnrpc::ChannelEventUpdate_UpdateType ChannelEventUpdate::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::ChannelEventUpdate_UpdateType>(_impl_.type_);
}
inline void ChannelEventUpdate::_internal_set_type(::lnrpc::ChannelEventUpdate_UpdateType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

inline bool ChannelEventUpdate::has_channel() const {
  return channel_case() != CHANNEL_NOT_SET;
}
inline void ChannelEventUpdate::clear_has_channel() {
  _impl_._oneof_case_[0] = CHANNEL_NOT_SET;
}
inline ChannelEventUpdate::ChannelCase ChannelEventUpdate::channel_case() const {
  return ChannelEventUpdate::ChannelCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// WalletAccountBalance

// int64 confirmed_balance = 1;
inline void WalletAccountBalance::clear_confirmed_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirmed_balance_ = ::int64_t{0};
}
inline ::int64_t WalletAccountBalance::confirmed_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletAccountBalance.confirmed_balance)
  return _internal_confirmed_balance();
}
inline void WalletAccountBalance::set_confirmed_balance(::int64_t value) {
  _internal_set_confirmed_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletAccountBalance.confirmed_balance)
}
inline ::int64_t WalletAccountBalance::_internal_confirmed_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confirmed_balance_;
}
inline void WalletAccountBalance::_internal_set_confirmed_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirmed_balance_ = value;
}

// int64 unconfirmed_balance = 2;
inline void WalletAccountBalance::clear_unconfirmed_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unconfirmed_balance_ = ::int64_t{0};
}
inline ::int64_t WalletAccountBalance::unconfirmed_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletAccountBalance.unconfirmed_balance)
  return _internal_unconfirmed_balance();
}
inline void WalletAccountBalance::set_unconfirmed_balance(::int64_t value) {
  _internal_set_unconfirmed_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletAccountBalance.unconfirmed_balance)
}
inline ::int64_t WalletAccountBalance::_internal_unconfirmed_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unconfirmed_balance_;
}
inline void WalletAccountBalance::_internal_set_unconfirmed_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unconfirmed_balance_ = value;
}

// -------------------------------------------------------------------

// WalletBalanceRequest

// string account = 1;
inline void WalletBalanceRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& WalletBalanceRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WalletBalanceRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceRequest.account)
}
inline std::string* WalletBalanceRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:lnrpc.WalletBalanceRequest.account)
  return _s;
}
inline const std::string& WalletBalanceRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void WalletBalanceRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* WalletBalanceRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* WalletBalanceRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.WalletBalanceRequest.account)
  return _impl_.account_.Release();
}
inline void WalletBalanceRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.WalletBalanceRequest.account)
}

// int32 min_confs = 2;
inline void WalletBalanceRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t WalletBalanceRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceRequest.min_confs)
  return _internal_min_confs();
}
inline void WalletBalanceRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceRequest.min_confs)
}
inline ::int32_t WalletBalanceRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void WalletBalanceRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// WalletBalanceResponse

// int64 total_balance = 1;
inline void WalletBalanceResponse::clear_total_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_balance_ = ::int64_t{0};
}
inline ::int64_t WalletBalanceResponse::total_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceResponse.total_balance)
  return _internal_total_balance();
}
inline void WalletBalanceResponse::set_total_balance(::int64_t value) {
  _internal_set_total_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceResponse.total_balance)
}
inline ::int64_t WalletBalanceResponse::_internal_total_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_balance_;
}
inline void WalletBalanceResponse::_internal_set_total_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_balance_ = value;
}

// int64 confirmed_balance = 2;
inline void WalletBalanceResponse::clear_confirmed_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirmed_balance_ = ::int64_t{0};
}
inline ::int64_t WalletBalanceResponse::confirmed_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceResponse.confirmed_balance)
  return _internal_confirmed_balance();
}
inline void WalletBalanceResponse::set_confirmed_balance(::int64_t value) {
  _internal_set_confirmed_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceResponse.confirmed_balance)
}
inline ::int64_t WalletBalanceResponse::_internal_confirmed_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.confirmed_balance_;
}
inline void WalletBalanceResponse::_internal_set_confirmed_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.confirmed_balance_ = value;
}

// int64 unconfirmed_balance = 3;
inline void WalletBalanceResponse::clear_unconfirmed_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unconfirmed_balance_ = ::int64_t{0};
}
inline ::int64_t WalletBalanceResponse::unconfirmed_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceResponse.unconfirmed_balance)
  return _internal_unconfirmed_balance();
}
inline void WalletBalanceResponse::set_unconfirmed_balance(::int64_t value) {
  _internal_set_unconfirmed_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceResponse.unconfirmed_balance)
}
inline ::int64_t WalletBalanceResponse::_internal_unconfirmed_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unconfirmed_balance_;
}
inline void WalletBalanceResponse::_internal_set_unconfirmed_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unconfirmed_balance_ = value;
}

// int64 locked_balance = 5;
inline void WalletBalanceResponse::clear_locked_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locked_balance_ = ::int64_t{0};
}
inline ::int64_t WalletBalanceResponse::locked_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceResponse.locked_balance)
  return _internal_locked_balance();
}
inline void WalletBalanceResponse::set_locked_balance(::int64_t value) {
  _internal_set_locked_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceResponse.locked_balance)
}
inline ::int64_t WalletBalanceResponse::_internal_locked_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locked_balance_;
}
inline void WalletBalanceResponse::_internal_set_locked_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locked_balance_ = value;
}

// int64 reserved_balance_anchor_chan = 6;
inline void WalletBalanceResponse::clear_reserved_balance_anchor_chan() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserved_balance_anchor_chan_ = ::int64_t{0};
}
inline ::int64_t WalletBalanceResponse::reserved_balance_anchor_chan() const {
  // @@protoc_insertion_point(field_get:lnrpc.WalletBalanceResponse.reserved_balance_anchor_chan)
  return _internal_reserved_balance_anchor_chan();
}
inline void WalletBalanceResponse::set_reserved_balance_anchor_chan(::int64_t value) {
  _internal_set_reserved_balance_anchor_chan(value);
  // @@protoc_insertion_point(field_set:lnrpc.WalletBalanceResponse.reserved_balance_anchor_chan)
}
inline ::int64_t WalletBalanceResponse::_internal_reserved_balance_anchor_chan() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reserved_balance_anchor_chan_;
}
inline void WalletBalanceResponse::_internal_set_reserved_balance_anchor_chan(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reserved_balance_anchor_chan_ = value;
}

// map<string, .lnrpc.WalletAccountBalance> account_balance = 4;
inline int WalletBalanceResponse::_internal_account_balance_size() const {
  return _internal_account_balance().size();
}
inline int WalletBalanceResponse::account_balance_size() const {
  return _internal_account_balance_size();
}
inline void WalletBalanceResponse::clear_account_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_balance_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>& WalletBalanceResponse::_internal_account_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_balance_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>& WalletBalanceResponse::account_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.WalletBalanceResponse.account_balance)
  return _internal_account_balance();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>* WalletBalanceResponse::_internal_mutable_account_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_balance_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::WalletAccountBalance>* WalletBalanceResponse::mutable_account_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.WalletBalanceResponse.account_balance)
  return _internal_mutable_account_balance();
}

// -------------------------------------------------------------------

// Amount

// uint64 sat = 1;
inline void Amount::clear_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_ = ::uint64_t{0u};
}
inline ::uint64_t Amount::sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Amount.sat)
  return _internal_sat();
}
inline void Amount::set_sat(::uint64_t value) {
  _internal_set_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Amount.sat)
}
inline ::uint64_t Amount::_internal_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_;
}
inline void Amount::_internal_set_sat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_ = value;
}

// uint64 msat = 2;
inline void Amount::clear_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msat_ = ::uint64_t{0u};
}
inline ::uint64_t Amount::msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Amount.msat)
  return _internal_msat();
}
inline void Amount::set_msat(::uint64_t value) {
  _internal_set_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Amount.msat)
}
inline ::uint64_t Amount::_internal_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msat_;
}
inline void Amount::_internal_set_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msat_ = value;
}

// -------------------------------------------------------------------

// ChannelBalanceRequest

// -------------------------------------------------------------------

// ChannelBalanceResponse

// int64 balance = 1 [deprecated = true];
inline void ChannelBalanceResponse::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = ::int64_t{0};
}
inline ::int64_t ChannelBalanceResponse::balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.balance)
  return _internal_balance();
}
inline void ChannelBalanceResponse::set_balance(::int64_t value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelBalanceResponse.balance)
}
inline ::int64_t ChannelBalanceResponse::_internal_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balance_;
}
inline void ChannelBalanceResponse::_internal_set_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = value;
}

// int64 pending_open_balance = 2 [deprecated = true];
inline void ChannelBalanceResponse::clear_pending_open_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_open_balance_ = ::int64_t{0};
}
inline ::int64_t ChannelBalanceResponse::pending_open_balance() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.pending_open_balance)
  return _internal_pending_open_balance();
}
inline void ChannelBalanceResponse::set_pending_open_balance(::int64_t value) {
  _internal_set_pending_open_balance(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelBalanceResponse.pending_open_balance)
}
inline ::int64_t ChannelBalanceResponse::_internal_pending_open_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_open_balance_;
}
inline void ChannelBalanceResponse::_internal_set_pending_open_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_open_balance_ = value;
}

// .lnrpc.Amount local_balance = 3;
inline bool ChannelBalanceResponse::has_local_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.local_balance_ != nullptr);
  return value;
}
inline void ChannelBalanceResponse::clear_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_balance_ != nullptr) _impl_.local_balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::_internal_local_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Amount* p = _impl_.local_balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Amount&>(::lnrpc::_Amount_default_instance_);
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::local_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.local_balance)
  return _internal_local_balance();
}
inline void ChannelBalanceResponse::unsafe_arena_set_allocated_local_balance(::lnrpc::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.local_balance_);
  }
  _impl_.local_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBalanceResponse.local_balance)
}
inline ::lnrpc::Amount* ChannelBalanceResponse::release_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Amount* released = _impl_.local_balance_;
  _impl_.local_balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::unsafe_arena_release_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.local_balance)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Amount* temp = _impl_.local_balance_;
  _impl_.local_balance_ = nullptr;
  return temp;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::_internal_mutable_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.local_balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Amount>(GetArena());
    _impl_.local_balance_ = reinterpret_cast<::lnrpc::Amount*>(p);
  }
  return _impl_.local_balance_;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::mutable_local_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::Amount* _msg = _internal_mutable_local_balance();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.local_balance)
  return _msg;
}
inline void ChannelBalanceResponse::set_allocated_local_balance(::lnrpc::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.local_balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.local_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.local_balance)
}

// .lnrpc.Amount remote_balance = 4;
inline bool ChannelBalanceResponse::has_remote_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.remote_balance_ != nullptr);
  return value;
}
inline void ChannelBalanceResponse::clear_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_balance_ != nullptr) _impl_.remote_balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::_internal_remote_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Amount* p = _impl_.remote_balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Amount&>(::lnrpc::_Amount_default_instance_);
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::remote_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.remote_balance)
  return _internal_remote_balance();
}
inline void ChannelBalanceResponse::unsafe_arena_set_allocated_remote_balance(::lnrpc::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.remote_balance_);
  }
  _impl_.remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBalanceResponse.remote_balance)
}
inline ::lnrpc::Amount* ChannelBalanceResponse::release_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::Amount* released = _impl_.remote_balance_;
  _impl_.remote_balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::unsafe_arena_release_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.remote_balance)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::Amount* temp = _impl_.remote_balance_;
  _impl_.remote_balance_ = nullptr;
  return temp;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::_internal_mutable_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.remote_balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Amount>(GetArena());
    _impl_.remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(p);
  }
  return _impl_.remote_balance_;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::mutable_remote_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::Amount* _msg = _internal_mutable_remote_balance();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.remote_balance)
  return _msg;
}
inline void ChannelBalanceResponse::set_allocated_remote_balance(::lnrpc::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.remote_balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.remote_balance)
}

// .lnrpc.Amount unsettled_local_balance = 5;
inline bool ChannelBalanceResponse::has_unsettled_local_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unsettled_local_balance_ != nullptr);
  return value;
}
inline void ChannelBalanceResponse::clear_unsettled_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unsettled_local_balance_ != nullptr) _impl_.unsettled_local_balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::_internal_unsettled_local_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Amount* p = _impl_.unsettled_local_balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Amount&>(::lnrpc::_Amount_default_instance_);
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::unsettled_local_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.unsettled_local_balance)
  return _internal_unsettled_local_balance();
}
inline void ChannelBalanceResponse::unsafe_arena_set_allocated_unsettled_local_balance(::lnrpc::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unsettled_local_balance_);
  }
  _impl_.unsettled_local_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBalanceResponse.unsettled_local_balance)
}
inline ::lnrpc::Amount* ChannelBalanceResponse::release_unsettled_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lnrpc::Amount* released = _impl_.unsettled_local_balance_;
  _impl_.unsettled_local_balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::unsafe_arena_release_unsettled_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.unsettled_local_balance)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::lnrpc::Amount* temp = _impl_.unsettled_local_balance_;
  _impl_.unsettled_local_balance_ = nullptr;
  return temp;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::_internal_mutable_unsettled_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unsettled_local_balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Amount>(GetArena());
    _impl_.unsettled_local_balance_ = reinterpret_cast<::lnrpc::Amount*>(p);
  }
  return _impl_.unsettled_local_balance_;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::mutable_unsettled_local_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::lnrpc::Amount* _msg = _internal_mutable_unsettled_local_balance();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.unsettled_local_balance)
  return _msg;
}
inline void ChannelBalanceResponse::set_allocated_unsettled_local_balance(::lnrpc::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.unsettled_local_balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.unsettled_local_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.unsettled_local_balance)
}

// .lnrpc.Amount unsettled_remote_balance = 6;
inline bool ChannelBalanceResponse::has_unsettled_remote_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.unsettled_remote_balance_ != nullptr);
  return value;
}
inline void ChannelBalanceResponse::clear_unsettled_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unsettled_remote_balance_ != nullptr) _impl_.unsettled_remote_balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::_internal_unsettled_remote_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Amount* p = _impl_.unsettled_remote_balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Amount&>(::lnrpc::_Amount_default_instance_);
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::unsettled_remote_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.unsettled_remote_balance)
  return _internal_unsettled_remote_balance();
}
inline void ChannelBalanceResponse::unsafe_arena_set_allocated_unsettled_remote_balance(::lnrpc::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.unsettled_remote_balance_);
  }
  _impl_.unsettled_remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBalanceResponse.unsettled_remote_balance)
}
inline ::lnrpc::Amount* ChannelBalanceResponse::release_unsettled_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lnrpc::Amount* released = _impl_.unsettled_remote_balance_;
  _impl_.unsettled_remote_balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::unsafe_arena_release_unsettled_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.unsettled_remote_balance)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::lnrpc::Amount* temp = _impl_.unsettled_remote_balance_;
  _impl_.unsettled_remote_balance_ = nullptr;
  return temp;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::_internal_mutable_unsettled_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.unsettled_remote_balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Amount>(GetArena());
    _impl_.unsettled_remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(p);
  }
  return _impl_.unsettled_remote_balance_;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::mutable_unsettled_remote_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000008u;
  ::lnrpc::Amount* _msg = _internal_mutable_unsettled_remote_balance();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.unsettled_remote_balance)
  return _msg;
}
inline void ChannelBalanceResponse::set_allocated_unsettled_remote_balance(::lnrpc::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.unsettled_remote_balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.unsettled_remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.unsettled_remote_balance)
}

// .lnrpc.Amount pending_open_local_balance = 7;
inline bool ChannelBalanceResponse::has_pending_open_local_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pending_open_local_balance_ != nullptr);
  return value;
}
inline void ChannelBalanceResponse::clear_pending_open_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pending_open_local_balance_ != nullptr) _impl_.pending_open_local_balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::_internal_pending_open_local_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Amount* p = _impl_.pending_open_local_balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Amount&>(::lnrpc::_Amount_default_instance_);
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::pending_open_local_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.pending_open_local_balance)
  return _internal_pending_open_local_balance();
}
inline void ChannelBalanceResponse::unsafe_arena_set_allocated_pending_open_local_balance(::lnrpc::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pending_open_local_balance_);
  }
  _impl_.pending_open_local_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBalanceResponse.pending_open_local_balance)
}
inline ::lnrpc::Amount* ChannelBalanceResponse::release_pending_open_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::lnrpc::Amount* released = _impl_.pending_open_local_balance_;
  _impl_.pending_open_local_balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::unsafe_arena_release_pending_open_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.pending_open_local_balance)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::lnrpc::Amount* temp = _impl_.pending_open_local_balance_;
  _impl_.pending_open_local_balance_ = nullptr;
  return temp;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::_internal_mutable_pending_open_local_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pending_open_local_balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Amount>(GetArena());
    _impl_.pending_open_local_balance_ = reinterpret_cast<::lnrpc::Amount*>(p);
  }
  return _impl_.pending_open_local_balance_;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::mutable_pending_open_local_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000010u;
  ::lnrpc::Amount* _msg = _internal_mutable_pending_open_local_balance();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.pending_open_local_balance)
  return _msg;
}
inline void ChannelBalanceResponse::set_allocated_pending_open_local_balance(::lnrpc::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pending_open_local_balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.pending_open_local_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.pending_open_local_balance)
}

// .lnrpc.Amount pending_open_remote_balance = 8;
inline bool ChannelBalanceResponse::has_pending_open_remote_balance() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pending_open_remote_balance_ != nullptr);
  return value;
}
inline void ChannelBalanceResponse::clear_pending_open_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pending_open_remote_balance_ != nullptr) _impl_.pending_open_remote_balance_->Clear();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::_internal_pending_open_remote_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Amount* p = _impl_.pending_open_remote_balance_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Amount&>(::lnrpc::_Amount_default_instance_);
}
inline const ::lnrpc::Amount& ChannelBalanceResponse::pending_open_remote_balance() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.pending_open_remote_balance)
  return _internal_pending_open_remote_balance();
}
inline void ChannelBalanceResponse::unsafe_arena_set_allocated_pending_open_remote_balance(::lnrpc::Amount* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pending_open_remote_balance_);
  }
  _impl_.pending_open_remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBalanceResponse.pending_open_remote_balance)
}
inline ::lnrpc::Amount* ChannelBalanceResponse::release_pending_open_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::lnrpc::Amount* released = _impl_.pending_open_remote_balance_;
  _impl_.pending_open_remote_balance_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::unsafe_arena_release_pending_open_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.pending_open_remote_balance)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::lnrpc::Amount* temp = _impl_.pending_open_remote_balance_;
  _impl_.pending_open_remote_balance_ = nullptr;
  return temp;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::_internal_mutable_pending_open_remote_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pending_open_remote_balance_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Amount>(GetArena());
    _impl_.pending_open_remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(p);
  }
  return _impl_.pending_open_remote_balance_;
}
inline ::lnrpc::Amount* ChannelBalanceResponse::mutable_pending_open_remote_balance() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000020u;
  ::lnrpc::Amount* _msg = _internal_mutable_pending_open_remote_balance();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.pending_open_remote_balance)
  return _msg;
}
inline void ChannelBalanceResponse::set_allocated_pending_open_remote_balance(::lnrpc::Amount* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pending_open_remote_balance_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.pending_open_remote_balance_ = reinterpret_cast<::lnrpc::Amount*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.pending_open_remote_balance)
}

// bytes custom_channel_data = 9;
inline void ChannelBalanceResponse::clear_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.ClearToEmpty();
}
inline const std::string& ChannelBalanceResponse::custom_channel_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBalanceResponse.custom_channel_data)
  return _internal_custom_channel_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelBalanceResponse::set_custom_channel_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelBalanceResponse.custom_channel_data)
}
inline std::string* ChannelBalanceResponse::mutable_custom_channel_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_channel_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBalanceResponse.custom_channel_data)
  return _s;
}
inline const std::string& ChannelBalanceResponse::_internal_custom_channel_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_channel_data_.Get();
}
inline void ChannelBalanceResponse::_internal_set_custom_channel_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.Set(value, GetArena());
}
inline std::string* ChannelBalanceResponse::_internal_mutable_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_channel_data_.Mutable( GetArena());
}
inline std::string* ChannelBalanceResponse::release_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBalanceResponse.custom_channel_data)
  return _impl_.custom_channel_data_.Release();
}
inline void ChannelBalanceResponse::set_allocated_custom_channel_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_channel_data_.IsDefault()) {
          _impl_.custom_channel_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBalanceResponse.custom_channel_data)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QueryRoutesRequest

// string pub_key = 1;
inline void QueryRoutesRequest::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& QueryRoutesRequest::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRoutesRequest::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.pub_key)
}
inline std::string* QueryRoutesRequest::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.pub_key)
  return _s;
}
inline const std::string& QueryRoutesRequest::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void QueryRoutesRequest::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* QueryRoutesRequest::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* QueryRoutesRequest::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.QueryRoutesRequest.pub_key)
  return _impl_.pub_key_.Release();
}
inline void QueryRoutesRequest::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.QueryRoutesRequest.pub_key)
}

// int64 amt = 2;
inline void QueryRoutesRequest::clear_amt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_ = ::int64_t{0};
}
inline ::int64_t QueryRoutesRequest::amt() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.amt)
  return _internal_amt();
}
inline void QueryRoutesRequest::set_amt(::int64_t value) {
  _internal_set_amt(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.amt)
}
inline ::int64_t QueryRoutesRequest::_internal_amt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_;
}
inline void QueryRoutesRequest::_internal_set_amt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_ = value;
}

// int64 amt_msat = 12;
inline void QueryRoutesRequest::clear_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_msat_ = ::int64_t{0};
}
inline ::int64_t QueryRoutesRequest::amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.amt_msat)
  return _internal_amt_msat();
}
inline void QueryRoutesRequest::set_amt_msat(::int64_t value) {
  _internal_set_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.amt_msat)
}
inline ::int64_t QueryRoutesRequest::_internal_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_msat_;
}
inline void QueryRoutesRequest::_internal_set_amt_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_msat_ = value;
}

// int32 final_cltv_delta = 4;
inline void QueryRoutesRequest::clear_final_cltv_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_cltv_delta_ = 0;
}
inline ::int32_t QueryRoutesRequest::final_cltv_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.final_cltv_delta)
  return _internal_final_cltv_delta();
}
inline void QueryRoutesRequest::set_final_cltv_delta(::int32_t value) {
  _internal_set_final_cltv_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.final_cltv_delta)
}
inline ::int32_t QueryRoutesRequest::_internal_final_cltv_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.final_cltv_delta_;
}
inline void QueryRoutesRequest::_internal_set_final_cltv_delta(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.final_cltv_delta_ = value;
}

// .lnrpc.FeeLimit fee_limit = 5;
inline bool QueryRoutesRequest::has_fee_limit() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.fee_limit_ != nullptr);
  return value;
}
inline void QueryRoutesRequest::clear_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fee_limit_ != nullptr) _impl_.fee_limit_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::FeeLimit& QueryRoutesRequest::_internal_fee_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::FeeLimit* p = _impl_.fee_limit_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::FeeLimit&>(::lnrpc::_FeeLimit_default_instance_);
}
inline const ::lnrpc::FeeLimit& QueryRoutesRequest::fee_limit() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.fee_limit)
  return _internal_fee_limit();
}
inline void QueryRoutesRequest::unsafe_arena_set_allocated_fee_limit(::lnrpc::FeeLimit* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.fee_limit_);
  }
  _impl_.fee_limit_ = reinterpret_cast<::lnrpc::FeeLimit*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.QueryRoutesRequest.fee_limit)
}
inline ::lnrpc::FeeLimit* QueryRoutesRequest::release_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::FeeLimit* released = _impl_.fee_limit_;
  _impl_.fee_limit_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::FeeLimit* QueryRoutesRequest::unsafe_arena_release_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.QueryRoutesRequest.fee_limit)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::FeeLimit* temp = _impl_.fee_limit_;
  _impl_.fee_limit_ = nullptr;
  return temp;
}
inline ::lnrpc::FeeLimit* QueryRoutesRequest::_internal_mutable_fee_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.fee_limit_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::FeeLimit>(GetArena());
    _impl_.fee_limit_ = reinterpret_cast<::lnrpc::FeeLimit*>(p);
  }
  return _impl_.fee_limit_;
}
inline ::lnrpc::FeeLimit* QueryRoutesRequest::mutable_fee_limit() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::FeeLimit* _msg = _internal_mutable_fee_limit();
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.fee_limit)
  return _msg;
}
inline void QueryRoutesRequest::set_allocated_fee_limit(::lnrpc::FeeLimit* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.fee_limit_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.fee_limit_ = reinterpret_cast<::lnrpc::FeeLimit*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.QueryRoutesRequest.fee_limit)
}

// repeated bytes ignored_nodes = 6;
inline int QueryRoutesRequest::_internal_ignored_nodes_size() const {
  return _internal_ignored_nodes().size();
}
inline int QueryRoutesRequest::ignored_nodes_size() const {
  return _internal_ignored_nodes_size();
}
inline void QueryRoutesRequest::clear_ignored_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignored_nodes_.Clear();
}
inline std::string* QueryRoutesRequest::add_ignored_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_ignored_nodes()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.QueryRoutesRequest.ignored_nodes)
  return _s;
}
inline const std::string& QueryRoutesRequest::ignored_nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.ignored_nodes)
  return _internal_ignored_nodes().Get(index);
}
inline std::string* QueryRoutesRequest::mutable_ignored_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.ignored_nodes)
  return _internal_mutable_ignored_nodes()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void QueryRoutesRequest::set_ignored_nodes(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_ignored_nodes()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.ignored_nodes)
}
template <typename Arg_, typename... Args_>
inline void QueryRoutesRequest::add_ignored_nodes(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_ignored_nodes(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesRequest.ignored_nodes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryRoutesRequest::ignored_nodes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesRequest.ignored_nodes)
  return _internal_ignored_nodes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryRoutesRequest::mutable_ignored_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesRequest.ignored_nodes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ignored_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
QueryRoutesRequest::_internal_ignored_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignored_nodes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
QueryRoutesRequest::_internal_mutable_ignored_nodes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ignored_nodes_;
}

// repeated .lnrpc.EdgeLocator ignored_edges = 7 [deprecated = true];
inline int QueryRoutesRequest::_internal_ignored_edges_size() const {
  return _internal_ignored_edges().size();
}
inline int QueryRoutesRequest::ignored_edges_size() const {
  return _internal_ignored_edges_size();
}
inline void QueryRoutesRequest::clear_ignored_edges() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignored_edges_.Clear();
}
inline ::lnrpc::EdgeLocator* QueryRoutesRequest::mutable_ignored_edges(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.ignored_edges)
  return _internal_mutable_ignored_edges()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>* QueryRoutesRequest::mutable_ignored_edges()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesRequest.ignored_edges)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ignored_edges();
}
inline const ::lnrpc::EdgeLocator& QueryRoutesRequest::ignored_edges(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.ignored_edges)
  return _internal_ignored_edges().Get(index);
}
inline ::lnrpc::EdgeLocator* QueryRoutesRequest::add_ignored_edges() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::EdgeLocator* _add = _internal_mutable_ignored_edges()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesRequest.ignored_edges)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>& QueryRoutesRequest::ignored_edges() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesRequest.ignored_edges)
  return _internal_ignored_edges();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>&
QueryRoutesRequest::_internal_ignored_edges() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignored_edges_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::EdgeLocator>*
QueryRoutesRequest::_internal_mutable_ignored_edges() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ignored_edges_;
}

// string source_pub_key = 8;
inline void QueryRoutesRequest::clear_source_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_pub_key_.ClearToEmpty();
}
inline const std::string& QueryRoutesRequest::source_pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.source_pub_key)
  return _internal_source_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRoutesRequest::set_source_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.source_pub_key)
}
inline std::string* QueryRoutesRequest::mutable_source_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.source_pub_key)
  return _s;
}
inline const std::string& QueryRoutesRequest::_internal_source_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_pub_key_.Get();
}
inline void QueryRoutesRequest::_internal_set_source_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_pub_key_.Set(value, GetArena());
}
inline std::string* QueryRoutesRequest::_internal_mutable_source_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_pub_key_.Mutable( GetArena());
}
inline std::string* QueryRoutesRequest::release_source_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.QueryRoutesRequest.source_pub_key)
  return _impl_.source_pub_key_.Release();
}
inline void QueryRoutesRequest::set_allocated_source_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_pub_key_.IsDefault()) {
          _impl_.source_pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.QueryRoutesRequest.source_pub_key)
}

// bool use_mission_control = 9;
inline void QueryRoutesRequest::clear_use_mission_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_mission_control_ = false;
}
inline bool QueryRoutesRequest::use_mission_control() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.use_mission_control)
  return _internal_use_mission_control();
}
inline void QueryRoutesRequest::set_use_mission_control(bool value) {
  _internal_set_use_mission_control(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.use_mission_control)
}
inline bool QueryRoutesRequest::_internal_use_mission_control() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_mission_control_;
}
inline void QueryRoutesRequest::_internal_set_use_mission_control(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_mission_control_ = value;
}

// repeated .lnrpc.NodePair ignored_pairs = 10;
inline int QueryRoutesRequest::_internal_ignored_pairs_size() const {
  return _internal_ignored_pairs().size();
}
inline int QueryRoutesRequest::ignored_pairs_size() const {
  return _internal_ignored_pairs_size();
}
inline void QueryRoutesRequest::clear_ignored_pairs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ignored_pairs_.Clear();
}
inline ::lnrpc::NodePair* QueryRoutesRequest::mutable_ignored_pairs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.ignored_pairs)
  return _internal_mutable_ignored_pairs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>* QueryRoutesRequest::mutable_ignored_pairs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesRequest.ignored_pairs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ignored_pairs();
}
inline const ::lnrpc::NodePair& QueryRoutesRequest::ignored_pairs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.ignored_pairs)
  return _internal_ignored_pairs().Get(index);
}
inline ::lnrpc::NodePair* QueryRoutesRequest::add_ignored_pairs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::NodePair* _add = _internal_mutable_ignored_pairs()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesRequest.ignored_pairs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>& QueryRoutesRequest::ignored_pairs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesRequest.ignored_pairs)
  return _internal_ignored_pairs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>&
QueryRoutesRequest::_internal_ignored_pairs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ignored_pairs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodePair>*
QueryRoutesRequest::_internal_mutable_ignored_pairs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ignored_pairs_;
}

// uint32 cltv_limit = 11;
inline void QueryRoutesRequest::clear_cltv_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_limit_ = 0u;
}
inline ::uint32_t QueryRoutesRequest::cltv_limit() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.cltv_limit)
  return _internal_cltv_limit();
}
inline void QueryRoutesRequest::set_cltv_limit(::uint32_t value) {
  _internal_set_cltv_limit(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.cltv_limit)
}
inline ::uint32_t QueryRoutesRequest::_internal_cltv_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cltv_limit_;
}
inline void QueryRoutesRequest::_internal_set_cltv_limit(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_limit_ = value;
}

// map<uint64, bytes> dest_custom_records = 13;
inline int QueryRoutesRequest::_internal_dest_custom_records_size() const {
  return _internal_dest_custom_records().size();
}
inline int QueryRoutesRequest::dest_custom_records_size() const {
  return _internal_dest_custom_records_size();
}
inline void QueryRoutesRequest::clear_dest_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& QueryRoutesRequest::_internal_dest_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& QueryRoutesRequest::dest_custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.QueryRoutesRequest.dest_custom_records)
  return _internal_dest_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* QueryRoutesRequest::_internal_mutable_dest_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dest_custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* QueryRoutesRequest::mutable_dest_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.QueryRoutesRequest.dest_custom_records)
  return _internal_mutable_dest_custom_records();
}

// uint64 outgoing_chan_id = 14 [jstype = JS_STRING];
inline void QueryRoutesRequest::clear_outgoing_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outgoing_chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t QueryRoutesRequest::outgoing_chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.outgoing_chan_id)
  return _internal_outgoing_chan_id();
}
inline void QueryRoutesRequest::set_outgoing_chan_id(::uint64_t value) {
  _internal_set_outgoing_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.outgoing_chan_id)
}
inline ::uint64_t QueryRoutesRequest::_internal_outgoing_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outgoing_chan_id_;
}
inline void QueryRoutesRequest::_internal_set_outgoing_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outgoing_chan_id_ = value;
}

// bytes last_hop_pubkey = 15;
inline void QueryRoutesRequest::clear_last_hop_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.ClearToEmpty();
}
inline const std::string& QueryRoutesRequest::last_hop_pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.last_hop_pubkey)
  return _internal_last_hop_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void QueryRoutesRequest::set_last_hop_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.last_hop_pubkey)
}
inline std::string* QueryRoutesRequest::mutable_last_hop_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_hop_pubkey();
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.last_hop_pubkey)
  return _s;
}
inline const std::string& QueryRoutesRequest::_internal_last_hop_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_hop_pubkey_.Get();
}
inline void QueryRoutesRequest::_internal_set_last_hop_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.Set(value, GetArena());
}
inline std::string* QueryRoutesRequest::_internal_mutable_last_hop_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.last_hop_pubkey_.Mutable( GetArena());
}
inline std::string* QueryRoutesRequest::release_last_hop_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.QueryRoutesRequest.last_hop_pubkey)
  return _impl_.last_hop_pubkey_.Release();
}
inline void QueryRoutesRequest::set_allocated_last_hop_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_hop_pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.last_hop_pubkey_.IsDefault()) {
          _impl_.last_hop_pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.QueryRoutesRequest.last_hop_pubkey)
}

// repeated .lnrpc.RouteHint route_hints = 16;
inline int QueryRoutesRequest::_internal_route_hints_size() const {
  return _internal_route_hints().size();
}
inline int QueryRoutesRequest::route_hints_size() const {
  return _internal_route_hints_size();
}
inline void QueryRoutesRequest::clear_route_hints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.route_hints_.Clear();
}
inline ::lnrpc::RouteHint* QueryRoutesRequest::mutable_route_hints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.route_hints)
  return _internal_mutable_route_hints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* QueryRoutesRequest::mutable_route_hints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesRequest.route_hints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_route_hints();
}
inline const ::lnrpc::RouteHint& QueryRoutesRequest::route_hints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.route_hints)
  return _internal_route_hints().Get(index);
}
inline ::lnrpc::RouteHint* QueryRoutesRequest::add_route_hints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::RouteHint* _add = _internal_mutable_route_hints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesRequest.route_hints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& QueryRoutesRequest::route_hints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesRequest.route_hints)
  return _internal_route_hints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>&
QueryRoutesRequest::_internal_route_hints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.route_hints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>*
QueryRoutesRequest::_internal_mutable_route_hints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.route_hints_;
}

// repeated .lnrpc.BlindedPaymentPath blinded_payment_paths = 19;
inline int QueryRoutesRequest::_internal_blinded_payment_paths_size() const {
  return _internal_blinded_payment_paths().size();
}
inline int QueryRoutesRequest::blinded_payment_paths_size() const {
  return _internal_blinded_payment_paths_size();
}
inline void QueryRoutesRequest::clear_blinded_payment_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_payment_paths_.Clear();
}
inline ::lnrpc::BlindedPaymentPath* QueryRoutesRequest::mutable_blinded_payment_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesRequest.blinded_payment_paths)
  return _internal_mutable_blinded_payment_paths()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>* QueryRoutesRequest::mutable_blinded_payment_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesRequest.blinded_payment_paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blinded_payment_paths();
}
inline const ::lnrpc::BlindedPaymentPath& QueryRoutesRequest::blinded_payment_paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.blinded_payment_paths)
  return _internal_blinded_payment_paths().Get(index);
}
inline ::lnrpc::BlindedPaymentPath* QueryRoutesRequest::add_blinded_payment_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::BlindedPaymentPath* _add = _internal_mutable_blinded_payment_paths()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesRequest.blinded_payment_paths)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>& QueryRoutesRequest::blinded_payment_paths() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesRequest.blinded_payment_paths)
  return _internal_blinded_payment_paths();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>&
QueryRoutesRequest::_internal_blinded_payment_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blinded_payment_paths_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>*
QueryRoutesRequest::_internal_mutable_blinded_payment_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blinded_payment_paths_;
}

// repeated .lnrpc.FeatureBit dest_features = 17;
inline int QueryRoutesRequest::_internal_dest_features_size() const {
  return _internal_dest_features().size();
}
inline int QueryRoutesRequest::dest_features_size() const {
  return _internal_dest_features_size();
}
inline void QueryRoutesRequest::clear_dest_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dest_features_.Clear();
}
inline ::lnrpc::FeatureBit QueryRoutesRequest::dest_features(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.dest_features)
  return static_cast<::lnrpc::FeatureBit>(_internal_dest_features().Get(index));
}
inline void QueryRoutesRequest::set_dest_features(int index, ::lnrpc::FeatureBit value) {
  _internal_mutable_dest_features()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.dest_features)
}
inline void QueryRoutesRequest::add_dest_features(::lnrpc::FeatureBit value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_dest_features()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesRequest.dest_features)
}
inline const ::google::protobuf::RepeatedField<int>& QueryRoutesRequest::dest_features() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesRequest.dest_features)
  return _internal_dest_features();
}
inline ::google::protobuf::RepeatedField<int>* QueryRoutesRequest::mutable_dest_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesRequest.dest_features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dest_features();
}
inline const ::google::protobuf::RepeatedField<int>& QueryRoutesRequest::_internal_dest_features()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dest_features_;
}
inline ::google::protobuf::RepeatedField<int>* QueryRoutesRequest::_internal_mutable_dest_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dest_features_;
}

// double time_pref = 18;
inline void QueryRoutesRequest::clear_time_pref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_pref_ = 0;
}
inline double QueryRoutesRequest::time_pref() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesRequest.time_pref)
  return _internal_time_pref();
}
inline void QueryRoutesRequest::set_time_pref(double value) {
  _internal_set_time_pref(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesRequest.time_pref)
}
inline double QueryRoutesRequest::_internal_time_pref() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_pref_;
}
inline void QueryRoutesRequest::_internal_set_time_pref(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_pref_ = value;
}

// -------------------------------------------------------------------

// NodePair

// bytes from = 1;
inline void NodePair::clear_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_.ClearToEmpty();
}
inline const std::string& NodePair::from() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodePair.from)
  return _internal_from();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodePair::set_from(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodePair.from)
}
inline std::string* NodePair::mutable_from() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_from();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodePair.from)
  return _s;
}
inline const std::string& NodePair::_internal_from() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.from_.Get();
}
inline void NodePair::_internal_set_from(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_.Set(value, GetArena());
}
inline std::string* NodePair::_internal_mutable_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.from_.Mutable( GetArena());
}
inline std::string* NodePair::release_from() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodePair.from)
  return _impl_.from_.Release();
}
inline void NodePair::set_allocated_from(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.from_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.from_.IsDefault()) {
          _impl_.from_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodePair.from)
}

// bytes to = 2;
inline void NodePair::clear_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_.ClearToEmpty();
}
inline const std::string& NodePair::to() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodePair.to)
  return _internal_to();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodePair::set_to(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodePair.to)
}
inline std::string* NodePair::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodePair.to)
  return _s;
}
inline const std::string& NodePair::_internal_to() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.to_.Get();
}
inline void NodePair::_internal_set_to(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_.Set(value, GetArena());
}
inline std::string* NodePair::_internal_mutable_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.to_.Mutable( GetArena());
}
inline std::string* NodePair::release_to() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodePair.to)
  return _impl_.to_.Release();
}
inline void NodePair::set_allocated_to(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.to_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.to_.IsDefault()) {
          _impl_.to_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodePair.to)
}

// -------------------------------------------------------------------

// EdgeLocator

// uint64 channel_id = 1 [jstype = JS_STRING];
inline void EdgeLocator::clear_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_ = ::uint64_t{0u};
}
inline ::uint64_t EdgeLocator::channel_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.EdgeLocator.channel_id)
  return _internal_channel_id();
}
inline void EdgeLocator::set_channel_id(::uint64_t value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.EdgeLocator.channel_id)
}
inline ::uint64_t EdgeLocator::_internal_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_id_;
}
inline void EdgeLocator::_internal_set_channel_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_ = value;
}

// bool direction_reverse = 2;
inline void EdgeLocator::clear_direction_reverse() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_reverse_ = false;
}
inline bool EdgeLocator::direction_reverse() const {
  // @@protoc_insertion_point(field_get:lnrpc.EdgeLocator.direction_reverse)
  return _internal_direction_reverse();
}
inline void EdgeLocator::set_direction_reverse(bool value) {
  _internal_set_direction_reverse(value);
  // @@protoc_insertion_point(field_set:lnrpc.EdgeLocator.direction_reverse)
}
inline bool EdgeLocator::_internal_direction_reverse() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.direction_reverse_;
}
inline void EdgeLocator::_internal_set_direction_reverse(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.direction_reverse_ = value;
}

// -------------------------------------------------------------------

// QueryRoutesResponse

// repeated .lnrpc.Route routes = 1;
inline int QueryRoutesResponse::_internal_routes_size() const {
  return _internal_routes().size();
}
inline int QueryRoutesResponse::routes_size() const {
  return _internal_routes_size();
}
inline void QueryRoutesResponse::clear_routes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.routes_.Clear();
}
inline ::lnrpc::Route* QueryRoutesResponse::mutable_routes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.QueryRoutesResponse.routes)
  return _internal_mutable_routes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Route>* QueryRoutesResponse::mutable_routes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.QueryRoutesResponse.routes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_routes();
}
inline const ::lnrpc::Route& QueryRoutesResponse::routes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesResponse.routes)
  return _internal_routes().Get(index);
}
inline ::lnrpc::Route* QueryRoutesResponse::add_routes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Route* _add = _internal_mutable_routes()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.QueryRoutesResponse.routes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Route>& QueryRoutesResponse::routes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.QueryRoutesResponse.routes)
  return _internal_routes();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Route>&
QueryRoutesResponse::_internal_routes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.routes_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Route>*
QueryRoutesResponse::_internal_mutable_routes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.routes_;
}

// double success_prob = 2;
inline void QueryRoutesResponse::clear_success_prob() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_prob_ = 0;
}
inline double QueryRoutesResponse::success_prob() const {
  // @@protoc_insertion_point(field_get:lnrpc.QueryRoutesResponse.success_prob)
  return _internal_success_prob();
}
inline void QueryRoutesResponse::set_success_prob(double value) {
  _internal_set_success_prob(value);
  // @@protoc_insertion_point(field_set:lnrpc.QueryRoutesResponse.success_prob)
}
inline double QueryRoutesResponse::_internal_success_prob() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_prob_;
}
inline void QueryRoutesResponse::_internal_set_success_prob(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_prob_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Hop

// uint64 chan_id = 1 [jstype = JS_STRING];
inline void Hop::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t Hop::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.chan_id)
  return _internal_chan_id();
}
inline void Hop::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.chan_id)
}
inline ::uint64_t Hop::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void Hop::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// int64 chan_capacity = 2 [deprecated = true];
inline void Hop::clear_chan_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_capacity_ = ::int64_t{0};
}
inline ::int64_t Hop::chan_capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.chan_capacity)
  return _internal_chan_capacity();
}
inline void Hop::set_chan_capacity(::int64_t value) {
  _internal_set_chan_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.chan_capacity)
}
inline ::int64_t Hop::_internal_chan_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_capacity_;
}
inline void Hop::_internal_set_chan_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_capacity_ = value;
}

// int64 amt_to_forward = 3 [deprecated = true];
inline void Hop::clear_amt_to_forward() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_to_forward_ = ::int64_t{0};
}
inline ::int64_t Hop::amt_to_forward() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.amt_to_forward)
  return _internal_amt_to_forward();
}
inline void Hop::set_amt_to_forward(::int64_t value) {
  _internal_set_amt_to_forward(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.amt_to_forward)
}
inline ::int64_t Hop::_internal_amt_to_forward() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_to_forward_;
}
inline void Hop::_internal_set_amt_to_forward(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_to_forward_ = value;
}

// int64 fee = 4 [deprecated = true];
inline void Hop::clear_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_ = ::int64_t{0};
}
inline ::int64_t Hop::fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.fee)
  return _internal_fee();
}
inline void Hop::set_fee(::int64_t value) {
  _internal_set_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.fee)
}
inline ::int64_t Hop::_internal_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_;
}
inline void Hop::_internal_set_fee(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_ = value;
}

// uint32 expiry = 5;
inline void Hop::clear_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_ = 0u;
}
inline ::uint32_t Hop::expiry() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.expiry)
  return _internal_expiry();
}
inline void Hop::set_expiry(::uint32_t value) {
  _internal_set_expiry(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.expiry)
}
inline ::uint32_t Hop::_internal_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiry_;
}
inline void Hop::_internal_set_expiry(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_ = value;
}

// int64 amt_to_forward_msat = 6;
inline void Hop::clear_amt_to_forward_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_to_forward_msat_ = ::int64_t{0};
}
inline ::int64_t Hop::amt_to_forward_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.amt_to_forward_msat)
  return _internal_amt_to_forward_msat();
}
inline void Hop::set_amt_to_forward_msat(::int64_t value) {
  _internal_set_amt_to_forward_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.amt_to_forward_msat)
}
inline ::int64_t Hop::_internal_amt_to_forward_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_to_forward_msat_;
}
inline void Hop::_internal_set_amt_to_forward_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_to_forward_msat_ = value;
}

// int64 fee_msat = 7;
inline void Hop::clear_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_msat_ = ::int64_t{0};
}
inline ::int64_t Hop::fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.fee_msat)
  return _internal_fee_msat();
}
inline void Hop::set_fee_msat(::int64_t value) {
  _internal_set_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.fee_msat)
}
inline ::int64_t Hop::_internal_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_msat_;
}
inline void Hop::_internal_set_fee_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_msat_ = value;
}

// string pub_key = 8;
inline void Hop::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& Hop::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Hop::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Hop.pub_key)
}
inline std::string* Hop::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.Hop.pub_key)
  return _s;
}
inline const std::string& Hop::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void Hop::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* Hop::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* Hop::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Hop.pub_key)
  return _impl_.pub_key_.Release();
}
inline void Hop::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Hop.pub_key)
}

// bool tlv_payload = 9 [deprecated = true];
inline void Hop::clear_tlv_payload() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tlv_payload_ = false;
}
inline bool Hop::tlv_payload() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.tlv_payload)
  return _internal_tlv_payload();
}
inline void Hop::set_tlv_payload(bool value) {
  _internal_set_tlv_payload(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.tlv_payload)
}
inline bool Hop::_internal_tlv_payload() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tlv_payload_;
}
inline void Hop::_internal_set_tlv_payload(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tlv_payload_ = value;
}

// .lnrpc.MPPRecord mpp_record = 10;
inline bool Hop::has_mpp_record() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.mpp_record_ != nullptr);
  return value;
}
inline void Hop::clear_mpp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mpp_record_ != nullptr) _impl_.mpp_record_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::MPPRecord& Hop::_internal_mpp_record() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::MPPRecord* p = _impl_.mpp_record_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::MPPRecord&>(::lnrpc::_MPPRecord_default_instance_);
}
inline const ::lnrpc::MPPRecord& Hop::mpp_record() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.mpp_record)
  return _internal_mpp_record();
}
inline void Hop::unsafe_arena_set_allocated_mpp_record(::lnrpc::MPPRecord* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.mpp_record_);
  }
  _impl_.mpp_record_ = reinterpret_cast<::lnrpc::MPPRecord*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Hop.mpp_record)
}
inline ::lnrpc::MPPRecord* Hop::release_mpp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::MPPRecord* released = _impl_.mpp_record_;
  _impl_.mpp_record_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::MPPRecord* Hop::unsafe_arena_release_mpp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Hop.mpp_record)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::MPPRecord* temp = _impl_.mpp_record_;
  _impl_.mpp_record_ = nullptr;
  return temp;
}
inline ::lnrpc::MPPRecord* Hop::_internal_mutable_mpp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.mpp_record_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::MPPRecord>(GetArena());
    _impl_.mpp_record_ = reinterpret_cast<::lnrpc::MPPRecord*>(p);
  }
  return _impl_.mpp_record_;
}
inline ::lnrpc::MPPRecord* Hop::mutable_mpp_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::MPPRecord* _msg = _internal_mutable_mpp_record();
  // @@protoc_insertion_point(field_mutable:lnrpc.Hop.mpp_record)
  return _msg;
}
inline void Hop::set_allocated_mpp_record(::lnrpc::MPPRecord* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.mpp_record_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.mpp_record_ = reinterpret_cast<::lnrpc::MPPRecord*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Hop.mpp_record)
}

// .lnrpc.AMPRecord amp_record = 12;
inline bool Hop::has_amp_record() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amp_record_ != nullptr);
  return value;
}
inline void Hop::clear_amp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amp_record_ != nullptr) _impl_.amp_record_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::AMPRecord& Hop::_internal_amp_record() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::AMPRecord* p = _impl_.amp_record_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::AMPRecord&>(::lnrpc::_AMPRecord_default_instance_);
}
inline const ::lnrpc::AMPRecord& Hop::amp_record() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.amp_record)
  return _internal_amp_record();
}
inline void Hop::unsafe_arena_set_allocated_amp_record(::lnrpc::AMPRecord* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amp_record_);
  }
  _impl_.amp_record_ = reinterpret_cast<::lnrpc::AMPRecord*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Hop.amp_record)
}
inline ::lnrpc::AMPRecord* Hop::release_amp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::AMPRecord* released = _impl_.amp_record_;
  _impl_.amp_record_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::AMPRecord* Hop::unsafe_arena_release_amp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Hop.amp_record)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::AMPRecord* temp = _impl_.amp_record_;
  _impl_.amp_record_ = nullptr;
  return temp;
}
inline ::lnrpc::AMPRecord* Hop::_internal_mutable_amp_record() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amp_record_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::AMPRecord>(GetArena());
    _impl_.amp_record_ = reinterpret_cast<::lnrpc::AMPRecord*>(p);
  }
  return _impl_.amp_record_;
}
inline ::lnrpc::AMPRecord* Hop::mutable_amp_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::AMPRecord* _msg = _internal_mutable_amp_record();
  // @@protoc_insertion_point(field_mutable:lnrpc.Hop.amp_record)
  return _msg;
}
inline void Hop::set_allocated_amp_record(::lnrpc::AMPRecord* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.amp_record_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.amp_record_ = reinterpret_cast<::lnrpc::AMPRecord*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Hop.amp_record)
}

// map<uint64, bytes> custom_records = 11;
inline int Hop::_internal_custom_records_size() const {
  return _internal_custom_records().size();
}
inline int Hop::custom_records_size() const {
  return _internal_custom_records_size();
}
inline void Hop::clear_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& Hop::_internal_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& Hop::custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.Hop.custom_records)
  return _internal_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* Hop::_internal_mutable_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* Hop::mutable_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.Hop.custom_records)
  return _internal_mutable_custom_records();
}

// bytes metadata = 13;
inline void Hop::clear_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.ClearToEmpty();
}
inline const std::string& Hop::metadata() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.metadata)
  return _internal_metadata();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Hop::set_metadata(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Hop.metadata)
}
inline std::string* Hop::mutable_metadata() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_metadata();
  // @@protoc_insertion_point(field_mutable:lnrpc.Hop.metadata)
  return _s;
}
inline const std::string& Hop::_internal_metadata() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.metadata_.Get();
}
inline void Hop::_internal_set_metadata(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.Set(value, GetArena());
}
inline std::string* Hop::_internal_mutable_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.metadata_.Mutable( GetArena());
}
inline std::string* Hop::release_metadata() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Hop.metadata)
  return _impl_.metadata_.Release();
}
inline void Hop::set_allocated_metadata(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.metadata_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.metadata_.IsDefault()) {
          _impl_.metadata_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Hop.metadata)
}

// bytes blinding_point = 14;
inline void Hop::clear_blinding_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.ClearToEmpty();
}
inline const std::string& Hop::blinding_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.blinding_point)
  return _internal_blinding_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Hop::set_blinding_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Hop.blinding_point)
}
inline std::string* Hop::mutable_blinding_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_blinding_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.Hop.blinding_point)
  return _s;
}
inline const std::string& Hop::_internal_blinding_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blinding_point_.Get();
}
inline void Hop::_internal_set_blinding_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.Set(value, GetArena());
}
inline std::string* Hop::_internal_mutable_blinding_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.blinding_point_.Mutable( GetArena());
}
inline std::string* Hop::release_blinding_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Hop.blinding_point)
  return _impl_.blinding_point_.Release();
}
inline void Hop::set_allocated_blinding_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.blinding_point_.IsDefault()) {
          _impl_.blinding_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Hop.blinding_point)
}

// bytes encrypted_data = 15;
inline void Hop::clear_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.ClearToEmpty();
}
inline const std::string& Hop::encrypted_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.encrypted_data)
  return _internal_encrypted_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Hop::set_encrypted_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Hop.encrypted_data)
}
inline std::string* Hop::mutable_encrypted_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encrypted_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.Hop.encrypted_data)
  return _s;
}
inline const std::string& Hop::_internal_encrypted_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encrypted_data_.Get();
}
inline void Hop::_internal_set_encrypted_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.Set(value, GetArena());
}
inline std::string* Hop::_internal_mutable_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encrypted_data_.Mutable( GetArena());
}
inline std::string* Hop::release_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Hop.encrypted_data)
  return _impl_.encrypted_data_.Release();
}
inline void Hop::set_allocated_encrypted_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.encrypted_data_.IsDefault()) {
          _impl_.encrypted_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Hop.encrypted_data)
}

// uint64 total_amt_msat = 16;
inline void Hop::clear_total_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_msat_ = ::uint64_t{0u};
}
inline ::uint64_t Hop::total_amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Hop.total_amt_msat)
  return _internal_total_amt_msat();
}
inline void Hop::set_total_amt_msat(::uint64_t value) {
  _internal_set_total_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Hop.total_amt_msat)
}
inline ::uint64_t Hop::_internal_total_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_amt_msat_;
}
inline void Hop::_internal_set_total_amt_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_msat_ = value;
}

// -------------------------------------------------------------------

// MPPRecord

// bytes payment_addr = 11;
inline void MPPRecord::clear_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.ClearToEmpty();
}
inline const std::string& MPPRecord::payment_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MPPRecord.payment_addr)
  return _internal_payment_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MPPRecord::set_payment_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MPPRecord.payment_addr)
}
inline std::string* MPPRecord::mutable_payment_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.MPPRecord.payment_addr)
  return _s;
}
inline const std::string& MPPRecord::_internal_payment_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_addr_.Get();
}
inline void MPPRecord::_internal_set_payment_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.Set(value, GetArena());
}
inline std::string* MPPRecord::_internal_mutable_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_addr_.Mutable( GetArena());
}
inline std::string* MPPRecord::release_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MPPRecord.payment_addr)
  return _impl_.payment_addr_.Release();
}
inline void MPPRecord::set_allocated_payment_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_addr_.IsDefault()) {
          _impl_.payment_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MPPRecord.payment_addr)
}

// int64 total_amt_msat = 10;
inline void MPPRecord::clear_total_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_msat_ = ::int64_t{0};
}
inline ::int64_t MPPRecord::total_amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.MPPRecord.total_amt_msat)
  return _internal_total_amt_msat();
}
inline void MPPRecord::set_total_amt_msat(::int64_t value) {
  _internal_set_total_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.MPPRecord.total_amt_msat)
}
inline ::int64_t MPPRecord::_internal_total_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_amt_msat_;
}
inline void MPPRecord::_internal_set_total_amt_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_msat_ = value;
}

// -------------------------------------------------------------------

// AMPRecord

// bytes root_share = 1;
inline void AMPRecord::clear_root_share() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.ClearToEmpty();
}
inline const std::string& AMPRecord::root_share() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AMPRecord.root_share)
  return _internal_root_share();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AMPRecord::set_root_share(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AMPRecord.root_share)
}
inline std::string* AMPRecord::mutable_root_share() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_root_share();
  // @@protoc_insertion_point(field_mutable:lnrpc.AMPRecord.root_share)
  return _s;
}
inline const std::string& AMPRecord::_internal_root_share() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_share_.Get();
}
inline void AMPRecord::_internal_set_root_share(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.Set(value, GetArena());
}
inline std::string* AMPRecord::_internal_mutable_root_share() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.root_share_.Mutable( GetArena());
}
inline std::string* AMPRecord::release_root_share() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AMPRecord.root_share)
  return _impl_.root_share_.Release();
}
inline void AMPRecord::set_allocated_root_share(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.root_share_.IsDefault()) {
          _impl_.root_share_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AMPRecord.root_share)
}

// bytes set_id = 2;
inline void AMPRecord::clear_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.ClearToEmpty();
}
inline const std::string& AMPRecord::set_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AMPRecord.set_id)
  return _internal_set_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AMPRecord::set_set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AMPRecord.set_id)
}
inline std::string* AMPRecord::mutable_set_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_set_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.AMPRecord.set_id)
  return _s;
}
inline const std::string& AMPRecord::_internal_set_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_id_.Get();
}
inline void AMPRecord::_internal_set_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.Set(value, GetArena());
}
inline std::string* AMPRecord::_internal_mutable_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.set_id_.Mutable( GetArena());
}
inline std::string* AMPRecord::release_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AMPRecord.set_id)
  return _impl_.set_id_.Release();
}
inline void AMPRecord::set_allocated_set_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.set_id_.IsDefault()) {
          _impl_.set_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AMPRecord.set_id)
}

// uint32 child_index = 3;
inline void AMPRecord::clear_child_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.child_index_ = 0u;
}
inline ::uint32_t AMPRecord::child_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.AMPRecord.child_index)
  return _internal_child_index();
}
inline void AMPRecord::set_child_index(::uint32_t value) {
  _internal_set_child_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.AMPRecord.child_index)
}
inline ::uint32_t AMPRecord::_internal_child_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.child_index_;
}
inline void AMPRecord::_internal_set_child_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.child_index_ = value;
}

// -------------------------------------------------------------------

// Route

// uint32 total_time_lock = 1;
inline void Route::clear_total_time_lock() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_time_lock_ = 0u;
}
inline ::uint32_t Route::total_time_lock() const {
  // @@protoc_insertion_point(field_get:lnrpc.Route.total_time_lock)
  return _internal_total_time_lock();
}
inline void Route::set_total_time_lock(::uint32_t value) {
  _internal_set_total_time_lock(value);
  // @@protoc_insertion_point(field_set:lnrpc.Route.total_time_lock)
}
inline ::uint32_t Route::_internal_total_time_lock() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_time_lock_;
}
inline void Route::_internal_set_total_time_lock(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_time_lock_ = value;
}

// int64 total_fees = 2 [deprecated = true];
inline void Route::clear_total_fees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_fees_ = ::int64_t{0};
}
inline ::int64_t Route::total_fees() const {
  // @@protoc_insertion_point(field_get:lnrpc.Route.total_fees)
  return _internal_total_fees();
}
inline void Route::set_total_fees(::int64_t value) {
  _internal_set_total_fees(value);
  // @@protoc_insertion_point(field_set:lnrpc.Route.total_fees)
}
inline ::int64_t Route::_internal_total_fees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_fees_;
}
inline void Route::_internal_set_total_fees(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_fees_ = value;
}

// int64 total_amt = 3 [deprecated = true];
inline void Route::clear_total_amt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_ = ::int64_t{0};
}
inline ::int64_t Route::total_amt() const {
  // @@protoc_insertion_point(field_get:lnrpc.Route.total_amt)
  return _internal_total_amt();
}
inline void Route::set_total_amt(::int64_t value) {
  _internal_set_total_amt(value);
  // @@protoc_insertion_point(field_set:lnrpc.Route.total_amt)
}
inline ::int64_t Route::_internal_total_amt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_amt_;
}
inline void Route::_internal_set_total_amt(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_ = value;
}

// repeated .lnrpc.Hop hops = 4;
inline int Route::_internal_hops_size() const {
  return _internal_hops().size();
}
inline int Route::hops_size() const {
  return _internal_hops_size();
}
inline void Route::clear_hops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hops_.Clear();
}
inline ::lnrpc::Hop* Route::mutable_hops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Route.hops)
  return _internal_mutable_hops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>* Route::mutable_hops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Route.hops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hops();
}
inline const ::lnrpc::Hop& Route::hops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Route.hops)
  return _internal_hops().Get(index);
}
inline ::lnrpc::Hop* Route::add_hops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Hop* _add = _internal_mutable_hops()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Route.hops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>& Route::hops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Route.hops)
  return _internal_hops();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>&
Route::_internal_hops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hops_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Hop>*
Route::_internal_mutable_hops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hops_;
}

// int64 total_fees_msat = 5;
inline void Route::clear_total_fees_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_fees_msat_ = ::int64_t{0};
}
inline ::int64_t Route::total_fees_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Route.total_fees_msat)
  return _internal_total_fees_msat();
}
inline void Route::set_total_fees_msat(::int64_t value) {
  _internal_set_total_fees_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Route.total_fees_msat)
}
inline ::int64_t Route::_internal_total_fees_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_fees_msat_;
}
inline void Route::_internal_set_total_fees_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_fees_msat_ = value;
}

// int64 total_amt_msat = 6;
inline void Route::clear_total_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_msat_ = ::int64_t{0};
}
inline ::int64_t Route::total_amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Route.total_amt_msat)
  return _internal_total_amt_msat();
}
inline void Route::set_total_amt_msat(::int64_t value) {
  _internal_set_total_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Route.total_amt_msat)
}
inline ::int64_t Route::_internal_total_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_amt_msat_;
}
inline void Route::_internal_set_total_amt_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_amt_msat_ = value;
}

// int64 first_hop_amount_msat = 7;
inline void Route::clear_first_hop_amount_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_hop_amount_msat_ = ::int64_t{0};
}
inline ::int64_t Route::first_hop_amount_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Route.first_hop_amount_msat)
  return _internal_first_hop_amount_msat();
}
inline void Route::set_first_hop_amount_msat(::int64_t value) {
  _internal_set_first_hop_amount_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Route.first_hop_amount_msat)
}
inline ::int64_t Route::_internal_first_hop_amount_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_hop_amount_msat_;
}
inline void Route::_internal_set_first_hop_amount_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_hop_amount_msat_ = value;
}

// bytes custom_channel_data = 8;
inline void Route::clear_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.ClearToEmpty();
}
inline const std::string& Route::custom_channel_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Route.custom_channel_data)
  return _internal_custom_channel_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Route::set_custom_channel_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Route.custom_channel_data)
}
inline std::string* Route::mutable_custom_channel_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_channel_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.Route.custom_channel_data)
  return _s;
}
inline const std::string& Route::_internal_custom_channel_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_channel_data_.Get();
}
inline void Route::_internal_set_custom_channel_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.Set(value, GetArena());
}
inline std::string* Route::_internal_mutable_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_channel_data_.Mutable( GetArena());
}
inline std::string* Route::release_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Route.custom_channel_data)
  return _impl_.custom_channel_data_.Release();
}
inline void Route::set_allocated_custom_channel_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_channel_data_.IsDefault()) {
          _impl_.custom_channel_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Route.custom_channel_data)
}

// -------------------------------------------------------------------

// NodeInfoRequest

// string pub_key = 1;
inline void NodeInfoRequest::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& NodeInfoRequest::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeInfoRequest.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeInfoRequest::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeInfoRequest.pub_key)
}
inline std::string* NodeInfoRequest::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeInfoRequest.pub_key)
  return _s;
}
inline const std::string& NodeInfoRequest::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void NodeInfoRequest::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* NodeInfoRequest::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* NodeInfoRequest::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeInfoRequest.pub_key)
  return _impl_.pub_key_.Release();
}
inline void NodeInfoRequest::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeInfoRequest.pub_key)
}

// bool include_channels = 2;
inline void NodeInfoRequest::clear_include_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_channels_ = false;
}
inline bool NodeInfoRequest::include_channels() const {
  // @@protoc_insertion_point(field_get:lnrpc.NodeInfoRequest.include_channels)
  return _internal_include_channels();
}
inline void NodeInfoRequest::set_include_channels(bool value) {
  _internal_set_include_channels(value);
  // @@protoc_insertion_point(field_set:lnrpc.NodeInfoRequest.include_channels)
}
inline bool NodeInfoRequest::_internal_include_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_channels_;
}
inline void NodeInfoRequest::_internal_set_include_channels(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_channels_ = value;
}

// -------------------------------------------------------------------

// NodeInfo

// .lnrpc.LightningNode node = 1;
inline bool NodeInfo::has_node() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node_ != nullptr);
  return value;
}
inline void NodeInfo::clear_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_ != nullptr) _impl_.node_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::LightningNode& NodeInfo::_internal_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::LightningNode* p = _impl_.node_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::LightningNode&>(::lnrpc::_LightningNode_default_instance_);
}
inline const ::lnrpc::LightningNode& NodeInfo::node() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeInfo.node)
  return _internal_node();
}
inline void NodeInfo::unsafe_arena_set_allocated_node(::lnrpc::LightningNode* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node_);
  }
  _impl_.node_ = reinterpret_cast<::lnrpc::LightningNode*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.NodeInfo.node)
}
inline ::lnrpc::LightningNode* NodeInfo::release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::LightningNode* released = _impl_.node_;
  _impl_.node_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::LightningNode* NodeInfo::unsafe_arena_release_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeInfo.node)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::LightningNode* temp = _impl_.node_;
  _impl_.node_ = nullptr;
  return temp;
}
inline ::lnrpc::LightningNode* NodeInfo::_internal_mutable_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::LightningNode>(GetArena());
    _impl_.node_ = reinterpret_cast<::lnrpc::LightningNode*>(p);
  }
  return _impl_.node_;
}
inline ::lnrpc::LightningNode* NodeInfo::mutable_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::LightningNode* _msg = _internal_mutable_node();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeInfo.node)
  return _msg;
}
inline void NodeInfo::set_allocated_node(::lnrpc::LightningNode* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.node_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.node_ = reinterpret_cast<::lnrpc::LightningNode*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeInfo.node)
}

// uint32 num_channels = 2;
inline void NodeInfo::clear_num_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = 0u;
}
inline ::uint32_t NodeInfo::num_channels() const {
  // @@protoc_insertion_point(field_get:lnrpc.NodeInfo.num_channels)
  return _internal_num_channels();
}
inline void NodeInfo::set_num_channels(::uint32_t value) {
  _internal_set_num_channels(value);
  // @@protoc_insertion_point(field_set:lnrpc.NodeInfo.num_channels)
}
inline ::uint32_t NodeInfo::_internal_num_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_channels_;
}
inline void NodeInfo::_internal_set_num_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = value;
}

// int64 total_capacity = 3;
inline void NodeInfo::clear_total_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_capacity_ = ::int64_t{0};
}
inline ::int64_t NodeInfo::total_capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.NodeInfo.total_capacity)
  return _internal_total_capacity();
}
inline void NodeInfo::set_total_capacity(::int64_t value) {
  _internal_set_total_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.NodeInfo.total_capacity)
}
inline ::int64_t NodeInfo::_internal_total_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_capacity_;
}
inline void NodeInfo::_internal_set_total_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_capacity_ = value;
}

// repeated .lnrpc.ChannelEdge channels = 4;
inline int NodeInfo::_internal_channels_size() const {
  return _internal_channels().size();
}
inline int NodeInfo::channels_size() const {
  return _internal_channels_size();
}
inline void NodeInfo::clear_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channels_.Clear();
}
inline ::lnrpc::ChannelEdge* NodeInfo::mutable_channels(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeInfo.channels)
  return _internal_mutable_channels()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>* NodeInfo::mutable_channels()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.NodeInfo.channels)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channels();
}
inline const ::lnrpc::ChannelEdge& NodeInfo::channels(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeInfo.channels)
  return _internal_channels().Get(index);
}
inline ::lnrpc::ChannelEdge* NodeInfo::add_channels() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelEdge* _add = _internal_mutable_channels()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.NodeInfo.channels)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>& NodeInfo::channels() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.NodeInfo.channels)
  return _internal_channels();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>&
NodeInfo::_internal_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channels_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>*
NodeInfo::_internal_mutable_channels() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channels_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LightningNode

// uint32 last_update = 1;
inline void LightningNode::clear_last_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_update_ = 0u;
}
inline ::uint32_t LightningNode::last_update() const {
  // @@protoc_insertion_point(field_get:lnrpc.LightningNode.last_update)
  return _internal_last_update();
}
inline void LightningNode::set_last_update(::uint32_t value) {
  _internal_set_last_update(value);
  // @@protoc_insertion_point(field_set:lnrpc.LightningNode.last_update)
}
inline ::uint32_t LightningNode::_internal_last_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_update_;
}
inline void LightningNode::_internal_set_last_update(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_update_ = value;
}

// string pub_key = 2;
inline void LightningNode::clear_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.ClearToEmpty();
}
inline const std::string& LightningNode::pub_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.LightningNode.pub_key)
  return _internal_pub_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightningNode::set_pub_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.LightningNode.pub_key)
}
inline std::string* LightningNode::mutable_pub_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pub_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.LightningNode.pub_key)
  return _s;
}
inline const std::string& LightningNode::_internal_pub_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pub_key_.Get();
}
inline void LightningNode::_internal_set_pub_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.Set(value, GetArena());
}
inline std::string* LightningNode::_internal_mutable_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pub_key_.Mutable( GetArena());
}
inline std::string* LightningNode::release_pub_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.LightningNode.pub_key)
  return _impl_.pub_key_.Release();
}
inline void LightningNode::set_allocated_pub_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pub_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pub_key_.IsDefault()) {
          _impl_.pub_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.LightningNode.pub_key)
}

// string alias = 3;
inline void LightningNode::clear_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.ClearToEmpty();
}
inline const std::string& LightningNode::alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.LightningNode.alias)
  return _internal_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightningNode::set_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.LightningNode.alias)
}
inline std::string* LightningNode::mutable_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alias();
  // @@protoc_insertion_point(field_mutable:lnrpc.LightningNode.alias)
  return _s;
}
inline const std::string& LightningNode::_internal_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_.Get();
}
inline void LightningNode::_internal_set_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(value, GetArena());
}
inline std::string* LightningNode::_internal_mutable_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alias_.Mutable( GetArena());
}
inline std::string* LightningNode::release_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.LightningNode.alias)
  return _impl_.alias_.Release();
}
inline void LightningNode::set_allocated_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.alias_.IsDefault()) {
          _impl_.alias_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.LightningNode.alias)
}

// repeated .lnrpc.NodeAddress addresses = 4;
inline int LightningNode::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int LightningNode::addresses_size() const {
  return _internal_addresses_size();
}
inline void LightningNode::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline ::lnrpc::NodeAddress* LightningNode::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.LightningNode.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>* LightningNode::mutable_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.LightningNode.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::lnrpc::NodeAddress& LightningNode::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.LightningNode.addresses)
  return _internal_addresses().Get(index);
}
inline ::lnrpc::NodeAddress* LightningNode::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::NodeAddress* _add = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.LightningNode.addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>& LightningNode::addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.LightningNode.addresses)
  return _internal_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>&
LightningNode::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>*
LightningNode::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// string color = 5;
inline void LightningNode::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.ClearToEmpty();
}
inline const std::string& LightningNode::color() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.LightningNode.color)
  return _internal_color();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LightningNode::set_color(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.LightningNode.color)
}
inline std::string* LightningNode::mutable_color() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:lnrpc.LightningNode.color)
  return _s;
}
inline const std::string& LightningNode::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_.Get();
}
inline void LightningNode::_internal_set_color(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(value, GetArena());
}
inline std::string* LightningNode::_internal_mutable_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.color_.Mutable( GetArena());
}
inline std::string* LightningNode::release_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.LightningNode.color)
  return _impl_.color_.Release();
}
inline void LightningNode::set_allocated_color(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.color_.IsDefault()) {
          _impl_.color_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.LightningNode.color)
}

// map<uint32, .lnrpc.Feature> features = 6;
inline int LightningNode::_internal_features_size() const {
  return _internal_features().size();
}
inline int LightningNode::features_size() const {
  return _internal_features_size();
}
inline void LightningNode::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& LightningNode::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& LightningNode::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.LightningNode.features)
  return _internal_features();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* LightningNode::_internal_mutable_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.features_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* LightningNode::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.LightningNode.features)
  return _internal_mutable_features();
}

// map<uint64, bytes> custom_records = 7;
inline int LightningNode::_internal_custom_records_size() const {
  return _internal_custom_records().size();
}
inline int LightningNode::custom_records_size() const {
  return _internal_custom_records_size();
}
inline void LightningNode::clear_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& LightningNode::_internal_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& LightningNode::custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.LightningNode.custom_records)
  return _internal_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* LightningNode::_internal_mutable_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* LightningNode::mutable_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.LightningNode.custom_records)
  return _internal_mutable_custom_records();
}

// -------------------------------------------------------------------

// NodeAddress

// string network = 1;
inline void NodeAddress::clear_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.ClearToEmpty();
}
inline const std::string& NodeAddress::network() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeAddress.network)
  return _internal_network();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeAddress::set_network(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeAddress.network)
}
inline std::string* NodeAddress::mutable_network() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_network();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeAddress.network)
  return _s;
}
inline const std::string& NodeAddress::_internal_network() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.network_.Get();
}
inline void NodeAddress::_internal_set_network(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.Set(value, GetArena());
}
inline std::string* NodeAddress::_internal_mutable_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.network_.Mutable( GetArena());
}
inline std::string* NodeAddress::release_network() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeAddress.network)
  return _impl_.network_.Release();
}
inline void NodeAddress::set_allocated_network(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.network_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.network_.IsDefault()) {
          _impl_.network_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeAddress.network)
}

// string addr = 2;
inline void NodeAddress::clear_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.ClearToEmpty();
}
inline const std::string& NodeAddress::addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeAddress.addr)
  return _internal_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeAddress::set_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeAddress.addr)
}
inline std::string* NodeAddress::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeAddress.addr)
  return _s;
}
inline const std::string& NodeAddress::_internal_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addr_.Get();
}
inline void NodeAddress::_internal_set_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(value, GetArena());
}
inline std::string* NodeAddress::_internal_mutable_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addr_.Mutable( GetArena());
}
inline std::string* NodeAddress::release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeAddress.addr)
  return _impl_.addr_.Release();
}
inline void NodeAddress::set_allocated_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.addr_.IsDefault()) {
          _impl_.addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeAddress.addr)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RoutingPolicy

// uint32 time_lock_delta = 1;
inline void RoutingPolicy::clear_time_lock_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_lock_delta_ = 0u;
}
inline ::uint32_t RoutingPolicy::time_lock_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.time_lock_delta)
  return _internal_time_lock_delta();
}
inline void RoutingPolicy::set_time_lock_delta(::uint32_t value) {
  _internal_set_time_lock_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.time_lock_delta)
}
inline ::uint32_t RoutingPolicy::_internal_time_lock_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_lock_delta_;
}
inline void RoutingPolicy::_internal_set_time_lock_delta(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_lock_delta_ = value;
}

// int64 min_htlc = 2;
inline void RoutingPolicy::clear_min_htlc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_ = ::int64_t{0};
}
inline ::int64_t RoutingPolicy::min_htlc() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.min_htlc)
  return _internal_min_htlc();
}
inline void RoutingPolicy::set_min_htlc(::int64_t value) {
  _internal_set_min_htlc(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.min_htlc)
}
inline ::int64_t RoutingPolicy::_internal_min_htlc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_;
}
inline void RoutingPolicy::_internal_set_min_htlc(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_ = value;
}

// int64 fee_base_msat = 3;
inline void RoutingPolicy::clear_fee_base_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_base_msat_ = ::int64_t{0};
}
inline ::int64_t RoutingPolicy::fee_base_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.fee_base_msat)
  return _internal_fee_base_msat();
}
inline void RoutingPolicy::set_fee_base_msat(::int64_t value) {
  _internal_set_fee_base_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.fee_base_msat)
}
inline ::int64_t RoutingPolicy::_internal_fee_base_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_base_msat_;
}
inline void RoutingPolicy::_internal_set_fee_base_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_base_msat_ = value;
}

// int64 fee_rate_milli_msat = 4;
inline void RoutingPolicy::clear_fee_rate_milli_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_milli_msat_ = ::int64_t{0};
}
inline ::int64_t RoutingPolicy::fee_rate_milli_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.fee_rate_milli_msat)
  return _internal_fee_rate_milli_msat();
}
inline void RoutingPolicy::set_fee_rate_milli_msat(::int64_t value) {
  _internal_set_fee_rate_milli_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.fee_rate_milli_msat)
}
inline ::int64_t RoutingPolicy::_internal_fee_rate_milli_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_milli_msat_;
}
inline void RoutingPolicy::_internal_set_fee_rate_milli_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_milli_msat_ = value;
}

// bool disabled = 5;
inline void RoutingPolicy::clear_disabled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_ = false;
}
inline bool RoutingPolicy::disabled() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.disabled)
  return _internal_disabled();
}
inline void RoutingPolicy::set_disabled(bool value) {
  _internal_set_disabled(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.disabled)
}
inline bool RoutingPolicy::_internal_disabled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disabled_;
}
inline void RoutingPolicy::_internal_set_disabled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disabled_ = value;
}

// uint64 max_htlc_msat = 6;
inline void RoutingPolicy::clear_max_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_htlc_msat_ = ::uint64_t{0u};
}
inline ::uint64_t RoutingPolicy::max_htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.max_htlc_msat)
  return _internal_max_htlc_msat();
}
inline void RoutingPolicy::set_max_htlc_msat(::uint64_t value) {
  _internal_set_max_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.max_htlc_msat)
}
inline ::uint64_t RoutingPolicy::_internal_max_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_htlc_msat_;
}
inline void RoutingPolicy::_internal_set_max_htlc_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_htlc_msat_ = value;
}

// uint32 last_update = 7;
inline void RoutingPolicy::clear_last_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_update_ = 0u;
}
inline ::uint32_t RoutingPolicy::last_update() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.last_update)
  return _internal_last_update();
}
inline void RoutingPolicy::set_last_update(::uint32_t value) {
  _internal_set_last_update(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.last_update)
}
inline ::uint32_t RoutingPolicy::_internal_last_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_update_;
}
inline void RoutingPolicy::_internal_set_last_update(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_update_ = value;
}

// map<uint64, bytes> custom_records = 8;
inline int RoutingPolicy::_internal_custom_records_size() const {
  return _internal_custom_records().size();
}
inline int RoutingPolicy::custom_records_size() const {
  return _internal_custom_records_size();
}
inline void RoutingPolicy::clear_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& RoutingPolicy::_internal_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& RoutingPolicy::custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.RoutingPolicy.custom_records)
  return _internal_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* RoutingPolicy::_internal_mutable_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* RoutingPolicy::mutable_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.RoutingPolicy.custom_records)
  return _internal_mutable_custom_records();
}

// int32 inbound_fee_base_msat = 9;
inline void RoutingPolicy::clear_inbound_fee_base_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_fee_base_msat_ = 0;
}
inline ::int32_t RoutingPolicy::inbound_fee_base_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.inbound_fee_base_msat)
  return _internal_inbound_fee_base_msat();
}
inline void RoutingPolicy::set_inbound_fee_base_msat(::int32_t value) {
  _internal_set_inbound_fee_base_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.inbound_fee_base_msat)
}
inline ::int32_t RoutingPolicy::_internal_inbound_fee_base_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inbound_fee_base_msat_;
}
inline void RoutingPolicy::_internal_set_inbound_fee_base_msat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_fee_base_msat_ = value;
}

// int32 inbound_fee_rate_milli_msat = 10;
inline void RoutingPolicy::clear_inbound_fee_rate_milli_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_fee_rate_milli_msat_ = 0;
}
inline ::int32_t RoutingPolicy::inbound_fee_rate_milli_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.RoutingPolicy.inbound_fee_rate_milli_msat)
  return _internal_inbound_fee_rate_milli_msat();
}
inline void RoutingPolicy::set_inbound_fee_rate_milli_msat(::int32_t value) {
  _internal_set_inbound_fee_rate_milli_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.RoutingPolicy.inbound_fee_rate_milli_msat)
}
inline ::int32_t RoutingPolicy::_internal_inbound_fee_rate_milli_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inbound_fee_rate_milli_msat_;
}
inline void RoutingPolicy::_internal_set_inbound_fee_rate_milli_msat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_fee_rate_milli_msat_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ChannelEdge

// uint64 channel_id = 1 [jstype = JS_STRING];
inline void ChannelEdge::clear_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelEdge::channel_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.channel_id)
  return _internal_channel_id();
}
inline void ChannelEdge::set_channel_id(::uint64_t value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdge.channel_id)
}
inline ::uint64_t ChannelEdge::_internal_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_id_;
}
inline void ChannelEdge::_internal_set_channel_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_ = value;
}

// string chan_point = 2;
inline void ChannelEdge::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.ClearToEmpty();
}
inline const std::string& ChannelEdge::chan_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.chan_point)
  return _internal_chan_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelEdge::set_chan_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdge.chan_point)
}
inline std::string* ChannelEdge::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdge.chan_point)
  return _s;
}
inline const std::string& ChannelEdge::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_point_.Get();
}
inline void ChannelEdge::_internal_set_chan_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.Set(value, GetArena());
}
inline std::string* ChannelEdge::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chan_point_.Mutable( GetArena());
}
inline std::string* ChannelEdge::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdge.chan_point)
  return _impl_.chan_point_.Release();
}
inline void ChannelEdge::set_allocated_chan_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chan_point_.IsDefault()) {
          _impl_.chan_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdge.chan_point)
}

// uint32 last_update = 3 [deprecated = true];
inline void ChannelEdge::clear_last_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_update_ = 0u;
}
inline ::uint32_t ChannelEdge::last_update() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.last_update)
  return _internal_last_update();
}
inline void ChannelEdge::set_last_update(::uint32_t value) {
  _internal_set_last_update(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdge.last_update)
}
inline ::uint32_t ChannelEdge::_internal_last_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_update_;
}
inline void ChannelEdge::_internal_set_last_update(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_update_ = value;
}

// string node1_pub = 4;
inline void ChannelEdge::clear_node1_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node1_pub_.ClearToEmpty();
}
inline const std::string& ChannelEdge::node1_pub() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.node1_pub)
  return _internal_node1_pub();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelEdge::set_node1_pub(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node1_pub_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdge.node1_pub)
}
inline std::string* ChannelEdge::mutable_node1_pub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node1_pub();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdge.node1_pub)
  return _s;
}
inline const std::string& ChannelEdge::_internal_node1_pub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node1_pub_.Get();
}
inline void ChannelEdge::_internal_set_node1_pub(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node1_pub_.Set(value, GetArena());
}
inline std::string* ChannelEdge::_internal_mutable_node1_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node1_pub_.Mutable( GetArena());
}
inline std::string* ChannelEdge::release_node1_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdge.node1_pub)
  return _impl_.node1_pub_.Release();
}
inline void ChannelEdge::set_allocated_node1_pub(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node1_pub_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node1_pub_.IsDefault()) {
          _impl_.node1_pub_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdge.node1_pub)
}

// string node2_pub = 5;
inline void ChannelEdge::clear_node2_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node2_pub_.ClearToEmpty();
}
inline const std::string& ChannelEdge::node2_pub() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.node2_pub)
  return _internal_node2_pub();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelEdge::set_node2_pub(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node2_pub_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdge.node2_pub)
}
inline std::string* ChannelEdge::mutable_node2_pub() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node2_pub();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdge.node2_pub)
  return _s;
}
inline const std::string& ChannelEdge::_internal_node2_pub() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node2_pub_.Get();
}
inline void ChannelEdge::_internal_set_node2_pub(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node2_pub_.Set(value, GetArena());
}
inline std::string* ChannelEdge::_internal_mutable_node2_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node2_pub_.Mutable( GetArena());
}
inline std::string* ChannelEdge::release_node2_pub() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdge.node2_pub)
  return _impl_.node2_pub_.Release();
}
inline void ChannelEdge::set_allocated_node2_pub(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node2_pub_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node2_pub_.IsDefault()) {
          _impl_.node2_pub_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdge.node2_pub)
}

// int64 capacity = 6;
inline void ChannelEdge::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::int64_t{0};
}
inline ::int64_t ChannelEdge::capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.capacity)
  return _internal_capacity();
}
inline void ChannelEdge::set_capacity(::int64_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdge.capacity)
}
inline ::int64_t ChannelEdge::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void ChannelEdge::_internal_set_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// .lnrpc.RoutingPolicy node1_policy = 7;
inline bool ChannelEdge::has_node1_policy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node1_policy_ != nullptr);
  return value;
}
inline void ChannelEdge::clear_node1_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node1_policy_ != nullptr) _impl_.node1_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::RoutingPolicy& ChannelEdge::_internal_node1_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::RoutingPolicy* p = _impl_.node1_policy_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::RoutingPolicy&>(::lnrpc::_RoutingPolicy_default_instance_);
}
inline const ::lnrpc::RoutingPolicy& ChannelEdge::node1_policy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.node1_policy)
  return _internal_node1_policy();
}
inline void ChannelEdge::unsafe_arena_set_allocated_node1_policy(::lnrpc::RoutingPolicy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node1_policy_);
  }
  _impl_.node1_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEdge.node1_policy)
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::release_node1_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::RoutingPolicy* released = _impl_.node1_policy_;
  _impl_.node1_policy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::unsafe_arena_release_node1_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdge.node1_policy)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::RoutingPolicy* temp = _impl_.node1_policy_;
  _impl_.node1_policy_ = nullptr;
  return temp;
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::_internal_mutable_node1_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node1_policy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::RoutingPolicy>(GetArena());
    _impl_.node1_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(p);
  }
  return _impl_.node1_policy_;
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::mutable_node1_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::RoutingPolicy* _msg = _internal_mutable_node1_policy();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdge.node1_policy)
  return _msg;
}
inline void ChannelEdge::set_allocated_node1_policy(::lnrpc::RoutingPolicy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.node1_policy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.node1_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdge.node1_policy)
}

// .lnrpc.RoutingPolicy node2_policy = 8;
inline bool ChannelEdge::has_node2_policy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.node2_policy_ != nullptr);
  return value;
}
inline void ChannelEdge::clear_node2_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node2_policy_ != nullptr) _impl_.node2_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::RoutingPolicy& ChannelEdge::_internal_node2_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::RoutingPolicy* p = _impl_.node2_policy_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::RoutingPolicy&>(::lnrpc::_RoutingPolicy_default_instance_);
}
inline const ::lnrpc::RoutingPolicy& ChannelEdge::node2_policy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdge.node2_policy)
  return _internal_node2_policy();
}
inline void ChannelEdge::unsafe_arena_set_allocated_node2_policy(::lnrpc::RoutingPolicy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.node2_policy_);
  }
  _impl_.node2_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEdge.node2_policy)
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::release_node2_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::RoutingPolicy* released = _impl_.node2_policy_;
  _impl_.node2_policy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::unsafe_arena_release_node2_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdge.node2_policy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::RoutingPolicy* temp = _impl_.node2_policy_;
  _impl_.node2_policy_ = nullptr;
  return temp;
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::_internal_mutable_node2_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.node2_policy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::RoutingPolicy>(GetArena());
    _impl_.node2_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(p);
  }
  return _impl_.node2_policy_;
}
inline ::lnrpc::RoutingPolicy* ChannelEdge::mutable_node2_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::RoutingPolicy* _msg = _internal_mutable_node2_policy();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdge.node2_policy)
  return _msg;
}
inline void ChannelEdge::set_allocated_node2_policy(::lnrpc::RoutingPolicy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.node2_policy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.node2_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdge.node2_policy)
}

// map<uint64, bytes> custom_records = 9;
inline int ChannelEdge::_internal_custom_records_size() const {
  return _internal_custom_records().size();
}
inline int ChannelEdge::custom_records_size() const {
  return _internal_custom_records_size();
}
inline void ChannelEdge::clear_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& ChannelEdge::_internal_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& ChannelEdge::custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.ChannelEdge.custom_records)
  return _internal_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* ChannelEdge::_internal_mutable_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* ChannelEdge::mutable_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.ChannelEdge.custom_records)
  return _internal_mutable_custom_records();
}

// -------------------------------------------------------------------

// ChannelGraphRequest

// bool include_unannounced = 1;
inline void ChannelGraphRequest::clear_include_unannounced() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_unannounced_ = false;
}
inline bool ChannelGraphRequest::include_unannounced() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelGraphRequest.include_unannounced)
  return _internal_include_unannounced();
}
inline void ChannelGraphRequest::set_include_unannounced(bool value) {
  _internal_set_include_unannounced(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelGraphRequest.include_unannounced)
}
inline bool ChannelGraphRequest::_internal_include_unannounced() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_unannounced_;
}
inline void ChannelGraphRequest::_internal_set_include_unannounced(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_unannounced_ = value;
}

// -------------------------------------------------------------------

// ChannelGraph

// repeated .lnrpc.LightningNode nodes = 1;
inline int ChannelGraph::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int ChannelGraph::nodes_size() const {
  return _internal_nodes_size();
}
inline void ChannelGraph::clear_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nodes_.Clear();
}
inline ::lnrpc::LightningNode* ChannelGraph::mutable_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelGraph.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>* ChannelGraph::mutable_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ChannelGraph.nodes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_nodes();
}
inline const ::lnrpc::LightningNode& ChannelGraph::nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelGraph.nodes)
  return _internal_nodes().Get(index);
}
inline ::lnrpc::LightningNode* ChannelGraph::add_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::LightningNode* _add = _internal_mutable_nodes()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ChannelGraph.nodes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>& ChannelGraph::nodes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ChannelGraph.nodes)
  return _internal_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>&
ChannelGraph::_internal_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nodes_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::LightningNode>*
ChannelGraph::_internal_mutable_nodes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.nodes_;
}

// repeated .lnrpc.ChannelEdge edges = 2;
inline int ChannelGraph::_internal_edges_size() const {
  return _internal_edges().size();
}
inline int ChannelGraph::edges_size() const {
  return _internal_edges_size();
}
inline void ChannelGraph::clear_edges() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.edges_.Clear();
}
inline ::lnrpc::ChannelEdge* ChannelGraph::mutable_edges(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelGraph.edges)
  return _internal_mutable_edges()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>* ChannelGraph::mutable_edges()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ChannelGraph.edges)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_edges();
}
inline const ::lnrpc::ChannelEdge& ChannelGraph::edges(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelGraph.edges)
  return _internal_edges().Get(index);
}
inline ::lnrpc::ChannelEdge* ChannelGraph::add_edges() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelEdge* _add = _internal_mutable_edges()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ChannelGraph.edges)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>& ChannelGraph::edges() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ChannelGraph.edges)
  return _internal_edges();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>&
ChannelGraph::_internal_edges() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.edges_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdge>*
ChannelGraph::_internal_mutable_edges() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.edges_;
}

// -------------------------------------------------------------------

// NodeMetricsRequest

// repeated .lnrpc.NodeMetricType types = 1;
inline int NodeMetricsRequest::_internal_types_size() const {
  return _internal_types().size();
}
inline int NodeMetricsRequest::types_size() const {
  return _internal_types_size();
}
inline void NodeMetricsRequest::clear_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.types_.Clear();
}
inline ::lnrpc::NodeMetricType NodeMetricsRequest::types(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.NodeMetricsRequest.types)
  return static_cast<::lnrpc::NodeMetricType>(_internal_types().Get(index));
}
inline void NodeMetricsRequest::set_types(int index, ::lnrpc::NodeMetricType value) {
  _internal_mutable_types()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.NodeMetricsRequest.types)
}
inline void NodeMetricsRequest::add_types(::lnrpc::NodeMetricType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_types()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.NodeMetricsRequest.types)
}
inline const ::google::protobuf::RepeatedField<int>& NodeMetricsRequest::types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.NodeMetricsRequest.types)
  return _internal_types();
}
inline ::google::protobuf::RepeatedField<int>* NodeMetricsRequest::mutable_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.NodeMetricsRequest.types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_types();
}
inline const ::google::protobuf::RepeatedField<int>& NodeMetricsRequest::_internal_types()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.types_;
}
inline ::google::protobuf::RepeatedField<int>* NodeMetricsRequest::_internal_mutable_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.types_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NodeMetricsResponse

// map<string, .lnrpc.FloatMetric> betweenness_centrality = 1;
inline int NodeMetricsResponse::_internal_betweenness_centrality_size() const {
  return _internal_betweenness_centrality().size();
}
inline int NodeMetricsResponse::betweenness_centrality_size() const {
  return _internal_betweenness_centrality_size();
}
inline void NodeMetricsResponse::clear_betweenness_centrality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.betweenness_centrality_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>& NodeMetricsResponse::_internal_betweenness_centrality() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.betweenness_centrality_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>& NodeMetricsResponse::betweenness_centrality() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.NodeMetricsResponse.betweenness_centrality)
  return _internal_betweenness_centrality();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>* NodeMetricsResponse::_internal_mutable_betweenness_centrality() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.betweenness_centrality_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::FloatMetric>* NodeMetricsResponse::mutable_betweenness_centrality() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.NodeMetricsResponse.betweenness_centrality)
  return _internal_mutable_betweenness_centrality();
}

// -------------------------------------------------------------------

// FloatMetric

// double value = 1;
inline void FloatMetric::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = 0;
}
inline double FloatMetric::value() const {
  // @@protoc_insertion_point(field_get:lnrpc.FloatMetric.value)
  return _internal_value();
}
inline void FloatMetric::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:lnrpc.FloatMetric.value)
}
inline double FloatMetric::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void FloatMetric::_internal_set_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// double normalized_value = 2;
inline void FloatMetric::clear_normalized_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.normalized_value_ = 0;
}
inline double FloatMetric::normalized_value() const {
  // @@protoc_insertion_point(field_get:lnrpc.FloatMetric.normalized_value)
  return _internal_normalized_value();
}
inline void FloatMetric::set_normalized_value(double value) {
  _internal_set_normalized_value(value);
  // @@protoc_insertion_point(field_set:lnrpc.FloatMetric.normalized_value)
}
inline double FloatMetric::_internal_normalized_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.normalized_value_;
}
inline void FloatMetric::_internal_set_normalized_value(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.normalized_value_ = value;
}

// -------------------------------------------------------------------

// ChanInfoRequest

// uint64 chan_id = 1 [jstype = JS_STRING];
inline void ChanInfoRequest::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChanInfoRequest::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChanInfoRequest.chan_id)
  return _internal_chan_id();
}
inline void ChanInfoRequest::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChanInfoRequest.chan_id)
}
inline ::uint64_t ChanInfoRequest::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void ChanInfoRequest::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// string chan_point = 2;
inline void ChanInfoRequest::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.ClearToEmpty();
}
inline const std::string& ChanInfoRequest::chan_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanInfoRequest.chan_point)
  return _internal_chan_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChanInfoRequest::set_chan_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChanInfoRequest.chan_point)
}
inline std::string* ChanInfoRequest::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanInfoRequest.chan_point)
  return _s;
}
inline const std::string& ChanInfoRequest::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_point_.Get();
}
inline void ChanInfoRequest::_internal_set_chan_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.Set(value, GetArena());
}
inline std::string* ChanInfoRequest::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chan_point_.Mutable( GetArena());
}
inline std::string* ChanInfoRequest::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanInfoRequest.chan_point)
  return _impl_.chan_point_.Release();
}
inline void ChanInfoRequest::set_allocated_chan_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chan_point_.IsDefault()) {
          _impl_.chan_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanInfoRequest.chan_point)
}

// -------------------------------------------------------------------

// NetworkInfoRequest

// -------------------------------------------------------------------

// NetworkInfo

// uint32 graph_diameter = 1;
inline void NetworkInfo::clear_graph_diameter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_diameter_ = 0u;
}
inline ::uint32_t NetworkInfo::graph_diameter() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.graph_diameter)
  return _internal_graph_diameter();
}
inline void NetworkInfo::set_graph_diameter(::uint32_t value) {
  _internal_set_graph_diameter(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.graph_diameter)
}
inline ::uint32_t NetworkInfo::_internal_graph_diameter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.graph_diameter_;
}
inline void NetworkInfo::_internal_set_graph_diameter(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.graph_diameter_ = value;
}

// double avg_out_degree = 2;
inline void NetworkInfo::clear_avg_out_degree() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avg_out_degree_ = 0;
}
inline double NetworkInfo::avg_out_degree() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.avg_out_degree)
  return _internal_avg_out_degree();
}
inline void NetworkInfo::set_avg_out_degree(double value) {
  _internal_set_avg_out_degree(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.avg_out_degree)
}
inline double NetworkInfo::_internal_avg_out_degree() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avg_out_degree_;
}
inline void NetworkInfo::_internal_set_avg_out_degree(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avg_out_degree_ = value;
}

// uint32 max_out_degree = 3;
inline void NetworkInfo::clear_max_out_degree() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_out_degree_ = 0u;
}
inline ::uint32_t NetworkInfo::max_out_degree() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.max_out_degree)
  return _internal_max_out_degree();
}
inline void NetworkInfo::set_max_out_degree(::uint32_t value) {
  _internal_set_max_out_degree(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.max_out_degree)
}
inline ::uint32_t NetworkInfo::_internal_max_out_degree() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_out_degree_;
}
inline void NetworkInfo::_internal_set_max_out_degree(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_out_degree_ = value;
}

// uint32 num_nodes = 4;
inline void NetworkInfo::clear_num_nodes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_nodes_ = 0u;
}
inline ::uint32_t NetworkInfo::num_nodes() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.num_nodes)
  return _internal_num_nodes();
}
inline void NetworkInfo::set_num_nodes(::uint32_t value) {
  _internal_set_num_nodes(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.num_nodes)
}
inline ::uint32_t NetworkInfo::_internal_num_nodes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_nodes_;
}
inline void NetworkInfo::_internal_set_num_nodes(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_nodes_ = value;
}

// uint32 num_channels = 5;
inline void NetworkInfo::clear_num_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = 0u;
}
inline ::uint32_t NetworkInfo::num_channels() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.num_channels)
  return _internal_num_channels();
}
inline void NetworkInfo::set_num_channels(::uint32_t value) {
  _internal_set_num_channels(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.num_channels)
}
inline ::uint32_t NetworkInfo::_internal_num_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_channels_;
}
inline void NetworkInfo::_internal_set_num_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_channels_ = value;
}

// int64 total_network_capacity = 6;
inline void NetworkInfo::clear_total_network_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_network_capacity_ = ::int64_t{0};
}
inline ::int64_t NetworkInfo::total_network_capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.total_network_capacity)
  return _internal_total_network_capacity();
}
inline void NetworkInfo::set_total_network_capacity(::int64_t value) {
  _internal_set_total_network_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.total_network_capacity)
}
inline ::int64_t NetworkInfo::_internal_total_network_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_network_capacity_;
}
inline void NetworkInfo::_internal_set_total_network_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_network_capacity_ = value;
}

// double avg_channel_size = 7;
inline void NetworkInfo::clear_avg_channel_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avg_channel_size_ = 0;
}
inline double NetworkInfo::avg_channel_size() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.avg_channel_size)
  return _internal_avg_channel_size();
}
inline void NetworkInfo::set_avg_channel_size(double value) {
  _internal_set_avg_channel_size(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.avg_channel_size)
}
inline double NetworkInfo::_internal_avg_channel_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avg_channel_size_;
}
inline void NetworkInfo::_internal_set_avg_channel_size(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avg_channel_size_ = value;
}

// int64 min_channel_size = 8;
inline void NetworkInfo::clear_min_channel_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_channel_size_ = ::int64_t{0};
}
inline ::int64_t NetworkInfo::min_channel_size() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.min_channel_size)
  return _internal_min_channel_size();
}
inline void NetworkInfo::set_min_channel_size(::int64_t value) {
  _internal_set_min_channel_size(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.min_channel_size)
}
inline ::int64_t NetworkInfo::_internal_min_channel_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_channel_size_;
}
inline void NetworkInfo::_internal_set_min_channel_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_channel_size_ = value;
}

// int64 max_channel_size = 9;
inline void NetworkInfo::clear_max_channel_size() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_channel_size_ = ::int64_t{0};
}
inline ::int64_t NetworkInfo::max_channel_size() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.max_channel_size)
  return _internal_max_channel_size();
}
inline void NetworkInfo::set_max_channel_size(::int64_t value) {
  _internal_set_max_channel_size(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.max_channel_size)
}
inline ::int64_t NetworkInfo::_internal_max_channel_size() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_channel_size_;
}
inline void NetworkInfo::_internal_set_max_channel_size(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_channel_size_ = value;
}

// int64 median_channel_size_sat = 10;
inline void NetworkInfo::clear_median_channel_size_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.median_channel_size_sat_ = ::int64_t{0};
}
inline ::int64_t NetworkInfo::median_channel_size_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.median_channel_size_sat)
  return _internal_median_channel_size_sat();
}
inline void NetworkInfo::set_median_channel_size_sat(::int64_t value) {
  _internal_set_median_channel_size_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.median_channel_size_sat)
}
inline ::int64_t NetworkInfo::_internal_median_channel_size_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.median_channel_size_sat_;
}
inline void NetworkInfo::_internal_set_median_channel_size_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.median_channel_size_sat_ = value;
}

// uint64 num_zombie_chans = 11;
inline void NetworkInfo::clear_num_zombie_chans() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_zombie_chans_ = ::uint64_t{0u};
}
inline ::uint64_t NetworkInfo::num_zombie_chans() const {
  // @@protoc_insertion_point(field_get:lnrpc.NetworkInfo.num_zombie_chans)
  return _internal_num_zombie_chans();
}
inline void NetworkInfo::set_num_zombie_chans(::uint64_t value) {
  _internal_set_num_zombie_chans(value);
  // @@protoc_insertion_point(field_set:lnrpc.NetworkInfo.num_zombie_chans)
}
inline ::uint64_t NetworkInfo::_internal_num_zombie_chans() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_zombie_chans_;
}
inline void NetworkInfo::_internal_set_num_zombie_chans(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_zombie_chans_ = value;
}

// -------------------------------------------------------------------

// StopRequest

// -------------------------------------------------------------------

// StopResponse

// -------------------------------------------------------------------

// GraphTopologySubscription

// -------------------------------------------------------------------

// GraphTopologyUpdate

// repeated .lnrpc.NodeUpdate node_updates = 1;
inline int GraphTopologyUpdate::_internal_node_updates_size() const {
  return _internal_node_updates().size();
}
inline int GraphTopologyUpdate::node_updates_size() const {
  return _internal_node_updates_size();
}
inline void GraphTopologyUpdate::clear_node_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_updates_.Clear();
}
inline ::lnrpc::NodeUpdate* GraphTopologyUpdate::mutable_node_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.GraphTopologyUpdate.node_updates)
  return _internal_mutable_node_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>* GraphTopologyUpdate::mutable_node_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.GraphTopologyUpdate.node_updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_updates();
}
inline const ::lnrpc::NodeUpdate& GraphTopologyUpdate::node_updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GraphTopologyUpdate.node_updates)
  return _internal_node_updates().Get(index);
}
inline ::lnrpc::NodeUpdate* GraphTopologyUpdate::add_node_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::NodeUpdate* _add = _internal_mutable_node_updates()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.GraphTopologyUpdate.node_updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>& GraphTopologyUpdate::node_updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.GraphTopologyUpdate.node_updates)
  return _internal_node_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>&
GraphTopologyUpdate::_internal_node_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_updates_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodeUpdate>*
GraphTopologyUpdate::_internal_mutable_node_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_updates_;
}

// repeated .lnrpc.ChannelEdgeUpdate channel_updates = 2;
inline int GraphTopologyUpdate::_internal_channel_updates_size() const {
  return _internal_channel_updates().size();
}
inline int GraphTopologyUpdate::channel_updates_size() const {
  return _internal_channel_updates_size();
}
inline void GraphTopologyUpdate::clear_channel_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_updates_.Clear();
}
inline ::lnrpc::ChannelEdgeUpdate* GraphTopologyUpdate::mutable_channel_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.GraphTopologyUpdate.channel_updates)
  return _internal_mutable_channel_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>* GraphTopologyUpdate::mutable_channel_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.GraphTopologyUpdate.channel_updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channel_updates();
}
inline const ::lnrpc::ChannelEdgeUpdate& GraphTopologyUpdate::channel_updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GraphTopologyUpdate.channel_updates)
  return _internal_channel_updates().Get(index);
}
inline ::lnrpc::ChannelEdgeUpdate* GraphTopologyUpdate::add_channel_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelEdgeUpdate* _add = _internal_mutable_channel_updates()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.GraphTopologyUpdate.channel_updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>& GraphTopologyUpdate::channel_updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.GraphTopologyUpdate.channel_updates)
  return _internal_channel_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>&
GraphTopologyUpdate::_internal_channel_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_updates_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelEdgeUpdate>*
GraphTopologyUpdate::_internal_mutable_channel_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channel_updates_;
}

// repeated .lnrpc.ClosedChannelUpdate closed_chans = 3;
inline int GraphTopologyUpdate::_internal_closed_chans_size() const {
  return _internal_closed_chans().size();
}
inline int GraphTopologyUpdate::closed_chans_size() const {
  return _internal_closed_chans_size();
}
inline void GraphTopologyUpdate::clear_closed_chans() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closed_chans_.Clear();
}
inline ::lnrpc::ClosedChannelUpdate* GraphTopologyUpdate::mutable_closed_chans(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.GraphTopologyUpdate.closed_chans)
  return _internal_mutable_closed_chans()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>* GraphTopologyUpdate::mutable_closed_chans()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.GraphTopologyUpdate.closed_chans)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_closed_chans();
}
inline const ::lnrpc::ClosedChannelUpdate& GraphTopologyUpdate::closed_chans(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.GraphTopologyUpdate.closed_chans)
  return _internal_closed_chans().Get(index);
}
inline ::lnrpc::ClosedChannelUpdate* GraphTopologyUpdate::add_closed_chans() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ClosedChannelUpdate* _add = _internal_mutable_closed_chans()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.GraphTopologyUpdate.closed_chans)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>& GraphTopologyUpdate::closed_chans() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.GraphTopologyUpdate.closed_chans)
  return _internal_closed_chans();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>&
GraphTopologyUpdate::_internal_closed_chans() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closed_chans_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ClosedChannelUpdate>*
GraphTopologyUpdate::_internal_mutable_closed_chans() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.closed_chans_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// NodeUpdate

// repeated string addresses = 1 [deprecated = true];
inline int NodeUpdate::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int NodeUpdate::addresses_size() const {
  return _internal_addresses_size();
}
inline void NodeUpdate::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline std::string* NodeUpdate::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.NodeUpdate.addresses)
  return _s;
}
inline const std::string& NodeUpdate::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeUpdate.addresses)
  return _internal_addresses().Get(index);
}
inline std::string* NodeUpdate::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeUpdate.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void NodeUpdate::set_addresses(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_addresses()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:lnrpc.NodeUpdate.addresses)
}
template <typename Arg_, typename... Args_>
inline void NodeUpdate::add_addresses(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_addresses(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:lnrpc.NodeUpdate.addresses)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NodeUpdate::addresses() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.NodeUpdate.addresses)
  return _internal_addresses();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NodeUpdate::mutable_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.NodeUpdate.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
NodeUpdate::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
NodeUpdate::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// string identity_key = 2;
inline void NodeUpdate::clear_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_key_.ClearToEmpty();
}
inline const std::string& NodeUpdate::identity_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeUpdate.identity_key)
  return _internal_identity_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeUpdate::set_identity_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeUpdate.identity_key)
}
inline std::string* NodeUpdate::mutable_identity_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_identity_key();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeUpdate.identity_key)
  return _s;
}
inline const std::string& NodeUpdate::_internal_identity_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.identity_key_.Get();
}
inline void NodeUpdate::_internal_set_identity_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_key_.Set(value, GetArena());
}
inline std::string* NodeUpdate::_internal_mutable_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.identity_key_.Mutable( GetArena());
}
inline std::string* NodeUpdate::release_identity_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeUpdate.identity_key)
  return _impl_.identity_key_.Release();
}
inline void NodeUpdate::set_allocated_identity_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.identity_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.identity_key_.IsDefault()) {
          _impl_.identity_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeUpdate.identity_key)
}

// bytes global_features = 3 [deprecated = true];
inline void NodeUpdate::clear_global_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_features_.ClearToEmpty();
}
inline const std::string& NodeUpdate::global_features() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeUpdate.global_features)
  return _internal_global_features();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeUpdate::set_global_features(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_features_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeUpdate.global_features)
}
inline std::string* NodeUpdate::mutable_global_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_global_features();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeUpdate.global_features)
  return _s;
}
inline const std::string& NodeUpdate::_internal_global_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.global_features_.Get();
}
inline void NodeUpdate::_internal_set_global_features(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_features_.Set(value, GetArena());
}
inline std::string* NodeUpdate::_internal_mutable_global_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.global_features_.Mutable( GetArena());
}
inline std::string* NodeUpdate::release_global_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeUpdate.global_features)
  return _impl_.global_features_.Release();
}
inline void NodeUpdate::set_allocated_global_features(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.global_features_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.global_features_.IsDefault()) {
          _impl_.global_features_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeUpdate.global_features)
}

// string alias = 4;
inline void NodeUpdate::clear_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.ClearToEmpty();
}
inline const std::string& NodeUpdate::alias() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeUpdate.alias)
  return _internal_alias();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeUpdate::set_alias(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeUpdate.alias)
}
inline std::string* NodeUpdate::mutable_alias() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_alias();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeUpdate.alias)
  return _s;
}
inline const std::string& NodeUpdate::_internal_alias() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.alias_.Get();
}
inline void NodeUpdate::_internal_set_alias(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.Set(value, GetArena());
}
inline std::string* NodeUpdate::_internal_mutable_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.alias_.Mutable( GetArena());
}
inline std::string* NodeUpdate::release_alias() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeUpdate.alias)
  return _impl_.alias_.Release();
}
inline void NodeUpdate::set_allocated_alias(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.alias_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.alias_.IsDefault()) {
          _impl_.alias_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeUpdate.alias)
}

// string color = 5;
inline void NodeUpdate::clear_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.ClearToEmpty();
}
inline const std::string& NodeUpdate::color() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeUpdate.color)
  return _internal_color();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void NodeUpdate::set_color(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.NodeUpdate.color)
}
inline std::string* NodeUpdate::mutable_color() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_color();
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeUpdate.color)
  return _s;
}
inline const std::string& NodeUpdate::_internal_color() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.color_.Get();
}
inline void NodeUpdate::_internal_set_color(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.Set(value, GetArena());
}
inline std::string* NodeUpdate::_internal_mutable_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.color_.Mutable( GetArena());
}
inline std::string* NodeUpdate::release_color() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.NodeUpdate.color)
  return _impl_.color_.Release();
}
inline void NodeUpdate::set_allocated_color(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.color_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.color_.IsDefault()) {
          _impl_.color_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.NodeUpdate.color)
}

// repeated .lnrpc.NodeAddress node_addresses = 7;
inline int NodeUpdate::_internal_node_addresses_size() const {
  return _internal_node_addresses().size();
}
inline int NodeUpdate::node_addresses_size() const {
  return _internal_node_addresses_size();
}
inline void NodeUpdate::clear_node_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_addresses_.Clear();
}
inline ::lnrpc::NodeAddress* NodeUpdate::mutable_node_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.NodeUpdate.node_addresses)
  return _internal_mutable_node_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>* NodeUpdate::mutable_node_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.NodeUpdate.node_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_addresses();
}
inline const ::lnrpc::NodeAddress& NodeUpdate::node_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.NodeUpdate.node_addresses)
  return _internal_node_addresses().Get(index);
}
inline ::lnrpc::NodeAddress* NodeUpdate::add_node_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::NodeAddress* _add = _internal_mutable_node_addresses()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.NodeUpdate.node_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>& NodeUpdate::node_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.NodeUpdate.node_addresses)
  return _internal_node_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>&
NodeUpdate::_internal_node_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::NodeAddress>*
NodeUpdate::_internal_mutable_node_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_addresses_;
}

// map<uint32, .lnrpc.Feature> features = 6;
inline int NodeUpdate::_internal_features_size() const {
  return _internal_features().size();
}
inline int NodeUpdate::features_size() const {
  return _internal_features_size();
}
inline void NodeUpdate::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& NodeUpdate::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& NodeUpdate::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.NodeUpdate.features)
  return _internal_features();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* NodeUpdate::_internal_mutable_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.features_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* NodeUpdate::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.NodeUpdate.features)
  return _internal_mutable_features();
}

// -------------------------------------------------------------------

// ChannelEdgeUpdate

// uint64 chan_id = 1 [jstype = JS_STRING];
inline void ChannelEdgeUpdate::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelEdgeUpdate::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdgeUpdate.chan_id)
  return _internal_chan_id();
}
inline void ChannelEdgeUpdate::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdgeUpdate.chan_id)
}
inline ::uint64_t ChannelEdgeUpdate::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void ChannelEdgeUpdate::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// .lnrpc.ChannelPoint chan_point = 2;
inline bool ChannelEdgeUpdate::has_chan_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chan_point_ != nullptr);
  return value;
}
inline void ChannelEdgeUpdate::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ != nullptr) _impl_.chan_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& ChannelEdgeUpdate::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.chan_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChannelEdgeUpdate::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdgeUpdate.chan_point)
  return _internal_chan_point();
}
inline void ChannelEdgeUpdate::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }
  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEdgeUpdate.chan_point)
}
inline ::lnrpc::ChannelPoint* ChannelEdgeUpdate::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* ChannelEdgeUpdate::unsafe_arena_release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdgeUpdate.chan_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* ChannelEdgeUpdate::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.chan_point_;
}
inline ::lnrpc::ChannelPoint* ChannelEdgeUpdate::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdgeUpdate.chan_point)
  return _msg;
}
inline void ChannelEdgeUpdate::set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chan_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdgeUpdate.chan_point)
}

// int64 capacity = 3;
inline void ChannelEdgeUpdate::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::int64_t{0};
}
inline ::int64_t ChannelEdgeUpdate::capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdgeUpdate.capacity)
  return _internal_capacity();
}
inline void ChannelEdgeUpdate::set_capacity(::int64_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdgeUpdate.capacity)
}
inline ::int64_t ChannelEdgeUpdate::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void ChannelEdgeUpdate::_internal_set_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// .lnrpc.RoutingPolicy routing_policy = 4;
inline bool ChannelEdgeUpdate::has_routing_policy() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.routing_policy_ != nullptr);
  return value;
}
inline void ChannelEdgeUpdate::clear_routing_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.routing_policy_ != nullptr) _impl_.routing_policy_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::RoutingPolicy& ChannelEdgeUpdate::_internal_routing_policy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::RoutingPolicy* p = _impl_.routing_policy_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::RoutingPolicy&>(::lnrpc::_RoutingPolicy_default_instance_);
}
inline const ::lnrpc::RoutingPolicy& ChannelEdgeUpdate::routing_policy() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdgeUpdate.routing_policy)
  return _internal_routing_policy();
}
inline void ChannelEdgeUpdate::unsafe_arena_set_allocated_routing_policy(::lnrpc::RoutingPolicy* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.routing_policy_);
  }
  _impl_.routing_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelEdgeUpdate.routing_policy)
}
inline ::lnrpc::RoutingPolicy* ChannelEdgeUpdate::release_routing_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::RoutingPolicy* released = _impl_.routing_policy_;
  _impl_.routing_policy_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::RoutingPolicy* ChannelEdgeUpdate::unsafe_arena_release_routing_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdgeUpdate.routing_policy)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::RoutingPolicy* temp = _impl_.routing_policy_;
  _impl_.routing_policy_ = nullptr;
  return temp;
}
inline ::lnrpc::RoutingPolicy* ChannelEdgeUpdate::_internal_mutable_routing_policy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.routing_policy_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::RoutingPolicy>(GetArena());
    _impl_.routing_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(p);
  }
  return _impl_.routing_policy_;
}
inline ::lnrpc::RoutingPolicy* ChannelEdgeUpdate::mutable_routing_policy() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::RoutingPolicy* _msg = _internal_mutable_routing_policy();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdgeUpdate.routing_policy)
  return _msg;
}
inline void ChannelEdgeUpdate::set_allocated_routing_policy(::lnrpc::RoutingPolicy* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.routing_policy_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.routing_policy_ = reinterpret_cast<::lnrpc::RoutingPolicy*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdgeUpdate.routing_policy)
}

// string advertising_node = 5;
inline void ChannelEdgeUpdate::clear_advertising_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advertising_node_.ClearToEmpty();
}
inline const std::string& ChannelEdgeUpdate::advertising_node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdgeUpdate.advertising_node)
  return _internal_advertising_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelEdgeUpdate::set_advertising_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advertising_node_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdgeUpdate.advertising_node)
}
inline std::string* ChannelEdgeUpdate::mutable_advertising_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_advertising_node();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdgeUpdate.advertising_node)
  return _s;
}
inline const std::string& ChannelEdgeUpdate::_internal_advertising_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.advertising_node_.Get();
}
inline void ChannelEdgeUpdate::_internal_set_advertising_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advertising_node_.Set(value, GetArena());
}
inline std::string* ChannelEdgeUpdate::_internal_mutable_advertising_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.advertising_node_.Mutable( GetArena());
}
inline std::string* ChannelEdgeUpdate::release_advertising_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdgeUpdate.advertising_node)
  return _impl_.advertising_node_.Release();
}
inline void ChannelEdgeUpdate::set_allocated_advertising_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.advertising_node_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.advertising_node_.IsDefault()) {
          _impl_.advertising_node_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdgeUpdate.advertising_node)
}

// string connecting_node = 6;
inline void ChannelEdgeUpdate::clear_connecting_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connecting_node_.ClearToEmpty();
}
inline const std::string& ChannelEdgeUpdate::connecting_node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelEdgeUpdate.connecting_node)
  return _internal_connecting_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelEdgeUpdate::set_connecting_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connecting_node_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelEdgeUpdate.connecting_node)
}
inline std::string* ChannelEdgeUpdate::mutable_connecting_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_connecting_node();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelEdgeUpdate.connecting_node)
  return _s;
}
inline const std::string& ChannelEdgeUpdate::_internal_connecting_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.connecting_node_.Get();
}
inline void ChannelEdgeUpdate::_internal_set_connecting_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connecting_node_.Set(value, GetArena());
}
inline std::string* ChannelEdgeUpdate::_internal_mutable_connecting_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.connecting_node_.Mutable( GetArena());
}
inline std::string* ChannelEdgeUpdate::release_connecting_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelEdgeUpdate.connecting_node)
  return _impl_.connecting_node_.Release();
}
inline void ChannelEdgeUpdate::set_allocated_connecting_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.connecting_node_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.connecting_node_.IsDefault()) {
          _impl_.connecting_node_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelEdgeUpdate.connecting_node)
}

// -------------------------------------------------------------------

// ClosedChannelUpdate

// uint64 chan_id = 1 [jstype = JS_STRING];
inline void ClosedChannelUpdate::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t ClosedChannelUpdate::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelUpdate.chan_id)
  return _internal_chan_id();
}
inline void ClosedChannelUpdate::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelUpdate.chan_id)
}
inline ::uint64_t ClosedChannelUpdate::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void ClosedChannelUpdate::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// int64 capacity = 2;
inline void ClosedChannelUpdate::clear_capacity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = ::int64_t{0};
}
inline ::int64_t ClosedChannelUpdate::capacity() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelUpdate.capacity)
  return _internal_capacity();
}
inline void ClosedChannelUpdate::set_capacity(::int64_t value) {
  _internal_set_capacity(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelUpdate.capacity)
}
inline ::int64_t ClosedChannelUpdate::_internal_capacity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.capacity_;
}
inline void ClosedChannelUpdate::_internal_set_capacity(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.capacity_ = value;
}

// uint32 closed_height = 3;
inline void ClosedChannelUpdate::clear_closed_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closed_height_ = 0u;
}
inline ::uint32_t ClosedChannelUpdate::closed_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelUpdate.closed_height)
  return _internal_closed_height();
}
inline void ClosedChannelUpdate::set_closed_height(::uint32_t value) {
  _internal_set_closed_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.ClosedChannelUpdate.closed_height)
}
inline ::uint32_t ClosedChannelUpdate::_internal_closed_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.closed_height_;
}
inline void ClosedChannelUpdate::_internal_set_closed_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.closed_height_ = value;
}

// .lnrpc.ChannelPoint chan_point = 4;
inline bool ClosedChannelUpdate::has_chan_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chan_point_ != nullptr);
  return value;
}
inline void ClosedChannelUpdate::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ != nullptr) _impl_.chan_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& ClosedChannelUpdate::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.chan_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ClosedChannelUpdate::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ClosedChannelUpdate.chan_point)
  return _internal_chan_point();
}
inline void ClosedChannelUpdate::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }
  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ClosedChannelUpdate.chan_point)
}
inline ::lnrpc::ChannelPoint* ClosedChannelUpdate::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* ClosedChannelUpdate::unsafe_arena_release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ClosedChannelUpdate.chan_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* ClosedChannelUpdate::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.chan_point_;
}
inline ::lnrpc::ChannelPoint* ClosedChannelUpdate::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ClosedChannelUpdate.chan_point)
  return _msg;
}
inline void ClosedChannelUpdate::set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chan_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ClosedChannelUpdate.chan_point)
}

// -------------------------------------------------------------------

// HopHint

// string node_id = 1;
inline void HopHint::clear_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.ClearToEmpty();
}
inline const std::string& HopHint::node_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.HopHint.node_id)
  return _internal_node_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HopHint::set_node_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.HopHint.node_id)
}
inline std::string* HopHint::mutable_node_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_node_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.HopHint.node_id)
  return _s;
}
inline const std::string& HopHint::_internal_node_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_id_.Get();
}
inline void HopHint::_internal_set_node_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.Set(value, GetArena());
}
inline std::string* HopHint::_internal_mutable_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_id_.Mutable( GetArena());
}
inline std::string* HopHint::release_node_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.HopHint.node_id)
  return _impl_.node_id_.Release();
}
inline void HopHint::set_allocated_node_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.node_id_.IsDefault()) {
          _impl_.node_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.HopHint.node_id)
}

// uint64 chan_id = 2 [jstype = JS_STRING];
inline void HopHint::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t HopHint::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.HopHint.chan_id)
  return _internal_chan_id();
}
inline void HopHint::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.HopHint.chan_id)
}
inline ::uint64_t HopHint::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void HopHint::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// uint32 fee_base_msat = 3;
inline void HopHint::clear_fee_base_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_base_msat_ = 0u;
}
inline ::uint32_t HopHint::fee_base_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.HopHint.fee_base_msat)
  return _internal_fee_base_msat();
}
inline void HopHint::set_fee_base_msat(::uint32_t value) {
  _internal_set_fee_base_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.HopHint.fee_base_msat)
}
inline ::uint32_t HopHint::_internal_fee_base_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_base_msat_;
}
inline void HopHint::_internal_set_fee_base_msat(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_base_msat_ = value;
}

// uint32 fee_proportional_millionths = 4;
inline void HopHint::clear_fee_proportional_millionths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_proportional_millionths_ = 0u;
}
inline ::uint32_t HopHint::fee_proportional_millionths() const {
  // @@protoc_insertion_point(field_get:lnrpc.HopHint.fee_proportional_millionths)
  return _internal_fee_proportional_millionths();
}
inline void HopHint::set_fee_proportional_millionths(::uint32_t value) {
  _internal_set_fee_proportional_millionths(value);
  // @@protoc_insertion_point(field_set:lnrpc.HopHint.fee_proportional_millionths)
}
inline ::uint32_t HopHint::_internal_fee_proportional_millionths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_proportional_millionths_;
}
inline void HopHint::_internal_set_fee_proportional_millionths(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_proportional_millionths_ = value;
}

// uint32 cltv_expiry_delta = 5;
inline void HopHint::clear_cltv_expiry_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_delta_ = 0u;
}
inline ::uint32_t HopHint::cltv_expiry_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.HopHint.cltv_expiry_delta)
  return _internal_cltv_expiry_delta();
}
inline void HopHint::set_cltv_expiry_delta(::uint32_t value) {
  _internal_set_cltv_expiry_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.HopHint.cltv_expiry_delta)
}
inline ::uint32_t HopHint::_internal_cltv_expiry_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cltv_expiry_delta_;
}
inline void HopHint::_internal_set_cltv_expiry_delta(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_delta_ = value;
}

// -------------------------------------------------------------------

// SetID

// bytes set_id = 1;
inline void SetID::clear_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.ClearToEmpty();
}
inline const std::string& SetID::set_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.SetID.set_id)
  return _internal_set_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetID::set_set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.SetID.set_id)
}
inline std::string* SetID::mutable_set_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_set_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.SetID.set_id)
  return _s;
}
inline const std::string& SetID::_internal_set_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_id_.Get();
}
inline void SetID::_internal_set_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.Set(value, GetArena());
}
inline std::string* SetID::_internal_mutable_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.set_id_.Mutable( GetArena());
}
inline std::string* SetID::release_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.SetID.set_id)
  return _impl_.set_id_.Release();
}
inline void SetID::set_allocated_set_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.set_id_.IsDefault()) {
          _impl_.set_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.SetID.set_id)
}

// -------------------------------------------------------------------

// RouteHint

// repeated .lnrpc.HopHint hop_hints = 1;
inline int RouteHint::_internal_hop_hints_size() const {
  return _internal_hop_hints().size();
}
inline int RouteHint::hop_hints_size() const {
  return _internal_hop_hints_size();
}
inline void RouteHint::clear_hop_hints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hop_hints_.Clear();
}
inline ::lnrpc::HopHint* RouteHint::mutable_hop_hints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.RouteHint.hop_hints)
  return _internal_mutable_hop_hints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>* RouteHint::mutable_hop_hints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.RouteHint.hop_hints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_hop_hints();
}
inline const ::lnrpc::HopHint& RouteHint::hop_hints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RouteHint.hop_hints)
  return _internal_hop_hints().Get(index);
}
inline ::lnrpc::HopHint* RouteHint::add_hop_hints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::HopHint* _add = _internal_mutable_hop_hints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.RouteHint.hop_hints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>& RouteHint::hop_hints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.RouteHint.hop_hints)
  return _internal_hop_hints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>&
RouteHint::_internal_hop_hints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hop_hints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::HopHint>*
RouteHint::_internal_mutable_hop_hints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.hop_hints_;
}

// -------------------------------------------------------------------

// BlindedPaymentPath

// .lnrpc.BlindedPath blinded_path = 1;
inline bool BlindedPaymentPath::has_blinded_path() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blinded_path_ != nullptr);
  return value;
}
inline void BlindedPaymentPath::clear_blinded_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blinded_path_ != nullptr) _impl_.blinded_path_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::BlindedPath& BlindedPaymentPath::_internal_blinded_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::BlindedPath* p = _impl_.blinded_path_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::BlindedPath&>(::lnrpc::_BlindedPath_default_instance_);
}
inline const ::lnrpc::BlindedPath& BlindedPaymentPath::blinded_path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.blinded_path)
  return _internal_blinded_path();
}
inline void BlindedPaymentPath::unsafe_arena_set_allocated_blinded_path(::lnrpc::BlindedPath* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.blinded_path_);
  }
  _impl_.blinded_path_ = reinterpret_cast<::lnrpc::BlindedPath*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.BlindedPaymentPath.blinded_path)
}
inline ::lnrpc::BlindedPath* BlindedPaymentPath::release_blinded_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::BlindedPath* released = _impl_.blinded_path_;
  _impl_.blinded_path_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::BlindedPath* BlindedPaymentPath::unsafe_arena_release_blinded_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BlindedPaymentPath.blinded_path)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::BlindedPath* temp = _impl_.blinded_path_;
  _impl_.blinded_path_ = nullptr;
  return temp;
}
inline ::lnrpc::BlindedPath* BlindedPaymentPath::_internal_mutable_blinded_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blinded_path_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::BlindedPath>(GetArena());
    _impl_.blinded_path_ = reinterpret_cast<::lnrpc::BlindedPath*>(p);
  }
  return _impl_.blinded_path_;
}
inline ::lnrpc::BlindedPath* BlindedPaymentPath::mutable_blinded_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::BlindedPath* _msg = _internal_mutable_blinded_path();
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedPaymentPath.blinded_path)
  return _msg;
}
inline void BlindedPaymentPath::set_allocated_blinded_path(::lnrpc::BlindedPath* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.blinded_path_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.blinded_path_ = reinterpret_cast<::lnrpc::BlindedPath*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BlindedPaymentPath.blinded_path)
}

// uint64 base_fee_msat = 2;
inline void BlindedPaymentPath::clear_base_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = ::uint64_t{0u};
}
inline ::uint64_t BlindedPaymentPath::base_fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.base_fee_msat)
  return _internal_base_fee_msat();
}
inline void BlindedPaymentPath::set_base_fee_msat(::uint64_t value) {
  _internal_set_base_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPaymentPath.base_fee_msat)
}
inline ::uint64_t BlindedPaymentPath::_internal_base_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_msat_;
}
inline void BlindedPaymentPath::_internal_set_base_fee_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = value;
}

// uint32 proportional_fee_rate = 3;
inline void BlindedPaymentPath::clear_proportional_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proportional_fee_rate_ = 0u;
}
inline ::uint32_t BlindedPaymentPath::proportional_fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.proportional_fee_rate)
  return _internal_proportional_fee_rate();
}
inline void BlindedPaymentPath::set_proportional_fee_rate(::uint32_t value) {
  _internal_set_proportional_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPaymentPath.proportional_fee_rate)
}
inline ::uint32_t BlindedPaymentPath::_internal_proportional_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.proportional_fee_rate_;
}
inline void BlindedPaymentPath::_internal_set_proportional_fee_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.proportional_fee_rate_ = value;
}

// uint32 total_cltv_delta = 4;
inline void BlindedPaymentPath::clear_total_cltv_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_cltv_delta_ = 0u;
}
inline ::uint32_t BlindedPaymentPath::total_cltv_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.total_cltv_delta)
  return _internal_total_cltv_delta();
}
inline void BlindedPaymentPath::set_total_cltv_delta(::uint32_t value) {
  _internal_set_total_cltv_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPaymentPath.total_cltv_delta)
}
inline ::uint32_t BlindedPaymentPath::_internal_total_cltv_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_cltv_delta_;
}
inline void BlindedPaymentPath::_internal_set_total_cltv_delta(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_cltv_delta_ = value;
}

// uint64 htlc_min_msat = 5;
inline void BlindedPaymentPath::clear_htlc_min_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_min_msat_ = ::uint64_t{0u};
}
inline ::uint64_t BlindedPaymentPath::htlc_min_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.htlc_min_msat)
  return _internal_htlc_min_msat();
}
inline void BlindedPaymentPath::set_htlc_min_msat(::uint64_t value) {
  _internal_set_htlc_min_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPaymentPath.htlc_min_msat)
}
inline ::uint64_t BlindedPaymentPath::_internal_htlc_min_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_min_msat_;
}
inline void BlindedPaymentPath::_internal_set_htlc_min_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_min_msat_ = value;
}

// uint64 htlc_max_msat = 6;
inline void BlindedPaymentPath::clear_htlc_max_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_max_msat_ = ::uint64_t{0u};
}
inline ::uint64_t BlindedPaymentPath::htlc_max_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.htlc_max_msat)
  return _internal_htlc_max_msat();
}
inline void BlindedPaymentPath::set_htlc_max_msat(::uint64_t value) {
  _internal_set_htlc_max_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPaymentPath.htlc_max_msat)
}
inline ::uint64_t BlindedPaymentPath::_internal_htlc_max_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_max_msat_;
}
inline void BlindedPaymentPath::_internal_set_htlc_max_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_max_msat_ = value;
}

// repeated .lnrpc.FeatureBit features = 7;
inline int BlindedPaymentPath::_internal_features_size() const {
  return _internal_features().size();
}
inline int BlindedPaymentPath::features_size() const {
  return _internal_features_size();
}
inline void BlindedPaymentPath::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline ::lnrpc::FeatureBit BlindedPaymentPath::features(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPaymentPath.features)
  return static_cast<::lnrpc::FeatureBit>(_internal_features().Get(index));
}
inline void BlindedPaymentPath::set_features(int index, ::lnrpc::FeatureBit value) {
  _internal_mutable_features()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPaymentPath.features)
}
inline void BlindedPaymentPath::add_features(::lnrpc::FeatureBit value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_features()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.BlindedPaymentPath.features)
}
inline const ::google::protobuf::RepeatedField<int>& BlindedPaymentPath::features() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.BlindedPaymentPath.features)
  return _internal_features();
}
inline ::google::protobuf::RepeatedField<int>* BlindedPaymentPath::mutable_features()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.BlindedPaymentPath.features)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_features();
}
inline const ::google::protobuf::RepeatedField<int>& BlindedPaymentPath::_internal_features()
    const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_;
}
inline ::google::protobuf::RepeatedField<int>* BlindedPaymentPath::_internal_mutable_features() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.features_;
}

// -------------------------------------------------------------------

// BlindedPath

// bytes introduction_node = 1;
inline void BlindedPath::clear_introduction_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.introduction_node_.ClearToEmpty();
}
inline const std::string& BlindedPath::introduction_node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPath.introduction_node)
  return _internal_introduction_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlindedPath::set_introduction_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.introduction_node_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPath.introduction_node)
}
inline std::string* BlindedPath::mutable_introduction_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_introduction_node();
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedPath.introduction_node)
  return _s;
}
inline const std::string& BlindedPath::_internal_introduction_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.introduction_node_.Get();
}
inline void BlindedPath::_internal_set_introduction_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.introduction_node_.Set(value, GetArena());
}
inline std::string* BlindedPath::_internal_mutable_introduction_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.introduction_node_.Mutable( GetArena());
}
inline std::string* BlindedPath::release_introduction_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BlindedPath.introduction_node)
  return _impl_.introduction_node_.Release();
}
inline void BlindedPath::set_allocated_introduction_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.introduction_node_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.introduction_node_.IsDefault()) {
          _impl_.introduction_node_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BlindedPath.introduction_node)
}

// bytes blinding_point = 2;
inline void BlindedPath::clear_blinding_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.ClearToEmpty();
}
inline const std::string& BlindedPath::blinding_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPath.blinding_point)
  return _internal_blinding_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlindedPath::set_blinding_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPath.blinding_point)
}
inline std::string* BlindedPath::mutable_blinding_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_blinding_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedPath.blinding_point)
  return _s;
}
inline const std::string& BlindedPath::_internal_blinding_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blinding_point_.Get();
}
inline void BlindedPath::_internal_set_blinding_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.Set(value, GetArena());
}
inline std::string* BlindedPath::_internal_mutable_blinding_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.blinding_point_.Mutable( GetArena());
}
inline std::string* BlindedPath::release_blinding_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BlindedPath.blinding_point)
  return _impl_.blinding_point_.Release();
}
inline void BlindedPath::set_allocated_blinding_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinding_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.blinding_point_.IsDefault()) {
          _impl_.blinding_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BlindedPath.blinding_point)
}

// repeated .lnrpc.BlindedHop blinded_hops = 3;
inline int BlindedPath::_internal_blinded_hops_size() const {
  return _internal_blinded_hops().size();
}
inline int BlindedPath::blinded_hops_size() const {
  return _internal_blinded_hops_size();
}
inline void BlindedPath::clear_blinded_hops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_hops_.Clear();
}
inline ::lnrpc::BlindedHop* BlindedPath::mutable_blinded_hops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedPath.blinded_hops)
  return _internal_mutable_blinded_hops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>* BlindedPath::mutable_blinded_hops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.BlindedPath.blinded_hops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blinded_hops();
}
inline const ::lnrpc::BlindedHop& BlindedPath::blinded_hops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPath.blinded_hops)
  return _internal_blinded_hops().Get(index);
}
inline ::lnrpc::BlindedHop* BlindedPath::add_blinded_hops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::BlindedHop* _add = _internal_mutable_blinded_hops()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.BlindedPath.blinded_hops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>& BlindedPath::blinded_hops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.BlindedPath.blinded_hops)
  return _internal_blinded_hops();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>&
BlindedPath::_internal_blinded_hops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blinded_hops_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedHop>*
BlindedPath::_internal_mutable_blinded_hops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blinded_hops_;
}

// -------------------------------------------------------------------

// BlindedHop

// bytes blinded_node = 1;
inline void BlindedHop::clear_blinded_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_node_.ClearToEmpty();
}
inline const std::string& BlindedHop::blinded_node() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedHop.blinded_node)
  return _internal_blinded_node();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlindedHop::set_blinded_node(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_node_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BlindedHop.blinded_node)
}
inline std::string* BlindedHop::mutable_blinded_node() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_blinded_node();
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedHop.blinded_node)
  return _s;
}
inline const std::string& BlindedHop::_internal_blinded_node() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blinded_node_.Get();
}
inline void BlindedHop::_internal_set_blinded_node(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_node_.Set(value, GetArena());
}
inline std::string* BlindedHop::_internal_mutable_blinded_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.blinded_node_.Mutable( GetArena());
}
inline std::string* BlindedHop::release_blinded_node() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BlindedHop.blinded_node)
  return _impl_.blinded_node_.Release();
}
inline void BlindedHop::set_allocated_blinded_node(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_node_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.blinded_node_.IsDefault()) {
          _impl_.blinded_node_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BlindedHop.blinded_node)
}

// bytes encrypted_data = 2;
inline void BlindedHop::clear_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.ClearToEmpty();
}
inline const std::string& BlindedHop::encrypted_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedHop.encrypted_data)
  return _internal_encrypted_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BlindedHop::set_encrypted_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BlindedHop.encrypted_data)
}
inline std::string* BlindedHop::mutable_encrypted_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_encrypted_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedHop.encrypted_data)
  return _s;
}
inline const std::string& BlindedHop::_internal_encrypted_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.encrypted_data_.Get();
}
inline void BlindedHop::_internal_set_encrypted_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.Set(value, GetArena());
}
inline std::string* BlindedHop::_internal_mutable_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.encrypted_data_.Mutable( GetArena());
}
inline std::string* BlindedHop::release_encrypted_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BlindedHop.encrypted_data)
  return _impl_.encrypted_data_.Release();
}
inline void BlindedHop::set_allocated_encrypted_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.encrypted_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.encrypted_data_.IsDefault()) {
          _impl_.encrypted_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BlindedHop.encrypted_data)
}

// -------------------------------------------------------------------

// AMPInvoiceState

// .lnrpc.InvoiceHTLCState state = 1;
inline void AMPInvoiceState::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::lnrpc::InvoiceHTLCState AMPInvoiceState::state() const {
  // @@protoc_insertion_point(field_get:lnrpc.AMPInvoiceState.state)
  return _internal_state();
}
inline void AMPInvoiceState::set_state(::lnrpc::InvoiceHTLCState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:lnrpc.AMPInvoiceState.state)
}
inline ::lnrpc::InvoiceHTLCState AMPInvoiceState::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::InvoiceHTLCState>(_impl_.state_);
}
inline void AMPInvoiceState::_internal_set_state(::lnrpc::InvoiceHTLCState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// uint64 settle_index = 2;
inline void AMPInvoiceState::clear_settle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_index_ = ::uint64_t{0u};
}
inline ::uint64_t AMPInvoiceState::settle_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.AMPInvoiceState.settle_index)
  return _internal_settle_index();
}
inline void AMPInvoiceState::set_settle_index(::uint64_t value) {
  _internal_set_settle_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.AMPInvoiceState.settle_index)
}
inline ::uint64_t AMPInvoiceState::_internal_settle_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settle_index_;
}
inline void AMPInvoiceState::_internal_set_settle_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_index_ = value;
}

// int64 settle_time = 3;
inline void AMPInvoiceState::clear_settle_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_time_ = ::int64_t{0};
}
inline ::int64_t AMPInvoiceState::settle_time() const {
  // @@protoc_insertion_point(field_get:lnrpc.AMPInvoiceState.settle_time)
  return _internal_settle_time();
}
inline void AMPInvoiceState::set_settle_time(::int64_t value) {
  _internal_set_settle_time(value);
  // @@protoc_insertion_point(field_set:lnrpc.AMPInvoiceState.settle_time)
}
inline ::int64_t AMPInvoiceState::_internal_settle_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settle_time_;
}
inline void AMPInvoiceState::_internal_set_settle_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_time_ = value;
}

// int64 amt_paid_msat = 5;
inline void AMPInvoiceState::clear_amt_paid_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_msat_ = ::int64_t{0};
}
inline ::int64_t AMPInvoiceState::amt_paid_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.AMPInvoiceState.amt_paid_msat)
  return _internal_amt_paid_msat();
}
inline void AMPInvoiceState::set_amt_paid_msat(::int64_t value) {
  _internal_set_amt_paid_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.AMPInvoiceState.amt_paid_msat)
}
inline ::int64_t AMPInvoiceState::_internal_amt_paid_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_paid_msat_;
}
inline void AMPInvoiceState::_internal_set_amt_paid_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_msat_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Invoice

// string memo = 1;
inline void Invoice::clear_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.ClearToEmpty();
}
inline const std::string& Invoice::memo() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.memo)
  return _internal_memo();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_memo(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.memo)
}
inline std::string* Invoice::mutable_memo() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_memo();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.memo)
  return _s;
}
inline const std::string& Invoice::_internal_memo() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memo_.Get();
}
inline void Invoice::_internal_set_memo(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.memo_.Mutable( GetArena());
}
inline std::string* Invoice::release_memo() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.memo)
  return _impl_.memo_.Release();
}
inline void Invoice::set_allocated_memo(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memo_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.memo_.IsDefault()) {
          _impl_.memo_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.memo)
}

// bytes r_preimage = 3;
inline void Invoice::clear_r_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_preimage_.ClearToEmpty();
}
inline const std::string& Invoice::r_preimage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.r_preimage)
  return _internal_r_preimage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_r_preimage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_preimage_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.r_preimage)
}
inline std::string* Invoice::mutable_r_preimage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_r_preimage();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.r_preimage)
  return _s;
}
inline const std::string& Invoice::_internal_r_preimage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_preimage_.Get();
}
inline void Invoice::_internal_set_r_preimage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_preimage_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_r_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.r_preimage_.Mutable( GetArena());
}
inline std::string* Invoice::release_r_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.r_preimage)
  return _impl_.r_preimage_.Release();
}
inline void Invoice::set_allocated_r_preimage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_preimage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.r_preimage_.IsDefault()) {
          _impl_.r_preimage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.r_preimage)
}

// bytes r_hash = 4;
inline void Invoice::clear_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.ClearToEmpty();
}
inline const std::string& Invoice::r_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.r_hash)
  return _internal_r_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_r_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.r_hash)
}
inline std::string* Invoice::mutable_r_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_r_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.r_hash)
  return _s;
}
inline const std::string& Invoice::_internal_r_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_hash_.Get();
}
inline void Invoice::_internal_set_r_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.r_hash_.Mutable( GetArena());
}
inline std::string* Invoice::release_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.r_hash)
  return _impl_.r_hash_.Release();
}
inline void Invoice::set_allocated_r_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.r_hash_.IsDefault()) {
          _impl_.r_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.r_hash)
}

// int64 value = 5;
inline void Invoice::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t Invoice::value() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.value)
  return _internal_value();
}
inline void Invoice::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.value)
}
inline ::int64_t Invoice::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void Invoice::_internal_set_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// int64 value_msat = 23;
inline void Invoice::clear_value_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_msat_ = ::int64_t{0};
}
inline ::int64_t Invoice::value_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.value_msat)
  return _internal_value_msat();
}
inline void Invoice::set_value_msat(::int64_t value) {
  _internal_set_value_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.value_msat)
}
inline ::int64_t Invoice::_internal_value_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_msat_;
}
inline void Invoice::_internal_set_value_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_msat_ = value;
}

// bool settled = 6 [deprecated = true];
inline void Invoice::clear_settled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settled_ = false;
}
inline bool Invoice::settled() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.settled)
  return _internal_settled();
}
inline void Invoice::set_settled(bool value) {
  _internal_set_settled(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.settled)
}
inline bool Invoice::_internal_settled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settled_;
}
inline void Invoice::_internal_set_settled(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settled_ = value;
}

// int64 creation_date = 7;
inline void Invoice::clear_creation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_ = ::int64_t{0};
}
inline ::int64_t Invoice::creation_date() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.creation_date)
  return _internal_creation_date();
}
inline void Invoice::set_creation_date(::int64_t value) {
  _internal_set_creation_date(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.creation_date)
}
inline ::int64_t Invoice::_internal_creation_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_date_;
}
inline void Invoice::_internal_set_creation_date(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_ = value;
}

// int64 settle_date = 8;
inline void Invoice::clear_settle_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_date_ = ::int64_t{0};
}
inline ::int64_t Invoice::settle_date() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.settle_date)
  return _internal_settle_date();
}
inline void Invoice::set_settle_date(::int64_t value) {
  _internal_set_settle_date(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.settle_date)
}
inline ::int64_t Invoice::_internal_settle_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settle_date_;
}
inline void Invoice::_internal_set_settle_date(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_date_ = value;
}

// string payment_request = 9;
inline void Invoice::clear_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.ClearToEmpty();
}
inline const std::string& Invoice::payment_request() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.payment_request)
  return _internal_payment_request();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_payment_request(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.payment_request)
}
inline std::string* Invoice::mutable_payment_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_request();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.payment_request)
  return _s;
}
inline const std::string& Invoice::_internal_payment_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_request_.Get();
}
inline void Invoice::_internal_set_payment_request(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_request_.Mutable( GetArena());
}
inline std::string* Invoice::release_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.payment_request)
  return _impl_.payment_request_.Release();
}
inline void Invoice::set_allocated_payment_request(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_request_.IsDefault()) {
          _impl_.payment_request_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.payment_request)
}

// bytes description_hash = 10;
inline void Invoice::clear_description_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.ClearToEmpty();
}
inline const std::string& Invoice::description_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.description_hash)
  return _internal_description_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_description_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.description_hash)
}
inline std::string* Invoice::mutable_description_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.description_hash)
  return _s;
}
inline const std::string& Invoice::_internal_description_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_hash_.Get();
}
inline void Invoice::_internal_set_description_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_description_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_hash_.Mutable( GetArena());
}
inline std::string* Invoice::release_description_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.description_hash)
  return _impl_.description_hash_.Release();
}
inline void Invoice::set_allocated_description_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_hash_.IsDefault()) {
          _impl_.description_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.description_hash)
}

// int64 expiry = 11;
inline void Invoice::clear_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_ = ::int64_t{0};
}
inline ::int64_t Invoice::expiry() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.expiry)
  return _internal_expiry();
}
inline void Invoice::set_expiry(::int64_t value) {
  _internal_set_expiry(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.expiry)
}
inline ::int64_t Invoice::_internal_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiry_;
}
inline void Invoice::_internal_set_expiry(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_ = value;
}

// string fallback_addr = 12;
inline void Invoice::clear_fallback_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.ClearToEmpty();
}
inline const std::string& Invoice::fallback_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.fallback_addr)
  return _internal_fallback_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_fallback_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.fallback_addr)
}
inline std::string* Invoice::mutable_fallback_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fallback_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.fallback_addr)
  return _s;
}
inline const std::string& Invoice::_internal_fallback_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fallback_addr_.Get();
}
inline void Invoice::_internal_set_fallback_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_fallback_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fallback_addr_.Mutable( GetArena());
}
inline std::string* Invoice::release_fallback_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.fallback_addr)
  return _impl_.fallback_addr_.Release();
}
inline void Invoice::set_allocated_fallback_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fallback_addr_.IsDefault()) {
          _impl_.fallback_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.fallback_addr)
}

// uint64 cltv_expiry = 13;
inline void Invoice::clear_cltv_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_ = ::uint64_t{0u};
}
inline ::uint64_t Invoice::cltv_expiry() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.cltv_expiry)
  return _internal_cltv_expiry();
}
inline void Invoice::set_cltv_expiry(::uint64_t value) {
  _internal_set_cltv_expiry(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.cltv_expiry)
}
inline ::uint64_t Invoice::_internal_cltv_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cltv_expiry_;
}
inline void Invoice::_internal_set_cltv_expiry(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_ = value;
}

// repeated .lnrpc.RouteHint route_hints = 14;
inline int Invoice::_internal_route_hints_size() const {
  return _internal_route_hints().size();
}
inline int Invoice::route_hints_size() const {
  return _internal_route_hints_size();
}
inline void Invoice::clear_route_hints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.route_hints_.Clear();
}
inline ::lnrpc::RouteHint* Invoice::mutable_route_hints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.route_hints)
  return _internal_mutable_route_hints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* Invoice::mutable_route_hints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Invoice.route_hints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_route_hints();
}
inline const ::lnrpc::RouteHint& Invoice::route_hints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.route_hints)
  return _internal_route_hints().Get(index);
}
inline ::lnrpc::RouteHint* Invoice::add_route_hints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::RouteHint* _add = _internal_mutable_route_hints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Invoice.route_hints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& Invoice::route_hints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Invoice.route_hints)
  return _internal_route_hints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>&
Invoice::_internal_route_hints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.route_hints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>*
Invoice::_internal_mutable_route_hints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.route_hints_;
}

// bool private = 15;
inline void Invoice::clear_private_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = false;
}
inline bool Invoice::private_() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.private)
  return _internal_private_();
}
inline void Invoice::set_private_(bool value) {
  _internal_set_private_(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.private)
}
inline bool Invoice::_internal_private_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.private__;
}
inline void Invoice::_internal_set_private_(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.private__ = value;
}

// uint64 add_index = 16;
inline void Invoice::clear_add_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.add_index_ = ::uint64_t{0u};
}
inline ::uint64_t Invoice::add_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.add_index)
  return _internal_add_index();
}
inline void Invoice::set_add_index(::uint64_t value) {
  _internal_set_add_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.add_index)
}
inline ::uint64_t Invoice::_internal_add_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.add_index_;
}
inline void Invoice::_internal_set_add_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.add_index_ = value;
}

// uint64 settle_index = 17;
inline void Invoice::clear_settle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_index_ = ::uint64_t{0u};
}
inline ::uint64_t Invoice::settle_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.settle_index)
  return _internal_settle_index();
}
inline void Invoice::set_settle_index(::uint64_t value) {
  _internal_set_settle_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.settle_index)
}
inline ::uint64_t Invoice::_internal_settle_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settle_index_;
}
inline void Invoice::_internal_set_settle_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_index_ = value;
}

// int64 amt_paid = 18 [deprecated = true];
inline void Invoice::clear_amt_paid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_ = ::int64_t{0};
}
inline ::int64_t Invoice::amt_paid() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.amt_paid)
  return _internal_amt_paid();
}
inline void Invoice::set_amt_paid(::int64_t value) {
  _internal_set_amt_paid(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.amt_paid)
}
inline ::int64_t Invoice::_internal_amt_paid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_paid_;
}
inline void Invoice::_internal_set_amt_paid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_ = value;
}

// int64 amt_paid_sat = 19;
inline void Invoice::clear_amt_paid_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_sat_ = ::int64_t{0};
}
inline ::int64_t Invoice::amt_paid_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.amt_paid_sat)
  return _internal_amt_paid_sat();
}
inline void Invoice::set_amt_paid_sat(::int64_t value) {
  _internal_set_amt_paid_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.amt_paid_sat)
}
inline ::int64_t Invoice::_internal_amt_paid_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_paid_sat_;
}
inline void Invoice::_internal_set_amt_paid_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_sat_ = value;
}

// int64 amt_paid_msat = 20;
inline void Invoice::clear_amt_paid_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_msat_ = ::int64_t{0};
}
inline ::int64_t Invoice::amt_paid_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.amt_paid_msat)
  return _internal_amt_paid_msat();
}
inline void Invoice::set_amt_paid_msat(::int64_t value) {
  _internal_set_amt_paid_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.amt_paid_msat)
}
inline ::int64_t Invoice::_internal_amt_paid_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_paid_msat_;
}
inline void Invoice::_internal_set_amt_paid_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_paid_msat_ = value;
}

// .lnrpc.Invoice.InvoiceState state = 21;
inline void Invoice::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::lnrpc::Invoice_InvoiceState Invoice::state() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.state)
  return _internal_state();
}
inline void Invoice::set_state(::lnrpc::Invoice_InvoiceState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.state)
}
inline ::lnrpc::Invoice_InvoiceState Invoice::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Invoice_InvoiceState>(_impl_.state_);
}
inline void Invoice::_internal_set_state(::lnrpc::Invoice_InvoiceState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// repeated .lnrpc.InvoiceHTLC htlcs = 22;
inline int Invoice::_internal_htlcs_size() const {
  return _internal_htlcs().size();
}
inline int Invoice::htlcs_size() const {
  return _internal_htlcs_size();
}
inline void Invoice::clear_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlcs_.Clear();
}
inline ::lnrpc::InvoiceHTLC* Invoice::mutable_htlcs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.htlcs)
  return _internal_mutable_htlcs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>* Invoice::mutable_htlcs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Invoice.htlcs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_htlcs();
}
inline const ::lnrpc::InvoiceHTLC& Invoice::htlcs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.htlcs)
  return _internal_htlcs().Get(index);
}
inline ::lnrpc::InvoiceHTLC* Invoice::add_htlcs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::InvoiceHTLC* _add = _internal_mutable_htlcs()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Invoice.htlcs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>& Invoice::htlcs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Invoice.htlcs)
  return _internal_htlcs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>&
Invoice::_internal_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlcs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::InvoiceHTLC>*
Invoice::_internal_mutable_htlcs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.htlcs_;
}

// map<uint32, .lnrpc.Feature> features = 24;
inline int Invoice::_internal_features_size() const {
  return _internal_features().size();
}
inline int Invoice::features_size() const {
  return _internal_features_size();
}
inline void Invoice::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& Invoice::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& Invoice::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.Invoice.features)
  return _internal_features();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* Invoice::_internal_mutable_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.features_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* Invoice::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.Invoice.features)
  return _internal_mutable_features();
}

// bool is_keysend = 25;
inline void Invoice::clear_is_keysend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_keysend_ = false;
}
inline bool Invoice::is_keysend() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.is_keysend)
  return _internal_is_keysend();
}
inline void Invoice::set_is_keysend(bool value) {
  _internal_set_is_keysend(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.is_keysend)
}
inline bool Invoice::_internal_is_keysend() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_keysend_;
}
inline void Invoice::_internal_set_is_keysend(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_keysend_ = value;
}

// bytes payment_addr = 26;
inline void Invoice::clear_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.ClearToEmpty();
}
inline const std::string& Invoice::payment_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.payment_addr)
  return _internal_payment_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Invoice::set_payment_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.payment_addr)
}
inline std::string* Invoice::mutable_payment_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.payment_addr)
  return _s;
}
inline const std::string& Invoice::_internal_payment_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_addr_.Get();
}
inline void Invoice::_internal_set_payment_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.Set(value, GetArena());
}
inline std::string* Invoice::_internal_mutable_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_addr_.Mutable( GetArena());
}
inline std::string* Invoice::release_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.payment_addr)
  return _impl_.payment_addr_.Release();
}
inline void Invoice::set_allocated_payment_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_addr_.IsDefault()) {
          _impl_.payment_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.payment_addr)
}

// bool is_amp = 27;
inline void Invoice::clear_is_amp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_amp_ = false;
}
inline bool Invoice::is_amp() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.is_amp)
  return _internal_is_amp();
}
inline void Invoice::set_is_amp(bool value) {
  _internal_set_is_amp(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.is_amp)
}
inline bool Invoice::_internal_is_amp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_amp_;
}
inline void Invoice::_internal_set_is_amp(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_amp_ = value;
}

// map<string, .lnrpc.AMPInvoiceState> amp_invoice_state = 28;
inline int Invoice::_internal_amp_invoice_state_size() const {
  return _internal_amp_invoice_state().size();
}
inline int Invoice::amp_invoice_state_size() const {
  return _internal_amp_invoice_state_size();
}
inline void Invoice::clear_amp_invoice_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amp_invoice_state_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>& Invoice::_internal_amp_invoice_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amp_invoice_state_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>& Invoice::amp_invoice_state() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.Invoice.amp_invoice_state)
  return _internal_amp_invoice_state();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>* Invoice::_internal_mutable_amp_invoice_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.amp_invoice_state_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::AMPInvoiceState>* Invoice::mutable_amp_invoice_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.Invoice.amp_invoice_state)
  return _internal_mutable_amp_invoice_state();
}

// bool is_blinded = 29;
inline void Invoice::clear_is_blinded() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_blinded_ = false;
}
inline bool Invoice::is_blinded() const {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.is_blinded)
  return _internal_is_blinded();
}
inline void Invoice::set_is_blinded(bool value) {
  _internal_set_is_blinded(value);
  // @@protoc_insertion_point(field_set:lnrpc.Invoice.is_blinded)
}
inline bool Invoice::_internal_is_blinded() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_blinded_;
}
inline void Invoice::_internal_set_is_blinded(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_blinded_ = value;
}

// .lnrpc.BlindedPathConfig blinded_path_config = 30;
inline bool Invoice::has_blinded_path_config() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.blinded_path_config_ != nullptr);
  return value;
}
inline void Invoice::clear_blinded_path_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blinded_path_config_ != nullptr) _impl_.blinded_path_config_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::BlindedPathConfig& Invoice::_internal_blinded_path_config() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::BlindedPathConfig* p = _impl_.blinded_path_config_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::BlindedPathConfig&>(::lnrpc::_BlindedPathConfig_default_instance_);
}
inline const ::lnrpc::BlindedPathConfig& Invoice::blinded_path_config() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Invoice.blinded_path_config)
  return _internal_blinded_path_config();
}
inline void Invoice::unsafe_arena_set_allocated_blinded_path_config(::lnrpc::BlindedPathConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.blinded_path_config_);
  }
  _impl_.blinded_path_config_ = reinterpret_cast<::lnrpc::BlindedPathConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Invoice.blinded_path_config)
}
inline ::lnrpc::BlindedPathConfig* Invoice::release_blinded_path_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::BlindedPathConfig* released = _impl_.blinded_path_config_;
  _impl_.blinded_path_config_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::BlindedPathConfig* Invoice::unsafe_arena_release_blinded_path_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Invoice.blinded_path_config)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::BlindedPathConfig* temp = _impl_.blinded_path_config_;
  _impl_.blinded_path_config_ = nullptr;
  return temp;
}
inline ::lnrpc::BlindedPathConfig* Invoice::_internal_mutable_blinded_path_config() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.blinded_path_config_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::BlindedPathConfig>(GetArena());
    _impl_.blinded_path_config_ = reinterpret_cast<::lnrpc::BlindedPathConfig*>(p);
  }
  return _impl_.blinded_path_config_;
}
inline ::lnrpc::BlindedPathConfig* Invoice::mutable_blinded_path_config() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::BlindedPathConfig* _msg = _internal_mutable_blinded_path_config();
  // @@protoc_insertion_point(field_mutable:lnrpc.Invoice.blinded_path_config)
  return _msg;
}
inline void Invoice::set_allocated_blinded_path_config(::lnrpc::BlindedPathConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.blinded_path_config_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.blinded_path_config_ = reinterpret_cast<::lnrpc::BlindedPathConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Invoice.blinded_path_config)
}

// -------------------------------------------------------------------

// BlindedPathConfig

// optional uint32 min_num_real_hops = 1;
inline bool BlindedPathConfig::has_min_num_real_hops() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void BlindedPathConfig::clear_min_num_real_hops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_num_real_hops_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint32_t BlindedPathConfig::min_num_real_hops() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPathConfig.min_num_real_hops)
  return _internal_min_num_real_hops();
}
inline void BlindedPathConfig::set_min_num_real_hops(::uint32_t value) {
  _internal_set_min_num_real_hops(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPathConfig.min_num_real_hops)
}
inline ::uint32_t BlindedPathConfig::_internal_min_num_real_hops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_num_real_hops_;
}
inline void BlindedPathConfig::_internal_set_min_num_real_hops(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_num_real_hops_ = value;
}

// optional uint32 num_hops = 2;
inline bool BlindedPathConfig::has_num_hops() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void BlindedPathConfig::clear_num_hops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_hops_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint32_t BlindedPathConfig::num_hops() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPathConfig.num_hops)
  return _internal_num_hops();
}
inline void BlindedPathConfig::set_num_hops(::uint32_t value) {
  _internal_set_num_hops(value);
  _impl_._has_bits_[0] |= 0x00000002u;
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPathConfig.num_hops)
}
inline ::uint32_t BlindedPathConfig::_internal_num_hops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_hops_;
}
inline void BlindedPathConfig::_internal_set_num_hops(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_hops_ = value;
}

// optional uint32 max_num_paths = 3;
inline bool BlindedPathConfig::has_max_num_paths() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void BlindedPathConfig::clear_max_num_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_num_paths_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline ::uint32_t BlindedPathConfig::max_num_paths() const {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPathConfig.max_num_paths)
  return _internal_max_num_paths();
}
inline void BlindedPathConfig::set_max_num_paths(::uint32_t value) {
  _internal_set_max_num_paths(value);
  _impl_._has_bits_[0] |= 0x00000004u;
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPathConfig.max_num_paths)
}
inline ::uint32_t BlindedPathConfig::_internal_max_num_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_num_paths_;
}
inline void BlindedPathConfig::_internal_set_max_num_paths(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_num_paths_ = value;
}

// repeated bytes node_omission_list = 4;
inline int BlindedPathConfig::_internal_node_omission_list_size() const {
  return _internal_node_omission_list().size();
}
inline int BlindedPathConfig::node_omission_list_size() const {
  return _internal_node_omission_list_size();
}
inline void BlindedPathConfig::clear_node_omission_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_omission_list_.Clear();
}
inline std::string* BlindedPathConfig::add_node_omission_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_node_omission_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.BlindedPathConfig.node_omission_list)
  return _s;
}
inline const std::string& BlindedPathConfig::node_omission_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BlindedPathConfig.node_omission_list)
  return _internal_node_omission_list().Get(index);
}
inline std::string* BlindedPathConfig::mutable_node_omission_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.BlindedPathConfig.node_omission_list)
  return _internal_mutable_node_omission_list()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void BlindedPathConfig::set_node_omission_list(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_node_omission_list()->Mutable(index),
      std::forward<Arg_>(value), args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_set:lnrpc.BlindedPathConfig.node_omission_list)
}
template <typename Arg_, typename... Args_>
inline void BlindedPathConfig::add_node_omission_list(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_node_omission_list(),
                               std::forward<Arg_>(value),
                               args... , ::google::protobuf::internal::BytesTag{});
  // @@protoc_insertion_point(field_add:lnrpc.BlindedPathConfig.node_omission_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BlindedPathConfig::node_omission_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.BlindedPathConfig.node_omission_list)
  return _internal_node_omission_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BlindedPathConfig::mutable_node_omission_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.BlindedPathConfig.node_omission_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_node_omission_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
BlindedPathConfig::_internal_node_omission_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_omission_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
BlindedPathConfig::_internal_mutable_node_omission_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.node_omission_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// InvoiceHTLC

// uint64 chan_id = 1 [jstype = JS_STRING];
inline void InvoiceHTLC::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t InvoiceHTLC::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.chan_id)
  return _internal_chan_id();
}
inline void InvoiceHTLC::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.chan_id)
}
inline ::uint64_t InvoiceHTLC::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void InvoiceHTLC::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// uint64 htlc_index = 2;
inline void InvoiceHTLC::clear_htlc_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_index_ = ::uint64_t{0u};
}
inline ::uint64_t InvoiceHTLC::htlc_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.htlc_index)
  return _internal_htlc_index();
}
inline void InvoiceHTLC::set_htlc_index(::uint64_t value) {
  _internal_set_htlc_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.htlc_index)
}
inline ::uint64_t InvoiceHTLC::_internal_htlc_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_index_;
}
inline void InvoiceHTLC::_internal_set_htlc_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_index_ = value;
}

// uint64 amt_msat = 3;
inline void InvoiceHTLC::clear_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_msat_ = ::uint64_t{0u};
}
inline ::uint64_t InvoiceHTLC::amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.amt_msat)
  return _internal_amt_msat();
}
inline void InvoiceHTLC::set_amt_msat(::uint64_t value) {
  _internal_set_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.amt_msat)
}
inline ::uint64_t InvoiceHTLC::_internal_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_msat_;
}
inline void InvoiceHTLC::_internal_set_amt_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_msat_ = value;
}

// int32 accept_height = 4;
inline void InvoiceHTLC::clear_accept_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_height_ = 0;
}
inline ::int32_t InvoiceHTLC::accept_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.accept_height)
  return _internal_accept_height();
}
inline void InvoiceHTLC::set_accept_height(::int32_t value) {
  _internal_set_accept_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.accept_height)
}
inline ::int32_t InvoiceHTLC::_internal_accept_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accept_height_;
}
inline void InvoiceHTLC::_internal_set_accept_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_height_ = value;
}

// int64 accept_time = 5;
inline void InvoiceHTLC::clear_accept_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_time_ = ::int64_t{0};
}
inline ::int64_t InvoiceHTLC::accept_time() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.accept_time)
  return _internal_accept_time();
}
inline void InvoiceHTLC::set_accept_time(::int64_t value) {
  _internal_set_accept_time(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.accept_time)
}
inline ::int64_t InvoiceHTLC::_internal_accept_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accept_time_;
}
inline void InvoiceHTLC::_internal_set_accept_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accept_time_ = value;
}

// int64 resolve_time = 6;
inline void InvoiceHTLC::clear_resolve_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolve_time_ = ::int64_t{0};
}
inline ::int64_t InvoiceHTLC::resolve_time() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.resolve_time)
  return _internal_resolve_time();
}
inline void InvoiceHTLC::set_resolve_time(::int64_t value) {
  _internal_set_resolve_time(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.resolve_time)
}
inline ::int64_t InvoiceHTLC::_internal_resolve_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolve_time_;
}
inline void InvoiceHTLC::_internal_set_resolve_time(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolve_time_ = value;
}

// int32 expiry_height = 7;
inline void InvoiceHTLC::clear_expiry_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_height_ = 0;
}
inline ::int32_t InvoiceHTLC::expiry_height() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.expiry_height)
  return _internal_expiry_height();
}
inline void InvoiceHTLC::set_expiry_height(::int32_t value) {
  _internal_set_expiry_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.expiry_height)
}
inline ::int32_t InvoiceHTLC::_internal_expiry_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiry_height_;
}
inline void InvoiceHTLC::_internal_set_expiry_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_height_ = value;
}

// .lnrpc.InvoiceHTLCState state = 8;
inline void InvoiceHTLC::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = 0;
}
inline ::lnrpc::InvoiceHTLCState InvoiceHTLC::state() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.state)
  return _internal_state();
}
inline void InvoiceHTLC::set_state(::lnrpc::InvoiceHTLCState value) {
  _internal_set_state(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.state)
}
inline ::lnrpc::InvoiceHTLCState InvoiceHTLC::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::InvoiceHTLCState>(_impl_.state_);
}
inline void InvoiceHTLC::_internal_set_state(::lnrpc::InvoiceHTLCState value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_ = value;
}

// map<uint64, bytes> custom_records = 9;
inline int InvoiceHTLC::_internal_custom_records_size() const {
  return _internal_custom_records().size();
}
inline int InvoiceHTLC::custom_records_size() const {
  return _internal_custom_records_size();
}
inline void InvoiceHTLC::clear_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& InvoiceHTLC::_internal_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& InvoiceHTLC::custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.InvoiceHTLC.custom_records)
  return _internal_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* InvoiceHTLC::_internal_mutable_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* InvoiceHTLC::mutable_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.InvoiceHTLC.custom_records)
  return _internal_mutable_custom_records();
}

// uint64 mpp_total_amt_msat = 10;
inline void InvoiceHTLC::clear_mpp_total_amt_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mpp_total_amt_msat_ = ::uint64_t{0u};
}
inline ::uint64_t InvoiceHTLC::mpp_total_amt_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.mpp_total_amt_msat)
  return _internal_mpp_total_amt_msat();
}
inline void InvoiceHTLC::set_mpp_total_amt_msat(::uint64_t value) {
  _internal_set_mpp_total_amt_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.mpp_total_amt_msat)
}
inline ::uint64_t InvoiceHTLC::_internal_mpp_total_amt_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mpp_total_amt_msat_;
}
inline void InvoiceHTLC::_internal_set_mpp_total_amt_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mpp_total_amt_msat_ = value;
}

// .lnrpc.AMP amp = 11;
inline bool InvoiceHTLC::has_amp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.amp_ != nullptr);
  return value;
}
inline void InvoiceHTLC::clear_amp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amp_ != nullptr) _impl_.amp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::AMP& InvoiceHTLC::_internal_amp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::AMP* p = _impl_.amp_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::AMP&>(::lnrpc::_AMP_default_instance_);
}
inline const ::lnrpc::AMP& InvoiceHTLC::amp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.amp)
  return _internal_amp();
}
inline void InvoiceHTLC::unsafe_arena_set_allocated_amp(::lnrpc::AMP* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.amp_);
  }
  _impl_.amp_ = reinterpret_cast<::lnrpc::AMP*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.InvoiceHTLC.amp)
}
inline ::lnrpc::AMP* InvoiceHTLC::release_amp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::AMP* released = _impl_.amp_;
  _impl_.amp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::AMP* InvoiceHTLC::unsafe_arena_release_amp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.InvoiceHTLC.amp)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::AMP* temp = _impl_.amp_;
  _impl_.amp_ = nullptr;
  return temp;
}
inline ::lnrpc::AMP* InvoiceHTLC::_internal_mutable_amp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.amp_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::AMP>(GetArena());
    _impl_.amp_ = reinterpret_cast<::lnrpc::AMP*>(p);
  }
  return _impl_.amp_;
}
inline ::lnrpc::AMP* InvoiceHTLC::mutable_amp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::AMP* _msg = _internal_mutable_amp();
  // @@protoc_insertion_point(field_mutable:lnrpc.InvoiceHTLC.amp)
  return _msg;
}
inline void InvoiceHTLC::set_allocated_amp(::lnrpc::AMP* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.amp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.amp_ = reinterpret_cast<::lnrpc::AMP*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.InvoiceHTLC.amp)
}

// bytes custom_channel_data = 12;
inline void InvoiceHTLC::clear_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.ClearToEmpty();
}
inline const std::string& InvoiceHTLC::custom_channel_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceHTLC.custom_channel_data)
  return _internal_custom_channel_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InvoiceHTLC::set_custom_channel_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceHTLC.custom_channel_data)
}
inline std::string* InvoiceHTLC::mutable_custom_channel_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_channel_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.InvoiceHTLC.custom_channel_data)
  return _s;
}
inline const std::string& InvoiceHTLC::_internal_custom_channel_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_channel_data_.Get();
}
inline void InvoiceHTLC::_internal_set_custom_channel_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.Set(value, GetArena());
}
inline std::string* InvoiceHTLC::_internal_mutable_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_channel_data_.Mutable( GetArena());
}
inline std::string* InvoiceHTLC::release_custom_channel_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.InvoiceHTLC.custom_channel_data)
  return _impl_.custom_channel_data_.Release();
}
inline void InvoiceHTLC::set_allocated_custom_channel_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_channel_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_channel_data_.IsDefault()) {
          _impl_.custom_channel_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.InvoiceHTLC.custom_channel_data)
}

// -------------------------------------------------------------------

// AMP

// bytes root_share = 1;
inline void AMP::clear_root_share() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.ClearToEmpty();
}
inline const std::string& AMP::root_share() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AMP.root_share)
  return _internal_root_share();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AMP::set_root_share(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AMP.root_share)
}
inline std::string* AMP::mutable_root_share() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_root_share();
  // @@protoc_insertion_point(field_mutable:lnrpc.AMP.root_share)
  return _s;
}
inline const std::string& AMP::_internal_root_share() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_share_.Get();
}
inline void AMP::_internal_set_root_share(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.Set(value, GetArena());
}
inline std::string* AMP::_internal_mutable_root_share() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.root_share_.Mutable( GetArena());
}
inline std::string* AMP::release_root_share() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AMP.root_share)
  return _impl_.root_share_.Release();
}
inline void AMP::set_allocated_root_share(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_share_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.root_share_.IsDefault()) {
          _impl_.root_share_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AMP.root_share)
}

// bytes set_id = 2;
inline void AMP::clear_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.ClearToEmpty();
}
inline const std::string& AMP::set_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AMP.set_id)
  return _internal_set_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AMP::set_set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AMP.set_id)
}
inline std::string* AMP::mutable_set_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_set_id();
  // @@protoc_insertion_point(field_mutable:lnrpc.AMP.set_id)
  return _s;
}
inline const std::string& AMP::_internal_set_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.set_id_.Get();
}
inline void AMP::_internal_set_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.Set(value, GetArena());
}
inline std::string* AMP::_internal_mutable_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.set_id_.Mutable( GetArena());
}
inline std::string* AMP::release_set_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AMP.set_id)
  return _impl_.set_id_.Release();
}
inline void AMP::set_allocated_set_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.set_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.set_id_.IsDefault()) {
          _impl_.set_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AMP.set_id)
}

// uint32 child_index = 3;
inline void AMP::clear_child_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.child_index_ = 0u;
}
inline ::uint32_t AMP::child_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.AMP.child_index)
  return _internal_child_index();
}
inline void AMP::set_child_index(::uint32_t value) {
  _internal_set_child_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.AMP.child_index)
}
inline ::uint32_t AMP::_internal_child_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.child_index_;
}
inline void AMP::_internal_set_child_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.child_index_ = value;
}

// bytes hash = 4;
inline void AMP::clear_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.ClearToEmpty();
}
inline const std::string& AMP::hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AMP.hash)
  return _internal_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AMP::set_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AMP.hash)
}
inline std::string* AMP::mutable_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.AMP.hash)
  return _s;
}
inline const std::string& AMP::_internal_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.hash_.Get();
}
inline void AMP::_internal_set_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.Set(value, GetArena());
}
inline std::string* AMP::_internal_mutable_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.hash_.Mutable( GetArena());
}
inline std::string* AMP::release_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AMP.hash)
  return _impl_.hash_.Release();
}
inline void AMP::set_allocated_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.hash_.IsDefault()) {
          _impl_.hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AMP.hash)
}

// bytes preimage = 5;
inline void AMP::clear_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.ClearToEmpty();
}
inline const std::string& AMP::preimage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AMP.preimage)
  return _internal_preimage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AMP::set_preimage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AMP.preimage)
}
inline std::string* AMP::mutable_preimage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_preimage();
  // @@protoc_insertion_point(field_mutable:lnrpc.AMP.preimage)
  return _s;
}
inline const std::string& AMP::_internal_preimage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preimage_.Get();
}
inline void AMP::_internal_set_preimage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.Set(value, GetArena());
}
inline std::string* AMP::_internal_mutable_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.preimage_.Mutable( GetArena());
}
inline std::string* AMP::release_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AMP.preimage)
  return _impl_.preimage_.Release();
}
inline void AMP::set_allocated_preimage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.preimage_.IsDefault()) {
          _impl_.preimage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AMP.preimage)
}

// -------------------------------------------------------------------

// AddInvoiceResponse

// bytes r_hash = 1;
inline void AddInvoiceResponse::clear_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.ClearToEmpty();
}
inline const std::string& AddInvoiceResponse::r_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AddInvoiceResponse.r_hash)
  return _internal_r_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddInvoiceResponse::set_r_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AddInvoiceResponse.r_hash)
}
inline std::string* AddInvoiceResponse::mutable_r_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_r_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.AddInvoiceResponse.r_hash)
  return _s;
}
inline const std::string& AddInvoiceResponse::_internal_r_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_hash_.Get();
}
inline void AddInvoiceResponse::_internal_set_r_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.Set(value, GetArena());
}
inline std::string* AddInvoiceResponse::_internal_mutable_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.r_hash_.Mutable( GetArena());
}
inline std::string* AddInvoiceResponse::release_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AddInvoiceResponse.r_hash)
  return _impl_.r_hash_.Release();
}
inline void AddInvoiceResponse::set_allocated_r_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.r_hash_.IsDefault()) {
          _impl_.r_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AddInvoiceResponse.r_hash)
}

// string payment_request = 2;
inline void AddInvoiceResponse::clear_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.ClearToEmpty();
}
inline const std::string& AddInvoiceResponse::payment_request() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AddInvoiceResponse.payment_request)
  return _internal_payment_request();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddInvoiceResponse::set_payment_request(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AddInvoiceResponse.payment_request)
}
inline std::string* AddInvoiceResponse::mutable_payment_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_request();
  // @@protoc_insertion_point(field_mutable:lnrpc.AddInvoiceResponse.payment_request)
  return _s;
}
inline const std::string& AddInvoiceResponse::_internal_payment_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_request_.Get();
}
inline void AddInvoiceResponse::_internal_set_payment_request(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(value, GetArena());
}
inline std::string* AddInvoiceResponse::_internal_mutable_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_request_.Mutable( GetArena());
}
inline std::string* AddInvoiceResponse::release_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AddInvoiceResponse.payment_request)
  return _impl_.payment_request_.Release();
}
inline void AddInvoiceResponse::set_allocated_payment_request(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_request_.IsDefault()) {
          _impl_.payment_request_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AddInvoiceResponse.payment_request)
}

// uint64 add_index = 16;
inline void AddInvoiceResponse::clear_add_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.add_index_ = ::uint64_t{0u};
}
inline ::uint64_t AddInvoiceResponse::add_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.AddInvoiceResponse.add_index)
  return _internal_add_index();
}
inline void AddInvoiceResponse::set_add_index(::uint64_t value) {
  _internal_set_add_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.AddInvoiceResponse.add_index)
}
inline ::uint64_t AddInvoiceResponse::_internal_add_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.add_index_;
}
inline void AddInvoiceResponse::_internal_set_add_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.add_index_ = value;
}

// bytes payment_addr = 17;
inline void AddInvoiceResponse::clear_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.ClearToEmpty();
}
inline const std::string& AddInvoiceResponse::payment_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AddInvoiceResponse.payment_addr)
  return _internal_payment_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddInvoiceResponse::set_payment_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.AddInvoiceResponse.payment_addr)
}
inline std::string* AddInvoiceResponse::mutable_payment_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.AddInvoiceResponse.payment_addr)
  return _s;
}
inline const std::string& AddInvoiceResponse::_internal_payment_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_addr_.Get();
}
inline void AddInvoiceResponse::_internal_set_payment_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.Set(value, GetArena());
}
inline std::string* AddInvoiceResponse::_internal_mutable_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_addr_.Mutable( GetArena());
}
inline std::string* AddInvoiceResponse::release_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AddInvoiceResponse.payment_addr)
  return _impl_.payment_addr_.Release();
}
inline void AddInvoiceResponse::set_allocated_payment_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_addr_.IsDefault()) {
          _impl_.payment_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AddInvoiceResponse.payment_addr)
}

// -------------------------------------------------------------------

// PaymentHash

// string r_hash_str = 1 [deprecated = true];
inline void PaymentHash::clear_r_hash_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_str_.ClearToEmpty();
}
inline const std::string& PaymentHash::r_hash_str() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PaymentHash.r_hash_str)
  return _internal_r_hash_str();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PaymentHash::set_r_hash_str(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_str_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PaymentHash.r_hash_str)
}
inline std::string* PaymentHash::mutable_r_hash_str() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_r_hash_str();
  // @@protoc_insertion_point(field_mutable:lnrpc.PaymentHash.r_hash_str)
  return _s;
}
inline const std::string& PaymentHash::_internal_r_hash_str() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_hash_str_.Get();
}
inline void PaymentHash::_internal_set_r_hash_str(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_str_.Set(value, GetArena());
}
inline std::string* PaymentHash::_internal_mutable_r_hash_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.r_hash_str_.Mutable( GetArena());
}
inline std::string* PaymentHash::release_r_hash_str() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PaymentHash.r_hash_str)
  return _impl_.r_hash_str_.Release();
}
inline void PaymentHash::set_allocated_r_hash_str(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_str_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.r_hash_str_.IsDefault()) {
          _impl_.r_hash_str_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PaymentHash.r_hash_str)
}

// bytes r_hash = 2;
inline void PaymentHash::clear_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.ClearToEmpty();
}
inline const std::string& PaymentHash::r_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PaymentHash.r_hash)
  return _internal_r_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PaymentHash::set_r_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PaymentHash.r_hash)
}
inline std::string* PaymentHash::mutable_r_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_r_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.PaymentHash.r_hash)
  return _s;
}
inline const std::string& PaymentHash::_internal_r_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.r_hash_.Get();
}
inline void PaymentHash::_internal_set_r_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.Set(value, GetArena());
}
inline std::string* PaymentHash::_internal_mutable_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.r_hash_.Mutable( GetArena());
}
inline std::string* PaymentHash::release_r_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PaymentHash.r_hash)
  return _impl_.r_hash_.Release();
}
inline void PaymentHash::set_allocated_r_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.r_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.r_hash_.IsDefault()) {
          _impl_.r_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PaymentHash.r_hash)
}

// -------------------------------------------------------------------

// ListInvoiceRequest

// bool pending_only = 1;
inline void ListInvoiceRequest::clear_pending_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_only_ = false;
}
inline bool ListInvoiceRequest::pending_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceRequest.pending_only)
  return _internal_pending_only();
}
inline void ListInvoiceRequest::set_pending_only(bool value) {
  _internal_set_pending_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceRequest.pending_only)
}
inline bool ListInvoiceRequest::_internal_pending_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_only_;
}
inline void ListInvoiceRequest::_internal_set_pending_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_only_ = value;
}

// uint64 index_offset = 4;
inline void ListInvoiceRequest::clear_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = ::uint64_t{0u};
}
inline ::uint64_t ListInvoiceRequest::index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceRequest.index_offset)
  return _internal_index_offset();
}
inline void ListInvoiceRequest::set_index_offset(::uint64_t value) {
  _internal_set_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceRequest.index_offset)
}
inline ::uint64_t ListInvoiceRequest::_internal_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_offset_;
}
inline void ListInvoiceRequest::_internal_set_index_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = value;
}

// uint64 num_max_invoices = 5;
inline void ListInvoiceRequest::clear_num_max_invoices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_max_invoices_ = ::uint64_t{0u};
}
inline ::uint64_t ListInvoiceRequest::num_max_invoices() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceRequest.num_max_invoices)
  return _internal_num_max_invoices();
}
inline void ListInvoiceRequest::set_num_max_invoices(::uint64_t value) {
  _internal_set_num_max_invoices(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceRequest.num_max_invoices)
}
inline ::uint64_t ListInvoiceRequest::_internal_num_max_invoices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_max_invoices_;
}
inline void ListInvoiceRequest::_internal_set_num_max_invoices(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_max_invoices_ = value;
}

// bool reversed = 6;
inline void ListInvoiceRequest::clear_reversed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reversed_ = false;
}
inline bool ListInvoiceRequest::reversed() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceRequest.reversed)
  return _internal_reversed();
}
inline void ListInvoiceRequest::set_reversed(bool value) {
  _internal_set_reversed(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceRequest.reversed)
}
inline bool ListInvoiceRequest::_internal_reversed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reversed_;
}
inline void ListInvoiceRequest::_internal_set_reversed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reversed_ = value;
}

// uint64 creation_date_start = 7;
inline void ListInvoiceRequest::clear_creation_date_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_start_ = ::uint64_t{0u};
}
inline ::uint64_t ListInvoiceRequest::creation_date_start() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceRequest.creation_date_start)
  return _internal_creation_date_start();
}
inline void ListInvoiceRequest::set_creation_date_start(::uint64_t value) {
  _internal_set_creation_date_start(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceRequest.creation_date_start)
}
inline ::uint64_t ListInvoiceRequest::_internal_creation_date_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_date_start_;
}
inline void ListInvoiceRequest::_internal_set_creation_date_start(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_start_ = value;
}

// uint64 creation_date_end = 8;
inline void ListInvoiceRequest::clear_creation_date_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_end_ = ::uint64_t{0u};
}
inline ::uint64_t ListInvoiceRequest::creation_date_end() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceRequest.creation_date_end)
  return _internal_creation_date_end();
}
inline void ListInvoiceRequest::set_creation_date_end(::uint64_t value) {
  _internal_set_creation_date_end(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceRequest.creation_date_end)
}
inline ::uint64_t ListInvoiceRequest::_internal_creation_date_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_date_end_;
}
inline void ListInvoiceRequest::_internal_set_creation_date_end(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_end_ = value;
}

// -------------------------------------------------------------------

// ListInvoiceResponse

// repeated .lnrpc.Invoice invoices = 1;
inline int ListInvoiceResponse::_internal_invoices_size() const {
  return _internal_invoices().size();
}
inline int ListInvoiceResponse::invoices_size() const {
  return _internal_invoices_size();
}
inline void ListInvoiceResponse::clear_invoices() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.invoices_.Clear();
}
inline ::lnrpc::Invoice* ListInvoiceResponse::mutable_invoices(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ListInvoiceResponse.invoices)
  return _internal_mutable_invoices()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>* ListInvoiceResponse::mutable_invoices()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListInvoiceResponse.invoices)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_invoices();
}
inline const ::lnrpc::Invoice& ListInvoiceResponse::invoices(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceResponse.invoices)
  return _internal_invoices().Get(index);
}
inline ::lnrpc::Invoice* ListInvoiceResponse::add_invoices() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Invoice* _add = _internal_mutable_invoices()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ListInvoiceResponse.invoices)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>& ListInvoiceResponse::invoices() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListInvoiceResponse.invoices)
  return _internal_invoices();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>&
ListInvoiceResponse::_internal_invoices() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.invoices_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Invoice>*
ListInvoiceResponse::_internal_mutable_invoices() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.invoices_;
}

// uint64 last_index_offset = 2;
inline void ListInvoiceResponse::clear_last_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_index_offset_ = ::uint64_t{0u};
}
inline ::uint64_t ListInvoiceResponse::last_index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceResponse.last_index_offset)
  return _internal_last_index_offset();
}
inline void ListInvoiceResponse::set_last_index_offset(::uint64_t value) {
  _internal_set_last_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceResponse.last_index_offset)
}
inline ::uint64_t ListInvoiceResponse::_internal_last_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_index_offset_;
}
inline void ListInvoiceResponse::_internal_set_last_index_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_index_offset_ = value;
}

// uint64 first_index_offset = 3;
inline void ListInvoiceResponse::clear_first_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_index_offset_ = ::uint64_t{0u};
}
inline ::uint64_t ListInvoiceResponse::first_index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListInvoiceResponse.first_index_offset)
  return _internal_first_index_offset();
}
inline void ListInvoiceResponse::set_first_index_offset(::uint64_t value) {
  _internal_set_first_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListInvoiceResponse.first_index_offset)
}
inline ::uint64_t ListInvoiceResponse::_internal_first_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_index_offset_;
}
inline void ListInvoiceResponse::_internal_set_first_index_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_index_offset_ = value;
}

// -------------------------------------------------------------------

// InvoiceSubscription

// uint64 add_index = 1;
inline void InvoiceSubscription::clear_add_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.add_index_ = ::uint64_t{0u};
}
inline ::uint64_t InvoiceSubscription::add_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceSubscription.add_index)
  return _internal_add_index();
}
inline void InvoiceSubscription::set_add_index(::uint64_t value) {
  _internal_set_add_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceSubscription.add_index)
}
inline ::uint64_t InvoiceSubscription::_internal_add_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.add_index_;
}
inline void InvoiceSubscription::_internal_set_add_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.add_index_ = value;
}

// uint64 settle_index = 2;
inline void InvoiceSubscription::clear_settle_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_index_ = ::uint64_t{0u};
}
inline ::uint64_t InvoiceSubscription::settle_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.InvoiceSubscription.settle_index)
  return _internal_settle_index();
}
inline void InvoiceSubscription::set_settle_index(::uint64_t value) {
  _internal_set_settle_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.InvoiceSubscription.settle_index)
}
inline ::uint64_t InvoiceSubscription::_internal_settle_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.settle_index_;
}
inline void InvoiceSubscription::_internal_set_settle_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.settle_index_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Payment

// string payment_hash = 1;
inline void Payment::clear_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.ClearToEmpty();
}
inline const std::string& Payment::payment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.payment_hash)
  return _internal_payment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payment::set_payment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Payment.payment_hash)
}
inline std::string* Payment::mutable_payment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.Payment.payment_hash)
  return _s;
}
inline const std::string& Payment::_internal_payment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_.Get();
}
inline void Payment::_internal_set_payment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(value, GetArena());
}
inline std::string* Payment::_internal_mutable_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_.Mutable( GetArena());
}
inline std::string* Payment::release_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Payment.payment_hash)
  return _impl_.payment_hash_.Release();
}
inline void Payment::set_allocated_payment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_.IsDefault()) {
          _impl_.payment_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Payment.payment_hash)
}

// int64 value = 2 [deprecated = true];
inline void Payment::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = ::int64_t{0};
}
inline ::int64_t Payment::value() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.value)
  return _internal_value();
}
inline void Payment::set_value(::int64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.value)
}
inline ::int64_t Payment::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void Payment::_internal_set_value(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// int64 creation_date = 3 [deprecated = true];
inline void Payment::clear_creation_date() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_ = ::int64_t{0};
}
inline ::int64_t Payment::creation_date() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.creation_date)
  return _internal_creation_date();
}
inline void Payment::set_creation_date(::int64_t value) {
  _internal_set_creation_date(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.creation_date)
}
inline ::int64_t Payment::_internal_creation_date() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_date_;
}
inline void Payment::_internal_set_creation_date(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_ = value;
}

// repeated string path = 4 [deprecated = true];
inline int Payment::_internal_path_size() const {
  return _internal_path().size();
}
inline int Payment::path_size() const {
  return _internal_path_size();
}
inline void Payment::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Clear();
}
inline std::string* Payment::add_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_path()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.Payment.path)
  return _s;
}
inline const std::string& Payment::path(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.path)
  return _internal_path().Get(index);
}
inline std::string* Payment::mutable_path(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Payment.path)
  return _internal_mutable_path()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Payment::set_path(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_path()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:lnrpc.Payment.path)
}
template <typename Arg_, typename... Args_>
inline void Payment::add_path(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_path(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:lnrpc.Payment.path)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Payment::path() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Payment.path)
  return _internal_path();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Payment::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Payment.path)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_path();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Payment::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Payment::_internal_mutable_path() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.path_;
}

// int64 fee = 5 [deprecated = true];
inline void Payment::clear_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_ = ::int64_t{0};
}
inline ::int64_t Payment::fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.fee)
  return _internal_fee();
}
inline void Payment::set_fee(::int64_t value) {
  _internal_set_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.fee)
}
inline ::int64_t Payment::_internal_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_;
}
inline void Payment::_internal_set_fee(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_ = value;
}

// string payment_preimage = 6;
inline void Payment::clear_payment_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.ClearToEmpty();
}
inline const std::string& Payment::payment_preimage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.payment_preimage)
  return _internal_payment_preimage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payment::set_payment_preimage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Payment.payment_preimage)
}
inline std::string* Payment::mutable_payment_preimage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_preimage();
  // @@protoc_insertion_point(field_mutable:lnrpc.Payment.payment_preimage)
  return _s;
}
inline const std::string& Payment::_internal_payment_preimage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_preimage_.Get();
}
inline void Payment::_internal_set_payment_preimage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.Set(value, GetArena());
}
inline std::string* Payment::_internal_mutable_payment_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_preimage_.Mutable( GetArena());
}
inline std::string* Payment::release_payment_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Payment.payment_preimage)
  return _impl_.payment_preimage_.Release();
}
inline void Payment::set_allocated_payment_preimage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_preimage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_preimage_.IsDefault()) {
          _impl_.payment_preimage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Payment.payment_preimage)
}

// int64 value_sat = 7;
inline void Payment::clear_value_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_sat_ = ::int64_t{0};
}
inline ::int64_t Payment::value_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.value_sat)
  return _internal_value_sat();
}
inline void Payment::set_value_sat(::int64_t value) {
  _internal_set_value_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.value_sat)
}
inline ::int64_t Payment::_internal_value_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_sat_;
}
inline void Payment::_internal_set_value_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_sat_ = value;
}

// int64 value_msat = 8;
inline void Payment::clear_value_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_msat_ = ::int64_t{0};
}
inline ::int64_t Payment::value_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.value_msat)
  return _internal_value_msat();
}
inline void Payment::set_value_msat(::int64_t value) {
  _internal_set_value_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.value_msat)
}
inline ::int64_t Payment::_internal_value_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_msat_;
}
inline void Payment::_internal_set_value_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_msat_ = value;
}

// string payment_request = 9;
inline void Payment::clear_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.ClearToEmpty();
}
inline const std::string& Payment::payment_request() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.payment_request)
  return _internal_payment_request();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Payment::set_payment_request(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Payment.payment_request)
}
inline std::string* Payment::mutable_payment_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_request();
  // @@protoc_insertion_point(field_mutable:lnrpc.Payment.payment_request)
  return _s;
}
inline const std::string& Payment::_internal_payment_request() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_request_.Get();
}
inline void Payment::_internal_set_payment_request(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.Set(value, GetArena());
}
inline std::string* Payment::_internal_mutable_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_request_.Mutable( GetArena());
}
inline std::string* Payment::release_payment_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Payment.payment_request)
  return _impl_.payment_request_.Release();
}
inline void Payment::set_allocated_payment_request(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_request_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_request_.IsDefault()) {
          _impl_.payment_request_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Payment.payment_request)
}

// .lnrpc.Payment.PaymentStatus status = 10;
inline void Payment::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::lnrpc::Payment_PaymentStatus Payment::status() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.status)
  return _internal_status();
}
inline void Payment::set_status(::lnrpc::Payment_PaymentStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.status)
}
inline ::lnrpc::Payment_PaymentStatus Payment::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Payment_PaymentStatus>(_impl_.status_);
}
inline void Payment::_internal_set_status(::lnrpc::Payment_PaymentStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// int64 fee_sat = 11;
inline void Payment::clear_fee_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_sat_ = ::int64_t{0};
}
inline ::int64_t Payment::fee_sat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.fee_sat)
  return _internal_fee_sat();
}
inline void Payment::set_fee_sat(::int64_t value) {
  _internal_set_fee_sat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.fee_sat)
}
inline ::int64_t Payment::_internal_fee_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_sat_;
}
inline void Payment::_internal_set_fee_sat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_sat_ = value;
}

// int64 fee_msat = 12;
inline void Payment::clear_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_msat_ = ::int64_t{0};
}
inline ::int64_t Payment::fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.fee_msat)
  return _internal_fee_msat();
}
inline void Payment::set_fee_msat(::int64_t value) {
  _internal_set_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.fee_msat)
}
inline ::int64_t Payment::_internal_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_msat_;
}
inline void Payment::_internal_set_fee_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_msat_ = value;
}

// int64 creation_time_ns = 13;
inline void Payment::clear_creation_time_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_time_ns_ = ::int64_t{0};
}
inline ::int64_t Payment::creation_time_ns() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.creation_time_ns)
  return _internal_creation_time_ns();
}
inline void Payment::set_creation_time_ns(::int64_t value) {
  _internal_set_creation_time_ns(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.creation_time_ns)
}
inline ::int64_t Payment::_internal_creation_time_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_time_ns_;
}
inline void Payment::_internal_set_creation_time_ns(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_time_ns_ = value;
}

// repeated .lnrpc.HTLCAttempt htlcs = 14;
inline int Payment::_internal_htlcs_size() const {
  return _internal_htlcs().size();
}
inline int Payment::htlcs_size() const {
  return _internal_htlcs_size();
}
inline void Payment::clear_htlcs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlcs_.Clear();
}
inline ::lnrpc::HTLCAttempt* Payment::mutable_htlcs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Payment.htlcs)
  return _internal_mutable_htlcs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>* Payment::mutable_htlcs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Payment.htlcs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_htlcs();
}
inline const ::lnrpc::HTLCAttempt& Payment::htlcs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.htlcs)
  return _internal_htlcs().Get(index);
}
inline ::lnrpc::HTLCAttempt* Payment::add_htlcs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::HTLCAttempt* _add = _internal_mutable_htlcs()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.Payment.htlcs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>& Payment::htlcs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Payment.htlcs)
  return _internal_htlcs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>&
Payment::_internal_htlcs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlcs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::HTLCAttempt>*
Payment::_internal_mutable_htlcs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.htlcs_;
}

// uint64 payment_index = 15;
inline void Payment::clear_payment_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_index_ = ::uint64_t{0u};
}
inline ::uint64_t Payment::payment_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.payment_index)
  return _internal_payment_index();
}
inline void Payment::set_payment_index(::uint64_t value) {
  _internal_set_payment_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.payment_index)
}
inline ::uint64_t Payment::_internal_payment_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_index_;
}
inline void Payment::_internal_set_payment_index(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_index_ = value;
}

// .lnrpc.PaymentFailureReason failure_reason = 16;
inline void Payment::clear_failure_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_ = 0;
}
inline ::lnrpc::PaymentFailureReason Payment::failure_reason() const {
  // @@protoc_insertion_point(field_get:lnrpc.Payment.failure_reason)
  return _internal_failure_reason();
}
inline void Payment::set_failure_reason(::lnrpc::PaymentFailureReason value) {
  _internal_set_failure_reason(value);
  // @@protoc_insertion_point(field_set:lnrpc.Payment.failure_reason)
}
inline ::lnrpc::PaymentFailureReason Payment::_internal_failure_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::PaymentFailureReason>(_impl_.failure_reason_);
}
inline void Payment::_internal_set_failure_reason(::lnrpc::PaymentFailureReason value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_reason_ = value;
}

// map<uint64, bytes> first_hop_custom_records = 17;
inline int Payment::_internal_first_hop_custom_records_size() const {
  return _internal_first_hop_custom_records().size();
}
inline int Payment::first_hop_custom_records_size() const {
  return _internal_first_hop_custom_records_size();
}
inline void Payment::clear_first_hop_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_hop_custom_records_.Clear();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& Payment::_internal_first_hop_custom_records() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_hop_custom_records_.GetMap();
}
inline const ::google::protobuf::Map<::uint64_t, std::string>& Payment::first_hop_custom_records() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.Payment.first_hop_custom_records)
  return _internal_first_hop_custom_records();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* Payment::_internal_mutable_first_hop_custom_records() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.first_hop_custom_records_.MutableMap();
}
inline ::google::protobuf::Map<::uint64_t, std::string>* Payment::mutable_first_hop_custom_records() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.Payment.first_hop_custom_records)
  return _internal_mutable_first_hop_custom_records();
}

// -------------------------------------------------------------------

// HTLCAttempt

// uint64 attempt_id = 7;
inline void HTLCAttempt::clear_attempt_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attempt_id_ = ::uint64_t{0u};
}
inline ::uint64_t HTLCAttempt::attempt_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.attempt_id)
  return _internal_attempt_id();
}
inline void HTLCAttempt::set_attempt_id(::uint64_t value) {
  _internal_set_attempt_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLCAttempt.attempt_id)
}
inline ::uint64_t HTLCAttempt::_internal_attempt_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attempt_id_;
}
inline void HTLCAttempt::_internal_set_attempt_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attempt_id_ = value;
}

// .lnrpc.HTLCAttempt.HTLCStatus status = 1;
inline void HTLCAttempt::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
}
inline ::lnrpc::HTLCAttempt_HTLCStatus HTLCAttempt::status() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.status)
  return _internal_status();
}
inline void HTLCAttempt::set_status(::lnrpc::HTLCAttempt_HTLCStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLCAttempt.status)
}
inline ::lnrpc::HTLCAttempt_HTLCStatus HTLCAttempt::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::HTLCAttempt_HTLCStatus>(_impl_.status_);
}
inline void HTLCAttempt::_internal_set_status(::lnrpc::HTLCAttempt_HTLCStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// .lnrpc.Route route = 2;
inline bool HTLCAttempt::has_route() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.route_ != nullptr);
  return value;
}
inline void HTLCAttempt::clear_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.route_ != nullptr) _impl_.route_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::Route& HTLCAttempt::_internal_route() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Route* p = _impl_.route_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Route&>(::lnrpc::_Route_default_instance_);
}
inline const ::lnrpc::Route& HTLCAttempt::route() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.route)
  return _internal_route();
}
inline void HTLCAttempt::unsafe_arena_set_allocated_route(::lnrpc::Route* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.route_);
  }
  _impl_.route_ = reinterpret_cast<::lnrpc::Route*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.HTLCAttempt.route)
}
inline ::lnrpc::Route* HTLCAttempt::release_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Route* released = _impl_.route_;
  _impl_.route_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Route* HTLCAttempt::unsafe_arena_release_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.HTLCAttempt.route)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::Route* temp = _impl_.route_;
  _impl_.route_ = nullptr;
  return temp;
}
inline ::lnrpc::Route* HTLCAttempt::_internal_mutable_route() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.route_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Route>(GetArena());
    _impl_.route_ = reinterpret_cast<::lnrpc::Route*>(p);
  }
  return _impl_.route_;
}
inline ::lnrpc::Route* HTLCAttempt::mutable_route() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::Route* _msg = _internal_mutable_route();
  // @@protoc_insertion_point(field_mutable:lnrpc.HTLCAttempt.route)
  return _msg;
}
inline void HTLCAttempt::set_allocated_route(::lnrpc::Route* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.route_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.route_ = reinterpret_cast<::lnrpc::Route*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.HTLCAttempt.route)
}

// int64 attempt_time_ns = 3;
inline void HTLCAttempt::clear_attempt_time_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attempt_time_ns_ = ::int64_t{0};
}
inline ::int64_t HTLCAttempt::attempt_time_ns() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.attempt_time_ns)
  return _internal_attempt_time_ns();
}
inline void HTLCAttempt::set_attempt_time_ns(::int64_t value) {
  _internal_set_attempt_time_ns(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLCAttempt.attempt_time_ns)
}
inline ::int64_t HTLCAttempt::_internal_attempt_time_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attempt_time_ns_;
}
inline void HTLCAttempt::_internal_set_attempt_time_ns(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attempt_time_ns_ = value;
}

// int64 resolve_time_ns = 4;
inline void HTLCAttempt::clear_resolve_time_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolve_time_ns_ = ::int64_t{0};
}
inline ::int64_t HTLCAttempt::resolve_time_ns() const {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.resolve_time_ns)
  return _internal_resolve_time_ns();
}
inline void HTLCAttempt::set_resolve_time_ns(::int64_t value) {
  _internal_set_resolve_time_ns(value);
  // @@protoc_insertion_point(field_set:lnrpc.HTLCAttempt.resolve_time_ns)
}
inline ::int64_t HTLCAttempt::_internal_resolve_time_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolve_time_ns_;
}
inline void HTLCAttempt::_internal_set_resolve_time_ns(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolve_time_ns_ = value;
}

// .lnrpc.Failure failure = 5;
inline bool HTLCAttempt::has_failure() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.failure_ != nullptr);
  return value;
}
inline void HTLCAttempt::clear_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.failure_ != nullptr) _impl_.failure_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::Failure& HTLCAttempt::_internal_failure() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::Failure* p = _impl_.failure_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::Failure&>(::lnrpc::_Failure_default_instance_);
}
inline const ::lnrpc::Failure& HTLCAttempt::failure() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.failure)
  return _internal_failure();
}
inline void HTLCAttempt::unsafe_arena_set_allocated_failure(::lnrpc::Failure* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.failure_);
  }
  _impl_.failure_ = reinterpret_cast<::lnrpc::Failure*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.HTLCAttempt.failure)
}
inline ::lnrpc::Failure* HTLCAttempt::release_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::Failure* released = _impl_.failure_;
  _impl_.failure_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::Failure* HTLCAttempt::unsafe_arena_release_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.HTLCAttempt.failure)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::Failure* temp = _impl_.failure_;
  _impl_.failure_ = nullptr;
  return temp;
}
inline ::lnrpc::Failure* HTLCAttempt::_internal_mutable_failure() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.failure_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::Failure>(GetArena());
    _impl_.failure_ = reinterpret_cast<::lnrpc::Failure*>(p);
  }
  return _impl_.failure_;
}
inline ::lnrpc::Failure* HTLCAttempt::mutable_failure() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::Failure* _msg = _internal_mutable_failure();
  // @@protoc_insertion_point(field_mutable:lnrpc.HTLCAttempt.failure)
  return _msg;
}
inline void HTLCAttempt::set_allocated_failure(::lnrpc::Failure* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.failure_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.failure_ = reinterpret_cast<::lnrpc::Failure*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.HTLCAttempt.failure)
}

// bytes preimage = 6;
inline void HTLCAttempt::clear_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.ClearToEmpty();
}
inline const std::string& HTLCAttempt::preimage() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.HTLCAttempt.preimage)
  return _internal_preimage();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HTLCAttempt::set_preimage(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.HTLCAttempt.preimage)
}
inline std::string* HTLCAttempt::mutable_preimage() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_preimage();
  // @@protoc_insertion_point(field_mutable:lnrpc.HTLCAttempt.preimage)
  return _s;
}
inline const std::string& HTLCAttempt::_internal_preimage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.preimage_.Get();
}
inline void HTLCAttempt::_internal_set_preimage(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.Set(value, GetArena());
}
inline std::string* HTLCAttempt::_internal_mutable_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.preimage_.Mutable( GetArena());
}
inline std::string* HTLCAttempt::release_preimage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.HTLCAttempt.preimage)
  return _impl_.preimage_.Release();
}
inline void HTLCAttempt::set_allocated_preimage(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.preimage_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.preimage_.IsDefault()) {
          _impl_.preimage_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.HTLCAttempt.preimage)
}

// -------------------------------------------------------------------

// ListPaymentsRequest

// bool include_incomplete = 1;
inline void ListPaymentsRequest::clear_include_incomplete() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_incomplete_ = false;
}
inline bool ListPaymentsRequest::include_incomplete() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.include_incomplete)
  return _internal_include_incomplete();
}
inline void ListPaymentsRequest::set_include_incomplete(bool value) {
  _internal_set_include_incomplete(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.include_incomplete)
}
inline bool ListPaymentsRequest::_internal_include_incomplete() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_incomplete_;
}
inline void ListPaymentsRequest::_internal_set_include_incomplete(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_incomplete_ = value;
}

// uint64 index_offset = 2;
inline void ListPaymentsRequest::clear_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsRequest::index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.index_offset)
  return _internal_index_offset();
}
inline void ListPaymentsRequest::set_index_offset(::uint64_t value) {
  _internal_set_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.index_offset)
}
inline ::uint64_t ListPaymentsRequest::_internal_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_offset_;
}
inline void ListPaymentsRequest::_internal_set_index_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = value;
}

// uint64 max_payments = 3;
inline void ListPaymentsRequest::clear_max_payments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_payments_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsRequest::max_payments() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.max_payments)
  return _internal_max_payments();
}
inline void ListPaymentsRequest::set_max_payments(::uint64_t value) {
  _internal_set_max_payments(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.max_payments)
}
inline ::uint64_t ListPaymentsRequest::_internal_max_payments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_payments_;
}
inline void ListPaymentsRequest::_internal_set_max_payments(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_payments_ = value;
}

// bool reversed = 4;
inline void ListPaymentsRequest::clear_reversed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reversed_ = false;
}
inline bool ListPaymentsRequest::reversed() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.reversed)
  return _internal_reversed();
}
inline void ListPaymentsRequest::set_reversed(bool value) {
  _internal_set_reversed(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.reversed)
}
inline bool ListPaymentsRequest::_internal_reversed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.reversed_;
}
inline void ListPaymentsRequest::_internal_set_reversed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reversed_ = value;
}

// bool count_total_payments = 5;
inline void ListPaymentsRequest::clear_count_total_payments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_total_payments_ = false;
}
inline bool ListPaymentsRequest::count_total_payments() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.count_total_payments)
  return _internal_count_total_payments();
}
inline void ListPaymentsRequest::set_count_total_payments(bool value) {
  _internal_set_count_total_payments(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.count_total_payments)
}
inline bool ListPaymentsRequest::_internal_count_total_payments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_total_payments_;
}
inline void ListPaymentsRequest::_internal_set_count_total_payments(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_total_payments_ = value;
}

// uint64 creation_date_start = 6;
inline void ListPaymentsRequest::clear_creation_date_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_start_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsRequest::creation_date_start() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.creation_date_start)
  return _internal_creation_date_start();
}
inline void ListPaymentsRequest::set_creation_date_start(::uint64_t value) {
  _internal_set_creation_date_start(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.creation_date_start)
}
inline ::uint64_t ListPaymentsRequest::_internal_creation_date_start() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_date_start_;
}
inline void ListPaymentsRequest::_internal_set_creation_date_start(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_start_ = value;
}

// uint64 creation_date_end = 7;
inline void ListPaymentsRequest::clear_creation_date_end() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_end_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsRequest::creation_date_end() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsRequest.creation_date_end)
  return _internal_creation_date_end();
}
inline void ListPaymentsRequest::set_creation_date_end(::uint64_t value) {
  _internal_set_creation_date_end(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsRequest.creation_date_end)
}
inline ::uint64_t ListPaymentsRequest::_internal_creation_date_end() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.creation_date_end_;
}
inline void ListPaymentsRequest::_internal_set_creation_date_end(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.creation_date_end_ = value;
}

// -------------------------------------------------------------------

// ListPaymentsResponse

// repeated .lnrpc.Payment payments = 1;
inline int ListPaymentsResponse::_internal_payments_size() const {
  return _internal_payments().size();
}
inline int ListPaymentsResponse::payments_size() const {
  return _internal_payments_size();
}
inline void ListPaymentsResponse::clear_payments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payments_.Clear();
}
inline ::lnrpc::Payment* ListPaymentsResponse::mutable_payments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ListPaymentsResponse.payments)
  return _internal_mutable_payments()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>* ListPaymentsResponse::mutable_payments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListPaymentsResponse.payments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_payments();
}
inline const ::lnrpc::Payment& ListPaymentsResponse::payments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsResponse.payments)
  return _internal_payments().Get(index);
}
inline ::lnrpc::Payment* ListPaymentsResponse::add_payments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Payment* _add = _internal_mutable_payments()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ListPaymentsResponse.payments)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>& ListPaymentsResponse::payments() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListPaymentsResponse.payments)
  return _internal_payments();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>&
ListPaymentsResponse::_internal_payments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payments_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Payment>*
ListPaymentsResponse::_internal_mutable_payments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.payments_;
}

// uint64 first_index_offset = 2;
inline void ListPaymentsResponse::clear_first_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_index_offset_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsResponse::first_index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsResponse.first_index_offset)
  return _internal_first_index_offset();
}
inline void ListPaymentsResponse::set_first_index_offset(::uint64_t value) {
  _internal_set_first_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsResponse.first_index_offset)
}
inline ::uint64_t ListPaymentsResponse::_internal_first_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.first_index_offset_;
}
inline void ListPaymentsResponse::_internal_set_first_index_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.first_index_offset_ = value;
}

// uint64 last_index_offset = 3;
inline void ListPaymentsResponse::clear_last_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_index_offset_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsResponse::last_index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsResponse.last_index_offset)
  return _internal_last_index_offset();
}
inline void ListPaymentsResponse::set_last_index_offset(::uint64_t value) {
  _internal_set_last_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsResponse.last_index_offset)
}
inline ::uint64_t ListPaymentsResponse::_internal_last_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_index_offset_;
}
inline void ListPaymentsResponse::_internal_set_last_index_offset(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_index_offset_ = value;
}

// uint64 total_num_payments = 4;
inline void ListPaymentsResponse::clear_total_num_payments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_num_payments_ = ::uint64_t{0u};
}
inline ::uint64_t ListPaymentsResponse::total_num_payments() const {
  // @@protoc_insertion_point(field_get:lnrpc.ListPaymentsResponse.total_num_payments)
  return _internal_total_num_payments();
}
inline void ListPaymentsResponse::set_total_num_payments(::uint64_t value) {
  _internal_set_total_num_payments(value);
  // @@protoc_insertion_point(field_set:lnrpc.ListPaymentsResponse.total_num_payments)
}
inline ::uint64_t ListPaymentsResponse::_internal_total_num_payments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.total_num_payments_;
}
inline void ListPaymentsResponse::_internal_set_total_num_payments(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.total_num_payments_ = value;
}

// -------------------------------------------------------------------

// DeletePaymentRequest

// bytes payment_hash = 1;
inline void DeletePaymentRequest::clear_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.ClearToEmpty();
}
inline const std::string& DeletePaymentRequest::payment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.DeletePaymentRequest.payment_hash)
  return _internal_payment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeletePaymentRequest::set_payment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.DeletePaymentRequest.payment_hash)
}
inline std::string* DeletePaymentRequest::mutable_payment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.DeletePaymentRequest.payment_hash)
  return _s;
}
inline const std::string& DeletePaymentRequest::_internal_payment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_.Get();
}
inline void DeletePaymentRequest::_internal_set_payment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(value, GetArena());
}
inline std::string* DeletePaymentRequest::_internal_mutable_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_.Mutable( GetArena());
}
inline std::string* DeletePaymentRequest::release_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.DeletePaymentRequest.payment_hash)
  return _impl_.payment_hash_.Release();
}
inline void DeletePaymentRequest::set_allocated_payment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_.IsDefault()) {
          _impl_.payment_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.DeletePaymentRequest.payment_hash)
}

// bool failed_htlcs_only = 2;
inline void DeletePaymentRequest::clear_failed_htlcs_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_htlcs_only_ = false;
}
inline bool DeletePaymentRequest::failed_htlcs_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.DeletePaymentRequest.failed_htlcs_only)
  return _internal_failed_htlcs_only();
}
inline void DeletePaymentRequest::set_failed_htlcs_only(bool value) {
  _internal_set_failed_htlcs_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.DeletePaymentRequest.failed_htlcs_only)
}
inline bool DeletePaymentRequest::_internal_failed_htlcs_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_htlcs_only_;
}
inline void DeletePaymentRequest::_internal_set_failed_htlcs_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_htlcs_only_ = value;
}

// -------------------------------------------------------------------

// DeleteAllPaymentsRequest

// bool failed_payments_only = 1;
inline void DeleteAllPaymentsRequest::clear_failed_payments_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_payments_only_ = false;
}
inline bool DeleteAllPaymentsRequest::failed_payments_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.DeleteAllPaymentsRequest.failed_payments_only)
  return _internal_failed_payments_only();
}
inline void DeleteAllPaymentsRequest::set_failed_payments_only(bool value) {
  _internal_set_failed_payments_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.DeleteAllPaymentsRequest.failed_payments_only)
}
inline bool DeleteAllPaymentsRequest::_internal_failed_payments_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_payments_only_;
}
inline void DeleteAllPaymentsRequest::_internal_set_failed_payments_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_payments_only_ = value;
}

// bool failed_htlcs_only = 2;
inline void DeleteAllPaymentsRequest::clear_failed_htlcs_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_htlcs_only_ = false;
}
inline bool DeleteAllPaymentsRequest::failed_htlcs_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.DeleteAllPaymentsRequest.failed_htlcs_only)
  return _internal_failed_htlcs_only();
}
inline void DeleteAllPaymentsRequest::set_failed_htlcs_only(bool value) {
  _internal_set_failed_htlcs_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.DeleteAllPaymentsRequest.failed_htlcs_only)
}
inline bool DeleteAllPaymentsRequest::_internal_failed_htlcs_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_htlcs_only_;
}
inline void DeleteAllPaymentsRequest::_internal_set_failed_htlcs_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_htlcs_only_ = value;
}

// bool all_payments = 3;
inline void DeleteAllPaymentsRequest::clear_all_payments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_payments_ = false;
}
inline bool DeleteAllPaymentsRequest::all_payments() const {
  // @@protoc_insertion_point(field_get:lnrpc.DeleteAllPaymentsRequest.all_payments)
  return _internal_all_payments();
}
inline void DeleteAllPaymentsRequest::set_all_payments(bool value) {
  _internal_set_all_payments(value);
  // @@protoc_insertion_point(field_set:lnrpc.DeleteAllPaymentsRequest.all_payments)
}
inline bool DeleteAllPaymentsRequest::_internal_all_payments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_payments_;
}
inline void DeleteAllPaymentsRequest::_internal_set_all_payments(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_payments_ = value;
}

// -------------------------------------------------------------------

// DeletePaymentResponse

// -------------------------------------------------------------------

// DeleteAllPaymentsResponse

// -------------------------------------------------------------------

// AbandonChannelRequest

// .lnrpc.ChannelPoint channel_point = 1;
inline bool AbandonChannelRequest::has_channel_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_point_ != nullptr);
  return value;
}
inline void AbandonChannelRequest::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_point_ != nullptr) _impl_.channel_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& AbandonChannelRequest::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.channel_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& AbandonChannelRequest::channel_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.AbandonChannelRequest.channel_point)
  return _internal_channel_point();
}
inline void AbandonChannelRequest::unsafe_arena_set_allocated_channel_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_point_);
  }
  _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.AbandonChannelRequest.channel_point)
}
inline ::lnrpc::ChannelPoint* AbandonChannelRequest::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.channel_point_;
  _impl_.channel_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* AbandonChannelRequest::unsafe_arena_release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.AbandonChannelRequest.channel_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.channel_point_;
  _impl_.channel_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* AbandonChannelRequest::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.channel_point_;
}
inline ::lnrpc::ChannelPoint* AbandonChannelRequest::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.AbandonChannelRequest.channel_point)
  return _msg;
}
inline void AbandonChannelRequest::set_allocated_channel_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.AbandonChannelRequest.channel_point)
}

// bool pending_funding_shim_only = 2;
inline void AbandonChannelRequest::clear_pending_funding_shim_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_funding_shim_only_ = false;
}
inline bool AbandonChannelRequest::pending_funding_shim_only() const {
  // @@protoc_insertion_point(field_get:lnrpc.AbandonChannelRequest.pending_funding_shim_only)
  return _internal_pending_funding_shim_only();
}
inline void AbandonChannelRequest::set_pending_funding_shim_only(bool value) {
  _internal_set_pending_funding_shim_only(value);
  // @@protoc_insertion_point(field_set:lnrpc.AbandonChannelRequest.pending_funding_shim_only)
}
inline bool AbandonChannelRequest::_internal_pending_funding_shim_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_funding_shim_only_;
}
inline void AbandonChannelRequest::_internal_set_pending_funding_shim_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_funding_shim_only_ = value;
}

// bool i_know_what_i_am_doing = 3;
inline void AbandonChannelRequest::clear_i_know_what_i_am_doing() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_know_what_i_am_doing_ = false;
}
inline bool AbandonChannelRequest::i_know_what_i_am_doing() const {
  // @@protoc_insertion_point(field_get:lnrpc.AbandonChannelRequest.i_know_what_i_am_doing)
  return _internal_i_know_what_i_am_doing();
}
inline void AbandonChannelRequest::set_i_know_what_i_am_doing(bool value) {
  _internal_set_i_know_what_i_am_doing(value);
  // @@protoc_insertion_point(field_set:lnrpc.AbandonChannelRequest.i_know_what_i_am_doing)
}
inline bool AbandonChannelRequest::_internal_i_know_what_i_am_doing() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i_know_what_i_am_doing_;
}
inline void AbandonChannelRequest::_internal_set_i_know_what_i_am_doing(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_know_what_i_am_doing_ = value;
}

// -------------------------------------------------------------------

// AbandonChannelResponse

// -------------------------------------------------------------------

// DebugLevelRequest

// bool show = 1;
inline void DebugLevelRequest::clear_show() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_ = false;
}
inline bool DebugLevelRequest::show() const {
  // @@protoc_insertion_point(field_get:lnrpc.DebugLevelRequest.show)
  return _internal_show();
}
inline void DebugLevelRequest::set_show(bool value) {
  _internal_set_show(value);
  // @@protoc_insertion_point(field_set:lnrpc.DebugLevelRequest.show)
}
inline bool DebugLevelRequest::_internal_show() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_;
}
inline void DebugLevelRequest::_internal_set_show(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_ = value;
}

// string level_spec = 2;
inline void DebugLevelRequest::clear_level_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_spec_.ClearToEmpty();
}
inline const std::string& DebugLevelRequest::level_spec() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.DebugLevelRequest.level_spec)
  return _internal_level_spec();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DebugLevelRequest::set_level_spec(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_spec_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.DebugLevelRequest.level_spec)
}
inline std::string* DebugLevelRequest::mutable_level_spec() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_level_spec();
  // @@protoc_insertion_point(field_mutable:lnrpc.DebugLevelRequest.level_spec)
  return _s;
}
inline const std::string& DebugLevelRequest::_internal_level_spec() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_spec_.Get();
}
inline void DebugLevelRequest::_internal_set_level_spec(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_spec_.Set(value, GetArena());
}
inline std::string* DebugLevelRequest::_internal_mutable_level_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.level_spec_.Mutable( GetArena());
}
inline std::string* DebugLevelRequest::release_level_spec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.DebugLevelRequest.level_spec)
  return _impl_.level_spec_.Release();
}
inline void DebugLevelRequest::set_allocated_level_spec(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_spec_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.level_spec_.IsDefault()) {
          _impl_.level_spec_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.DebugLevelRequest.level_spec)
}

// -------------------------------------------------------------------

// DebugLevelResponse

// string sub_systems = 1;
inline void DebugLevelResponse::clear_sub_systems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_systems_.ClearToEmpty();
}
inline const std::string& DebugLevelResponse::sub_systems() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.DebugLevelResponse.sub_systems)
  return _internal_sub_systems();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DebugLevelResponse::set_sub_systems(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_systems_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.DebugLevelResponse.sub_systems)
}
inline std::string* DebugLevelResponse::mutable_sub_systems() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_sub_systems();
  // @@protoc_insertion_point(field_mutable:lnrpc.DebugLevelResponse.sub_systems)
  return _s;
}
inline const std::string& DebugLevelResponse::_internal_sub_systems() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sub_systems_.Get();
}
inline void DebugLevelResponse::_internal_set_sub_systems(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_systems_.Set(value, GetArena());
}
inline std::string* DebugLevelResponse::_internal_mutable_sub_systems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.sub_systems_.Mutable( GetArena());
}
inline std::string* DebugLevelResponse::release_sub_systems() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.DebugLevelResponse.sub_systems)
  return _impl_.sub_systems_.Release();
}
inline void DebugLevelResponse::set_allocated_sub_systems(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sub_systems_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.sub_systems_.IsDefault()) {
          _impl_.sub_systems_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.DebugLevelResponse.sub_systems)
}

// -------------------------------------------------------------------

// PayReqString

// string pay_req = 1;
inline void PayReqString::clear_pay_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pay_req_.ClearToEmpty();
}
inline const std::string& PayReqString::pay_req() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReqString.pay_req)
  return _internal_pay_req();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReqString::set_pay_req(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pay_req_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReqString.pay_req)
}
inline std::string* PayReqString::mutable_pay_req() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pay_req();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReqString.pay_req)
  return _s;
}
inline const std::string& PayReqString::_internal_pay_req() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pay_req_.Get();
}
inline void PayReqString::_internal_set_pay_req(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pay_req_.Set(value, GetArena());
}
inline std::string* PayReqString::_internal_mutable_pay_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pay_req_.Mutable( GetArena());
}
inline std::string* PayReqString::release_pay_req() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReqString.pay_req)
  return _impl_.pay_req_.Release();
}
inline void PayReqString::set_allocated_pay_req(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pay_req_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pay_req_.IsDefault()) {
          _impl_.pay_req_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReqString.pay_req)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PayReq

// string destination = 1;
inline void PayReq::clear_destination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_.ClearToEmpty();
}
inline const std::string& PayReq::destination() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.destination)
  return _internal_destination();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReq::set_destination(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.destination)
}
inline std::string* PayReq::mutable_destination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_destination();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.destination)
  return _s;
}
inline const std::string& PayReq::_internal_destination() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.destination_.Get();
}
inline void PayReq::_internal_set_destination(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_.Set(value, GetArena());
}
inline std::string* PayReq::_internal_mutable_destination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.destination_.Mutable( GetArena());
}
inline std::string* PayReq::release_destination() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReq.destination)
  return _impl_.destination_.Release();
}
inline void PayReq::set_allocated_destination(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.destination_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.destination_.IsDefault()) {
          _impl_.destination_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReq.destination)
}

// string payment_hash = 2;
inline void PayReq::clear_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.ClearToEmpty();
}
inline const std::string& PayReq::payment_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.payment_hash)
  return _internal_payment_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReq::set_payment_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.payment_hash)
}
inline std::string* PayReq::mutable_payment_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.payment_hash)
  return _s;
}
inline const std::string& PayReq::_internal_payment_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_hash_.Get();
}
inline void PayReq::_internal_set_payment_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.Set(value, GetArena());
}
inline std::string* PayReq::_internal_mutable_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_hash_.Mutable( GetArena());
}
inline std::string* PayReq::release_payment_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReq.payment_hash)
  return _impl_.payment_hash_.Release();
}
inline void PayReq::set_allocated_payment_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_hash_.IsDefault()) {
          _impl_.payment_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReq.payment_hash)
}

// int64 num_satoshis = 3;
inline void PayReq::clear_num_satoshis() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_satoshis_ = ::int64_t{0};
}
inline ::int64_t PayReq::num_satoshis() const {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.num_satoshis)
  return _internal_num_satoshis();
}
inline void PayReq::set_num_satoshis(::int64_t value) {
  _internal_set_num_satoshis(value);
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.num_satoshis)
}
inline ::int64_t PayReq::_internal_num_satoshis() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_satoshis_;
}
inline void PayReq::_internal_set_num_satoshis(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_satoshis_ = value;
}

// int64 timestamp = 4;
inline void PayReq::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::int64_t{0};
}
inline ::int64_t PayReq::timestamp() const {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.timestamp)
  return _internal_timestamp();
}
inline void PayReq::set_timestamp(::int64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.timestamp)
}
inline ::int64_t PayReq::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void PayReq::_internal_set_timestamp(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// int64 expiry = 5;
inline void PayReq::clear_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_ = ::int64_t{0};
}
inline ::int64_t PayReq::expiry() const {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.expiry)
  return _internal_expiry();
}
inline void PayReq::set_expiry(::int64_t value) {
  _internal_set_expiry(value);
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.expiry)
}
inline ::int64_t PayReq::_internal_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiry_;
}
inline void PayReq::_internal_set_expiry(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiry_ = value;
}

// string description = 6;
inline void PayReq::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& PayReq::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReq::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.description)
}
inline std::string* PayReq::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.description)
  return _s;
}
inline const std::string& PayReq::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void PayReq::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* PayReq::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* PayReq::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReq.description)
  return _impl_.description_.Release();
}
inline void PayReq::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReq.description)
}

// string description_hash = 7;
inline void PayReq::clear_description_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.ClearToEmpty();
}
inline const std::string& PayReq::description_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.description_hash)
  return _internal_description_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReq::set_description_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.description_hash)
}
inline std::string* PayReq::mutable_description_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.description_hash)
  return _s;
}
inline const std::string& PayReq::_internal_description_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_hash_.Get();
}
inline void PayReq::_internal_set_description_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.Set(value, GetArena());
}
inline std::string* PayReq::_internal_mutable_description_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_hash_.Mutable( GetArena());
}
inline std::string* PayReq::release_description_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReq.description_hash)
  return _impl_.description_hash_.Release();
}
inline void PayReq::set_allocated_description_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_hash_.IsDefault()) {
          _impl_.description_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReq.description_hash)
}

// string fallback_addr = 8;
inline void PayReq::clear_fallback_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.ClearToEmpty();
}
inline const std::string& PayReq::fallback_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.fallback_addr)
  return _internal_fallback_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReq::set_fallback_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.fallback_addr)
}
inline std::string* PayReq::mutable_fallback_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fallback_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.fallback_addr)
  return _s;
}
inline const std::string& PayReq::_internal_fallback_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fallback_addr_.Get();
}
inline void PayReq::_internal_set_fallback_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.Set(value, GetArena());
}
inline std::string* PayReq::_internal_mutable_fallback_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fallback_addr_.Mutable( GetArena());
}
inline std::string* PayReq::release_fallback_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReq.fallback_addr)
  return _impl_.fallback_addr_.Release();
}
inline void PayReq::set_allocated_fallback_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fallback_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fallback_addr_.IsDefault()) {
          _impl_.fallback_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReq.fallback_addr)
}

// int64 cltv_expiry = 9;
inline void PayReq::clear_cltv_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_ = ::int64_t{0};
}
inline ::int64_t PayReq::cltv_expiry() const {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.cltv_expiry)
  return _internal_cltv_expiry();
}
inline void PayReq::set_cltv_expiry(::int64_t value) {
  _internal_set_cltv_expiry(value);
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.cltv_expiry)
}
inline ::int64_t PayReq::_internal_cltv_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cltv_expiry_;
}
inline void PayReq::_internal_set_cltv_expiry(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_ = value;
}

// repeated .lnrpc.RouteHint route_hints = 10;
inline int PayReq::_internal_route_hints_size() const {
  return _internal_route_hints().size();
}
inline int PayReq::route_hints_size() const {
  return _internal_route_hints_size();
}
inline void PayReq::clear_route_hints() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.route_hints_.Clear();
}
inline ::lnrpc::RouteHint* PayReq::mutable_route_hints(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.route_hints)
  return _internal_mutable_route_hints()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>* PayReq::mutable_route_hints()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PayReq.route_hints)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_route_hints();
}
inline const ::lnrpc::RouteHint& PayReq::route_hints(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.route_hints)
  return _internal_route_hints().Get(index);
}
inline ::lnrpc::RouteHint* PayReq::add_route_hints() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::RouteHint* _add = _internal_mutable_route_hints()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PayReq.route_hints)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>& PayReq::route_hints() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PayReq.route_hints)
  return _internal_route_hints();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>&
PayReq::_internal_route_hints() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.route_hints_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::RouteHint>*
PayReq::_internal_mutable_route_hints() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.route_hints_;
}

// bytes payment_addr = 11;
inline void PayReq::clear_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.ClearToEmpty();
}
inline const std::string& PayReq::payment_addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.payment_addr)
  return _internal_payment_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PayReq::set_payment_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.payment_addr)
}
inline std::string* PayReq::mutable_payment_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payment_addr();
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.payment_addr)
  return _s;
}
inline const std::string& PayReq::_internal_payment_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.payment_addr_.Get();
}
inline void PayReq::_internal_set_payment_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.Set(value, GetArena());
}
inline std::string* PayReq::_internal_mutable_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.payment_addr_.Mutable( GetArena());
}
inline std::string* PayReq::release_payment_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PayReq.payment_addr)
  return _impl_.payment_addr_.Release();
}
inline void PayReq::set_allocated_payment_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.payment_addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payment_addr_.IsDefault()) {
          _impl_.payment_addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PayReq.payment_addr)
}

// int64 num_msat = 12;
inline void PayReq::clear_num_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_msat_ = ::int64_t{0};
}
inline ::int64_t PayReq::num_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.num_msat)
  return _internal_num_msat();
}
inline void PayReq::set_num_msat(::int64_t value) {
  _internal_set_num_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PayReq.num_msat)
}
inline ::int64_t PayReq::_internal_num_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_msat_;
}
inline void PayReq::_internal_set_num_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_msat_ = value;
}

// map<uint32, .lnrpc.Feature> features = 13;
inline int PayReq::_internal_features_size() const {
  return _internal_features().size();
}
inline int PayReq::features_size() const {
  return _internal_features_size();
}
inline void PayReq::clear_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.features_.Clear();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& PayReq::_internal_features() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.features_.GetMap();
}
inline const ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>& PayReq::features() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.PayReq.features)
  return _internal_features();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* PayReq::_internal_mutable_features() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.features_.MutableMap();
}
inline ::google::protobuf::Map<::uint32_t, ::lnrpc::Feature>* PayReq::mutable_features() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.PayReq.features)
  return _internal_mutable_features();
}

// repeated .lnrpc.BlindedPaymentPath blinded_paths = 14;
inline int PayReq::_internal_blinded_paths_size() const {
  return _internal_blinded_paths().size();
}
inline int PayReq::blinded_paths_size() const {
  return _internal_blinded_paths_size();
}
inline void PayReq::clear_blinded_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.blinded_paths_.Clear();
}
inline ::lnrpc::BlindedPaymentPath* PayReq::mutable_blinded_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PayReq.blinded_paths)
  return _internal_mutable_blinded_paths()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>* PayReq::mutable_blinded_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PayReq.blinded_paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_blinded_paths();
}
inline const ::lnrpc::BlindedPaymentPath& PayReq::blinded_paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PayReq.blinded_paths)
  return _internal_blinded_paths().Get(index);
}
inline ::lnrpc::BlindedPaymentPath* PayReq::add_blinded_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::BlindedPaymentPath* _add = _internal_mutable_blinded_paths()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PayReq.blinded_paths)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>& PayReq::blinded_paths() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PayReq.blinded_paths)
  return _internal_blinded_paths();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>&
PayReq::_internal_blinded_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.blinded_paths_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::BlindedPaymentPath>*
PayReq::_internal_mutable_blinded_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.blinded_paths_;
}

// -------------------------------------------------------------------

// Feature

// string name = 2;
inline void Feature::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Feature::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Feature.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Feature::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Feature.name)
}
inline std::string* Feature::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:lnrpc.Feature.name)
  return _s;
}
inline const std::string& Feature::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Feature::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Feature::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Feature::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Feature.name)
  return _impl_.name_.Release();
}
inline void Feature::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Feature.name)
}

// bool is_required = 3;
inline void Feature::clear_is_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_required_ = false;
}
inline bool Feature::is_required() const {
  // @@protoc_insertion_point(field_get:lnrpc.Feature.is_required)
  return _internal_is_required();
}
inline void Feature::set_is_required(bool value) {
  _internal_set_is_required(value);
  // @@protoc_insertion_point(field_set:lnrpc.Feature.is_required)
}
inline bool Feature::_internal_is_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_required_;
}
inline void Feature::_internal_set_is_required(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_required_ = value;
}

// bool is_known = 4;
inline void Feature::clear_is_known() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_known_ = false;
}
inline bool Feature::is_known() const {
  // @@protoc_insertion_point(field_get:lnrpc.Feature.is_known)
  return _internal_is_known();
}
inline void Feature::set_is_known(bool value) {
  _internal_set_is_known(value);
  // @@protoc_insertion_point(field_set:lnrpc.Feature.is_known)
}
inline bool Feature::_internal_is_known() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_known_;
}
inline void Feature::_internal_set_is_known(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_known_ = value;
}

// -------------------------------------------------------------------

// FeeReportRequest

// -------------------------------------------------------------------

// ChannelFeeReport

// uint64 chan_id = 5 [jstype = JS_STRING];
inline void ChannelFeeReport::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelFeeReport::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.chan_id)
  return _internal_chan_id();
}
inline void ChannelFeeReport::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.chan_id)
}
inline ::uint64_t ChannelFeeReport::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void ChannelFeeReport::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// string channel_point = 1;
inline void ChannelFeeReport::clear_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.ClearToEmpty();
}
inline const std::string& ChannelFeeReport::channel_point() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.channel_point)
  return _internal_channel_point();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelFeeReport::set_channel_point(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.channel_point)
}
inline std::string* ChannelFeeReport::mutable_channel_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_channel_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelFeeReport.channel_point)
  return _s;
}
inline const std::string& ChannelFeeReport::_internal_channel_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_point_.Get();
}
inline void ChannelFeeReport::_internal_set_channel_point(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.Set(value, GetArena());
}
inline std::string* ChannelFeeReport::_internal_mutable_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.channel_point_.Mutable( GetArena());
}
inline std::string* ChannelFeeReport::release_channel_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelFeeReport.channel_point)
  return _impl_.channel_point_.Release();
}
inline void ChannelFeeReport::set_allocated_channel_point(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_point_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.channel_point_.IsDefault()) {
          _impl_.channel_point_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelFeeReport.channel_point)
}

// int64 base_fee_msat = 2;
inline void ChannelFeeReport::clear_base_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = ::int64_t{0};
}
inline ::int64_t ChannelFeeReport::base_fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.base_fee_msat)
  return _internal_base_fee_msat();
}
inline void ChannelFeeReport::set_base_fee_msat(::int64_t value) {
  _internal_set_base_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.base_fee_msat)
}
inline ::int64_t ChannelFeeReport::_internal_base_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_msat_;
}
inline void ChannelFeeReport::_internal_set_base_fee_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = value;
}

// int64 fee_per_mil = 3;
inline void ChannelFeeReport::clear_fee_per_mil() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_mil_ = ::int64_t{0};
}
inline ::int64_t ChannelFeeReport::fee_per_mil() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.fee_per_mil)
  return _internal_fee_per_mil();
}
inline void ChannelFeeReport::set_fee_per_mil(::int64_t value) {
  _internal_set_fee_per_mil(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.fee_per_mil)
}
inline ::int64_t ChannelFeeReport::_internal_fee_per_mil() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_per_mil_;
}
inline void ChannelFeeReport::_internal_set_fee_per_mil(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_per_mil_ = value;
}

// double fee_rate = 4;
inline void ChannelFeeReport::clear_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = 0;
}
inline double ChannelFeeReport::fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.fee_rate)
  return _internal_fee_rate();
}
inline void ChannelFeeReport::set_fee_rate(double value) {
  _internal_set_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.fee_rate)
}
inline double ChannelFeeReport::_internal_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_;
}
inline void ChannelFeeReport::_internal_set_fee_rate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = value;
}

// int32 inbound_base_fee_msat = 6;
inline void ChannelFeeReport::clear_inbound_base_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_base_fee_msat_ = 0;
}
inline ::int32_t ChannelFeeReport::inbound_base_fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.inbound_base_fee_msat)
  return _internal_inbound_base_fee_msat();
}
inline void ChannelFeeReport::set_inbound_base_fee_msat(::int32_t value) {
  _internal_set_inbound_base_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.inbound_base_fee_msat)
}
inline ::int32_t ChannelFeeReport::_internal_inbound_base_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inbound_base_fee_msat_;
}
inline void ChannelFeeReport::_internal_set_inbound_base_fee_msat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_base_fee_msat_ = value;
}

// int32 inbound_fee_per_mil = 7;
inline void ChannelFeeReport::clear_inbound_fee_per_mil() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_fee_per_mil_ = 0;
}
inline ::int32_t ChannelFeeReport::inbound_fee_per_mil() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelFeeReport.inbound_fee_per_mil)
  return _internal_inbound_fee_per_mil();
}
inline void ChannelFeeReport::set_inbound_fee_per_mil(::int32_t value) {
  _internal_set_inbound_fee_per_mil(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelFeeReport.inbound_fee_per_mil)
}
inline ::int32_t ChannelFeeReport::_internal_inbound_fee_per_mil() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inbound_fee_per_mil_;
}
inline void ChannelFeeReport::_internal_set_inbound_fee_per_mil(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.inbound_fee_per_mil_ = value;
}

// -------------------------------------------------------------------

// FeeReportResponse

// repeated .lnrpc.ChannelFeeReport channel_fees = 1;
inline int FeeReportResponse::_internal_channel_fees_size() const {
  return _internal_channel_fees().size();
}
inline int FeeReportResponse::channel_fees_size() const {
  return _internal_channel_fees_size();
}
inline void FeeReportResponse::clear_channel_fees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_fees_.Clear();
}
inline ::lnrpc::ChannelFeeReport* FeeReportResponse::mutable_channel_fees(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.FeeReportResponse.channel_fees)
  return _internal_mutable_channel_fees()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>* FeeReportResponse::mutable_channel_fees()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.FeeReportResponse.channel_fees)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_channel_fees();
}
inline const ::lnrpc::ChannelFeeReport& FeeReportResponse::channel_fees(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FeeReportResponse.channel_fees)
  return _internal_channel_fees().Get(index);
}
inline ::lnrpc::ChannelFeeReport* FeeReportResponse::add_channel_fees() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelFeeReport* _add = _internal_mutable_channel_fees()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.FeeReportResponse.channel_fees)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>& FeeReportResponse::channel_fees() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.FeeReportResponse.channel_fees)
  return _internal_channel_fees();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>&
FeeReportResponse::_internal_channel_fees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_fees_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelFeeReport>*
FeeReportResponse::_internal_mutable_channel_fees() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.channel_fees_;
}

// uint64 day_fee_sum = 2;
inline void FeeReportResponse::clear_day_fee_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.day_fee_sum_ = ::uint64_t{0u};
}
inline ::uint64_t FeeReportResponse::day_fee_sum() const {
  // @@protoc_insertion_point(field_get:lnrpc.FeeReportResponse.day_fee_sum)
  return _internal_day_fee_sum();
}
inline void FeeReportResponse::set_day_fee_sum(::uint64_t value) {
  _internal_set_day_fee_sum(value);
  // @@protoc_insertion_point(field_set:lnrpc.FeeReportResponse.day_fee_sum)
}
inline ::uint64_t FeeReportResponse::_internal_day_fee_sum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.day_fee_sum_;
}
inline void FeeReportResponse::_internal_set_day_fee_sum(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.day_fee_sum_ = value;
}

// uint64 week_fee_sum = 3;
inline void FeeReportResponse::clear_week_fee_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.week_fee_sum_ = ::uint64_t{0u};
}
inline ::uint64_t FeeReportResponse::week_fee_sum() const {
  // @@protoc_insertion_point(field_get:lnrpc.FeeReportResponse.week_fee_sum)
  return _internal_week_fee_sum();
}
inline void FeeReportResponse::set_week_fee_sum(::uint64_t value) {
  _internal_set_week_fee_sum(value);
  // @@protoc_insertion_point(field_set:lnrpc.FeeReportResponse.week_fee_sum)
}
inline ::uint64_t FeeReportResponse::_internal_week_fee_sum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.week_fee_sum_;
}
inline void FeeReportResponse::_internal_set_week_fee_sum(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.week_fee_sum_ = value;
}

// uint64 month_fee_sum = 4;
inline void FeeReportResponse::clear_month_fee_sum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.month_fee_sum_ = ::uint64_t{0u};
}
inline ::uint64_t FeeReportResponse::month_fee_sum() const {
  // @@protoc_insertion_point(field_get:lnrpc.FeeReportResponse.month_fee_sum)
  return _internal_month_fee_sum();
}
inline void FeeReportResponse::set_month_fee_sum(::uint64_t value) {
  _internal_set_month_fee_sum(value);
  // @@protoc_insertion_point(field_set:lnrpc.FeeReportResponse.month_fee_sum)
}
inline ::uint64_t FeeReportResponse::_internal_month_fee_sum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.month_fee_sum_;
}
inline void FeeReportResponse::_internal_set_month_fee_sum(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.month_fee_sum_ = value;
}

// -------------------------------------------------------------------

// InboundFee

// int32 base_fee_msat = 1;
inline void InboundFee::clear_base_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = 0;
}
inline ::int32_t InboundFee::base_fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.InboundFee.base_fee_msat)
  return _internal_base_fee_msat();
}
inline void InboundFee::set_base_fee_msat(::int32_t value) {
  _internal_set_base_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.InboundFee.base_fee_msat)
}
inline ::int32_t InboundFee::_internal_base_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_msat_;
}
inline void InboundFee::_internal_set_base_fee_msat(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = value;
}

// int32 fee_rate_ppm = 2;
inline void InboundFee::clear_fee_rate_ppm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ppm_ = 0;
}
inline ::int32_t InboundFee::fee_rate_ppm() const {
  // @@protoc_insertion_point(field_get:lnrpc.InboundFee.fee_rate_ppm)
  return _internal_fee_rate_ppm();
}
inline void InboundFee::set_fee_rate_ppm(::int32_t value) {
  _internal_set_fee_rate_ppm(value);
  // @@protoc_insertion_point(field_set:lnrpc.InboundFee.fee_rate_ppm)
}
inline ::int32_t InboundFee::_internal_fee_rate_ppm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_ppm_;
}
inline void InboundFee::_internal_set_fee_rate_ppm(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ppm_ = value;
}

// -------------------------------------------------------------------

// PolicyUpdateRequest

// bool global = 1;
inline bool PolicyUpdateRequest::has_global() const {
  return scope_case() == kGlobal;
}
inline void PolicyUpdateRequest::set_has_global() {
  _impl_._oneof_case_[0] = kGlobal;
}
inline void PolicyUpdateRequest::clear_global() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (scope_case() == kGlobal) {
    _impl_.scope_.global_ = false;
    clear_has_scope();
  }
}
inline bool PolicyUpdateRequest::global() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.global)
  return _internal_global();
}
inline void PolicyUpdateRequest::set_global(bool value) {
  if (scope_case() != kGlobal) {
    clear_scope();
    set_has_global();
  }
  _impl_.scope_.global_ = value;
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.global)
}
inline bool PolicyUpdateRequest::_internal_global() const {
  if (scope_case() == kGlobal) {
    return _impl_.scope_.global_;
  }
  return false;
}

// .lnrpc.ChannelPoint chan_point = 2;
inline bool PolicyUpdateRequest::has_chan_point() const {
  return scope_case() == kChanPoint;
}
inline bool PolicyUpdateRequest::_internal_has_chan_point() const {
  return scope_case() == kChanPoint;
}
inline void PolicyUpdateRequest::set_has_chan_point() {
  _impl_._oneof_case_[0] = kChanPoint;
}
inline void PolicyUpdateRequest::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (scope_case() == kChanPoint) {
    if (GetArena() == nullptr) {
      delete _impl_.scope_.chan_point_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.scope_.chan_point_);
    }
    clear_has_scope();
  }
}
inline ::lnrpc::ChannelPoint* PolicyUpdateRequest::release_chan_point() {
  // @@protoc_insertion_point(field_release:lnrpc.PolicyUpdateRequest.chan_point)
  if (scope_case() == kChanPoint) {
    clear_has_scope();
    auto* temp = _impl_.scope_.chan_point_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.scope_.chan_point_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelPoint& PolicyUpdateRequest::_internal_chan_point() const {
  return scope_case() == kChanPoint ? *_impl_.scope_.chan_point_ : reinterpret_cast<::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& PolicyUpdateRequest::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.chan_point)
  return _internal_chan_point();
}
inline ::lnrpc::ChannelPoint* PolicyUpdateRequest::unsafe_arena_release_chan_point() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.PolicyUpdateRequest.chan_point)
  if (scope_case() == kChanPoint) {
    clear_has_scope();
    auto* temp = _impl_.scope_.chan_point_;
    _impl_.scope_.chan_point_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void PolicyUpdateRequest::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_scope();
  if (value) {
    set_has_chan_point();
    _impl_.scope_.chan_point_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PolicyUpdateRequest.chan_point)
}
inline ::lnrpc::ChannelPoint* PolicyUpdateRequest::_internal_mutable_chan_point() {
  if (scope_case() != kChanPoint) {
    clear_scope();
    set_has_chan_point();
    _impl_.scope_.chan_point_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
  }
  return _impl_.scope_.chan_point_;
}
inline ::lnrpc::ChannelPoint* PolicyUpdateRequest::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.PolicyUpdateRequest.chan_point)
  return _msg;
}

// int64 base_fee_msat = 3;
inline void PolicyUpdateRequest::clear_base_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = ::int64_t{0};
}
inline ::int64_t PolicyUpdateRequest::base_fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.base_fee_msat)
  return _internal_base_fee_msat();
}
inline void PolicyUpdateRequest::set_base_fee_msat(::int64_t value) {
  _internal_set_base_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.base_fee_msat)
}
inline ::int64_t PolicyUpdateRequest::_internal_base_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_msat_;
}
inline void PolicyUpdateRequest::_internal_set_base_fee_msat(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_msat_ = value;
}

// double fee_rate = 4;
inline void PolicyUpdateRequest::clear_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = 0;
}
inline double PolicyUpdateRequest::fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.fee_rate)
  return _internal_fee_rate();
}
inline void PolicyUpdateRequest::set_fee_rate(double value) {
  _internal_set_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.fee_rate)
}
inline double PolicyUpdateRequest::_internal_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_;
}
inline void PolicyUpdateRequest::_internal_set_fee_rate(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = value;
}

// uint32 fee_rate_ppm = 9;
inline void PolicyUpdateRequest::clear_fee_rate_ppm() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ppm_ = 0u;
}
inline ::uint32_t PolicyUpdateRequest::fee_rate_ppm() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.fee_rate_ppm)
  return _internal_fee_rate_ppm();
}
inline void PolicyUpdateRequest::set_fee_rate_ppm(::uint32_t value) {
  _internal_set_fee_rate_ppm(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.fee_rate_ppm)
}
inline ::uint32_t PolicyUpdateRequest::_internal_fee_rate_ppm() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_ppm_;
}
inline void PolicyUpdateRequest::_internal_set_fee_rate_ppm(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ppm_ = value;
}

// uint32 time_lock_delta = 5;
inline void PolicyUpdateRequest::clear_time_lock_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_lock_delta_ = 0u;
}
inline ::uint32_t PolicyUpdateRequest::time_lock_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.time_lock_delta)
  return _internal_time_lock_delta();
}
inline void PolicyUpdateRequest::set_time_lock_delta(::uint32_t value) {
  _internal_set_time_lock_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.time_lock_delta)
}
inline ::uint32_t PolicyUpdateRequest::_internal_time_lock_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_lock_delta_;
}
inline void PolicyUpdateRequest::_internal_set_time_lock_delta(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_lock_delta_ = value;
}

// uint64 max_htlc_msat = 6;
inline void PolicyUpdateRequest::clear_max_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_htlc_msat_ = ::uint64_t{0u};
}
inline ::uint64_t PolicyUpdateRequest::max_htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.max_htlc_msat)
  return _internal_max_htlc_msat();
}
inline void PolicyUpdateRequest::set_max_htlc_msat(::uint64_t value) {
  _internal_set_max_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.max_htlc_msat)
}
inline ::uint64_t PolicyUpdateRequest::_internal_max_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_htlc_msat_;
}
inline void PolicyUpdateRequest::_internal_set_max_htlc_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_htlc_msat_ = value;
}

// uint64 min_htlc_msat = 7;
inline void PolicyUpdateRequest::clear_min_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = ::uint64_t{0u};
}
inline ::uint64_t PolicyUpdateRequest::min_htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.min_htlc_msat)
  return _internal_min_htlc_msat();
}
inline void PolicyUpdateRequest::set_min_htlc_msat(::uint64_t value) {
  _internal_set_min_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.min_htlc_msat)
}
inline ::uint64_t PolicyUpdateRequest::_internal_min_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_msat_;
}
inline void PolicyUpdateRequest::_internal_set_min_htlc_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_ = value;
}

// bool min_htlc_msat_specified = 8;
inline void PolicyUpdateRequest::clear_min_htlc_msat_specified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_specified_ = false;
}
inline bool PolicyUpdateRequest::min_htlc_msat_specified() const {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.min_htlc_msat_specified)
  return _internal_min_htlc_msat_specified();
}
inline void PolicyUpdateRequest::set_min_htlc_msat_specified(bool value) {
  _internal_set_min_htlc_msat_specified(value);
  // @@protoc_insertion_point(field_set:lnrpc.PolicyUpdateRequest.min_htlc_msat_specified)
}
inline bool PolicyUpdateRequest::_internal_min_htlc_msat_specified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_htlc_msat_specified_;
}
inline void PolicyUpdateRequest::_internal_set_min_htlc_msat_specified(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_htlc_msat_specified_ = value;
}

// .lnrpc.InboundFee inbound_fee = 10;
inline bool PolicyUpdateRequest::has_inbound_fee() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.inbound_fee_ != nullptr);
  return value;
}
inline void PolicyUpdateRequest::clear_inbound_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inbound_fee_ != nullptr) _impl_.inbound_fee_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::InboundFee& PolicyUpdateRequest::_internal_inbound_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::InboundFee* p = _impl_.inbound_fee_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::InboundFee&>(::lnrpc::_InboundFee_default_instance_);
}
inline const ::lnrpc::InboundFee& PolicyUpdateRequest::inbound_fee() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateRequest.inbound_fee)
  return _internal_inbound_fee();
}
inline void PolicyUpdateRequest::unsafe_arena_set_allocated_inbound_fee(::lnrpc::InboundFee* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.inbound_fee_);
  }
  _impl_.inbound_fee_ = reinterpret_cast<::lnrpc::InboundFee*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.PolicyUpdateRequest.inbound_fee)
}
inline ::lnrpc::InboundFee* PolicyUpdateRequest::release_inbound_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::InboundFee* released = _impl_.inbound_fee_;
  _impl_.inbound_fee_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::InboundFee* PolicyUpdateRequest::unsafe_arena_release_inbound_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.PolicyUpdateRequest.inbound_fee)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::InboundFee* temp = _impl_.inbound_fee_;
  _impl_.inbound_fee_ = nullptr;
  return temp;
}
inline ::lnrpc::InboundFee* PolicyUpdateRequest::_internal_mutable_inbound_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.inbound_fee_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::InboundFee>(GetArena());
    _impl_.inbound_fee_ = reinterpret_cast<::lnrpc::InboundFee*>(p);
  }
  return _impl_.inbound_fee_;
}
inline ::lnrpc::InboundFee* PolicyUpdateRequest::mutable_inbound_fee() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::InboundFee* _msg = _internal_mutable_inbound_fee();
  // @@protoc_insertion_point(field_mutable:lnrpc.PolicyUpdateRequest.inbound_fee)
  return _msg;
}
inline void PolicyUpdateRequest::set_allocated_inbound_fee(::lnrpc::InboundFee* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.inbound_fee_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.inbound_fee_ = reinterpret_cast<::lnrpc::InboundFee*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.PolicyUpdateRequest.inbound_fee)
}

inline bool PolicyUpdateRequest::has_scope() const {
  return scope_case() != SCOPE_NOT_SET;
}
inline void PolicyUpdateRequest::clear_has_scope() {
  _impl_._oneof_case_[0] = SCOPE_NOT_SET;
}
inline PolicyUpdateRequest::ScopeCase PolicyUpdateRequest::scope_case() const {
  return PolicyUpdateRequest::ScopeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// FailedUpdate

// .lnrpc.OutPoint outpoint = 1;
inline bool FailedUpdate::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline void FailedUpdate::clear_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ != nullptr) _impl_.outpoint_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::OutPoint& FailedUpdate::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& FailedUpdate::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FailedUpdate.outpoint)
  return _internal_outpoint();
}
inline void FailedUpdate::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.FailedUpdate.outpoint)
}
inline ::lnrpc::OutPoint* FailedUpdate::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* FailedUpdate::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FailedUpdate.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* FailedUpdate::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* FailedUpdate::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:lnrpc.FailedUpdate.outpoint)
  return _msg;
}
inline void FailedUpdate::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FailedUpdate.outpoint)
}

// .lnrpc.UpdateFailure reason = 2;
inline void FailedUpdate::clear_reason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_ = 0;
}
inline ::lnrpc::UpdateFailure FailedUpdate::reason() const {
  // @@protoc_insertion_point(field_get:lnrpc.FailedUpdate.reason)
  return _internal_reason();
}
inline void FailedUpdate::set_reason(::lnrpc::UpdateFailure value) {
  _internal_set_reason(value);
  // @@protoc_insertion_point(field_set:lnrpc.FailedUpdate.reason)
}
inline ::lnrpc::UpdateFailure FailedUpdate::_internal_reason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::UpdateFailure>(_impl_.reason_);
}
inline void FailedUpdate::_internal_set_reason(::lnrpc::UpdateFailure value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.reason_ = value;
}

// string update_error = 3;
inline void FailedUpdate::clear_update_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_error_.ClearToEmpty();
}
inline const std::string& FailedUpdate::update_error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.FailedUpdate.update_error)
  return _internal_update_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FailedUpdate::set_update_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.FailedUpdate.update_error)
}
inline std::string* FailedUpdate::mutable_update_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_update_error();
  // @@protoc_insertion_point(field_mutable:lnrpc.FailedUpdate.update_error)
  return _s;
}
inline const std::string& FailedUpdate::_internal_update_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.update_error_.Get();
}
inline void FailedUpdate::_internal_set_update_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_error_.Set(value, GetArena());
}
inline std::string* FailedUpdate::_internal_mutable_update_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.update_error_.Mutable( GetArena());
}
inline std::string* FailedUpdate::release_update_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.FailedUpdate.update_error)
  return _impl_.update_error_.Release();
}
inline void FailedUpdate::set_allocated_update_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.update_error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.update_error_.IsDefault()) {
          _impl_.update_error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.FailedUpdate.update_error)
}

// -------------------------------------------------------------------

// PolicyUpdateResponse

// repeated .lnrpc.FailedUpdate failed_updates = 1;
inline int PolicyUpdateResponse::_internal_failed_updates_size() const {
  return _internal_failed_updates().size();
}
inline int PolicyUpdateResponse::failed_updates_size() const {
  return _internal_failed_updates_size();
}
inline void PolicyUpdateResponse::clear_failed_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failed_updates_.Clear();
}
inline ::lnrpc::FailedUpdate* PolicyUpdateResponse::mutable_failed_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.PolicyUpdateResponse.failed_updates)
  return _internal_mutable_failed_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>* PolicyUpdateResponse::mutable_failed_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.PolicyUpdateResponse.failed_updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_failed_updates();
}
inline const ::lnrpc::FailedUpdate& PolicyUpdateResponse::failed_updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.PolicyUpdateResponse.failed_updates)
  return _internal_failed_updates().Get(index);
}
inline ::lnrpc::FailedUpdate* PolicyUpdateResponse::add_failed_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::FailedUpdate* _add = _internal_mutable_failed_updates()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.PolicyUpdateResponse.failed_updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>& PolicyUpdateResponse::failed_updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.PolicyUpdateResponse.failed_updates)
  return _internal_failed_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>&
PolicyUpdateResponse::_internal_failed_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failed_updates_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::FailedUpdate>*
PolicyUpdateResponse::_internal_mutable_failed_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.failed_updates_;
}

// -------------------------------------------------------------------

// ForwardingHistoryRequest

// uint64 start_time = 1;
inline void ForwardingHistoryRequest::clear_start_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingHistoryRequest::start_time() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryRequest.start_time)
  return _internal_start_time();
}
inline void ForwardingHistoryRequest::set_start_time(::uint64_t value) {
  _internal_set_start_time(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingHistoryRequest.start_time)
}
inline ::uint64_t ForwardingHistoryRequest::_internal_start_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_time_;
}
inline void ForwardingHistoryRequest::_internal_set_start_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_time_ = value;
}

// uint64 end_time = 2;
inline void ForwardingHistoryRequest::clear_end_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingHistoryRequest::end_time() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryRequest.end_time)
  return _internal_end_time();
}
inline void ForwardingHistoryRequest::set_end_time(::uint64_t value) {
  _internal_set_end_time(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingHistoryRequest.end_time)
}
inline ::uint64_t ForwardingHistoryRequest::_internal_end_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.end_time_;
}
inline void ForwardingHistoryRequest::_internal_set_end_time(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.end_time_ = value;
}

// uint32 index_offset = 3;
inline void ForwardingHistoryRequest::clear_index_offset() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = 0u;
}
inline ::uint32_t ForwardingHistoryRequest::index_offset() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryRequest.index_offset)
  return _internal_index_offset();
}
inline void ForwardingHistoryRequest::set_index_offset(::uint32_t value) {
  _internal_set_index_offset(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingHistoryRequest.index_offset)
}
inline ::uint32_t ForwardingHistoryRequest::_internal_index_offset() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.index_offset_;
}
inline void ForwardingHistoryRequest::_internal_set_index_offset(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.index_offset_ = value;
}

// uint32 num_max_events = 4;
inline void ForwardingHistoryRequest::clear_num_max_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_max_events_ = 0u;
}
inline ::uint32_t ForwardingHistoryRequest::num_max_events() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryRequest.num_max_events)
  return _internal_num_max_events();
}
inline void ForwardingHistoryRequest::set_num_max_events(::uint32_t value) {
  _internal_set_num_max_events(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingHistoryRequest.num_max_events)
}
inline ::uint32_t ForwardingHistoryRequest::_internal_num_max_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.num_max_events_;
}
inline void ForwardingHistoryRequest::_internal_set_num_max_events(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.num_max_events_ = value;
}

// bool peer_alias_lookup = 5;
inline void ForwardingHistoryRequest::clear_peer_alias_lookup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_lookup_ = false;
}
inline bool ForwardingHistoryRequest::peer_alias_lookup() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryRequest.peer_alias_lookup)
  return _internal_peer_alias_lookup();
}
inline void ForwardingHistoryRequest::set_peer_alias_lookup(bool value) {
  _internal_set_peer_alias_lookup(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingHistoryRequest.peer_alias_lookup)
}
inline bool ForwardingHistoryRequest::_internal_peer_alias_lookup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_alias_lookup_;
}
inline void ForwardingHistoryRequest::_internal_set_peer_alias_lookup(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_lookup_ = value;
}

// -------------------------------------------------------------------

// ForwardingEvent

// uint64 timestamp = 1 [deprecated = true];
inline void ForwardingEvent::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::timestamp() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.timestamp)
  return _internal_timestamp();
}
inline void ForwardingEvent::set_timestamp(::uint64_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.timestamp)
}
inline ::uint64_t ForwardingEvent::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ForwardingEvent::_internal_set_timestamp(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// uint64 chan_id_in = 2 [jstype = JS_STRING];
inline void ForwardingEvent::clear_chan_id_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_in_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::chan_id_in() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.chan_id_in)
  return _internal_chan_id_in();
}
inline void ForwardingEvent::set_chan_id_in(::uint64_t value) {
  _internal_set_chan_id_in(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.chan_id_in)
}
inline ::uint64_t ForwardingEvent::_internal_chan_id_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_in_;
}
inline void ForwardingEvent::_internal_set_chan_id_in(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_in_ = value;
}

// uint64 chan_id_out = 4 [jstype = JS_STRING];
inline void ForwardingEvent::clear_chan_id_out() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_out_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::chan_id_out() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.chan_id_out)
  return _internal_chan_id_out();
}
inline void ForwardingEvent::set_chan_id_out(::uint64_t value) {
  _internal_set_chan_id_out(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.chan_id_out)
}
inline ::uint64_t ForwardingEvent::_internal_chan_id_out() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_out_;
}
inline void ForwardingEvent::_internal_set_chan_id_out(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_out_ = value;
}

// uint64 amt_in = 5;
inline void ForwardingEvent::clear_amt_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_in_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::amt_in() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.amt_in)
  return _internal_amt_in();
}
inline void ForwardingEvent::set_amt_in(::uint64_t value) {
  _internal_set_amt_in(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.amt_in)
}
inline ::uint64_t ForwardingEvent::_internal_amt_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_in_;
}
inline void ForwardingEvent::_internal_set_amt_in(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_in_ = value;
}

// uint64 amt_out = 6;
inline void ForwardingEvent::clear_amt_out() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_out_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::amt_out() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.amt_out)
  return _internal_amt_out();
}
inline void ForwardingEvent::set_amt_out(::uint64_t value) {
  _internal_set_amt_out(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.amt_out)
}
inline ::uint64_t ForwardingEvent::_internal_amt_out() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_out_;
}
inline void ForwardingEvent::_internal_set_amt_out(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_out_ = value;
}

// uint64 fee = 7;
inline void ForwardingEvent::clear_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.fee)
  return _internal_fee();
}
inline void ForwardingEvent::set_fee(::uint64_t value) {
  _internal_set_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.fee)
}
inline ::uint64_t ForwardingEvent::_internal_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_;
}
inline void ForwardingEvent::_internal_set_fee(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_ = value;
}

// uint64 fee_msat = 8;
inline void ForwardingEvent::clear_fee_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::fee_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.fee_msat)
  return _internal_fee_msat();
}
inline void ForwardingEvent::set_fee_msat(::uint64_t value) {
  _internal_set_fee_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.fee_msat)
}
inline ::uint64_t ForwardingEvent::_internal_fee_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_msat_;
}
inline void ForwardingEvent::_internal_set_fee_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_msat_ = value;
}

// uint64 amt_in_msat = 9;
inline void ForwardingEvent::clear_amt_in_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_in_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::amt_in_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.amt_in_msat)
  return _internal_amt_in_msat();
}
inline void ForwardingEvent::set_amt_in_msat(::uint64_t value) {
  _internal_set_amt_in_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.amt_in_msat)
}
inline ::uint64_t ForwardingEvent::_internal_amt_in_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_in_msat_;
}
inline void ForwardingEvent::_internal_set_amt_in_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_in_msat_ = value;
}

// uint64 amt_out_msat = 10;
inline void ForwardingEvent::clear_amt_out_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_out_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::amt_out_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.amt_out_msat)
  return _internal_amt_out_msat();
}
inline void ForwardingEvent::set_amt_out_msat(::uint64_t value) {
  _internal_set_amt_out_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.amt_out_msat)
}
inline ::uint64_t ForwardingEvent::_internal_amt_out_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amt_out_msat_;
}
inline void ForwardingEvent::_internal_set_amt_out_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amt_out_msat_ = value;
}

// uint64 timestamp_ns = 11;
inline void ForwardingEvent::clear_timestamp_ns() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ns_ = ::uint64_t{0u};
}
inline ::uint64_t ForwardingEvent::timestamp_ns() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.timestamp_ns)
  return _internal_timestamp_ns();
}
inline void ForwardingEvent::set_timestamp_ns(::uint64_t value) {
  _internal_set_timestamp_ns(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.timestamp_ns)
}
inline ::uint64_t ForwardingEvent::_internal_timestamp_ns() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_ns_;
}
inline void ForwardingEvent::_internal_set_timestamp_ns(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ns_ = value;
}

// string peer_alias_in = 12;
inline void ForwardingEvent::clear_peer_alias_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_in_.ClearToEmpty();
}
inline const std::string& ForwardingEvent::peer_alias_in() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.peer_alias_in)
  return _internal_peer_alias_in();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ForwardingEvent::set_peer_alias_in(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_in_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.peer_alias_in)
}
inline std::string* ForwardingEvent::mutable_peer_alias_in() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer_alias_in();
  // @@protoc_insertion_point(field_mutable:lnrpc.ForwardingEvent.peer_alias_in)
  return _s;
}
inline const std::string& ForwardingEvent::_internal_peer_alias_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_alias_in_.Get();
}
inline void ForwardingEvent::_internal_set_peer_alias_in(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_in_.Set(value, GetArena());
}
inline std::string* ForwardingEvent::_internal_mutable_peer_alias_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_alias_in_.Mutable( GetArena());
}
inline std::string* ForwardingEvent::release_peer_alias_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ForwardingEvent.peer_alias_in)
  return _impl_.peer_alias_in_.Release();
}
inline void ForwardingEvent::set_allocated_peer_alias_in(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_in_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.peer_alias_in_.IsDefault()) {
          _impl_.peer_alias_in_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ForwardingEvent.peer_alias_in)
}

// string peer_alias_out = 13;
inline void ForwardingEvent::clear_peer_alias_out() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_out_.ClearToEmpty();
}
inline const std::string& ForwardingEvent::peer_alias_out() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingEvent.peer_alias_out)
  return _internal_peer_alias_out();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ForwardingEvent::set_peer_alias_out(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_out_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingEvent.peer_alias_out)
}
inline std::string* ForwardingEvent::mutable_peer_alias_out() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_peer_alias_out();
  // @@protoc_insertion_point(field_mutable:lnrpc.ForwardingEvent.peer_alias_out)
  return _s;
}
inline const std::string& ForwardingEvent::_internal_peer_alias_out() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.peer_alias_out_.Get();
}
inline void ForwardingEvent::_internal_set_peer_alias_out(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_out_.Set(value, GetArena());
}
inline std::string* ForwardingEvent::_internal_mutable_peer_alias_out() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.peer_alias_out_.Mutable( GetArena());
}
inline std::string* ForwardingEvent::release_peer_alias_out() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ForwardingEvent.peer_alias_out)
  return _impl_.peer_alias_out_.Release();
}
inline void ForwardingEvent::set_allocated_peer_alias_out(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.peer_alias_out_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.peer_alias_out_.IsDefault()) {
          _impl_.peer_alias_out_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ForwardingEvent.peer_alias_out)
}

// -------------------------------------------------------------------

// ForwardingHistoryResponse

// repeated .lnrpc.ForwardingEvent forwarding_events = 1;
inline int ForwardingHistoryResponse::_internal_forwarding_events_size() const {
  return _internal_forwarding_events().size();
}
inline int ForwardingHistoryResponse::forwarding_events_size() const {
  return _internal_forwarding_events_size();
}
inline void ForwardingHistoryResponse::clear_forwarding_events() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.forwarding_events_.Clear();
}
inline ::lnrpc::ForwardingEvent* ForwardingHistoryResponse::mutable_forwarding_events(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ForwardingHistoryResponse.forwarding_events)
  return _internal_mutable_forwarding_events()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>* ForwardingHistoryResponse::mutable_forwarding_events()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ForwardingHistoryResponse.forwarding_events)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_forwarding_events();
}
inline const ::lnrpc::ForwardingEvent& ForwardingHistoryResponse::forwarding_events(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryResponse.forwarding_events)
  return _internal_forwarding_events().Get(index);
}
inline ::lnrpc::ForwardingEvent* ForwardingHistoryResponse::add_forwarding_events() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ForwardingEvent* _add = _internal_mutable_forwarding_events()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ForwardingHistoryResponse.forwarding_events)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>& ForwardingHistoryResponse::forwarding_events() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ForwardingHistoryResponse.forwarding_events)
  return _internal_forwarding_events();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>&
ForwardingHistoryResponse::_internal_forwarding_events() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.forwarding_events_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ForwardingEvent>*
ForwardingHistoryResponse::_internal_mutable_forwarding_events() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.forwarding_events_;
}

// uint32 last_offset_index = 2;
inline void ForwardingHistoryResponse::clear_last_offset_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_offset_index_ = 0u;
}
inline ::uint32_t ForwardingHistoryResponse::last_offset_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.ForwardingHistoryResponse.last_offset_index)
  return _internal_last_offset_index();
}
inline void ForwardingHistoryResponse::set_last_offset_index(::uint32_t value) {
  _internal_set_last_offset_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.ForwardingHistoryResponse.last_offset_index)
}
inline ::uint32_t ForwardingHistoryResponse::_internal_last_offset_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_offset_index_;
}
inline void ForwardingHistoryResponse::_internal_set_last_offset_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_offset_index_ = value;
}

// -------------------------------------------------------------------

// ExportChannelBackupRequest

// .lnrpc.ChannelPoint chan_point = 1;
inline bool ExportChannelBackupRequest::has_chan_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chan_point_ != nullptr);
  return value;
}
inline void ExportChannelBackupRequest::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ != nullptr) _impl_.chan_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& ExportChannelBackupRequest::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.chan_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ExportChannelBackupRequest::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ExportChannelBackupRequest.chan_point)
  return _internal_chan_point();
}
inline void ExportChannelBackupRequest::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }
  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ExportChannelBackupRequest.chan_point)
}
inline ::lnrpc::ChannelPoint* ExportChannelBackupRequest::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* ExportChannelBackupRequest::unsafe_arena_release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ExportChannelBackupRequest.chan_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* ExportChannelBackupRequest::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.chan_point_;
}
inline ::lnrpc::ChannelPoint* ExportChannelBackupRequest::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ExportChannelBackupRequest.chan_point)
  return _msg;
}
inline void ExportChannelBackupRequest::set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chan_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ExportChannelBackupRequest.chan_point)
}

// -------------------------------------------------------------------

// ChannelBackup

// .lnrpc.ChannelPoint chan_point = 1;
inline bool ChannelBackup::has_chan_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chan_point_ != nullptr);
  return value;
}
inline void ChannelBackup::clear_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ != nullptr) _impl_.chan_point_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelPoint& ChannelBackup::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.chan_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& ChannelBackup::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBackup.chan_point)
  return _internal_chan_point();
}
inline void ChannelBackup::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }
  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChannelBackup.chan_point)
}
inline ::lnrpc::ChannelPoint* ChannelBackup::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* ChannelBackup::unsafe_arena_release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBackup.chan_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* ChannelBackup::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.chan_point_;
}
inline ::lnrpc::ChannelPoint* ChannelBackup::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBackup.chan_point)
  return _msg;
}
inline void ChannelBackup::set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.chan_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBackup.chan_point)
}

// bytes chan_backup = 2;
inline void ChannelBackup::clear_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_backup_.ClearToEmpty();
}
inline const std::string& ChannelBackup::chan_backup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBackup.chan_backup)
  return _internal_chan_backup();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelBackup::set_chan_backup(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_backup_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelBackup.chan_backup)
}
inline std::string* ChannelBackup::mutable_chan_backup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chan_backup();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBackup.chan_backup)
  return _s;
}
inline const std::string& ChannelBackup::_internal_chan_backup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_backup_.Get();
}
inline void ChannelBackup::_internal_set_chan_backup(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_backup_.Set(value, GetArena());
}
inline std::string* ChannelBackup::_internal_mutable_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chan_backup_.Mutable( GetArena());
}
inline std::string* ChannelBackup::release_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelBackup.chan_backup)
  return _impl_.chan_backup_.Release();
}
inline void ChannelBackup::set_allocated_chan_backup(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_backup_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chan_backup_.IsDefault()) {
          _impl_.chan_backup_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelBackup.chan_backup)
}

// -------------------------------------------------------------------

// MultiChanBackup

// repeated .lnrpc.ChannelPoint chan_points = 1;
inline int MultiChanBackup::_internal_chan_points_size() const {
  return _internal_chan_points().size();
}
inline int MultiChanBackup::chan_points_size() const {
  return _internal_chan_points_size();
}
inline void MultiChanBackup::clear_chan_points() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_points_.Clear();
}
inline ::lnrpc::ChannelPoint* MultiChanBackup::mutable_chan_points(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.MultiChanBackup.chan_points)
  return _internal_mutable_chan_points()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>* MultiChanBackup::mutable_chan_points()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.MultiChanBackup.chan_points)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chan_points();
}
inline const ::lnrpc::ChannelPoint& MultiChanBackup::chan_points(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MultiChanBackup.chan_points)
  return _internal_chan_points().Get(index);
}
inline ::lnrpc::ChannelPoint* MultiChanBackup::add_chan_points() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelPoint* _add = _internal_mutable_chan_points()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.MultiChanBackup.chan_points)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>& MultiChanBackup::chan_points() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.MultiChanBackup.chan_points)
  return _internal_chan_points();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>&
MultiChanBackup::_internal_chan_points() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_points_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelPoint>*
MultiChanBackup::_internal_mutable_chan_points() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chan_points_;
}

// bytes multi_chan_backup = 2;
inline void MultiChanBackup::clear_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multi_chan_backup_.ClearToEmpty();
}
inline const std::string& MultiChanBackup::multi_chan_backup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MultiChanBackup.multi_chan_backup)
  return _internal_multi_chan_backup();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MultiChanBackup::set_multi_chan_backup(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multi_chan_backup_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MultiChanBackup.multi_chan_backup)
}
inline std::string* MultiChanBackup::mutable_multi_chan_backup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_multi_chan_backup();
  // @@protoc_insertion_point(field_mutable:lnrpc.MultiChanBackup.multi_chan_backup)
  return _s;
}
inline const std::string& MultiChanBackup::_internal_multi_chan_backup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.multi_chan_backup_.Get();
}
inline void MultiChanBackup::_internal_set_multi_chan_backup(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multi_chan_backup_.Set(value, GetArena());
}
inline std::string* MultiChanBackup::_internal_mutable_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.multi_chan_backup_.Mutable( GetArena());
}
inline std::string* MultiChanBackup::release_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MultiChanBackup.multi_chan_backup)
  return _impl_.multi_chan_backup_.Release();
}
inline void MultiChanBackup::set_allocated_multi_chan_backup(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.multi_chan_backup_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.multi_chan_backup_.IsDefault()) {
          _impl_.multi_chan_backup_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MultiChanBackup.multi_chan_backup)
}

// -------------------------------------------------------------------

// ChanBackupExportRequest

// -------------------------------------------------------------------

// ChanBackupSnapshot

// .lnrpc.ChannelBackups single_chan_backups = 1;
inline bool ChanBackupSnapshot::has_single_chan_backups() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.single_chan_backups_ != nullptr);
  return value;
}
inline void ChanBackupSnapshot::clear_single_chan_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.single_chan_backups_ != nullptr) _impl_.single_chan_backups_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelBackups& ChanBackupSnapshot::_internal_single_chan_backups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelBackups* p = _impl_.single_chan_backups_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelBackups&>(::lnrpc::_ChannelBackups_default_instance_);
}
inline const ::lnrpc::ChannelBackups& ChanBackupSnapshot::single_chan_backups() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanBackupSnapshot.single_chan_backups)
  return _internal_single_chan_backups();
}
inline void ChanBackupSnapshot::unsafe_arena_set_allocated_single_chan_backups(::lnrpc::ChannelBackups* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.single_chan_backups_);
  }
  _impl_.single_chan_backups_ = reinterpret_cast<::lnrpc::ChannelBackups*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChanBackupSnapshot.single_chan_backups)
}
inline ::lnrpc::ChannelBackups* ChanBackupSnapshot::release_single_chan_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelBackups* released = _impl_.single_chan_backups_;
  _impl_.single_chan_backups_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelBackups* ChanBackupSnapshot::unsafe_arena_release_single_chan_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanBackupSnapshot.single_chan_backups)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelBackups* temp = _impl_.single_chan_backups_;
  _impl_.single_chan_backups_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelBackups* ChanBackupSnapshot::_internal_mutable_single_chan_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.single_chan_backups_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelBackups>(GetArena());
    _impl_.single_chan_backups_ = reinterpret_cast<::lnrpc::ChannelBackups*>(p);
  }
  return _impl_.single_chan_backups_;
}
inline ::lnrpc::ChannelBackups* ChanBackupSnapshot::mutable_single_chan_backups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelBackups* _msg = _internal_mutable_single_chan_backups();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanBackupSnapshot.single_chan_backups)
  return _msg;
}
inline void ChanBackupSnapshot::set_allocated_single_chan_backups(::lnrpc::ChannelBackups* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.single_chan_backups_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.single_chan_backups_ = reinterpret_cast<::lnrpc::ChannelBackups*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanBackupSnapshot.single_chan_backups)
}

// .lnrpc.MultiChanBackup multi_chan_backup = 2;
inline bool ChanBackupSnapshot::has_multi_chan_backup() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.multi_chan_backup_ != nullptr);
  return value;
}
inline void ChanBackupSnapshot::clear_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.multi_chan_backup_ != nullptr) _impl_.multi_chan_backup_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::lnrpc::MultiChanBackup& ChanBackupSnapshot::_internal_multi_chan_backup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::MultiChanBackup* p = _impl_.multi_chan_backup_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::MultiChanBackup&>(::lnrpc::_MultiChanBackup_default_instance_);
}
inline const ::lnrpc::MultiChanBackup& ChanBackupSnapshot::multi_chan_backup() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChanBackupSnapshot.multi_chan_backup)
  return _internal_multi_chan_backup();
}
inline void ChanBackupSnapshot::unsafe_arena_set_allocated_multi_chan_backup(::lnrpc::MultiChanBackup* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.multi_chan_backup_);
  }
  _impl_.multi_chan_backup_ = reinterpret_cast<::lnrpc::MultiChanBackup*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.ChanBackupSnapshot.multi_chan_backup)
}
inline ::lnrpc::MultiChanBackup* ChanBackupSnapshot::release_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::MultiChanBackup* released = _impl_.multi_chan_backup_;
  _impl_.multi_chan_backup_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::MultiChanBackup* ChanBackupSnapshot::unsafe_arena_release_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChanBackupSnapshot.multi_chan_backup)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::lnrpc::MultiChanBackup* temp = _impl_.multi_chan_backup_;
  _impl_.multi_chan_backup_ = nullptr;
  return temp;
}
inline ::lnrpc::MultiChanBackup* ChanBackupSnapshot::_internal_mutable_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.multi_chan_backup_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::MultiChanBackup>(GetArena());
    _impl_.multi_chan_backup_ = reinterpret_cast<::lnrpc::MultiChanBackup*>(p);
  }
  return _impl_.multi_chan_backup_;
}
inline ::lnrpc::MultiChanBackup* ChanBackupSnapshot::mutable_multi_chan_backup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::lnrpc::MultiChanBackup* _msg = _internal_mutable_multi_chan_backup();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChanBackupSnapshot.multi_chan_backup)
  return _msg;
}
inline void ChanBackupSnapshot::set_allocated_multi_chan_backup(::lnrpc::MultiChanBackup* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.multi_chan_backup_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.multi_chan_backup_ = reinterpret_cast<::lnrpc::MultiChanBackup*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChanBackupSnapshot.multi_chan_backup)
}

// -------------------------------------------------------------------

// ChannelBackups

// repeated .lnrpc.ChannelBackup chan_backups = 1;
inline int ChannelBackups::_internal_chan_backups_size() const {
  return _internal_chan_backups().size();
}
inline int ChannelBackups::chan_backups_size() const {
  return _internal_chan_backups_size();
}
inline void ChannelBackups::clear_chan_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_backups_.Clear();
}
inline ::lnrpc::ChannelBackup* ChannelBackups::mutable_chan_backups(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelBackups.chan_backups)
  return _internal_mutable_chan_backups()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>* ChannelBackups::mutable_chan_backups()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ChannelBackups.chan_backups)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_chan_backups();
}
inline const ::lnrpc::ChannelBackup& ChannelBackups::chan_backups(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelBackups.chan_backups)
  return _internal_chan_backups().Get(index);
}
inline ::lnrpc::ChannelBackup* ChannelBackups::add_chan_backups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::ChannelBackup* _add = _internal_mutable_chan_backups()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.ChannelBackups.chan_backups)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>& ChannelBackups::chan_backups() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ChannelBackups.chan_backups)
  return _internal_chan_backups();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>&
ChannelBackups::_internal_chan_backups() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_backups_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::ChannelBackup>*
ChannelBackups::_internal_mutable_chan_backups() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.chan_backups_;
}

// -------------------------------------------------------------------

// RestoreChanBackupRequest

// .lnrpc.ChannelBackups chan_backups = 1;
inline bool RestoreChanBackupRequest::has_chan_backups() const {
  return backup_case() == kChanBackups;
}
inline bool RestoreChanBackupRequest::_internal_has_chan_backups() const {
  return backup_case() == kChanBackups;
}
inline void RestoreChanBackupRequest::set_has_chan_backups() {
  _impl_._oneof_case_[0] = kChanBackups;
}
inline void RestoreChanBackupRequest::clear_chan_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (backup_case() == kChanBackups) {
    if (GetArena() == nullptr) {
      delete _impl_.backup_.chan_backups_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.backup_.chan_backups_);
    }
    clear_has_backup();
  }
}
inline ::lnrpc::ChannelBackups* RestoreChanBackupRequest::release_chan_backups() {
  // @@protoc_insertion_point(field_release:lnrpc.RestoreChanBackupRequest.chan_backups)
  if (backup_case() == kChanBackups) {
    clear_has_backup();
    auto* temp = _impl_.backup_.chan_backups_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.backup_.chan_backups_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::ChannelBackups& RestoreChanBackupRequest::_internal_chan_backups() const {
  return backup_case() == kChanBackups ? *_impl_.backup_.chan_backups_ : reinterpret_cast<::lnrpc::ChannelBackups&>(::lnrpc::_ChannelBackups_default_instance_);
}
inline const ::lnrpc::ChannelBackups& RestoreChanBackupRequest::chan_backups() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RestoreChanBackupRequest.chan_backups)
  return _internal_chan_backups();
}
inline ::lnrpc::ChannelBackups* RestoreChanBackupRequest::unsafe_arena_release_chan_backups() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.RestoreChanBackupRequest.chan_backups)
  if (backup_case() == kChanBackups) {
    clear_has_backup();
    auto* temp = _impl_.backup_.chan_backups_;
    _impl_.backup_.chan_backups_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RestoreChanBackupRequest::unsafe_arena_set_allocated_chan_backups(::lnrpc::ChannelBackups* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_backup();
  if (value) {
    set_has_chan_backups();
    _impl_.backup_.chan_backups_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.RestoreChanBackupRequest.chan_backups)
}
inline ::lnrpc::ChannelBackups* RestoreChanBackupRequest::_internal_mutable_chan_backups() {
  if (backup_case() != kChanBackups) {
    clear_backup();
    set_has_chan_backups();
    _impl_.backup_.chan_backups_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelBackups>(GetArena());
  }
  return _impl_.backup_.chan_backups_;
}
inline ::lnrpc::ChannelBackups* RestoreChanBackupRequest::mutable_chan_backups() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::ChannelBackups* _msg = _internal_mutable_chan_backups();
  // @@protoc_insertion_point(field_mutable:lnrpc.RestoreChanBackupRequest.chan_backups)
  return _msg;
}

// bytes multi_chan_backup = 2;
inline bool RestoreChanBackupRequest::has_multi_chan_backup() const {
  return backup_case() == kMultiChanBackup;
}
inline void RestoreChanBackupRequest::set_has_multi_chan_backup() {
  _impl_._oneof_case_[0] = kMultiChanBackup;
}
inline void RestoreChanBackupRequest::clear_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (backup_case() == kMultiChanBackup) {
    _impl_.backup_.multi_chan_backup_.Destroy();
    clear_has_backup();
  }
}
inline const std::string& RestoreChanBackupRequest::multi_chan_backup() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RestoreChanBackupRequest.multi_chan_backup)
  return _internal_multi_chan_backup();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RestoreChanBackupRequest::set_multi_chan_backup(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (backup_case() != kMultiChanBackup) {
    clear_backup();

    set_has_multi_chan_backup();
    _impl_.backup_.multi_chan_backup_.InitDefault();
  }
  _impl_.backup_.multi_chan_backup_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.RestoreChanBackupRequest.multi_chan_backup)
}
inline std::string* RestoreChanBackupRequest::mutable_multi_chan_backup() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_multi_chan_backup();
  // @@protoc_insertion_point(field_mutable:lnrpc.RestoreChanBackupRequest.multi_chan_backup)
  return _s;
}
inline const std::string& RestoreChanBackupRequest::_internal_multi_chan_backup() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (backup_case() != kMultiChanBackup) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.backup_.multi_chan_backup_.Get();
}
inline void RestoreChanBackupRequest::_internal_set_multi_chan_backup(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (backup_case() != kMultiChanBackup) {
    clear_backup();

    set_has_multi_chan_backup();
    _impl_.backup_.multi_chan_backup_.InitDefault();
  }
  _impl_.backup_.multi_chan_backup_.Set(value, GetArena());
}
inline std::string* RestoreChanBackupRequest::_internal_mutable_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (backup_case() != kMultiChanBackup) {
    clear_backup();

    set_has_multi_chan_backup();
    _impl_.backup_.multi_chan_backup_.InitDefault();
  }
  return _impl_.backup_.multi_chan_backup_.Mutable( GetArena());
}
inline std::string* RestoreChanBackupRequest::release_multi_chan_backup() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.RestoreChanBackupRequest.multi_chan_backup)
  if (backup_case() != kMultiChanBackup) {
    return nullptr;
  }
  clear_has_backup();
  return _impl_.backup_.multi_chan_backup_.Release();
}
inline void RestoreChanBackupRequest::set_allocated_multi_chan_backup(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_backup()) {
    clear_backup();
  }
  if (value != nullptr) {
    set_has_multi_chan_backup();
    _impl_.backup_.multi_chan_backup_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:lnrpc.RestoreChanBackupRequest.multi_chan_backup)
}

inline bool RestoreChanBackupRequest::has_backup() const {
  return backup_case() != BACKUP_NOT_SET;
}
inline void RestoreChanBackupRequest::clear_has_backup() {
  _impl_._oneof_case_[0] = BACKUP_NOT_SET;
}
inline RestoreChanBackupRequest::BackupCase RestoreChanBackupRequest::backup_case() const {
  return RestoreChanBackupRequest::BackupCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// RestoreBackupResponse

// -------------------------------------------------------------------

// ChannelBackupSubscription

// -------------------------------------------------------------------

// VerifyChanBackupResponse

// -------------------------------------------------------------------

// MacaroonPermission

// string entity = 1;
inline void MacaroonPermission::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.ClearToEmpty();
}
inline const std::string& MacaroonPermission::entity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MacaroonPermission.entity)
  return _internal_entity();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MacaroonPermission::set_entity(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MacaroonPermission.entity)
}
inline std::string* MacaroonPermission::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:lnrpc.MacaroonPermission.entity)
  return _s;
}
inline const std::string& MacaroonPermission::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_.Get();
}
inline void MacaroonPermission::_internal_set_entity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.Set(value, GetArena());
}
inline std::string* MacaroonPermission::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_.Mutable( GetArena());
}
inline std::string* MacaroonPermission::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MacaroonPermission.entity)
  return _impl_.entity_.Release();
}
inline void MacaroonPermission::set_allocated_entity(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entity_.IsDefault()) {
          _impl_.entity_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MacaroonPermission.entity)
}

// string action = 2;
inline void MacaroonPermission::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
}
inline const std::string& MacaroonPermission::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MacaroonPermission.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MacaroonPermission::set_action(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MacaroonPermission.action)
}
inline std::string* MacaroonPermission::mutable_action() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:lnrpc.MacaroonPermission.action)
  return _s;
}
inline const std::string& MacaroonPermission::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void MacaroonPermission::_internal_set_action(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.Set(value, GetArena());
}
inline std::string* MacaroonPermission::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.action_.Mutable( GetArena());
}
inline std::string* MacaroonPermission::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MacaroonPermission.action)
  return _impl_.action_.Release();
}
inline void MacaroonPermission::set_allocated_action(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.action_.IsDefault()) {
          _impl_.action_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MacaroonPermission.action)
}

// -------------------------------------------------------------------

// BakeMacaroonRequest

// repeated .lnrpc.MacaroonPermission permissions = 1;
inline int BakeMacaroonRequest::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int BakeMacaroonRequest::permissions_size() const {
  return _internal_permissions_size();
}
inline void BakeMacaroonRequest::clear_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permissions_.Clear();
}
inline ::lnrpc::MacaroonPermission* BakeMacaroonRequest::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.BakeMacaroonRequest.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* BakeMacaroonRequest::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.BakeMacaroonRequest.permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_permissions();
}
inline const ::lnrpc::MacaroonPermission& BakeMacaroonRequest::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BakeMacaroonRequest.permissions)
  return _internal_permissions().Get(index);
}
inline ::lnrpc::MacaroonPermission* BakeMacaroonRequest::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::MacaroonPermission* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.BakeMacaroonRequest.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& BakeMacaroonRequest::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.BakeMacaroonRequest.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>&
BakeMacaroonRequest::_internal_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>*
BakeMacaroonRequest::_internal_mutable_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.permissions_;
}

// uint64 root_key_id = 2;
inline void BakeMacaroonRequest::clear_root_key_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_key_id_ = ::uint64_t{0u};
}
inline ::uint64_t BakeMacaroonRequest::root_key_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.BakeMacaroonRequest.root_key_id)
  return _internal_root_key_id();
}
inline void BakeMacaroonRequest::set_root_key_id(::uint64_t value) {
  _internal_set_root_key_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.BakeMacaroonRequest.root_key_id)
}
inline ::uint64_t BakeMacaroonRequest::_internal_root_key_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_key_id_;
}
inline void BakeMacaroonRequest::_internal_set_root_key_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_key_id_ = value;
}

// bool allow_external_permissions = 3;
inline void BakeMacaroonRequest::clear_allow_external_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_external_permissions_ = false;
}
inline bool BakeMacaroonRequest::allow_external_permissions() const {
  // @@protoc_insertion_point(field_get:lnrpc.BakeMacaroonRequest.allow_external_permissions)
  return _internal_allow_external_permissions();
}
inline void BakeMacaroonRequest::set_allow_external_permissions(bool value) {
  _internal_set_allow_external_permissions(value);
  // @@protoc_insertion_point(field_set:lnrpc.BakeMacaroonRequest.allow_external_permissions)
}
inline bool BakeMacaroonRequest::_internal_allow_external_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.allow_external_permissions_;
}
inline void BakeMacaroonRequest::_internal_set_allow_external_permissions(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.allow_external_permissions_ = value;
}

// -------------------------------------------------------------------

// BakeMacaroonResponse

// string macaroon = 1;
inline void BakeMacaroonResponse::clear_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.ClearToEmpty();
}
inline const std::string& BakeMacaroonResponse::macaroon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.BakeMacaroonResponse.macaroon)
  return _internal_macaroon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BakeMacaroonResponse::set_macaroon(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.BakeMacaroonResponse.macaroon)
}
inline std::string* BakeMacaroonResponse::mutable_macaroon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_macaroon();
  // @@protoc_insertion_point(field_mutable:lnrpc.BakeMacaroonResponse.macaroon)
  return _s;
}
inline const std::string& BakeMacaroonResponse::_internal_macaroon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.macaroon_.Get();
}
inline void BakeMacaroonResponse::_internal_set_macaroon(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.Set(value, GetArena());
}
inline std::string* BakeMacaroonResponse::_internal_mutable_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.macaroon_.Mutable( GetArena());
}
inline std::string* BakeMacaroonResponse::release_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.BakeMacaroonResponse.macaroon)
  return _impl_.macaroon_.Release();
}
inline void BakeMacaroonResponse::set_allocated_macaroon(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.macaroon_.IsDefault()) {
          _impl_.macaroon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.BakeMacaroonResponse.macaroon)
}

// -------------------------------------------------------------------

// ListMacaroonIDsRequest

// -------------------------------------------------------------------

// ListMacaroonIDsResponse

// repeated uint64 root_key_ids = 1;
inline int ListMacaroonIDsResponse::_internal_root_key_ids_size() const {
  return _internal_root_key_ids().size();
}
inline int ListMacaroonIDsResponse::root_key_ids_size() const {
  return _internal_root_key_ids_size();
}
inline void ListMacaroonIDsResponse::clear_root_key_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_key_ids_.Clear();
}
inline ::uint64_t ListMacaroonIDsResponse::root_key_ids(int index) const {
  // @@protoc_insertion_point(field_get:lnrpc.ListMacaroonIDsResponse.root_key_ids)
  return _internal_root_key_ids().Get(index);
}
inline void ListMacaroonIDsResponse::set_root_key_ids(int index, ::uint64_t value) {
  _internal_mutable_root_key_ids()->Set(index, value);
  // @@protoc_insertion_point(field_set:lnrpc.ListMacaroonIDsResponse.root_key_ids)
}
inline void ListMacaroonIDsResponse::add_root_key_ids(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_root_key_ids()->Add(value);
  // @@protoc_insertion_point(field_add:lnrpc.ListMacaroonIDsResponse.root_key_ids)
}
inline const ::google::protobuf::RepeatedField<::uint64_t>& ListMacaroonIDsResponse::root_key_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.ListMacaroonIDsResponse.root_key_ids)
  return _internal_root_key_ids();
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ListMacaroonIDsResponse::mutable_root_key_ids()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.ListMacaroonIDsResponse.root_key_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_root_key_ids();
}
inline const ::google::protobuf::RepeatedField<::uint64_t>&
ListMacaroonIDsResponse::_internal_root_key_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_key_ids_;
}
inline ::google::protobuf::RepeatedField<::uint64_t>* ListMacaroonIDsResponse::_internal_mutable_root_key_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.root_key_ids_;
}

// -------------------------------------------------------------------

// DeleteMacaroonIDRequest

// uint64 root_key_id = 1;
inline void DeleteMacaroonIDRequest::clear_root_key_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_key_id_ = ::uint64_t{0u};
}
inline ::uint64_t DeleteMacaroonIDRequest::root_key_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.DeleteMacaroonIDRequest.root_key_id)
  return _internal_root_key_id();
}
inline void DeleteMacaroonIDRequest::set_root_key_id(::uint64_t value) {
  _internal_set_root_key_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.DeleteMacaroonIDRequest.root_key_id)
}
inline ::uint64_t DeleteMacaroonIDRequest::_internal_root_key_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.root_key_id_;
}
inline void DeleteMacaroonIDRequest::_internal_set_root_key_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.root_key_id_ = value;
}

// -------------------------------------------------------------------

// DeleteMacaroonIDResponse

// bool deleted = 1;
inline void DeleteMacaroonIDResponse::clear_deleted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_ = false;
}
inline bool DeleteMacaroonIDResponse::deleted() const {
  // @@protoc_insertion_point(field_get:lnrpc.DeleteMacaroonIDResponse.deleted)
  return _internal_deleted();
}
inline void DeleteMacaroonIDResponse::set_deleted(bool value) {
  _internal_set_deleted(value);
  // @@protoc_insertion_point(field_set:lnrpc.DeleteMacaroonIDResponse.deleted)
}
inline bool DeleteMacaroonIDResponse::_internal_deleted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deleted_;
}
inline void DeleteMacaroonIDResponse::_internal_set_deleted(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deleted_ = value;
}

// -------------------------------------------------------------------

// MacaroonPermissionList

// repeated .lnrpc.MacaroonPermission permissions = 1;
inline int MacaroonPermissionList::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int MacaroonPermissionList::permissions_size() const {
  return _internal_permissions_size();
}
inline void MacaroonPermissionList::clear_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permissions_.Clear();
}
inline ::lnrpc::MacaroonPermission* MacaroonPermissionList::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.MacaroonPermissionList.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* MacaroonPermissionList::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.MacaroonPermissionList.permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_permissions();
}
inline const ::lnrpc::MacaroonPermission& MacaroonPermissionList::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MacaroonPermissionList.permissions)
  return _internal_permissions().Get(index);
}
inline ::lnrpc::MacaroonPermission* MacaroonPermissionList::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::MacaroonPermission* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.MacaroonPermissionList.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& MacaroonPermissionList::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.MacaroonPermissionList.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>&
MacaroonPermissionList::_internal_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>*
MacaroonPermissionList::_internal_mutable_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.permissions_;
}

// -------------------------------------------------------------------

// ListPermissionsRequest

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ListPermissionsResponse

// map<string, .lnrpc.MacaroonPermissionList> method_permissions = 1;
inline int ListPermissionsResponse::_internal_method_permissions_size() const {
  return _internal_method_permissions().size();
}
inline int ListPermissionsResponse::method_permissions_size() const {
  return _internal_method_permissions_size();
}
inline void ListPermissionsResponse::clear_method_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_permissions_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>& ListPermissionsResponse::_internal_method_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_permissions_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>& ListPermissionsResponse::method_permissions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:lnrpc.ListPermissionsResponse.method_permissions)
  return _internal_method_permissions();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>* ListPermissionsResponse::_internal_mutable_method_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.method_permissions_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::lnrpc::MacaroonPermissionList>* ListPermissionsResponse::mutable_method_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:lnrpc.ListPermissionsResponse.method_permissions)
  return _internal_mutable_method_permissions();
}

// -------------------------------------------------------------------

// Failure

// .lnrpc.Failure.FailureCode code = 1;
inline void Failure::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::lnrpc::Failure_FailureCode Failure::code() const {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.code)
  return _internal_code();
}
inline void Failure::set_code(::lnrpc::Failure_FailureCode value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:lnrpc.Failure.code)
}
inline ::lnrpc::Failure_FailureCode Failure::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::Failure_FailureCode>(_impl_.code_);
}
inline void Failure::_internal_set_code(::lnrpc::Failure_FailureCode value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// .lnrpc.ChannelUpdate channel_update = 3;
inline bool Failure::has_channel_update() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.channel_update_ != nullptr);
  return value;
}
inline void Failure::clear_channel_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_update_ != nullptr) _impl_.channel_update_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::lnrpc::ChannelUpdate& Failure::_internal_channel_update() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelUpdate* p = _impl_.channel_update_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelUpdate&>(::lnrpc::_ChannelUpdate_default_instance_);
}
inline const ::lnrpc::ChannelUpdate& Failure::channel_update() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.channel_update)
  return _internal_channel_update();
}
inline void Failure::unsafe_arena_set_allocated_channel_update(::lnrpc::ChannelUpdate* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.channel_update_);
  }
  _impl_.channel_update_ = reinterpret_cast<::lnrpc::ChannelUpdate*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.Failure.channel_update)
}
inline ::lnrpc::ChannelUpdate* Failure::release_channel_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelUpdate* released = _impl_.channel_update_;
  _impl_.channel_update_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelUpdate* Failure::unsafe_arena_release_channel_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Failure.channel_update)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelUpdate* temp = _impl_.channel_update_;
  _impl_.channel_update_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelUpdate* Failure::_internal_mutable_channel_update() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_update_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelUpdate>(GetArena());
    _impl_.channel_update_ = reinterpret_cast<::lnrpc::ChannelUpdate*>(p);
  }
  return _impl_.channel_update_;
}
inline ::lnrpc::ChannelUpdate* Failure::mutable_channel_update() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelUpdate* _msg = _internal_mutable_channel_update();
  // @@protoc_insertion_point(field_mutable:lnrpc.Failure.channel_update)
  return _msg;
}
inline void Failure::set_allocated_channel_update(::lnrpc::ChannelUpdate* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.channel_update_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.channel_update_ = reinterpret_cast<::lnrpc::ChannelUpdate*>(value);
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Failure.channel_update)
}

// uint64 htlc_msat = 4;
inline void Failure::clear_htlc_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_msat_ = ::uint64_t{0u};
}
inline ::uint64_t Failure::htlc_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.htlc_msat)
  return _internal_htlc_msat();
}
inline void Failure::set_htlc_msat(::uint64_t value) {
  _internal_set_htlc_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.Failure.htlc_msat)
}
inline ::uint64_t Failure::_internal_htlc_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_msat_;
}
inline void Failure::_internal_set_htlc_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_msat_ = value;
}

// bytes onion_sha_256 = 5;
inline void Failure::clear_onion_sha_256() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onion_sha_256_.ClearToEmpty();
}
inline const std::string& Failure::onion_sha_256() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.onion_sha_256)
  return _internal_onion_sha_256();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Failure::set_onion_sha_256(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onion_sha_256_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Failure.onion_sha_256)
}
inline std::string* Failure::mutable_onion_sha_256() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_onion_sha_256();
  // @@protoc_insertion_point(field_mutable:lnrpc.Failure.onion_sha_256)
  return _s;
}
inline const std::string& Failure::_internal_onion_sha_256() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.onion_sha_256_.Get();
}
inline void Failure::_internal_set_onion_sha_256(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onion_sha_256_.Set(value, GetArena());
}
inline std::string* Failure::_internal_mutable_onion_sha_256() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.onion_sha_256_.Mutable( GetArena());
}
inline std::string* Failure::release_onion_sha_256() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Failure.onion_sha_256)
  return _impl_.onion_sha_256_.Release();
}
inline void Failure::set_allocated_onion_sha_256(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.onion_sha_256_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.onion_sha_256_.IsDefault()) {
          _impl_.onion_sha_256_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Failure.onion_sha_256)
}

// uint32 cltv_expiry = 6;
inline void Failure::clear_cltv_expiry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_ = 0u;
}
inline ::uint32_t Failure::cltv_expiry() const {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.cltv_expiry)
  return _internal_cltv_expiry();
}
inline void Failure::set_cltv_expiry(::uint32_t value) {
  _internal_set_cltv_expiry(value);
  // @@protoc_insertion_point(field_set:lnrpc.Failure.cltv_expiry)
}
inline ::uint32_t Failure::_internal_cltv_expiry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cltv_expiry_;
}
inline void Failure::_internal_set_cltv_expiry(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cltv_expiry_ = value;
}

// uint32 flags = 7;
inline void Failure::clear_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = 0u;
}
inline ::uint32_t Failure::flags() const {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.flags)
  return _internal_flags();
}
inline void Failure::set_flags(::uint32_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:lnrpc.Failure.flags)
}
inline ::uint32_t Failure::_internal_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.flags_;
}
inline void Failure::_internal_set_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.flags_ = value;
}

// uint32 failure_source_index = 8;
inline void Failure::clear_failure_source_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_source_index_ = 0u;
}
inline ::uint32_t Failure::failure_source_index() const {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.failure_source_index)
  return _internal_failure_source_index();
}
inline void Failure::set_failure_source_index(::uint32_t value) {
  _internal_set_failure_source_index(value);
  // @@protoc_insertion_point(field_set:lnrpc.Failure.failure_source_index)
}
inline ::uint32_t Failure::_internal_failure_source_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.failure_source_index_;
}
inline void Failure::_internal_set_failure_source_index(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.failure_source_index_ = value;
}

// uint32 height = 9;
inline void Failure::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0u;
}
inline ::uint32_t Failure::height() const {
  // @@protoc_insertion_point(field_get:lnrpc.Failure.height)
  return _internal_height();
}
inline void Failure::set_height(::uint32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:lnrpc.Failure.height)
}
inline ::uint32_t Failure::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void Failure::_internal_set_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// ChannelUpdate

// bytes signature = 1;
inline void ChannelUpdate::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& ChannelUpdate::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelUpdate::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.signature)
}
inline std::string* ChannelUpdate::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelUpdate.signature)
  return _s;
}
inline const std::string& ChannelUpdate::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void ChannelUpdate::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* ChannelUpdate::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* ChannelUpdate::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelUpdate.signature)
  return _impl_.signature_.Release();
}
inline void ChannelUpdate::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelUpdate.signature)
}

// bytes chain_hash = 2;
inline void ChannelUpdate::clear_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.ClearToEmpty();
}
inline const std::string& ChannelUpdate::chain_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.chain_hash)
  return _internal_chain_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelUpdate::set_chain_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.chain_hash)
}
inline std::string* ChannelUpdate::mutable_chain_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_chain_hash();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelUpdate.chain_hash)
  return _s;
}
inline const std::string& ChannelUpdate::_internal_chain_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chain_hash_.Get();
}
inline void ChannelUpdate::_internal_set_chain_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.Set(value, GetArena());
}
inline std::string* ChannelUpdate::_internal_mutable_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.chain_hash_.Mutable( GetArena());
}
inline std::string* ChannelUpdate::release_chain_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelUpdate.chain_hash)
  return _impl_.chain_hash_.Release();
}
inline void ChannelUpdate::set_allocated_chain_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chain_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.chain_hash_.IsDefault()) {
          _impl_.chain_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelUpdate.chain_hash)
}

// uint64 chan_id = 3 [jstype = JS_STRING];
inline void ChannelUpdate::clear_chan_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelUpdate::chan_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.chan_id)
  return _internal_chan_id();
}
inline void ChannelUpdate::set_chan_id(::uint64_t value) {
  _internal_set_chan_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.chan_id)
}
inline ::uint64_t ChannelUpdate::_internal_chan_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.chan_id_;
}
inline void ChannelUpdate::_internal_set_chan_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.chan_id_ = value;
}

// uint32 timestamp = 4;
inline void ChannelUpdate::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = 0u;
}
inline ::uint32_t ChannelUpdate::timestamp() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.timestamp)
  return _internal_timestamp();
}
inline void ChannelUpdate::set_timestamp(::uint32_t value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.timestamp)
}
inline ::uint32_t ChannelUpdate::_internal_timestamp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.timestamp_;
}
inline void ChannelUpdate::_internal_set_timestamp(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.timestamp_ = value;
}

// uint32 message_flags = 10;
inline void ChannelUpdate::clear_message_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_flags_ = 0u;
}
inline ::uint32_t ChannelUpdate::message_flags() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.message_flags)
  return _internal_message_flags();
}
inline void ChannelUpdate::set_message_flags(::uint32_t value) {
  _internal_set_message_flags(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.message_flags)
}
inline ::uint32_t ChannelUpdate::_internal_message_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_flags_;
}
inline void ChannelUpdate::_internal_set_message_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_flags_ = value;
}

// uint32 channel_flags = 5;
inline void ChannelUpdate::clear_channel_flags() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_flags_ = 0u;
}
inline ::uint32_t ChannelUpdate::channel_flags() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.channel_flags)
  return _internal_channel_flags();
}
inline void ChannelUpdate::set_channel_flags(::uint32_t value) {
  _internal_set_channel_flags(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.channel_flags)
}
inline ::uint32_t ChannelUpdate::_internal_channel_flags() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_flags_;
}
inline void ChannelUpdate::_internal_set_channel_flags(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_flags_ = value;
}

// uint32 time_lock_delta = 6;
inline void ChannelUpdate::clear_time_lock_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_lock_delta_ = 0u;
}
inline ::uint32_t ChannelUpdate::time_lock_delta() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.time_lock_delta)
  return _internal_time_lock_delta();
}
inline void ChannelUpdate::set_time_lock_delta(::uint32_t value) {
  _internal_set_time_lock_delta(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.time_lock_delta)
}
inline ::uint32_t ChannelUpdate::_internal_time_lock_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_lock_delta_;
}
inline void ChannelUpdate::_internal_set_time_lock_delta(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_lock_delta_ = value;
}

// uint64 htlc_minimum_msat = 7;
inline void ChannelUpdate::clear_htlc_minimum_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_minimum_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelUpdate::htlc_minimum_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.htlc_minimum_msat)
  return _internal_htlc_minimum_msat();
}
inline void ChannelUpdate::set_htlc_minimum_msat(::uint64_t value) {
  _internal_set_htlc_minimum_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.htlc_minimum_msat)
}
inline ::uint64_t ChannelUpdate::_internal_htlc_minimum_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_minimum_msat_;
}
inline void ChannelUpdate::_internal_set_htlc_minimum_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_minimum_msat_ = value;
}

// uint32 base_fee = 8;
inline void ChannelUpdate::clear_base_fee() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_ = 0u;
}
inline ::uint32_t ChannelUpdate::base_fee() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.base_fee)
  return _internal_base_fee();
}
inline void ChannelUpdate::set_base_fee(::uint32_t value) {
  _internal_set_base_fee(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.base_fee)
}
inline ::uint32_t ChannelUpdate::_internal_base_fee() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.base_fee_;
}
inline void ChannelUpdate::_internal_set_base_fee(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.base_fee_ = value;
}

// uint32 fee_rate = 9;
inline void ChannelUpdate::clear_fee_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = 0u;
}
inline ::uint32_t ChannelUpdate::fee_rate() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.fee_rate)
  return _internal_fee_rate();
}
inline void ChannelUpdate::set_fee_rate(::uint32_t value) {
  _internal_set_fee_rate(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.fee_rate)
}
inline ::uint32_t ChannelUpdate::_internal_fee_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fee_rate_;
}
inline void ChannelUpdate::_internal_set_fee_rate(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fee_rate_ = value;
}

// uint64 htlc_maximum_msat = 11;
inline void ChannelUpdate::clear_htlc_maximum_msat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_maximum_msat_ = ::uint64_t{0u};
}
inline ::uint64_t ChannelUpdate::htlc_maximum_msat() const {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.htlc_maximum_msat)
  return _internal_htlc_maximum_msat();
}
inline void ChannelUpdate::set_htlc_maximum_msat(::uint64_t value) {
  _internal_set_htlc_maximum_msat(value);
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.htlc_maximum_msat)
}
inline ::uint64_t ChannelUpdate::_internal_htlc_maximum_msat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.htlc_maximum_msat_;
}
inline void ChannelUpdate::_internal_set_htlc_maximum_msat(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.htlc_maximum_msat_ = value;
}

// bytes extra_opaque_data = 12;
inline void ChannelUpdate::clear_extra_opaque_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_opaque_data_.ClearToEmpty();
}
inline const std::string& ChannelUpdate::extra_opaque_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.ChannelUpdate.extra_opaque_data)
  return _internal_extra_opaque_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ChannelUpdate::set_extra_opaque_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_opaque_data_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.ChannelUpdate.extra_opaque_data)
}
inline std::string* ChannelUpdate::mutable_extra_opaque_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_extra_opaque_data();
  // @@protoc_insertion_point(field_mutable:lnrpc.ChannelUpdate.extra_opaque_data)
  return _s;
}
inline const std::string& ChannelUpdate::_internal_extra_opaque_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extra_opaque_data_.Get();
}
inline void ChannelUpdate::_internal_set_extra_opaque_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_opaque_data_.Set(value, GetArena());
}
inline std::string* ChannelUpdate::_internal_mutable_extra_opaque_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.extra_opaque_data_.Mutable( GetArena());
}
inline std::string* ChannelUpdate::release_extra_opaque_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.ChannelUpdate.extra_opaque_data)
  return _impl_.extra_opaque_data_.Release();
}
inline void ChannelUpdate::set_allocated_extra_opaque_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extra_opaque_data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.extra_opaque_data_.IsDefault()) {
          _impl_.extra_opaque_data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.ChannelUpdate.extra_opaque_data)
}

// -------------------------------------------------------------------

// MacaroonId

// bytes nonce = 1;
inline void MacaroonId::clear_nonce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonce_.ClearToEmpty();
}
inline const std::string& MacaroonId::nonce() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MacaroonId.nonce)
  return _internal_nonce();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MacaroonId::set_nonce(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonce_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MacaroonId.nonce)
}
inline std::string* MacaroonId::mutable_nonce() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nonce();
  // @@protoc_insertion_point(field_mutable:lnrpc.MacaroonId.nonce)
  return _s;
}
inline const std::string& MacaroonId::_internal_nonce() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.nonce_.Get();
}
inline void MacaroonId::_internal_set_nonce(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonce_.Set(value, GetArena());
}
inline std::string* MacaroonId::_internal_mutable_nonce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.nonce_.Mutable( GetArena());
}
inline std::string* MacaroonId::release_nonce() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MacaroonId.nonce)
  return _impl_.nonce_.Release();
}
inline void MacaroonId::set_allocated_nonce(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.nonce_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nonce_.IsDefault()) {
          _impl_.nonce_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MacaroonId.nonce)
}

// bytes storageId = 2;
inline void MacaroonId::clear_storageid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storageid_.ClearToEmpty();
}
inline const std::string& MacaroonId::storageid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MacaroonId.storageId)
  return _internal_storageid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MacaroonId::set_storageid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storageid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MacaroonId.storageId)
}
inline std::string* MacaroonId::mutable_storageid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_storageid();
  // @@protoc_insertion_point(field_mutable:lnrpc.MacaroonId.storageId)
  return _s;
}
inline const std::string& MacaroonId::_internal_storageid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.storageid_.Get();
}
inline void MacaroonId::_internal_set_storageid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storageid_.Set(value, GetArena());
}
inline std::string* MacaroonId::_internal_mutable_storageid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.storageid_.Mutable( GetArena());
}
inline std::string* MacaroonId::release_storageid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MacaroonId.storageId)
  return _impl_.storageid_.Release();
}
inline void MacaroonId::set_allocated_storageid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.storageid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.storageid_.IsDefault()) {
          _impl_.storageid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MacaroonId.storageId)
}

// repeated .lnrpc.Op ops = 3;
inline int MacaroonId::_internal_ops_size() const {
  return _internal_ops().size();
}
inline int MacaroonId::ops_size() const {
  return _internal_ops_size();
}
inline void MacaroonId::clear_ops() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ops_.Clear();
}
inline ::lnrpc::Op* MacaroonId::mutable_ops(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.MacaroonId.ops)
  return _internal_mutable_ops()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Op>* MacaroonId::mutable_ops()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.MacaroonId.ops)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_ops();
}
inline const ::lnrpc::Op& MacaroonId::ops(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MacaroonId.ops)
  return _internal_ops().Get(index);
}
inline ::lnrpc::Op* MacaroonId::add_ops() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Op* _add = _internal_mutable_ops()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.MacaroonId.ops)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>& MacaroonId::ops() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.MacaroonId.ops)
  return _internal_ops();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Op>&
MacaroonId::_internal_ops() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ops_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Op>*
MacaroonId::_internal_mutable_ops() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.ops_;
}

// -------------------------------------------------------------------

// Op

// string entity = 1;
inline void Op::clear_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.ClearToEmpty();
}
inline const std::string& Op::entity() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Op.entity)
  return _internal_entity();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Op::set_entity(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.Op.entity)
}
inline std::string* Op::mutable_entity() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity();
  // @@protoc_insertion_point(field_mutable:lnrpc.Op.entity)
  return _s;
}
inline const std::string& Op::_internal_entity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entity_.Get();
}
inline void Op::_internal_set_entity(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.Set(value, GetArena());
}
inline std::string* Op::_internal_mutable_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entity_.Mutable( GetArena());
}
inline std::string* Op::release_entity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.Op.entity)
  return _impl_.entity_.Release();
}
inline void Op::set_allocated_entity(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entity_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entity_.IsDefault()) {
          _impl_.entity_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.Op.entity)
}

// repeated string actions = 2;
inline int Op::_internal_actions_size() const {
  return _internal_actions().size();
}
inline int Op::actions_size() const {
  return _internal_actions_size();
}
inline void Op::clear_actions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.actions_.Clear();
}
inline std::string* Op::add_actions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_actions()->Add();
  // @@protoc_insertion_point(field_add_mutable:lnrpc.Op.actions)
  return _s;
}
inline const std::string& Op::actions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.Op.actions)
  return _internal_actions().Get(index);
}
inline std::string* Op::mutable_actions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.Op.actions)
  return _internal_mutable_actions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void Op::set_actions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_actions()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:lnrpc.Op.actions)
}
template <typename Arg_, typename... Args_>
inline void Op::add_actions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_actions(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:lnrpc.Op.actions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Op::actions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.Op.actions)
  return _internal_actions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Op::mutable_actions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.Op.actions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_actions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Op::_internal_actions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.actions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Op::_internal_mutable_actions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.actions_;
}

// -------------------------------------------------------------------

// CheckMacPermRequest

// bytes macaroon = 1;
inline void CheckMacPermRequest::clear_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.ClearToEmpty();
}
inline const std::string& CheckMacPermRequest::macaroon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CheckMacPermRequest.macaroon)
  return _internal_macaroon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckMacPermRequest::set_macaroon(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CheckMacPermRequest.macaroon)
}
inline std::string* CheckMacPermRequest::mutable_macaroon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_macaroon();
  // @@protoc_insertion_point(field_mutable:lnrpc.CheckMacPermRequest.macaroon)
  return _s;
}
inline const std::string& CheckMacPermRequest::_internal_macaroon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.macaroon_.Get();
}
inline void CheckMacPermRequest::_internal_set_macaroon(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.Set(value, GetArena());
}
inline std::string* CheckMacPermRequest::_internal_mutable_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.macaroon_.Mutable( GetArena());
}
inline std::string* CheckMacPermRequest::release_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CheckMacPermRequest.macaroon)
  return _impl_.macaroon_.Release();
}
inline void CheckMacPermRequest::set_allocated_macaroon(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.macaroon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.macaroon_.IsDefault()) {
          _impl_.macaroon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CheckMacPermRequest.macaroon)
}

// repeated .lnrpc.MacaroonPermission permissions = 2;
inline int CheckMacPermRequest::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int CheckMacPermRequest::permissions_size() const {
  return _internal_permissions_size();
}
inline void CheckMacPermRequest::clear_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permissions_.Clear();
}
inline ::lnrpc::MacaroonPermission* CheckMacPermRequest::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:lnrpc.CheckMacPermRequest.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>* CheckMacPermRequest::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:lnrpc.CheckMacPermRequest.permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_permissions();
}
inline const ::lnrpc::MacaroonPermission& CheckMacPermRequest::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CheckMacPermRequest.permissions)
  return _internal_permissions().Get(index);
}
inline ::lnrpc::MacaroonPermission* CheckMacPermRequest::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::MacaroonPermission* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:lnrpc.CheckMacPermRequest.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>& CheckMacPermRequest::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:lnrpc.CheckMacPermRequest.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>&
CheckMacPermRequest::_internal_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::MacaroonPermission>*
CheckMacPermRequest::_internal_mutable_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.permissions_;
}

// string fullMethod = 3;
inline void CheckMacPermRequest::clear_fullmethod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullmethod_.ClearToEmpty();
}
inline const std::string& CheckMacPermRequest::fullmethod() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.CheckMacPermRequest.fullMethod)
  return _internal_fullmethod();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CheckMacPermRequest::set_fullmethod(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullmethod_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.CheckMacPermRequest.fullMethod)
}
inline std::string* CheckMacPermRequest::mutable_fullmethod() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_fullmethod();
  // @@protoc_insertion_point(field_mutable:lnrpc.CheckMacPermRequest.fullMethod)
  return _s;
}
inline const std::string& CheckMacPermRequest::_internal_fullmethod() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fullmethod_.Get();
}
inline void CheckMacPermRequest::_internal_set_fullmethod(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullmethod_.Set(value, GetArena());
}
inline std::string* CheckMacPermRequest::_internal_mutable_fullmethod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fullmethod_.Mutable( GetArena());
}
inline std::string* CheckMacPermRequest::release_fullmethod() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.CheckMacPermRequest.fullMethod)
  return _impl_.fullmethod_.Release();
}
inline void CheckMacPermRequest::set_allocated_fullmethod(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fullmethod_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.fullmethod_.IsDefault()) {
          _impl_.fullmethod_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.CheckMacPermRequest.fullMethod)
}

// -------------------------------------------------------------------

// CheckMacPermResponse

// bool valid = 1;
inline void CheckMacPermResponse::clear_valid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = false;
}
inline bool CheckMacPermResponse::valid() const {
  // @@protoc_insertion_point(field_get:lnrpc.CheckMacPermResponse.valid)
  return _internal_valid();
}
inline void CheckMacPermResponse::set_valid(bool value) {
  _internal_set_valid(value);
  // @@protoc_insertion_point(field_set:lnrpc.CheckMacPermResponse.valid)
}
inline bool CheckMacPermResponse::_internal_valid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.valid_;
}
inline void CheckMacPermResponse::_internal_set_valid(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = value;
}

// -------------------------------------------------------------------

// RPCMiddlewareRequest

// uint64 request_id = 1;
inline void RPCMiddlewareRequest::clear_request_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = ::uint64_t{0u};
}
inline ::uint64_t RPCMiddlewareRequest::request_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.request_id)
  return _internal_request_id();
}
inline void RPCMiddlewareRequest::set_request_id(::uint64_t value) {
  _internal_set_request_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.RPCMiddlewareRequest.request_id)
}
inline ::uint64_t RPCMiddlewareRequest::_internal_request_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_id_;
}
inline void RPCMiddlewareRequest::_internal_set_request_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_id_ = value;
}

// bytes raw_macaroon = 2;
inline void RPCMiddlewareRequest::clear_raw_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_macaroon_.ClearToEmpty();
}
inline const std::string& RPCMiddlewareRequest::raw_macaroon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.raw_macaroon)
  return _internal_raw_macaroon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPCMiddlewareRequest::set_raw_macaroon(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_macaroon_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.RPCMiddlewareRequest.raw_macaroon)
}
inline std::string* RPCMiddlewareRequest::mutable_raw_macaroon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_macaroon();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareRequest.raw_macaroon)
  return _s;
}
inline const std::string& RPCMiddlewareRequest::_internal_raw_macaroon() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_macaroon_.Get();
}
inline void RPCMiddlewareRequest::_internal_set_raw_macaroon(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_macaroon_.Set(value, GetArena());
}
inline std::string* RPCMiddlewareRequest::_internal_mutable_raw_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_macaroon_.Mutable( GetArena());
}
inline std::string* RPCMiddlewareRequest::release_raw_macaroon() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareRequest.raw_macaroon)
  return _impl_.raw_macaroon_.Release();
}
inline void RPCMiddlewareRequest::set_allocated_raw_macaroon(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_macaroon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_macaroon_.IsDefault()) {
          _impl_.raw_macaroon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.RPCMiddlewareRequest.raw_macaroon)
}

// string custom_caveat_condition = 3;
inline void RPCMiddlewareRequest::clear_custom_caveat_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_caveat_condition_.ClearToEmpty();
}
inline const std::string& RPCMiddlewareRequest::custom_caveat_condition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.custom_caveat_condition)
  return _internal_custom_caveat_condition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPCMiddlewareRequest::set_custom_caveat_condition(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_caveat_condition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.RPCMiddlewareRequest.custom_caveat_condition)
}
inline std::string* RPCMiddlewareRequest::mutable_custom_caveat_condition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_caveat_condition();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareRequest.custom_caveat_condition)
  return _s;
}
inline const std::string& RPCMiddlewareRequest::_internal_custom_caveat_condition() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_caveat_condition_.Get();
}
inline void RPCMiddlewareRequest::_internal_set_custom_caveat_condition(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_caveat_condition_.Set(value, GetArena());
}
inline std::string* RPCMiddlewareRequest::_internal_mutable_custom_caveat_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_caveat_condition_.Mutable( GetArena());
}
inline std::string* RPCMiddlewareRequest::release_custom_caveat_condition() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareRequest.custom_caveat_condition)
  return _impl_.custom_caveat_condition_.Release();
}
inline void RPCMiddlewareRequest::set_allocated_custom_caveat_condition(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_caveat_condition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_caveat_condition_.IsDefault()) {
          _impl_.custom_caveat_condition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.RPCMiddlewareRequest.custom_caveat_condition)
}

// .lnrpc.StreamAuth stream_auth = 4;
inline bool RPCMiddlewareRequest::has_stream_auth() const {
  return intercept_type_case() == kStreamAuth;
}
inline bool RPCMiddlewareRequest::_internal_has_stream_auth() const {
  return intercept_type_case() == kStreamAuth;
}
inline void RPCMiddlewareRequest::set_has_stream_auth() {
  _impl_._oneof_case_[0] = kStreamAuth;
}
inline void RPCMiddlewareRequest::clear_stream_auth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (intercept_type_case() == kStreamAuth) {
    if (GetArena() == nullptr) {
      delete _impl_.intercept_type_.stream_auth_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.intercept_type_.stream_auth_);
    }
    clear_has_intercept_type();
  }
}
inline ::lnrpc::StreamAuth* RPCMiddlewareRequest::release_stream_auth() {
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareRequest.stream_auth)
  if (intercept_type_case() == kStreamAuth) {
    clear_has_intercept_type();
    auto* temp = _impl_.intercept_type_.stream_auth_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.intercept_type_.stream_auth_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::StreamAuth& RPCMiddlewareRequest::_internal_stream_auth() const {
  return intercept_type_case() == kStreamAuth ? *_impl_.intercept_type_.stream_auth_ : reinterpret_cast<::lnrpc::StreamAuth&>(::lnrpc::_StreamAuth_default_instance_);
}
inline const ::lnrpc::StreamAuth& RPCMiddlewareRequest::stream_auth() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.stream_auth)
  return _internal_stream_auth();
}
inline ::lnrpc::StreamAuth* RPCMiddlewareRequest::unsafe_arena_release_stream_auth() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.RPCMiddlewareRequest.stream_auth)
  if (intercept_type_case() == kStreamAuth) {
    clear_has_intercept_type();
    auto* temp = _impl_.intercept_type_.stream_auth_;
    _impl_.intercept_type_.stream_auth_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPCMiddlewareRequest::unsafe_arena_set_allocated_stream_auth(::lnrpc::StreamAuth* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_intercept_type();
  if (value) {
    set_has_stream_auth();
    _impl_.intercept_type_.stream_auth_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.RPCMiddlewareRequest.stream_auth)
}
inline ::lnrpc::StreamAuth* RPCMiddlewareRequest::_internal_mutable_stream_auth() {
  if (intercept_type_case() != kStreamAuth) {
    clear_intercept_type();
    set_has_stream_auth();
    _impl_.intercept_type_.stream_auth_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::StreamAuth>(GetArena());
  }
  return _impl_.intercept_type_.stream_auth_;
}
inline ::lnrpc::StreamAuth* RPCMiddlewareRequest::mutable_stream_auth() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::StreamAuth* _msg = _internal_mutable_stream_auth();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareRequest.stream_auth)
  return _msg;
}

// .lnrpc.RPCMessage request = 5;
inline bool RPCMiddlewareRequest::has_request() const {
  return intercept_type_case() == kRequest;
}
inline bool RPCMiddlewareRequest::_internal_has_request() const {
  return intercept_type_case() == kRequest;
}
inline void RPCMiddlewareRequest::set_has_request() {
  _impl_._oneof_case_[0] = kRequest;
}
inline void RPCMiddlewareRequest::clear_request() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (intercept_type_case() == kRequest) {
    if (GetArena() == nullptr) {
      delete _impl_.intercept_type_.request_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.intercept_type_.request_);
    }
    clear_has_intercept_type();
  }
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::release_request() {
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareRequest.request)
  if (intercept_type_case() == kRequest) {
    clear_has_intercept_type();
    auto* temp = _impl_.intercept_type_.request_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.intercept_type_.request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::RPCMessage& RPCMiddlewareRequest::_internal_request() const {
  return intercept_type_case() == kRequest ? *_impl_.intercept_type_.request_ : reinterpret_cast<::lnrpc::RPCMessage&>(::lnrpc::_RPCMessage_default_instance_);
}
inline const ::lnrpc::RPCMessage& RPCMiddlewareRequest::request() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.request)
  return _internal_request();
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::unsafe_arena_release_request() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.RPCMiddlewareRequest.request)
  if (intercept_type_case() == kRequest) {
    clear_has_intercept_type();
    auto* temp = _impl_.intercept_type_.request_;
    _impl_.intercept_type_.request_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPCMiddlewareRequest::unsafe_arena_set_allocated_request(::lnrpc::RPCMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_intercept_type();
  if (value) {
    set_has_request();
    _impl_.intercept_type_.request_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.RPCMiddlewareRequest.request)
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::_internal_mutable_request() {
  if (intercept_type_case() != kRequest) {
    clear_intercept_type();
    set_has_request();
    _impl_.intercept_type_.request_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::RPCMessage>(GetArena());
  }
  return _impl_.intercept_type_.request_;
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::mutable_request() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::RPCMessage* _msg = _internal_mutable_request();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareRequest.request)
  return _msg;
}

// .lnrpc.RPCMessage response = 6;
inline bool RPCMiddlewareRequest::has_response() const {
  return intercept_type_case() == kResponse;
}
inline bool RPCMiddlewareRequest::_internal_has_response() const {
  return intercept_type_case() == kResponse;
}
inline void RPCMiddlewareRequest::set_has_response() {
  _impl_._oneof_case_[0] = kResponse;
}
inline void RPCMiddlewareRequest::clear_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (intercept_type_case() == kResponse) {
    if (GetArena() == nullptr) {
      delete _impl_.intercept_type_.response_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.intercept_type_.response_);
    }
    clear_has_intercept_type();
  }
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::release_response() {
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareRequest.response)
  if (intercept_type_case() == kResponse) {
    clear_has_intercept_type();
    auto* temp = _impl_.intercept_type_.response_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.intercept_type_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::RPCMessage& RPCMiddlewareRequest::_internal_response() const {
  return intercept_type_case() == kResponse ? *_impl_.intercept_type_.response_ : reinterpret_cast<::lnrpc::RPCMessage&>(::lnrpc::_RPCMessage_default_instance_);
}
inline const ::lnrpc::RPCMessage& RPCMiddlewareRequest::response() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.response)
  return _internal_response();
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::unsafe_arena_release_response() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.RPCMiddlewareRequest.response)
  if (intercept_type_case() == kResponse) {
    clear_has_intercept_type();
    auto* temp = _impl_.intercept_type_.response_;
    _impl_.intercept_type_.response_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPCMiddlewareRequest::unsafe_arena_set_allocated_response(::lnrpc::RPCMessage* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_intercept_type();
  if (value) {
    set_has_response();
    _impl_.intercept_type_.response_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.RPCMiddlewareRequest.response)
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::_internal_mutable_response() {
  if (intercept_type_case() != kResponse) {
    clear_intercept_type();
    set_has_response();
    _impl_.intercept_type_.response_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::RPCMessage>(GetArena());
  }
  return _impl_.intercept_type_.response_;
}
inline ::lnrpc::RPCMessage* RPCMiddlewareRequest::mutable_response() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::RPCMessage* _msg = _internal_mutable_response();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareRequest.response)
  return _msg;
}

// bool reg_complete = 8;
inline bool RPCMiddlewareRequest::has_reg_complete() const {
  return intercept_type_case() == kRegComplete;
}
inline void RPCMiddlewareRequest::set_has_reg_complete() {
  _impl_._oneof_case_[0] = kRegComplete;
}
inline void RPCMiddlewareRequest::clear_reg_complete() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (intercept_type_case() == kRegComplete) {
    _impl_.intercept_type_.reg_complete_ = false;
    clear_has_intercept_type();
  }
}
inline bool RPCMiddlewareRequest::reg_complete() const {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.reg_complete)
  return _internal_reg_complete();
}
inline void RPCMiddlewareRequest::set_reg_complete(bool value) {
  if (intercept_type_case() != kRegComplete) {
    clear_intercept_type();
    set_has_reg_complete();
  }
  _impl_.intercept_type_.reg_complete_ = value;
  // @@protoc_insertion_point(field_set:lnrpc.RPCMiddlewareRequest.reg_complete)
}
inline bool RPCMiddlewareRequest::_internal_reg_complete() const {
  if (intercept_type_case() == kRegComplete) {
    return _impl_.intercept_type_.reg_complete_;
  }
  return false;
}

// uint64 msg_id = 7;
inline void RPCMiddlewareRequest::clear_msg_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_id_ = ::uint64_t{0u};
}
inline ::uint64_t RPCMiddlewareRequest::msg_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareRequest.msg_id)
  return _internal_msg_id();
}
inline void RPCMiddlewareRequest::set_msg_id(::uint64_t value) {
  _internal_set_msg_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.RPCMiddlewareRequest.msg_id)
}
inline ::uint64_t RPCMiddlewareRequest::_internal_msg_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_id_;
}
inline void RPCMiddlewareRequest::_internal_set_msg_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_id_ = value;
}

inline bool RPCMiddlewareRequest::has_intercept_type() const {
  return intercept_type_case() != INTERCEPT_TYPE_NOT_SET;
}
inline void RPCMiddlewareRequest::clear_has_intercept_type() {
  _impl_._oneof_case_[0] = INTERCEPT_TYPE_NOT_SET;
}
inline RPCMiddlewareRequest::InterceptTypeCase RPCMiddlewareRequest::intercept_type_case() const {
  return RPCMiddlewareRequest::InterceptTypeCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// StreamAuth

// string method_full_uri = 1;
inline void StreamAuth::clear_method_full_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.ClearToEmpty();
}
inline const std::string& StreamAuth::method_full_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.StreamAuth.method_full_uri)
  return _internal_method_full_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamAuth::set_method_full_uri(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.StreamAuth.method_full_uri)
}
inline std::string* StreamAuth::mutable_method_full_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_method_full_uri();
  // @@protoc_insertion_point(field_mutable:lnrpc.StreamAuth.method_full_uri)
  return _s;
}
inline const std::string& StreamAuth::_internal_method_full_uri() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_full_uri_.Get();
}
inline void StreamAuth::_internal_set_method_full_uri(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.Set(value, GetArena());
}
inline std::string* StreamAuth::_internal_mutable_method_full_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.method_full_uri_.Mutable( GetArena());
}
inline std::string* StreamAuth::release_method_full_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.StreamAuth.method_full_uri)
  return _impl_.method_full_uri_.Release();
}
inline void StreamAuth::set_allocated_method_full_uri(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.method_full_uri_.IsDefault()) {
          _impl_.method_full_uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.StreamAuth.method_full_uri)
}

// -------------------------------------------------------------------

// RPCMessage

// string method_full_uri = 1;
inline void RPCMessage::clear_method_full_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.ClearToEmpty();
}
inline const std::string& RPCMessage::method_full_uri() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMessage.method_full_uri)
  return _internal_method_full_uri();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPCMessage::set_method_full_uri(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.RPCMessage.method_full_uri)
}
inline std::string* RPCMessage::mutable_method_full_uri() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_method_full_uri();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMessage.method_full_uri)
  return _s;
}
inline const std::string& RPCMessage::_internal_method_full_uri() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_full_uri_.Get();
}
inline void RPCMessage::_internal_set_method_full_uri(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.Set(value, GetArena());
}
inline std::string* RPCMessage::_internal_mutable_method_full_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.method_full_uri_.Mutable( GetArena());
}
inline std::string* RPCMessage::release_method_full_uri() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.RPCMessage.method_full_uri)
  return _impl_.method_full_uri_.Release();
}
inline void RPCMessage::set_allocated_method_full_uri(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_full_uri_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.method_full_uri_.IsDefault()) {
          _impl_.method_full_uri_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.RPCMessage.method_full_uri)
}

// bool stream_rpc = 2;
inline void RPCMessage::clear_stream_rpc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_rpc_ = false;
}
inline bool RPCMessage::stream_rpc() const {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMessage.stream_rpc)
  return _internal_stream_rpc();
}
inline void RPCMessage::set_stream_rpc(bool value) {
  _internal_set_stream_rpc(value);
  // @@protoc_insertion_point(field_set:lnrpc.RPCMessage.stream_rpc)
}
inline bool RPCMessage::_internal_stream_rpc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_rpc_;
}
inline void RPCMessage::_internal_set_stream_rpc(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_rpc_ = value;
}

// string type_name = 3;
inline void RPCMessage::clear_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.ClearToEmpty();
}
inline const std::string& RPCMessage::type_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMessage.type_name)
  return _internal_type_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPCMessage::set_type_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.RPCMessage.type_name)
}
inline std::string* RPCMessage::mutable_type_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMessage.type_name)
  return _s;
}
inline const std::string& RPCMessage::_internal_type_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_name_.Get();
}
inline void RPCMessage::_internal_set_type_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.Set(value, GetArena());
}
inline std::string* RPCMessage::_internal_mutable_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_name_.Mutable( GetArena());
}
inline std::string* RPCMessage::release_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.RPCMessage.type_name)
  return _impl_.type_name_.Release();
}
inline void RPCMessage::set_allocated_type_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_name_.IsDefault()) {
          _impl_.type_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.RPCMessage.type_name)
}

// bytes serialized = 4;
inline void RPCMessage::clear_serialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialized_.ClearToEmpty();
}
inline const std::string& RPCMessage::serialized() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMessage.serialized)
  return _internal_serialized();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RPCMessage::set_serialized(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialized_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.RPCMessage.serialized)
}
inline std::string* RPCMessage::mutable_serialized() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_serialized();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMessage.serialized)
  return _s;
}
inline const std::string& RPCMessage::_internal_serialized() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.serialized_.Get();
}
inline void RPCMessage::_internal_set_serialized(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialized_.Set(value, GetArena());
}
inline std::string* RPCMessage::_internal_mutable_serialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.serialized_.Mutable( GetArena());
}
inline std::string* RPCMessage::release_serialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.RPCMessage.serialized)
  return _impl_.serialized_.Release();
}
inline void RPCMessage::set_allocated_serialized(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.serialized_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.serialized_.IsDefault()) {
          _impl_.serialized_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.RPCMessage.serialized)
}

// bool is_error = 5;
inline void RPCMessage::clear_is_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_error_ = false;
}
inline bool RPCMessage::is_error() const {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMessage.is_error)
  return _internal_is_error();
}
inline void RPCMessage::set_is_error(bool value) {
  _internal_set_is_error(value);
  // @@protoc_insertion_point(field_set:lnrpc.RPCMessage.is_error)
}
inline bool RPCMessage::_internal_is_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_error_;
}
inline void RPCMessage::_internal_set_is_error(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_error_ = value;
}

// -------------------------------------------------------------------

// RPCMiddlewareResponse

// uint64 ref_msg_id = 1;
inline void RPCMiddlewareResponse::clear_ref_msg_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_msg_id_ = ::uint64_t{0u};
}
inline ::uint64_t RPCMiddlewareResponse::ref_msg_id() const {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareResponse.ref_msg_id)
  return _internal_ref_msg_id();
}
inline void RPCMiddlewareResponse::set_ref_msg_id(::uint64_t value) {
  _internal_set_ref_msg_id(value);
  // @@protoc_insertion_point(field_set:lnrpc.RPCMiddlewareResponse.ref_msg_id)
}
inline ::uint64_t RPCMiddlewareResponse::_internal_ref_msg_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ref_msg_id_;
}
inline void RPCMiddlewareResponse::_internal_set_ref_msg_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ref_msg_id_ = value;
}

// .lnrpc.MiddlewareRegistration register = 2;
inline bool RPCMiddlewareResponse::has_register_() const {
  return middleware_message_case() == kRegister;
}
inline bool RPCMiddlewareResponse::_internal_has_register_() const {
  return middleware_message_case() == kRegister;
}
inline void RPCMiddlewareResponse::set_has_register_() {
  _impl_._oneof_case_[0] = kRegister;
}
inline void RPCMiddlewareResponse::clear_register_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (middleware_message_case() == kRegister) {
    if (GetArena() == nullptr) {
      delete _impl_.middleware_message_.register__;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.middleware_message_.register__);
    }
    clear_has_middleware_message();
  }
}
inline ::lnrpc::MiddlewareRegistration* RPCMiddlewareResponse::release_register_() {
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareResponse.register)
  if (middleware_message_case() == kRegister) {
    clear_has_middleware_message();
    auto* temp = _impl_.middleware_message_.register__;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.middleware_message_.register__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::MiddlewareRegistration& RPCMiddlewareResponse::_internal_register_() const {
  return middleware_message_case() == kRegister ? *_impl_.middleware_message_.register__ : reinterpret_cast<::lnrpc::MiddlewareRegistration&>(::lnrpc::_MiddlewareRegistration_default_instance_);
}
inline const ::lnrpc::MiddlewareRegistration& RPCMiddlewareResponse::register_() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareResponse.register)
  return _internal_register_();
}
inline ::lnrpc::MiddlewareRegistration* RPCMiddlewareResponse::unsafe_arena_release_register_() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.RPCMiddlewareResponse.register)
  if (middleware_message_case() == kRegister) {
    clear_has_middleware_message();
    auto* temp = _impl_.middleware_message_.register__;
    _impl_.middleware_message_.register__ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPCMiddlewareResponse::unsafe_arena_set_allocated_register_(::lnrpc::MiddlewareRegistration* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_middleware_message();
  if (value) {
    set_has_register_();
    _impl_.middleware_message_.register__ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.RPCMiddlewareResponse.register)
}
inline ::lnrpc::MiddlewareRegistration* RPCMiddlewareResponse::_internal_mutable_register_() {
  if (middleware_message_case() != kRegister) {
    clear_middleware_message();
    set_has_register_();
    _impl_.middleware_message_.register__ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::MiddlewareRegistration>(GetArena());
  }
  return _impl_.middleware_message_.register__;
}
inline ::lnrpc::MiddlewareRegistration* RPCMiddlewareResponse::mutable_register_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::MiddlewareRegistration* _msg = _internal_mutable_register_();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareResponse.register)
  return _msg;
}

// .lnrpc.InterceptFeedback feedback = 3;
inline bool RPCMiddlewareResponse::has_feedback() const {
  return middleware_message_case() == kFeedback;
}
inline bool RPCMiddlewareResponse::_internal_has_feedback() const {
  return middleware_message_case() == kFeedback;
}
inline void RPCMiddlewareResponse::set_has_feedback() {
  _impl_._oneof_case_[0] = kFeedback;
}
inline void RPCMiddlewareResponse::clear_feedback() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (middleware_message_case() == kFeedback) {
    if (GetArena() == nullptr) {
      delete _impl_.middleware_message_.feedback_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.middleware_message_.feedback_);
    }
    clear_has_middleware_message();
  }
}
inline ::lnrpc::InterceptFeedback* RPCMiddlewareResponse::release_feedback() {
  // @@protoc_insertion_point(field_release:lnrpc.RPCMiddlewareResponse.feedback)
  if (middleware_message_case() == kFeedback) {
    clear_has_middleware_message();
    auto* temp = _impl_.middleware_message_.feedback_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.middleware_message_.feedback_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::InterceptFeedback& RPCMiddlewareResponse::_internal_feedback() const {
  return middleware_message_case() == kFeedback ? *_impl_.middleware_message_.feedback_ : reinterpret_cast<::lnrpc::InterceptFeedback&>(::lnrpc::_InterceptFeedback_default_instance_);
}
inline const ::lnrpc::InterceptFeedback& RPCMiddlewareResponse::feedback() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.RPCMiddlewareResponse.feedback)
  return _internal_feedback();
}
inline ::lnrpc::InterceptFeedback* RPCMiddlewareResponse::unsafe_arena_release_feedback() {
  // @@protoc_insertion_point(field_unsafe_arena_release:lnrpc.RPCMiddlewareResponse.feedback)
  if (middleware_message_case() == kFeedback) {
    clear_has_middleware_message();
    auto* temp = _impl_.middleware_message_.feedback_;
    _impl_.middleware_message_.feedback_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void RPCMiddlewareResponse::unsafe_arena_set_allocated_feedback(::lnrpc::InterceptFeedback* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_middleware_message();
  if (value) {
    set_has_feedback();
    _impl_.middleware_message_.feedback_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:lnrpc.RPCMiddlewareResponse.feedback)
}
inline ::lnrpc::InterceptFeedback* RPCMiddlewareResponse::_internal_mutable_feedback() {
  if (middleware_message_case() != kFeedback) {
    clear_middleware_message();
    set_has_feedback();
    _impl_.middleware_message_.feedback_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::InterceptFeedback>(GetArena());
  }
  return _impl_.middleware_message_.feedback_;
}
inline ::lnrpc::InterceptFeedback* RPCMiddlewareResponse::mutable_feedback() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::InterceptFeedback* _msg = _internal_mutable_feedback();
  // @@protoc_insertion_point(field_mutable:lnrpc.RPCMiddlewareResponse.feedback)
  return _msg;
}

inline bool RPCMiddlewareResponse::has_middleware_message() const {
  return middleware_message_case() != MIDDLEWARE_MESSAGE_NOT_SET;
}
inline void RPCMiddlewareResponse::clear_has_middleware_message() {
  _impl_._oneof_case_[0] = MIDDLEWARE_MESSAGE_NOT_SET;
}
inline RPCMiddlewareResponse::MiddlewareMessageCase RPCMiddlewareResponse::middleware_message_case() const {
  return RPCMiddlewareResponse::MiddlewareMessageCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// MiddlewareRegistration

// string middleware_name = 1;
inline void MiddlewareRegistration::clear_middleware_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.middleware_name_.ClearToEmpty();
}
inline const std::string& MiddlewareRegistration::middleware_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MiddlewareRegistration.middleware_name)
  return _internal_middleware_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MiddlewareRegistration::set_middleware_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.middleware_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MiddlewareRegistration.middleware_name)
}
inline std::string* MiddlewareRegistration::mutable_middleware_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_middleware_name();
  // @@protoc_insertion_point(field_mutable:lnrpc.MiddlewareRegistration.middleware_name)
  return _s;
}
inline const std::string& MiddlewareRegistration::_internal_middleware_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.middleware_name_.Get();
}
inline void MiddlewareRegistration::_internal_set_middleware_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.middleware_name_.Set(value, GetArena());
}
inline std::string* MiddlewareRegistration::_internal_mutable_middleware_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.middleware_name_.Mutable( GetArena());
}
inline std::string* MiddlewareRegistration::release_middleware_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MiddlewareRegistration.middleware_name)
  return _impl_.middleware_name_.Release();
}
inline void MiddlewareRegistration::set_allocated_middleware_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.middleware_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.middleware_name_.IsDefault()) {
          _impl_.middleware_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MiddlewareRegistration.middleware_name)
}

// string custom_macaroon_caveat_name = 2;
inline void MiddlewareRegistration::clear_custom_macaroon_caveat_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_macaroon_caveat_name_.ClearToEmpty();
}
inline const std::string& MiddlewareRegistration::custom_macaroon_caveat_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.MiddlewareRegistration.custom_macaroon_caveat_name)
  return _internal_custom_macaroon_caveat_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MiddlewareRegistration::set_custom_macaroon_caveat_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_macaroon_caveat_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.MiddlewareRegistration.custom_macaroon_caveat_name)
}
inline std::string* MiddlewareRegistration::mutable_custom_macaroon_caveat_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_custom_macaroon_caveat_name();
  // @@protoc_insertion_point(field_mutable:lnrpc.MiddlewareRegistration.custom_macaroon_caveat_name)
  return _s;
}
inline const std::string& MiddlewareRegistration::_internal_custom_macaroon_caveat_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.custom_macaroon_caveat_name_.Get();
}
inline void MiddlewareRegistration::_internal_set_custom_macaroon_caveat_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_macaroon_caveat_name_.Set(value, GetArena());
}
inline std::string* MiddlewareRegistration::_internal_mutable_custom_macaroon_caveat_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.custom_macaroon_caveat_name_.Mutable( GetArena());
}
inline std::string* MiddlewareRegistration::release_custom_macaroon_caveat_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.MiddlewareRegistration.custom_macaroon_caveat_name)
  return _impl_.custom_macaroon_caveat_name_.Release();
}
inline void MiddlewareRegistration::set_allocated_custom_macaroon_caveat_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.custom_macaroon_caveat_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.custom_macaroon_caveat_name_.IsDefault()) {
          _impl_.custom_macaroon_caveat_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.MiddlewareRegistration.custom_macaroon_caveat_name)
}

// bool read_only_mode = 3;
inline void MiddlewareRegistration::clear_read_only_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_only_mode_ = false;
}
inline bool MiddlewareRegistration::read_only_mode() const {
  // @@protoc_insertion_point(field_get:lnrpc.MiddlewareRegistration.read_only_mode)
  return _internal_read_only_mode();
}
inline void MiddlewareRegistration::set_read_only_mode(bool value) {
  _internal_set_read_only_mode(value);
  // @@protoc_insertion_point(field_set:lnrpc.MiddlewareRegistration.read_only_mode)
}
inline bool MiddlewareRegistration::_internal_read_only_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.read_only_mode_;
}
inline void MiddlewareRegistration::_internal_set_read_only_mode(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.read_only_mode_ = value;
}

// -------------------------------------------------------------------

// InterceptFeedback

// string error = 1;
inline void InterceptFeedback::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& InterceptFeedback::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.InterceptFeedback.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterceptFeedback::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.InterceptFeedback.error)
}
inline std::string* InterceptFeedback::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:lnrpc.InterceptFeedback.error)
  return _s;
}
inline const std::string& InterceptFeedback::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void InterceptFeedback::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* InterceptFeedback::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* InterceptFeedback::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.InterceptFeedback.error)
  return _impl_.error_.Release();
}
inline void InterceptFeedback::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.InterceptFeedback.error)
}

// bool replace_response = 2;
inline void InterceptFeedback::clear_replace_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replace_response_ = false;
}
inline bool InterceptFeedback::replace_response() const {
  // @@protoc_insertion_point(field_get:lnrpc.InterceptFeedback.replace_response)
  return _internal_replace_response();
}
inline void InterceptFeedback::set_replace_response(bool value) {
  _internal_set_replace_response(value);
  // @@protoc_insertion_point(field_set:lnrpc.InterceptFeedback.replace_response)
}
inline bool InterceptFeedback::_internal_replace_response() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replace_response_;
}
inline void InterceptFeedback::_internal_set_replace_response(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replace_response_ = value;
}

// bytes replacement_serialized = 3;
inline void InterceptFeedback::clear_replacement_serialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replacement_serialized_.ClearToEmpty();
}
inline const std::string& InterceptFeedback::replacement_serialized() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:lnrpc.InterceptFeedback.replacement_serialized)
  return _internal_replacement_serialized();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void InterceptFeedback::set_replacement_serialized(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replacement_serialized_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:lnrpc.InterceptFeedback.replacement_serialized)
}
inline std::string* InterceptFeedback::mutable_replacement_serialized() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_replacement_serialized();
  // @@protoc_insertion_point(field_mutable:lnrpc.InterceptFeedback.replacement_serialized)
  return _s;
}
inline const std::string& InterceptFeedback::_internal_replacement_serialized() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.replacement_serialized_.Get();
}
inline void InterceptFeedback::_internal_set_replacement_serialized(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replacement_serialized_.Set(value, GetArena());
}
inline std::string* InterceptFeedback::_internal_mutable_replacement_serialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.replacement_serialized_.Mutable( GetArena());
}
inline std::string* InterceptFeedback::release_replacement_serialized() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:lnrpc.InterceptFeedback.replacement_serialized)
  return _impl_.replacement_serialized_.Release();
}
inline void InterceptFeedback::set_allocated_replacement_serialized(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.replacement_serialized_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.replacement_serialized_.IsDefault()) {
          _impl_.replacement_serialized_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:lnrpc.InterceptFeedback.replacement_serialized)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace lnrpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::lnrpc::ChannelCloseSummary_ClosureType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::ChannelCloseSummary_ClosureType>() {
  return ::lnrpc::ChannelCloseSummary_ClosureType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::Peer_SyncType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::Peer_SyncType>() {
  return ::lnrpc::Peer_SyncType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::PeerEvent_EventType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::PeerEvent_EventType>() {
  return ::lnrpc::PeerEvent_EventType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState>() {
  return ::lnrpc::PendingChannelsResponse_ForceClosedChannel_AnchorState_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::ChannelEventUpdate_UpdateType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::ChannelEventUpdate_UpdateType>() {
  return ::lnrpc::ChannelEventUpdate_UpdateType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::Invoice_InvoiceState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::Invoice_InvoiceState>() {
  return ::lnrpc::Invoice_InvoiceState_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::Payment_PaymentStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::Payment_PaymentStatus>() {
  return ::lnrpc::Payment_PaymentStatus_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::HTLCAttempt_HTLCStatus> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::HTLCAttempt_HTLCStatus>() {
  return ::lnrpc::HTLCAttempt_HTLCStatus_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::Failure_FailureCode> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::Failure_FailureCode>() {
  return ::lnrpc::Failure_FailureCode_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::OutputScriptType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::OutputScriptType>() {
  return ::lnrpc::OutputScriptType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::CoinSelectionStrategy> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::CoinSelectionStrategy>() {
  return ::lnrpc::CoinSelectionStrategy_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::AddressType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::AddressType>() {
  return ::lnrpc::AddressType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::CommitmentType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::CommitmentType>() {
  return ::lnrpc::CommitmentType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::Initiator> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::Initiator>() {
  return ::lnrpc::Initiator_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::ResolutionType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::ResolutionType>() {
  return ::lnrpc::ResolutionType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::ResolutionOutcome> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::ResolutionOutcome>() {
  return ::lnrpc::ResolutionOutcome_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::NodeMetricType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::NodeMetricType>() {
  return ::lnrpc::NodeMetricType_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::InvoiceHTLCState> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::InvoiceHTLCState>() {
  return ::lnrpc::InvoiceHTLCState_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::PaymentFailureReason> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::PaymentFailureReason>() {
  return ::lnrpc::PaymentFailureReason_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::FeatureBit> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::FeatureBit>() {
  return ::lnrpc::FeatureBit_descriptor();
}
template <>
struct is_proto_enum<::lnrpc::UpdateFailure> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::lnrpc::UpdateFailure>() {
  return ::lnrpc::UpdateFailure_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_lightning_2eproto_2epb_2eh
