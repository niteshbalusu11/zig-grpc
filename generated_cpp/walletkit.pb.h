// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: walletkit.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_walletkit_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_walletkit_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "lightning.pb.h"
#include "signer.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_walletkit_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_walletkit_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_walletkit_2eproto;
namespace walletrpc {
class Account;
struct AccountDefaultTypeInternal;
extern AccountDefaultTypeInternal _Account_default_instance_;
class AccountWithAddresses;
struct AccountWithAddressesDefaultTypeInternal;
extern AccountWithAddressesDefaultTypeInternal _AccountWithAddresses_default_instance_;
class AddrRequest;
struct AddrRequestDefaultTypeInternal;
extern AddrRequestDefaultTypeInternal _AddrRequest_default_instance_;
class AddrResponse;
struct AddrResponseDefaultTypeInternal;
extern AddrResponseDefaultTypeInternal _AddrResponse_default_instance_;
class AddressProperty;
struct AddressPropertyDefaultTypeInternal;
extern AddressPropertyDefaultTypeInternal _AddressProperty_default_instance_;
class BumpFeeRequest;
struct BumpFeeRequestDefaultTypeInternal;
extern BumpFeeRequestDefaultTypeInternal _BumpFeeRequest_default_instance_;
class BumpFeeResponse;
struct BumpFeeResponseDefaultTypeInternal;
extern BumpFeeResponseDefaultTypeInternal _BumpFeeResponse_default_instance_;
class BumpForceCloseFeeRequest;
struct BumpForceCloseFeeRequestDefaultTypeInternal;
extern BumpForceCloseFeeRequestDefaultTypeInternal _BumpForceCloseFeeRequest_default_instance_;
class BumpForceCloseFeeResponse;
struct BumpForceCloseFeeResponseDefaultTypeInternal;
extern BumpForceCloseFeeResponseDefaultTypeInternal _BumpForceCloseFeeResponse_default_instance_;
class EstimateFeeRequest;
struct EstimateFeeRequestDefaultTypeInternal;
extern EstimateFeeRequestDefaultTypeInternal _EstimateFeeRequest_default_instance_;
class EstimateFeeResponse;
struct EstimateFeeResponseDefaultTypeInternal;
extern EstimateFeeResponseDefaultTypeInternal _EstimateFeeResponse_default_instance_;
class FinalizePsbtRequest;
struct FinalizePsbtRequestDefaultTypeInternal;
extern FinalizePsbtRequestDefaultTypeInternal _FinalizePsbtRequest_default_instance_;
class FinalizePsbtResponse;
struct FinalizePsbtResponseDefaultTypeInternal;
extern FinalizePsbtResponseDefaultTypeInternal _FinalizePsbtResponse_default_instance_;
class FundPsbtRequest;
struct FundPsbtRequestDefaultTypeInternal;
extern FundPsbtRequestDefaultTypeInternal _FundPsbtRequest_default_instance_;
class FundPsbtResponse;
struct FundPsbtResponseDefaultTypeInternal;
extern FundPsbtResponseDefaultTypeInternal _FundPsbtResponse_default_instance_;
class GetTransactionRequest;
struct GetTransactionRequestDefaultTypeInternal;
extern GetTransactionRequestDefaultTypeInternal _GetTransactionRequest_default_instance_;
class ImportAccountRequest;
struct ImportAccountRequestDefaultTypeInternal;
extern ImportAccountRequestDefaultTypeInternal _ImportAccountRequest_default_instance_;
class ImportAccountResponse;
struct ImportAccountResponseDefaultTypeInternal;
extern ImportAccountResponseDefaultTypeInternal _ImportAccountResponse_default_instance_;
class ImportPublicKeyRequest;
struct ImportPublicKeyRequestDefaultTypeInternal;
extern ImportPublicKeyRequestDefaultTypeInternal _ImportPublicKeyRequest_default_instance_;
class ImportPublicKeyResponse;
struct ImportPublicKeyResponseDefaultTypeInternal;
extern ImportPublicKeyResponseDefaultTypeInternal _ImportPublicKeyResponse_default_instance_;
class ImportTapscriptRequest;
struct ImportTapscriptRequestDefaultTypeInternal;
extern ImportTapscriptRequestDefaultTypeInternal _ImportTapscriptRequest_default_instance_;
class ImportTapscriptResponse;
struct ImportTapscriptResponseDefaultTypeInternal;
extern ImportTapscriptResponseDefaultTypeInternal _ImportTapscriptResponse_default_instance_;
class KeyReq;
struct KeyReqDefaultTypeInternal;
extern KeyReqDefaultTypeInternal _KeyReq_default_instance_;
class LabelTransactionRequest;
struct LabelTransactionRequestDefaultTypeInternal;
extern LabelTransactionRequestDefaultTypeInternal _LabelTransactionRequest_default_instance_;
class LabelTransactionResponse;
struct LabelTransactionResponseDefaultTypeInternal;
extern LabelTransactionResponseDefaultTypeInternal _LabelTransactionResponse_default_instance_;
class LeaseOutputRequest;
struct LeaseOutputRequestDefaultTypeInternal;
extern LeaseOutputRequestDefaultTypeInternal _LeaseOutputRequest_default_instance_;
class LeaseOutputResponse;
struct LeaseOutputResponseDefaultTypeInternal;
extern LeaseOutputResponseDefaultTypeInternal _LeaseOutputResponse_default_instance_;
class ListAccountsRequest;
struct ListAccountsRequestDefaultTypeInternal;
extern ListAccountsRequestDefaultTypeInternal _ListAccountsRequest_default_instance_;
class ListAccountsResponse;
struct ListAccountsResponseDefaultTypeInternal;
extern ListAccountsResponseDefaultTypeInternal _ListAccountsResponse_default_instance_;
class ListAddressesRequest;
struct ListAddressesRequestDefaultTypeInternal;
extern ListAddressesRequestDefaultTypeInternal _ListAddressesRequest_default_instance_;
class ListAddressesResponse;
struct ListAddressesResponseDefaultTypeInternal;
extern ListAddressesResponseDefaultTypeInternal _ListAddressesResponse_default_instance_;
class ListLeasesRequest;
struct ListLeasesRequestDefaultTypeInternal;
extern ListLeasesRequestDefaultTypeInternal _ListLeasesRequest_default_instance_;
class ListLeasesResponse;
struct ListLeasesResponseDefaultTypeInternal;
extern ListLeasesResponseDefaultTypeInternal _ListLeasesResponse_default_instance_;
class ListSweepsRequest;
struct ListSweepsRequestDefaultTypeInternal;
extern ListSweepsRequestDefaultTypeInternal _ListSweepsRequest_default_instance_;
class ListSweepsResponse;
struct ListSweepsResponseDefaultTypeInternal;
extern ListSweepsResponseDefaultTypeInternal _ListSweepsResponse_default_instance_;
class ListSweepsResponse_TransactionIDs;
struct ListSweepsResponse_TransactionIDsDefaultTypeInternal;
extern ListSweepsResponse_TransactionIDsDefaultTypeInternal _ListSweepsResponse_TransactionIDs_default_instance_;
class ListUnspentRequest;
struct ListUnspentRequestDefaultTypeInternal;
extern ListUnspentRequestDefaultTypeInternal _ListUnspentRequest_default_instance_;
class ListUnspentResponse;
struct ListUnspentResponseDefaultTypeInternal;
extern ListUnspentResponseDefaultTypeInternal _ListUnspentResponse_default_instance_;
class PendingSweep;
struct PendingSweepDefaultTypeInternal;
extern PendingSweepDefaultTypeInternal _PendingSweep_default_instance_;
class PendingSweepsRequest;
struct PendingSweepsRequestDefaultTypeInternal;
extern PendingSweepsRequestDefaultTypeInternal _PendingSweepsRequest_default_instance_;
class PendingSweepsResponse;
struct PendingSweepsResponseDefaultTypeInternal;
extern PendingSweepsResponseDefaultTypeInternal _PendingSweepsResponse_default_instance_;
class PsbtCoinSelect;
struct PsbtCoinSelectDefaultTypeInternal;
extern PsbtCoinSelectDefaultTypeInternal _PsbtCoinSelect_default_instance_;
class PublishResponse;
struct PublishResponseDefaultTypeInternal;
extern PublishResponseDefaultTypeInternal _PublishResponse_default_instance_;
class ReleaseOutputRequest;
struct ReleaseOutputRequestDefaultTypeInternal;
extern ReleaseOutputRequestDefaultTypeInternal _ReleaseOutputRequest_default_instance_;
class ReleaseOutputResponse;
struct ReleaseOutputResponseDefaultTypeInternal;
extern ReleaseOutputResponseDefaultTypeInternal _ReleaseOutputResponse_default_instance_;
class RemoveTransactionResponse;
struct RemoveTransactionResponseDefaultTypeInternal;
extern RemoveTransactionResponseDefaultTypeInternal _RemoveTransactionResponse_default_instance_;
class RequiredReserveRequest;
struct RequiredReserveRequestDefaultTypeInternal;
extern RequiredReserveRequestDefaultTypeInternal _RequiredReserveRequest_default_instance_;
class RequiredReserveResponse;
struct RequiredReserveResponseDefaultTypeInternal;
extern RequiredReserveResponseDefaultTypeInternal _RequiredReserveResponse_default_instance_;
class SendOutputsRequest;
struct SendOutputsRequestDefaultTypeInternal;
extern SendOutputsRequestDefaultTypeInternal _SendOutputsRequest_default_instance_;
class SendOutputsResponse;
struct SendOutputsResponseDefaultTypeInternal;
extern SendOutputsResponseDefaultTypeInternal _SendOutputsResponse_default_instance_;
class SignMessageWithAddrRequest;
struct SignMessageWithAddrRequestDefaultTypeInternal;
extern SignMessageWithAddrRequestDefaultTypeInternal _SignMessageWithAddrRequest_default_instance_;
class SignMessageWithAddrResponse;
struct SignMessageWithAddrResponseDefaultTypeInternal;
extern SignMessageWithAddrResponseDefaultTypeInternal _SignMessageWithAddrResponse_default_instance_;
class SignPsbtRequest;
struct SignPsbtRequestDefaultTypeInternal;
extern SignPsbtRequestDefaultTypeInternal _SignPsbtRequest_default_instance_;
class SignPsbtResponse;
struct SignPsbtResponseDefaultTypeInternal;
extern SignPsbtResponseDefaultTypeInternal _SignPsbtResponse_default_instance_;
class TapLeaf;
struct TapLeafDefaultTypeInternal;
extern TapLeafDefaultTypeInternal _TapLeaf_default_instance_;
class TapscriptFullTree;
struct TapscriptFullTreeDefaultTypeInternal;
extern TapscriptFullTreeDefaultTypeInternal _TapscriptFullTree_default_instance_;
class TapscriptPartialReveal;
struct TapscriptPartialRevealDefaultTypeInternal;
extern TapscriptPartialRevealDefaultTypeInternal _TapscriptPartialReveal_default_instance_;
class Transaction;
struct TransactionDefaultTypeInternal;
extern TransactionDefaultTypeInternal _Transaction_default_instance_;
class TxTemplate;
struct TxTemplateDefaultTypeInternal;
extern TxTemplateDefaultTypeInternal _TxTemplate_default_instance_;
class TxTemplate_OutputsEntry_DoNotUse;
struct TxTemplate_OutputsEntry_DoNotUseDefaultTypeInternal;
extern TxTemplate_OutputsEntry_DoNotUseDefaultTypeInternal _TxTemplate_OutputsEntry_DoNotUse_default_instance_;
class UtxoLease;
struct UtxoLeaseDefaultTypeInternal;
extern UtxoLeaseDefaultTypeInternal _UtxoLease_default_instance_;
class VerifyMessageWithAddrRequest;
struct VerifyMessageWithAddrRequestDefaultTypeInternal;
extern VerifyMessageWithAddrRequestDefaultTypeInternal _VerifyMessageWithAddrRequest_default_instance_;
class VerifyMessageWithAddrResponse;
struct VerifyMessageWithAddrResponseDefaultTypeInternal;
extern VerifyMessageWithAddrResponseDefaultTypeInternal _VerifyMessageWithAddrResponse_default_instance_;
}  // namespace walletrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace walletrpc {
enum AddressType : int {
  UNKNOWN = 0,
  WITNESS_PUBKEY_HASH = 1,
  NESTED_WITNESS_PUBKEY_HASH = 2,
  HYBRID_NESTED_WITNESS_PUBKEY_HASH = 3,
  TAPROOT_PUBKEY = 4,
  AddressType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  AddressType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool AddressType_IsValid(int value);
extern const uint32_t AddressType_internal_data_[];
constexpr AddressType AddressType_MIN = static_cast<AddressType>(0);
constexpr AddressType AddressType_MAX = static_cast<AddressType>(4);
constexpr int AddressType_ARRAYSIZE = 4 + 1;
const ::google::protobuf::EnumDescriptor*
AddressType_descriptor();
template <typename T>
const std::string& AddressType_Name(T value) {
  static_assert(std::is_same<T, AddressType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to AddressType_Name().");
  return AddressType_Name(static_cast<AddressType>(value));
}
template <>
inline const std::string& AddressType_Name(AddressType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<AddressType_descriptor,
                                                 0, 4>(
      static_cast<int>(value));
}
inline bool AddressType_Parse(absl::string_view name, AddressType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AddressType>(
      AddressType_descriptor(), name, value);
}
enum WitnessType : int {
  UNKNOWN_WITNESS = 0,
  COMMITMENT_TIME_LOCK = 1,
  COMMITMENT_NO_DELAY = 2,
  COMMITMENT_REVOKE = 3,
  HTLC_OFFERED_REVOKE = 4,
  HTLC_ACCEPTED_REVOKE = 5,
  HTLC_OFFERED_TIMEOUT_SECOND_LEVEL = 6,
  HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL = 7,
  HTLC_OFFERED_REMOTE_TIMEOUT = 8,
  HTLC_ACCEPTED_REMOTE_SUCCESS = 9,
  HTLC_SECOND_LEVEL_REVOKE = 10,
  WITNESS_KEY_HASH = 11,
  NESTED_WITNESS_KEY_HASH = 12,
  COMMITMENT_ANCHOR = 13,
  COMMITMENT_NO_DELAY_TWEAKLESS = 14,
  COMMITMENT_TO_REMOTE_CONFIRMED = 15,
  HTLC_OFFERED_TIMEOUT_SECOND_LEVEL_INPUT_CONFIRMED = 16,
  HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL_INPUT_CONFIRMED = 17,
  LEASE_COMMITMENT_TIME_LOCK = 18,
  LEASE_COMMITMENT_TO_REMOTE_CONFIRMED = 19,
  LEASE_HTLC_OFFERED_TIMEOUT_SECOND_LEVEL = 20,
  LEASE_HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL = 21,
  TAPROOT_PUB_KEY_SPEND = 22,
  TAPROOT_LOCAL_COMMIT_SPEND = 23,
  TAPROOT_REMOTE_COMMIT_SPEND = 24,
  TAPROOT_ANCHOR_SWEEP_SPEND = 25,
  TAPROOT_HTLC_OFFERED_TIMEOUT_SECOND_LEVEL = 26,
  TAPROOT_HTLC_ACCEPTED_SUCCESS_SECOND_LEVEL = 27,
  TAPROOT_HTLC_SECOND_LEVEL_REVOKE = 28,
  TAPROOT_HTLC_ACCEPTED_REVOKE = 29,
  TAPROOT_HTLC_OFFERED_REVOKE = 30,
  TAPROOT_HTLC_OFFERED_REMOTE_TIMEOUT = 31,
  TAPROOT_HTLC_LOCAL_OFFERED_TIMEOUT = 32,
  TAPROOT_HTLC_ACCEPTED_REMOTE_SUCCESS = 33,
  TAPROOT_HTLC_ACCEPTED_LOCAL_SUCCESS = 34,
  TAPROOT_COMMITMENT_REVOKE = 35,
  WitnessType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WitnessType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WitnessType_IsValid(int value);
extern const uint32_t WitnessType_internal_data_[];
constexpr WitnessType WitnessType_MIN = static_cast<WitnessType>(0);
constexpr WitnessType WitnessType_MAX = static_cast<WitnessType>(35);
constexpr int WitnessType_ARRAYSIZE = 35 + 1;
const ::google::protobuf::EnumDescriptor*
WitnessType_descriptor();
template <typename T>
const std::string& WitnessType_Name(T value) {
  static_assert(std::is_same<T, WitnessType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to WitnessType_Name().");
  return WitnessType_Name(static_cast<WitnessType>(value));
}
template <>
inline const std::string& WitnessType_Name(WitnessType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WitnessType_descriptor,
                                                 0, 35>(
      static_cast<int>(value));
}
inline bool WitnessType_Parse(absl::string_view name, WitnessType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WitnessType>(
      WitnessType_descriptor(), name, value);
}
enum ChangeAddressType : int {
  CHANGE_ADDRESS_TYPE_UNSPECIFIED = 0,
  CHANGE_ADDRESS_TYPE_P2TR = 1,
  ChangeAddressType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  ChangeAddressType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool ChangeAddressType_IsValid(int value);
extern const uint32_t ChangeAddressType_internal_data_[];
constexpr ChangeAddressType ChangeAddressType_MIN = static_cast<ChangeAddressType>(0);
constexpr ChangeAddressType ChangeAddressType_MAX = static_cast<ChangeAddressType>(1);
constexpr int ChangeAddressType_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
ChangeAddressType_descriptor();
template <typename T>
const std::string& ChangeAddressType_Name(T value) {
  static_assert(std::is_same<T, ChangeAddressType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ChangeAddressType_Name().");
  return ChangeAddressType_Name(static_cast<ChangeAddressType>(value));
}
template <>
inline const std::string& ChangeAddressType_Name(ChangeAddressType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ChangeAddressType_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool ChangeAddressType_Parse(absl::string_view name, ChangeAddressType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ChangeAddressType>(
      ChangeAddressType_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class VerifyMessageWithAddrResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.VerifyMessageWithAddrResponse) */ {
 public:
  inline VerifyMessageWithAddrResponse() : VerifyMessageWithAddrResponse(nullptr) {}
  ~VerifyMessageWithAddrResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifyMessageWithAddrResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifyMessageWithAddrResponse(const VerifyMessageWithAddrResponse& from) : VerifyMessageWithAddrResponse(nullptr, from) {}
  inline VerifyMessageWithAddrResponse(VerifyMessageWithAddrResponse&& from) noexcept
      : VerifyMessageWithAddrResponse(nullptr, std::move(from)) {}
  inline VerifyMessageWithAddrResponse& operator=(const VerifyMessageWithAddrResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyMessageWithAddrResponse& operator=(VerifyMessageWithAddrResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyMessageWithAddrResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyMessageWithAddrResponse* internal_default_instance() {
    return reinterpret_cast<const VerifyMessageWithAddrResponse*>(
        &_VerifyMessageWithAddrResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(VerifyMessageWithAddrResponse& a, VerifyMessageWithAddrResponse& b) { a.Swap(&b); }
  inline void Swap(VerifyMessageWithAddrResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyMessageWithAddrResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifyMessageWithAddrResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<VerifyMessageWithAddrResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerifyMessageWithAddrResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerifyMessageWithAddrResponse& from) { VerifyMessageWithAddrResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VerifyMessageWithAddrResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.VerifyMessageWithAddrResponse"; }

 protected:
  explicit VerifyMessageWithAddrResponse(::google::protobuf::Arena* arena);
  VerifyMessageWithAddrResponse(::google::protobuf::Arena* arena, const VerifyMessageWithAddrResponse& from);
  VerifyMessageWithAddrResponse(::google::protobuf::Arena* arena, VerifyMessageWithAddrResponse&& from) noexcept
      : VerifyMessageWithAddrResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPubkeyFieldNumber = 2,
    kValidFieldNumber = 1,
  };
  // bytes pubkey = 2;
  void clear_pubkey() ;
  const std::string& pubkey() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pubkey(Arg_&& arg, Args_... args);
  std::string* mutable_pubkey();
  PROTOBUF_NODISCARD std::string* release_pubkey();
  void set_allocated_pubkey(std::string* value);

  private:
  const std::string& _internal_pubkey() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pubkey(
      const std::string& value);
  std::string* _internal_mutable_pubkey();

  public:
  // bool valid = 1;
  void clear_valid() ;
  bool valid() const;
  void set_valid(bool value);

  private:
  bool _internal_valid() const;
  void _internal_set_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.VerifyMessageWithAddrResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VerifyMessageWithAddrResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifyMessageWithAddrResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pubkey_;
    bool valid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class VerifyMessageWithAddrRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.VerifyMessageWithAddrRequest) */ {
 public:
  inline VerifyMessageWithAddrRequest() : VerifyMessageWithAddrRequest(nullptr) {}
  ~VerifyMessageWithAddrRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VerifyMessageWithAddrRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline VerifyMessageWithAddrRequest(const VerifyMessageWithAddrRequest& from) : VerifyMessageWithAddrRequest(nullptr, from) {}
  inline VerifyMessageWithAddrRequest(VerifyMessageWithAddrRequest&& from) noexcept
      : VerifyMessageWithAddrRequest(nullptr, std::move(from)) {}
  inline VerifyMessageWithAddrRequest& operator=(const VerifyMessageWithAddrRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline VerifyMessageWithAddrRequest& operator=(VerifyMessageWithAddrRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VerifyMessageWithAddrRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const VerifyMessageWithAddrRequest* internal_default_instance() {
    return reinterpret_cast<const VerifyMessageWithAddrRequest*>(
        &_VerifyMessageWithAddrRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(VerifyMessageWithAddrRequest& a, VerifyMessageWithAddrRequest& b) { a.Swap(&b); }
  inline void Swap(VerifyMessageWithAddrRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VerifyMessageWithAddrRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VerifyMessageWithAddrRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<VerifyMessageWithAddrRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VerifyMessageWithAddrRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VerifyMessageWithAddrRequest& from) { VerifyMessageWithAddrRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VerifyMessageWithAddrRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.VerifyMessageWithAddrRequest"; }

 protected:
  explicit VerifyMessageWithAddrRequest(::google::protobuf::Arena* arena);
  VerifyMessageWithAddrRequest(::google::protobuf::Arena* arena, const VerifyMessageWithAddrRequest& from);
  VerifyMessageWithAddrRequest(::google::protobuf::Arena* arena, VerifyMessageWithAddrRequest&& from) noexcept
      : VerifyMessageWithAddrRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
    kSignatureFieldNumber = 2,
    kAddrFieldNumber = 3,
  };
  // bytes msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string signature = 2;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // string addr = 3;
  void clear_addr() ;
  const std::string& addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addr(Arg_&& arg, Args_... args);
  std::string* mutable_addr();
  PROTOBUF_NODISCARD std::string* release_addr();
  void set_allocated_addr(std::string* value);

  private:
  const std::string& _internal_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addr(
      const std::string& value);
  std::string* _internal_mutable_addr();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.VerifyMessageWithAddrRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      60, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VerifyMessageWithAddrRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VerifyMessageWithAddrRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr signature_;
    ::google::protobuf::internal::ArenaStringPtr addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class TxTemplate_OutputsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TxTemplate_OutputsEntry_DoNotUse, std::string, ::uint64_t,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_UINT64> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TxTemplate_OutputsEntry_DoNotUse, std::string, ::uint64_t,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>;
  TxTemplate_OutputsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxTemplate_OutputsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TxTemplate_OutputsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TxTemplate_OutputsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TxTemplate_OutputsEntry_DoNotUse*>(
        &_TxTemplate_OutputsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      45, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class Transaction final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.Transaction) */ {
 public:
  inline Transaction() : Transaction(nullptr) {}
  ~Transaction() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Transaction(
      ::google::protobuf::internal::ConstantInitialized);

  inline Transaction(const Transaction& from) : Transaction(nullptr, from) {}
  inline Transaction(Transaction&& from) noexcept
      : Transaction(nullptr, std::move(from)) {}
  inline Transaction& operator=(const Transaction& from) {
    CopyFrom(from);
    return *this;
  }
  inline Transaction& operator=(Transaction&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Transaction& default_instance() {
    return *internal_default_instance();
  }
  static inline const Transaction* internal_default_instance() {
    return reinterpret_cast<const Transaction*>(
        &_Transaction_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(Transaction& a, Transaction& b) { a.Swap(&b); }
  inline void Swap(Transaction* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Transaction* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Transaction* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Transaction>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Transaction& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Transaction& from) { Transaction::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Transaction* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.Transaction"; }

 protected:
  explicit Transaction(::google::protobuf::Arena* arena);
  Transaction(::google::protobuf::Arena* arena, const Transaction& from);
  Transaction(::google::protobuf::Arena* arena, Transaction&& from) noexcept
      : Transaction(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxHexFieldNumber = 1,
    kLabelFieldNumber = 2,
  };
  // bytes tx_hex = 1;
  void clear_tx_hex() ;
  const std::string& tx_hex() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tx_hex(Arg_&& arg, Args_... args);
  std::string* mutable_tx_hex();
  PROTOBUF_NODISCARD std::string* release_tx_hex();
  void set_allocated_tx_hex(std::string* value);

  private:
  const std::string& _internal_tx_hex() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tx_hex(
      const std::string& value);
  std::string* _internal_mutable_tx_hex();

  public:
  // string label = 2;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.Transaction)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Transaction_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Transaction& from_msg);
    ::google::protobuf::internal::ArenaStringPtr tx_hex_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class TapLeaf final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.TapLeaf) */ {
 public:
  inline TapLeaf() : TapLeaf(nullptr) {}
  ~TapLeaf() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TapLeaf(
      ::google::protobuf::internal::ConstantInitialized);

  inline TapLeaf(const TapLeaf& from) : TapLeaf(nullptr, from) {}
  inline TapLeaf(TapLeaf&& from) noexcept
      : TapLeaf(nullptr, std::move(from)) {}
  inline TapLeaf& operator=(const TapLeaf& from) {
    CopyFrom(from);
    return *this;
  }
  inline TapLeaf& operator=(TapLeaf&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TapLeaf& default_instance() {
    return *internal_default_instance();
  }
  static inline const TapLeaf* internal_default_instance() {
    return reinterpret_cast<const TapLeaf*>(
        &_TapLeaf_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(TapLeaf& a, TapLeaf& b) { a.Swap(&b); }
  inline void Swap(TapLeaf* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TapLeaf* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TapLeaf* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TapLeaf>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TapLeaf& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TapLeaf& from) { TapLeaf::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TapLeaf* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.TapLeaf"; }

 protected:
  explicit TapLeaf(::google::protobuf::Arena* arena);
  TapLeaf(::google::protobuf::Arena* arena, const TapLeaf& from);
  TapLeaf(::google::protobuf::Arena* arena, TapLeaf&& from) noexcept
      : TapLeaf(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kScriptFieldNumber = 2,
    kLeafVersionFieldNumber = 1,
  };
  // bytes script = 2;
  void clear_script() ;
  const std::string& script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_script(Arg_&& arg, Args_... args);
  std::string* mutable_script();
  PROTOBUF_NODISCARD std::string* release_script();
  void set_allocated_script(std::string* value);

  private:
  const std::string& _internal_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_script(
      const std::string& value);
  std::string* _internal_mutable_script();

  public:
  // uint32 leaf_version = 1;
  void clear_leaf_version() ;
  ::uint32_t leaf_version() const;
  void set_leaf_version(::uint32_t value);

  private:
  ::uint32_t _internal_leaf_version() const;
  void _internal_set_leaf_version(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.TapLeaf)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TapLeaf_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TapLeaf& from_msg);
    ::google::protobuf::internal::ArenaStringPtr script_;
    ::uint32_t leaf_version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class SignPsbtResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.SignPsbtResponse) */ {
 public:
  inline SignPsbtResponse() : SignPsbtResponse(nullptr) {}
  ~SignPsbtResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignPsbtResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignPsbtResponse(const SignPsbtResponse& from) : SignPsbtResponse(nullptr, from) {}
  inline SignPsbtResponse(SignPsbtResponse&& from) noexcept
      : SignPsbtResponse(nullptr, std::move(from)) {}
  inline SignPsbtResponse& operator=(const SignPsbtResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignPsbtResponse& operator=(SignPsbtResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignPsbtResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignPsbtResponse* internal_default_instance() {
    return reinterpret_cast<const SignPsbtResponse*>(
        &_SignPsbtResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(SignPsbtResponse& a, SignPsbtResponse& b) { a.Swap(&b); }
  inline void Swap(SignPsbtResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignPsbtResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignPsbtResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SignPsbtResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignPsbtResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignPsbtResponse& from) { SignPsbtResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignPsbtResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.SignPsbtResponse"; }

 protected:
  explicit SignPsbtResponse(::google::protobuf::Arena* arena);
  SignPsbtResponse(::google::protobuf::Arena* arena, const SignPsbtResponse& from);
  SignPsbtResponse(::google::protobuf::Arena* arena, SignPsbtResponse&& from) noexcept
      : SignPsbtResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignedInputsFieldNumber = 2,
    kSignedPsbtFieldNumber = 1,
  };
  // repeated uint32 signed_inputs = 2;
  int signed_inputs_size() const;
  private:
  int _internal_signed_inputs_size() const;

  public:
  void clear_signed_inputs() ;
  ::uint32_t signed_inputs(int index) const;
  void set_signed_inputs(int index, ::uint32_t value);
  void add_signed_inputs(::uint32_t value);
  const ::google::protobuf::RepeatedField<::uint32_t>& signed_inputs() const;
  ::google::protobuf::RepeatedField<::uint32_t>* mutable_signed_inputs();

  private:
  const ::google::protobuf::RepeatedField<::uint32_t>& _internal_signed_inputs() const;
  ::google::protobuf::RepeatedField<::uint32_t>* _internal_mutable_signed_inputs();

  public:
  // bytes signed_psbt = 1;
  void clear_signed_psbt() ;
  const std::string& signed_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signed_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_signed_psbt();
  PROTOBUF_NODISCARD std::string* release_signed_psbt();
  void set_allocated_signed_psbt(std::string* value);

  private:
  const std::string& _internal_signed_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signed_psbt(
      const std::string& value);
  std::string* _internal_mutable_signed_psbt();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.SignPsbtResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SignPsbtResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignPsbtResponse& from_msg);
    ::google::protobuf::RepeatedField<::uint32_t> signed_inputs_;
    mutable ::google::protobuf::internal::CachedSize _signed_inputs_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr signed_psbt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class SignPsbtRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.SignPsbtRequest) */ {
 public:
  inline SignPsbtRequest() : SignPsbtRequest(nullptr) {}
  ~SignPsbtRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignPsbtRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignPsbtRequest(const SignPsbtRequest& from) : SignPsbtRequest(nullptr, from) {}
  inline SignPsbtRequest(SignPsbtRequest&& from) noexcept
      : SignPsbtRequest(nullptr, std::move(from)) {}
  inline SignPsbtRequest& operator=(const SignPsbtRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignPsbtRequest& operator=(SignPsbtRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignPsbtRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignPsbtRequest* internal_default_instance() {
    return reinterpret_cast<const SignPsbtRequest*>(
        &_SignPsbtRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(SignPsbtRequest& a, SignPsbtRequest& b) { a.Swap(&b); }
  inline void Swap(SignPsbtRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignPsbtRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignPsbtRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SignPsbtRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignPsbtRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignPsbtRequest& from) { SignPsbtRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignPsbtRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.SignPsbtRequest"; }

 protected:
  explicit SignPsbtRequest(::google::protobuf::Arena* arena);
  SignPsbtRequest(::google::protobuf::Arena* arena, const SignPsbtRequest& from);
  SignPsbtRequest(::google::protobuf::Arena* arena, SignPsbtRequest&& from) noexcept
      : SignPsbtRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundedPsbtFieldNumber = 1,
  };
  // bytes funded_psbt = 1;
  void clear_funded_psbt() ;
  const std::string& funded_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funded_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_funded_psbt();
  PROTOBUF_NODISCARD std::string* release_funded_psbt();
  void set_allocated_funded_psbt(std::string* value);

  private:
  const std::string& _internal_funded_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funded_psbt(
      const std::string& value);
  std::string* _internal_mutable_funded_psbt();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.SignPsbtRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SignPsbtRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignPsbtRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr funded_psbt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class SignMessageWithAddrResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.SignMessageWithAddrResponse) */ {
 public:
  inline SignMessageWithAddrResponse() : SignMessageWithAddrResponse(nullptr) {}
  ~SignMessageWithAddrResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignMessageWithAddrResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignMessageWithAddrResponse(const SignMessageWithAddrResponse& from) : SignMessageWithAddrResponse(nullptr, from) {}
  inline SignMessageWithAddrResponse(SignMessageWithAddrResponse&& from) noexcept
      : SignMessageWithAddrResponse(nullptr, std::move(from)) {}
  inline SignMessageWithAddrResponse& operator=(const SignMessageWithAddrResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignMessageWithAddrResponse& operator=(SignMessageWithAddrResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignMessageWithAddrResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignMessageWithAddrResponse* internal_default_instance() {
    return reinterpret_cast<const SignMessageWithAddrResponse*>(
        &_SignMessageWithAddrResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(SignMessageWithAddrResponse& a, SignMessageWithAddrResponse& b) { a.Swap(&b); }
  inline void Swap(SignMessageWithAddrResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignMessageWithAddrResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignMessageWithAddrResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SignMessageWithAddrResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignMessageWithAddrResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignMessageWithAddrResponse& from) { SignMessageWithAddrResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignMessageWithAddrResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.SignMessageWithAddrResponse"; }

 protected:
  explicit SignMessageWithAddrResponse(::google::protobuf::Arena* arena);
  SignMessageWithAddrResponse(::google::protobuf::Arena* arena, const SignMessageWithAddrResponse& from);
  SignMessageWithAddrResponse(::google::protobuf::Arena* arena, SignMessageWithAddrResponse&& from) noexcept
      : SignMessageWithAddrResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignatureFieldNumber = 1,
  };
  // string signature = 1;
  void clear_signature() ;
  const std::string& signature() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signature(Arg_&& arg, Args_... args);
  std::string* mutable_signature();
  PROTOBUF_NODISCARD std::string* release_signature();
  void set_allocated_signature(std::string* value);

  private:
  const std::string& _internal_signature() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signature(
      const std::string& value);
  std::string* _internal_mutable_signature();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.SignMessageWithAddrResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SignMessageWithAddrResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignMessageWithAddrResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signature_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class SignMessageWithAddrRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.SignMessageWithAddrRequest) */ {
 public:
  inline SignMessageWithAddrRequest() : SignMessageWithAddrRequest(nullptr) {}
  ~SignMessageWithAddrRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SignMessageWithAddrRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SignMessageWithAddrRequest(const SignMessageWithAddrRequest& from) : SignMessageWithAddrRequest(nullptr, from) {}
  inline SignMessageWithAddrRequest(SignMessageWithAddrRequest&& from) noexcept
      : SignMessageWithAddrRequest(nullptr, std::move(from)) {}
  inline SignMessageWithAddrRequest& operator=(const SignMessageWithAddrRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SignMessageWithAddrRequest& operator=(SignMessageWithAddrRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SignMessageWithAddrRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SignMessageWithAddrRequest* internal_default_instance() {
    return reinterpret_cast<const SignMessageWithAddrRequest*>(
        &_SignMessageWithAddrRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(SignMessageWithAddrRequest& a, SignMessageWithAddrRequest& b) { a.Swap(&b); }
  inline void Swap(SignMessageWithAddrRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SignMessageWithAddrRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SignMessageWithAddrRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SignMessageWithAddrRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SignMessageWithAddrRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SignMessageWithAddrRequest& from) { SignMessageWithAddrRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SignMessageWithAddrRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.SignMessageWithAddrRequest"; }

 protected:
  explicit SignMessageWithAddrRequest(::google::protobuf::Arena* arena);
  SignMessageWithAddrRequest(::google::protobuf::Arena* arena, const SignMessageWithAddrRequest& from);
  SignMessageWithAddrRequest(::google::protobuf::Arena* arena, SignMessageWithAddrRequest&& from) noexcept
      : SignMessageWithAddrRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
    kAddrFieldNumber = 2,
  };
  // bytes msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // string addr = 2;
  void clear_addr() ;
  const std::string& addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addr(Arg_&& arg, Args_... args);
  std::string* mutable_addr();
  PROTOBUF_NODISCARD std::string* release_addr();
  void set_allocated_addr(std::string* value);

  private:
  const std::string& _internal_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addr(
      const std::string& value);
  std::string* _internal_mutable_addr();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.SignMessageWithAddrRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SignMessageWithAddrRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SignMessageWithAddrRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::google::protobuf::internal::ArenaStringPtr addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class SendOutputsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.SendOutputsResponse) */ {
 public:
  inline SendOutputsResponse() : SendOutputsResponse(nullptr) {}
  ~SendOutputsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendOutputsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendOutputsResponse(const SendOutputsResponse& from) : SendOutputsResponse(nullptr, from) {}
  inline SendOutputsResponse(SendOutputsResponse&& from) noexcept
      : SendOutputsResponse(nullptr, std::move(from)) {}
  inline SendOutputsResponse& operator=(const SendOutputsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendOutputsResponse& operator=(SendOutputsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendOutputsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendOutputsResponse* internal_default_instance() {
    return reinterpret_cast<const SendOutputsResponse*>(
        &_SendOutputsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(SendOutputsResponse& a, SendOutputsResponse& b) { a.Swap(&b); }
  inline void Swap(SendOutputsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendOutputsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendOutputsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendOutputsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendOutputsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendOutputsResponse& from) { SendOutputsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendOutputsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.SendOutputsResponse"; }

 protected:
  explicit SendOutputsResponse(::google::protobuf::Arena* arena);
  SendOutputsResponse(::google::protobuf::Arena* arena, const SendOutputsResponse& from);
  SendOutputsResponse(::google::protobuf::Arena* arena, SendOutputsResponse&& from) noexcept
      : SendOutputsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawTxFieldNumber = 1,
  };
  // bytes raw_tx = 1;
  void clear_raw_tx() ;
  const std::string& raw_tx() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_tx(Arg_&& arg, Args_... args);
  std::string* mutable_raw_tx();
  PROTOBUF_NODISCARD std::string* release_raw_tx();
  void set_allocated_raw_tx(std::string* value);

  private:
  const std::string& _internal_raw_tx() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_tx(
      const std::string& value);
  std::string* _internal_mutable_raw_tx();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.SendOutputsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendOutputsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendOutputsResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr raw_tx_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class RequiredReserveResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.RequiredReserveResponse) */ {
 public:
  inline RequiredReserveResponse() : RequiredReserveResponse(nullptr) {}
  ~RequiredReserveResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequiredReserveResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequiredReserveResponse(const RequiredReserveResponse& from) : RequiredReserveResponse(nullptr, from) {}
  inline RequiredReserveResponse(RequiredReserveResponse&& from) noexcept
      : RequiredReserveResponse(nullptr, std::move(from)) {}
  inline RequiredReserveResponse& operator=(const RequiredReserveResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequiredReserveResponse& operator=(RequiredReserveResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequiredReserveResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequiredReserveResponse* internal_default_instance() {
    return reinterpret_cast<const RequiredReserveResponse*>(
        &_RequiredReserveResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(RequiredReserveResponse& a, RequiredReserveResponse& b) { a.Swap(&b); }
  inline void Swap(RequiredReserveResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequiredReserveResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequiredReserveResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RequiredReserveResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequiredReserveResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequiredReserveResponse& from) { RequiredReserveResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequiredReserveResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.RequiredReserveResponse"; }

 protected:
  explicit RequiredReserveResponse(::google::protobuf::Arena* arena);
  RequiredReserveResponse(::google::protobuf::Arena* arena, const RequiredReserveResponse& from);
  RequiredReserveResponse(::google::protobuf::Arena* arena, RequiredReserveResponse&& from) noexcept
      : RequiredReserveResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRequiredReserveFieldNumber = 1,
  };
  // int64 required_reserve = 1;
  void clear_required_reserve() ;
  ::int64_t required_reserve() const;
  void set_required_reserve(::int64_t value);

  private:
  ::int64_t _internal_required_reserve() const;
  void _internal_set_required_reserve(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.RequiredReserveResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequiredReserveResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequiredReserveResponse& from_msg);
    ::int64_t required_reserve_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class RequiredReserveRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.RequiredReserveRequest) */ {
 public:
  inline RequiredReserveRequest() : RequiredReserveRequest(nullptr) {}
  ~RequiredReserveRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RequiredReserveRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RequiredReserveRequest(const RequiredReserveRequest& from) : RequiredReserveRequest(nullptr, from) {}
  inline RequiredReserveRequest(RequiredReserveRequest&& from) noexcept
      : RequiredReserveRequest(nullptr, std::move(from)) {}
  inline RequiredReserveRequest& operator=(const RequiredReserveRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RequiredReserveRequest& operator=(RequiredReserveRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RequiredReserveRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RequiredReserveRequest* internal_default_instance() {
    return reinterpret_cast<const RequiredReserveRequest*>(
        &_RequiredReserveRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(RequiredReserveRequest& a, RequiredReserveRequest& b) { a.Swap(&b); }
  inline void Swap(RequiredReserveRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RequiredReserveRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RequiredReserveRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RequiredReserveRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RequiredReserveRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RequiredReserveRequest& from) { RequiredReserveRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RequiredReserveRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.RequiredReserveRequest"; }

 protected:
  explicit RequiredReserveRequest(::google::protobuf::Arena* arena);
  RequiredReserveRequest(::google::protobuf::Arena* arena, const RequiredReserveRequest& from);
  RequiredReserveRequest(::google::protobuf::Arena* arena, RequiredReserveRequest&& from) noexcept
      : RequiredReserveRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAdditionalPublicChannelsFieldNumber = 1,
  };
  // uint32 additional_public_channels = 1;
  void clear_additional_public_channels() ;
  ::uint32_t additional_public_channels() const;
  void set_additional_public_channels(::uint32_t value);

  private:
  ::uint32_t _internal_additional_public_channels() const;
  void _internal_set_additional_public_channels(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.RequiredReserveRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RequiredReserveRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RequiredReserveRequest& from_msg);
    ::uint32_t additional_public_channels_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class RemoveTransactionResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.RemoveTransactionResponse) */ {
 public:
  inline RemoveTransactionResponse() : RemoveTransactionResponse(nullptr) {}
  ~RemoveTransactionResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveTransactionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveTransactionResponse(const RemoveTransactionResponse& from) : RemoveTransactionResponse(nullptr, from) {}
  inline RemoveTransactionResponse(RemoveTransactionResponse&& from) noexcept
      : RemoveTransactionResponse(nullptr, std::move(from)) {}
  inline RemoveTransactionResponse& operator=(const RemoveTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveTransactionResponse& operator=(RemoveTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const RemoveTransactionResponse*>(
        &_RemoveTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(RemoveTransactionResponse& a, RemoveTransactionResponse& b) { a.Swap(&b); }
  inline void Swap(RemoveTransactionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveTransactionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveTransactionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<RemoveTransactionResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveTransactionResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveTransactionResponse& from) { RemoveTransactionResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RemoveTransactionResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.RemoveTransactionResponse"; }

 protected:
  explicit RemoveTransactionResponse(::google::protobuf::Arena* arena);
  RemoveTransactionResponse(::google::protobuf::Arena* arena, const RemoveTransactionResponse& from);
  RemoveTransactionResponse(::google::protobuf::Arena* arena, RemoveTransactionResponse&& from) noexcept
      : RemoveTransactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // string status = 1;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.RemoveTransactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RemoveTransactionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveTransactionResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ReleaseOutputResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:walletrpc.ReleaseOutputResponse) */ {
 public:
  inline ReleaseOutputResponse() : ReleaseOutputResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReleaseOutputResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReleaseOutputResponse(const ReleaseOutputResponse& from) : ReleaseOutputResponse(nullptr, from) {}
  inline ReleaseOutputResponse(ReleaseOutputResponse&& from) noexcept
      : ReleaseOutputResponse(nullptr, std::move(from)) {}
  inline ReleaseOutputResponse& operator=(const ReleaseOutputResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReleaseOutputResponse& operator=(ReleaseOutputResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReleaseOutputResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReleaseOutputResponse* internal_default_instance() {
    return reinterpret_cast<const ReleaseOutputResponse*>(
        &_ReleaseOutputResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ReleaseOutputResponse& a, ReleaseOutputResponse& b) { a.Swap(&b); }
  inline void Swap(ReleaseOutputResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReleaseOutputResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReleaseOutputResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ReleaseOutputResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReleaseOutputResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReleaseOutputResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ReleaseOutputResponse"; }

 protected:
  explicit ReleaseOutputResponse(::google::protobuf::Arena* arena);
  ReleaseOutputResponse(::google::protobuf::Arena* arena, const ReleaseOutputResponse& from);
  ReleaseOutputResponse(::google::protobuf::Arena* arena, ReleaseOutputResponse&& from) noexcept
      : ReleaseOutputResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:walletrpc.ReleaseOutputResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReleaseOutputResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReleaseOutputResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class PublishResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.PublishResponse) */ {
 public:
  inline PublishResponse() : PublishResponse(nullptr) {}
  ~PublishResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PublishResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PublishResponse(const PublishResponse& from) : PublishResponse(nullptr, from) {}
  inline PublishResponse(PublishResponse&& from) noexcept
      : PublishResponse(nullptr, std::move(from)) {}
  inline PublishResponse& operator=(const PublishResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PublishResponse& operator=(PublishResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PublishResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PublishResponse* internal_default_instance() {
    return reinterpret_cast<const PublishResponse*>(
        &_PublishResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(PublishResponse& a, PublishResponse& b) { a.Swap(&b); }
  inline void Swap(PublishResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PublishResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PublishResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PublishResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PublishResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PublishResponse& from) { PublishResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PublishResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.PublishResponse"; }

 protected:
  explicit PublishResponse(::google::protobuf::Arena* arena);
  PublishResponse(::google::protobuf::Arena* arena, const PublishResponse& from);
  PublishResponse(::google::protobuf::Arena* arena, PublishResponse&& from) noexcept
      : PublishResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPublishErrorFieldNumber = 1,
  };
  // string publish_error = 1;
  void clear_publish_error() ;
  const std::string& publish_error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_publish_error(Arg_&& arg, Args_... args);
  std::string* mutable_publish_error();
  PROTOBUF_NODISCARD std::string* release_publish_error();
  void set_allocated_publish_error(std::string* value);

  private:
  const std::string& _internal_publish_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_publish_error(
      const std::string& value);
  std::string* _internal_mutable_publish_error();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.PublishResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PublishResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PublishResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr publish_error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class PsbtCoinSelect final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.PsbtCoinSelect) */ {
 public:
  inline PsbtCoinSelect() : PsbtCoinSelect(nullptr) {}
  ~PsbtCoinSelect() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PsbtCoinSelect(
      ::google::protobuf::internal::ConstantInitialized);

  inline PsbtCoinSelect(const PsbtCoinSelect& from) : PsbtCoinSelect(nullptr, from) {}
  inline PsbtCoinSelect(PsbtCoinSelect&& from) noexcept
      : PsbtCoinSelect(nullptr, std::move(from)) {}
  inline PsbtCoinSelect& operator=(const PsbtCoinSelect& from) {
    CopyFrom(from);
    return *this;
  }
  inline PsbtCoinSelect& operator=(PsbtCoinSelect&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PsbtCoinSelect& default_instance() {
    return *internal_default_instance();
  }
  enum ChangeOutputCase {
    kExistingOutputIndex = 2,
    kAdd = 3,
    CHANGE_OUTPUT_NOT_SET = 0,
  };
  static inline const PsbtCoinSelect* internal_default_instance() {
    return reinterpret_cast<const PsbtCoinSelect*>(
        &_PsbtCoinSelect_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(PsbtCoinSelect& a, PsbtCoinSelect& b) { a.Swap(&b); }
  inline void Swap(PsbtCoinSelect* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PsbtCoinSelect* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PsbtCoinSelect* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PsbtCoinSelect>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PsbtCoinSelect& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PsbtCoinSelect& from) { PsbtCoinSelect::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PsbtCoinSelect* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.PsbtCoinSelect"; }

 protected:
  explicit PsbtCoinSelect(::google::protobuf::Arena* arena);
  PsbtCoinSelect(::google::protobuf::Arena* arena, const PsbtCoinSelect& from);
  PsbtCoinSelect(::google::protobuf::Arena* arena, PsbtCoinSelect&& from) noexcept
      : PsbtCoinSelect(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPsbtFieldNumber = 1,
    kExistingOutputIndexFieldNumber = 2,
    kAddFieldNumber = 3,
  };
  // bytes psbt = 1;
  void clear_psbt() ;
  const std::string& psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_psbt();
  PROTOBUF_NODISCARD std::string* release_psbt();
  void set_allocated_psbt(std::string* value);

  private:
  const std::string& _internal_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_psbt(
      const std::string& value);
  std::string* _internal_mutable_psbt();

  public:
  // int32 existing_output_index = 2;
  bool has_existing_output_index() const;
  void clear_existing_output_index() ;
  ::int32_t existing_output_index() const;
  void set_existing_output_index(::int32_t value);

  private:
  ::int32_t _internal_existing_output_index() const;
  void _internal_set_existing_output_index(::int32_t value);

  public:
  // bool add = 3;
  bool has_add() const;
  void clear_add() ;
  bool add() const;
  void set_add(bool value);

  private:
  bool _internal_add() const;
  void _internal_set_add(bool value);

  public:
  void clear_change_output();
  ChangeOutputCase change_output_case() const;
  // @@protoc_insertion_point(class_scope:walletrpc.PsbtCoinSelect)
 private:
  class _Internal;
  void set_has_existing_output_index();
  void set_has_add();
  inline bool has_change_output() const;
  inline void clear_has_change_output();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PsbtCoinSelect_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PsbtCoinSelect& from_msg);
    ::google::protobuf::internal::ArenaStringPtr psbt_;
    union ChangeOutputUnion {
      constexpr ChangeOutputUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::int32_t existing_output_index_;
      bool add_;
    } change_output_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class PendingSweepsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:walletrpc.PendingSweepsRequest) */ {
 public:
  inline PendingSweepsRequest() : PendingSweepsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingSweepsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingSweepsRequest(const PendingSweepsRequest& from) : PendingSweepsRequest(nullptr, from) {}
  inline PendingSweepsRequest(PendingSweepsRequest&& from) noexcept
      : PendingSweepsRequest(nullptr, std::move(from)) {}
  inline PendingSweepsRequest& operator=(const PendingSweepsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingSweepsRequest& operator=(PendingSweepsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingSweepsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingSweepsRequest* internal_default_instance() {
    return reinterpret_cast<const PendingSweepsRequest*>(
        &_PendingSweepsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(PendingSweepsRequest& a, PendingSweepsRequest& b) { a.Swap(&b); }
  inline void Swap(PendingSweepsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingSweepsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingSweepsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<PendingSweepsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PendingSweepsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PendingSweepsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.PendingSweepsRequest"; }

 protected:
  explicit PendingSweepsRequest(::google::protobuf::Arena* arena);
  PendingSweepsRequest(::google::protobuf::Arena* arena, const PendingSweepsRequest& from);
  PendingSweepsRequest(::google::protobuf::Arena* arena, PendingSweepsRequest&& from) noexcept
      : PendingSweepsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:walletrpc.PendingSweepsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingSweepsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingSweepsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListUnspentRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListUnspentRequest) */ {
 public:
  inline ListUnspentRequest() : ListUnspentRequest(nullptr) {}
  ~ListUnspentRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListUnspentRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListUnspentRequest(const ListUnspentRequest& from) : ListUnspentRequest(nullptr, from) {}
  inline ListUnspentRequest(ListUnspentRequest&& from) noexcept
      : ListUnspentRequest(nullptr, std::move(from)) {}
  inline ListUnspentRequest& operator=(const ListUnspentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListUnspentRequest& operator=(ListUnspentRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListUnspentRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListUnspentRequest* internal_default_instance() {
    return reinterpret_cast<const ListUnspentRequest*>(
        &_ListUnspentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListUnspentRequest& a, ListUnspentRequest& b) { a.Swap(&b); }
  inline void Swap(ListUnspentRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListUnspentRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListUnspentRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListUnspentRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListUnspentRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListUnspentRequest& from) { ListUnspentRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListUnspentRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListUnspentRequest"; }

 protected:
  explicit ListUnspentRequest(::google::protobuf::Arena* arena);
  ListUnspentRequest(::google::protobuf::Arena* arena, const ListUnspentRequest& from);
  ListUnspentRequest(::google::protobuf::Arena* arena, ListUnspentRequest&& from) noexcept
      : ListUnspentRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 3,
    kMinConfsFieldNumber = 1,
    kMaxConfsFieldNumber = 2,
    kUnconfirmedOnlyFieldNumber = 4,
  };
  // string account = 3;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // int32 min_confs = 1;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // int32 max_confs = 2;
  void clear_max_confs() ;
  ::int32_t max_confs() const;
  void set_max_confs(::int32_t value);

  private:
  ::int32_t _internal_max_confs() const;
  void _internal_set_max_confs(::int32_t value);

  public:
  // bool unconfirmed_only = 4;
  void clear_unconfirmed_only() ;
  bool unconfirmed_only() const;
  void set_unconfirmed_only(bool value);

  private:
  bool _internal_unconfirmed_only() const;
  void _internal_set_unconfirmed_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ListUnspentRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListUnspentRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListUnspentRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::int32_t min_confs_;
    ::int32_t max_confs_;
    bool unconfirmed_only_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListSweepsResponse_TransactionIDs final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListSweepsResponse.TransactionIDs) */ {
 public:
  inline ListSweepsResponse_TransactionIDs() : ListSweepsResponse_TransactionIDs(nullptr) {}
  ~ListSweepsResponse_TransactionIDs() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSweepsResponse_TransactionIDs(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSweepsResponse_TransactionIDs(const ListSweepsResponse_TransactionIDs& from) : ListSweepsResponse_TransactionIDs(nullptr, from) {}
  inline ListSweepsResponse_TransactionIDs(ListSweepsResponse_TransactionIDs&& from) noexcept
      : ListSweepsResponse_TransactionIDs(nullptr, std::move(from)) {}
  inline ListSweepsResponse_TransactionIDs& operator=(const ListSweepsResponse_TransactionIDs& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSweepsResponse_TransactionIDs& operator=(ListSweepsResponse_TransactionIDs&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSweepsResponse_TransactionIDs& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSweepsResponse_TransactionIDs* internal_default_instance() {
    return reinterpret_cast<const ListSweepsResponse_TransactionIDs*>(
        &_ListSweepsResponse_TransactionIDs_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(ListSweepsResponse_TransactionIDs& a, ListSweepsResponse_TransactionIDs& b) { a.Swap(&b); }
  inline void Swap(ListSweepsResponse_TransactionIDs* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSweepsResponse_TransactionIDs* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSweepsResponse_TransactionIDs* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListSweepsResponse_TransactionIDs>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSweepsResponse_TransactionIDs& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSweepsResponse_TransactionIDs& from) { ListSweepsResponse_TransactionIDs::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListSweepsResponse_TransactionIDs* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListSweepsResponse.TransactionIDs"; }

 protected:
  explicit ListSweepsResponse_TransactionIDs(::google::protobuf::Arena* arena);
  ListSweepsResponse_TransactionIDs(::google::protobuf::Arena* arena, const ListSweepsResponse_TransactionIDs& from);
  ListSweepsResponse_TransactionIDs(::google::protobuf::Arena* arena, ListSweepsResponse_TransactionIDs&& from) noexcept
      : ListSweepsResponse_TransactionIDs(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransactionIdsFieldNumber = 1,
  };
  // repeated string transaction_ids = 1;
  int transaction_ids_size() const;
  private:
  int _internal_transaction_ids_size() const;

  public:
  void clear_transaction_ids() ;
  const std::string& transaction_ids(int index) const;
  std::string* mutable_transaction_ids(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transaction_ids(int index, Arg_&& value, Args_... args);
  std::string* add_transaction_ids();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_transaction_ids(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& transaction_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_transaction_ids();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_transaction_ids() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_transaction_ids();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ListSweepsResponse.TransactionIDs)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListSweepsResponse_TransactionIDs_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSweepsResponse_TransactionIDs& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> transaction_ids_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListSweepsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListSweepsRequest) */ {
 public:
  inline ListSweepsRequest() : ListSweepsRequest(nullptr) {}
  ~ListSweepsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSweepsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSweepsRequest(const ListSweepsRequest& from) : ListSweepsRequest(nullptr, from) {}
  inline ListSweepsRequest(ListSweepsRequest&& from) noexcept
      : ListSweepsRequest(nullptr, std::move(from)) {}
  inline ListSweepsRequest& operator=(const ListSweepsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSweepsRequest& operator=(ListSweepsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSweepsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListSweepsRequest* internal_default_instance() {
    return reinterpret_cast<const ListSweepsRequest*>(
        &_ListSweepsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 46;
  friend void swap(ListSweepsRequest& a, ListSweepsRequest& b) { a.Swap(&b); }
  inline void Swap(ListSweepsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSweepsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSweepsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListSweepsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSweepsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSweepsRequest& from) { ListSweepsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListSweepsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListSweepsRequest"; }

 protected:
  explicit ListSweepsRequest(::google::protobuf::Arena* arena);
  ListSweepsRequest(::google::protobuf::Arena* arena, const ListSweepsRequest& from);
  ListSweepsRequest(::google::protobuf::Arena* arena, ListSweepsRequest&& from) noexcept
      : ListSweepsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVerboseFieldNumber = 1,
    kStartHeightFieldNumber = 2,
  };
  // bool verbose = 1;
  void clear_verbose() ;
  bool verbose() const;
  void set_verbose(bool value);

  private:
  bool _internal_verbose() const;
  void _internal_set_verbose(bool value);

  public:
  // int32 start_height = 2;
  void clear_start_height() ;
  ::int32_t start_height() const;
  void set_start_height(::int32_t value);

  private:
  ::int32_t _internal_start_height() const;
  void _internal_set_start_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ListSweepsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListSweepsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSweepsRequest& from_msg);
    bool verbose_;
    ::int32_t start_height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListLeasesRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:walletrpc.ListLeasesRequest) */ {
 public:
  inline ListLeasesRequest() : ListLeasesRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListLeasesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListLeasesRequest(const ListLeasesRequest& from) : ListLeasesRequest(nullptr, from) {}
  inline ListLeasesRequest(ListLeasesRequest&& from) noexcept
      : ListLeasesRequest(nullptr, std::move(from)) {}
  inline ListLeasesRequest& operator=(const ListLeasesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListLeasesRequest& operator=(ListLeasesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListLeasesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListLeasesRequest* internal_default_instance() {
    return reinterpret_cast<const ListLeasesRequest*>(
        &_ListLeasesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(ListLeasesRequest& a, ListLeasesRequest& b) { a.Swap(&b); }
  inline void Swap(ListLeasesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListLeasesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListLeasesRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListLeasesRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListLeasesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListLeasesRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListLeasesRequest"; }

 protected:
  explicit ListLeasesRequest(::google::protobuf::Arena* arena);
  ListLeasesRequest(::google::protobuf::Arena* arena, const ListLeasesRequest& from);
  ListLeasesRequest(::google::protobuf::Arena* arena, ListLeasesRequest&& from) noexcept
      : ListLeasesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:walletrpc.ListLeasesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListLeasesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListLeasesRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListAddressesRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListAddressesRequest) */ {
 public:
  inline ListAddressesRequest() : ListAddressesRequest(nullptr) {}
  ~ListAddressesRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAddressesRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAddressesRequest(const ListAddressesRequest& from) : ListAddressesRequest(nullptr, from) {}
  inline ListAddressesRequest(ListAddressesRequest&& from) noexcept
      : ListAddressesRequest(nullptr, std::move(from)) {}
  inline ListAddressesRequest& operator=(const ListAddressesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAddressesRequest& operator=(ListAddressesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAddressesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAddressesRequest* internal_default_instance() {
    return reinterpret_cast<const ListAddressesRequest*>(
        &_ListAddressesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(ListAddressesRequest& a, ListAddressesRequest& b) { a.Swap(&b); }
  inline void Swap(ListAddressesRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAddressesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAddressesRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListAddressesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAddressesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAddressesRequest& from) { ListAddressesRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAddressesRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListAddressesRequest"; }

 protected:
  explicit ListAddressesRequest(::google::protobuf::Arena* arena);
  ListAddressesRequest(::google::protobuf::Arena* arena, const ListAddressesRequest& from);
  ListAddressesRequest(::google::protobuf::Arena* arena, ListAddressesRequest&& from) noexcept
      : ListAddressesRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountNameFieldNumber = 1,
    kShowCustomAccountsFieldNumber = 2,
  };
  // string account_name = 1;
  void clear_account_name() ;
  const std::string& account_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account_name(Arg_&& arg, Args_... args);
  std::string* mutable_account_name();
  PROTOBUF_NODISCARD std::string* release_account_name();
  void set_allocated_account_name(std::string* value);

  private:
  const std::string& _internal_account_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account_name(
      const std::string& value);
  std::string* _internal_mutable_account_name();

  public:
  // bool show_custom_accounts = 2;
  void clear_show_custom_accounts() ;
  bool show_custom_accounts() const;
  void set_show_custom_accounts(bool value);

  private:
  bool _internal_show_custom_accounts() const;
  void _internal_set_show_custom_accounts(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ListAddressesRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAddressesRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAddressesRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_name_;
    bool show_custom_accounts_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListAccountsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListAccountsRequest) */ {
 public:
  inline ListAccountsRequest() : ListAccountsRequest(nullptr) {}
  ~ListAccountsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAccountsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAccountsRequest(const ListAccountsRequest& from) : ListAccountsRequest(nullptr, from) {}
  inline ListAccountsRequest(ListAccountsRequest&& from) noexcept
      : ListAccountsRequest(nullptr, std::move(from)) {}
  inline ListAccountsRequest& operator=(const ListAccountsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAccountsRequest& operator=(ListAccountsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAccountsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAccountsRequest* internal_default_instance() {
    return reinterpret_cast<const ListAccountsRequest*>(
        &_ListAccountsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ListAccountsRequest& a, ListAccountsRequest& b) { a.Swap(&b); }
  inline void Swap(ListAccountsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAccountsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAccountsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListAccountsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAccountsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAccountsRequest& from) { ListAccountsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAccountsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListAccountsRequest"; }

 protected:
  explicit ListAccountsRequest(::google::protobuf::Arena* arena);
  ListAccountsRequest(::google::protobuf::Arena* arena, const ListAccountsRequest& from);
  ListAccountsRequest(::google::protobuf::Arena* arena, ListAccountsRequest&& from) noexcept
      : ListAccountsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kAddressTypeFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .walletrpc.AddressType address_type = 2;
  void clear_address_type() ;
  ::walletrpc::AddressType address_type() const;
  void set_address_type(::walletrpc::AddressType value);

  private:
  ::walletrpc::AddressType _internal_address_type() const;
  void _internal_set_address_type(::walletrpc::AddressType value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ListAccountsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAccountsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAccountsRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    int address_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class LeaseOutputResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.LeaseOutputResponse) */ {
 public:
  inline LeaseOutputResponse() : LeaseOutputResponse(nullptr) {}
  ~LeaseOutputResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseOutputResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LeaseOutputResponse(const LeaseOutputResponse& from) : LeaseOutputResponse(nullptr, from) {}
  inline LeaseOutputResponse(LeaseOutputResponse&& from) noexcept
      : LeaseOutputResponse(nullptr, std::move(from)) {}
  inline LeaseOutputResponse& operator=(const LeaseOutputResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseOutputResponse& operator=(LeaseOutputResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseOutputResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaseOutputResponse* internal_default_instance() {
    return reinterpret_cast<const LeaseOutputResponse*>(
        &_LeaseOutputResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(LeaseOutputResponse& a, LeaseOutputResponse& b) { a.Swap(&b); }
  inline void Swap(LeaseOutputResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseOutputResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseOutputResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LeaseOutputResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseOutputResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseOutputResponse& from) { LeaseOutputResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaseOutputResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.LeaseOutputResponse"; }

 protected:
  explicit LeaseOutputResponse(::google::protobuf::Arena* arena);
  LeaseOutputResponse(::google::protobuf::Arena* arena, const LeaseOutputResponse& from);
  LeaseOutputResponse(::google::protobuf::Arena* arena, LeaseOutputResponse&& from) noexcept
      : LeaseOutputResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExpirationFieldNumber = 1,
  };
  // uint64 expiration = 1;
  void clear_expiration() ;
  ::uint64_t expiration() const;
  void set_expiration(::uint64_t value);

  private:
  ::uint64_t _internal_expiration() const;
  void _internal_set_expiration(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.LeaseOutputResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LeaseOutputResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LeaseOutputResponse& from_msg);
    ::uint64_t expiration_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class LabelTransactionResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:walletrpc.LabelTransactionResponse) */ {
 public:
  inline LabelTransactionResponse() : LabelTransactionResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LabelTransactionResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline LabelTransactionResponse(const LabelTransactionResponse& from) : LabelTransactionResponse(nullptr, from) {}
  inline LabelTransactionResponse(LabelTransactionResponse&& from) noexcept
      : LabelTransactionResponse(nullptr, std::move(from)) {}
  inline LabelTransactionResponse& operator=(const LabelTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabelTransactionResponse& operator=(LabelTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LabelTransactionResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LabelTransactionResponse* internal_default_instance() {
    return reinterpret_cast<const LabelTransactionResponse*>(
        &_LabelTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(LabelTransactionResponse& a, LabelTransactionResponse& b) { a.Swap(&b); }
  inline void Swap(LabelTransactionResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabelTransactionResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LabelTransactionResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<LabelTransactionResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const LabelTransactionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const LabelTransactionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.LabelTransactionResponse"; }

 protected:
  explicit LabelTransactionResponse(::google::protobuf::Arena* arena);
  LabelTransactionResponse(::google::protobuf::Arena* arena, const LabelTransactionResponse& from);
  LabelTransactionResponse(::google::protobuf::Arena* arena, LabelTransactionResponse&& from) noexcept
      : LabelTransactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:walletrpc.LabelTransactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LabelTransactionResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LabelTransactionResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class LabelTransactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.LabelTransactionRequest) */ {
 public:
  inline LabelTransactionRequest() : LabelTransactionRequest(nullptr) {}
  ~LabelTransactionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LabelTransactionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LabelTransactionRequest(const LabelTransactionRequest& from) : LabelTransactionRequest(nullptr, from) {}
  inline LabelTransactionRequest(LabelTransactionRequest&& from) noexcept
      : LabelTransactionRequest(nullptr, std::move(from)) {}
  inline LabelTransactionRequest& operator=(const LabelTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LabelTransactionRequest& operator=(LabelTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LabelTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LabelTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const LabelTransactionRequest*>(
        &_LabelTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(LabelTransactionRequest& a, LabelTransactionRequest& b) { a.Swap(&b); }
  inline void Swap(LabelTransactionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LabelTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LabelTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LabelTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LabelTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LabelTransactionRequest& from) { LabelTransactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LabelTransactionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.LabelTransactionRequest"; }

 protected:
  explicit LabelTransactionRequest(::google::protobuf::Arena* arena);
  LabelTransactionRequest(::google::protobuf::Arena* arena, const LabelTransactionRequest& from);
  LabelTransactionRequest(::google::protobuf::Arena* arena, LabelTransactionRequest&& from) noexcept
      : LabelTransactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
    kLabelFieldNumber = 2,
    kOverwriteFieldNumber = 3,
  };
  // bytes txid = 1;
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* mutable_txid();
  PROTOBUF_NODISCARD std::string* release_txid();
  void set_allocated_txid(std::string* value);

  private:
  const std::string& _internal_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid(
      const std::string& value);
  std::string* _internal_mutable_txid();

  public:
  // string label = 2;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bool overwrite = 3;
  void clear_overwrite() ;
  bool overwrite() const;
  void set_overwrite(bool value);

  private:
  bool _internal_overwrite() const;
  void _internal_set_overwrite(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.LabelTransactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LabelTransactionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LabelTransactionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    bool overwrite_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class KeyReq final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.KeyReq) */ {
 public:
  inline KeyReq() : KeyReq(nullptr) {}
  ~KeyReq() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeyReq(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeyReq(const KeyReq& from) : KeyReq(nullptr, from) {}
  inline KeyReq(KeyReq&& from) noexcept
      : KeyReq(nullptr, std::move(from)) {}
  inline KeyReq& operator=(const KeyReq& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyReq& operator=(KeyReq&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyReq& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyReq* internal_default_instance() {
    return reinterpret_cast<const KeyReq*>(
        &_KeyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(KeyReq& a, KeyReq& b) { a.Swap(&b); }
  inline void Swap(KeyReq* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyReq* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyReq* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<KeyReq>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyReq& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeyReq& from) { KeyReq::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeyReq* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.KeyReq"; }

 protected:
  explicit KeyReq(::google::protobuf::Arena* arena);
  KeyReq(::google::protobuf::Arena* arena, const KeyReq& from);
  KeyReq(::google::protobuf::Arena* arena, KeyReq&& from) noexcept
      : KeyReq(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFingerPrintFieldNumber = 1,
    kKeyFamilyFieldNumber = 2,
  };
  // int32 key_finger_print = 1;
  void clear_key_finger_print() ;
  ::int32_t key_finger_print() const;
  void set_key_finger_print(::int32_t value);

  private:
  ::int32_t _internal_key_finger_print() const;
  void _internal_set_key_finger_print(::int32_t value);

  public:
  // int32 key_family = 2;
  void clear_key_family() ;
  ::int32_t key_family() const;
  void set_key_family(::int32_t value);

  private:
  ::int32_t _internal_key_family() const;
  void _internal_set_key_family(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.KeyReq)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KeyReq_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeyReq& from_msg);
    ::int32_t key_finger_print_;
    ::int32_t key_family_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ImportTapscriptResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ImportTapscriptResponse) */ {
 public:
  inline ImportTapscriptResponse() : ImportTapscriptResponse(nullptr) {}
  ~ImportTapscriptResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImportTapscriptResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImportTapscriptResponse(const ImportTapscriptResponse& from) : ImportTapscriptResponse(nullptr, from) {}
  inline ImportTapscriptResponse(ImportTapscriptResponse&& from) noexcept
      : ImportTapscriptResponse(nullptr, std::move(from)) {}
  inline ImportTapscriptResponse& operator=(const ImportTapscriptResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportTapscriptResponse& operator=(ImportTapscriptResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImportTapscriptResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportTapscriptResponse* internal_default_instance() {
    return reinterpret_cast<const ImportTapscriptResponse*>(
        &_ImportTapscriptResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(ImportTapscriptResponse& a, ImportTapscriptResponse& b) { a.Swap(&b); }
  inline void Swap(ImportTapscriptResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportTapscriptResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImportTapscriptResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ImportTapscriptResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImportTapscriptResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImportTapscriptResponse& from) { ImportTapscriptResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImportTapscriptResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ImportTapscriptResponse"; }

 protected:
  explicit ImportTapscriptResponse(::google::protobuf::Arena* arena);
  ImportTapscriptResponse(::google::protobuf::Arena* arena, const ImportTapscriptResponse& from);
  ImportTapscriptResponse(::google::protobuf::Arena* arena, ImportTapscriptResponse&& from) noexcept
      : ImportTapscriptResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kP2TrAddressFieldNumber = 1,
  };
  // string p2tr_address = 1;
  void clear_p2tr_address() ;
  const std::string& p2tr_address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_p2tr_address(Arg_&& arg, Args_... args);
  std::string* mutable_p2tr_address();
  PROTOBUF_NODISCARD std::string* release_p2tr_address();
  void set_allocated_p2tr_address(std::string* value);

  private:
  const std::string& _internal_p2tr_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_p2tr_address(
      const std::string& value);
  std::string* _internal_mutable_p2tr_address();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ImportTapscriptResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImportTapscriptResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImportTapscriptResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr p2tr_address_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ImportPublicKeyResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:walletrpc.ImportPublicKeyResponse) */ {
 public:
  inline ImportPublicKeyResponse() : ImportPublicKeyResponse(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImportPublicKeyResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImportPublicKeyResponse(const ImportPublicKeyResponse& from) : ImportPublicKeyResponse(nullptr, from) {}
  inline ImportPublicKeyResponse(ImportPublicKeyResponse&& from) noexcept
      : ImportPublicKeyResponse(nullptr, std::move(from)) {}
  inline ImportPublicKeyResponse& operator=(const ImportPublicKeyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportPublicKeyResponse& operator=(ImportPublicKeyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImportPublicKeyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportPublicKeyResponse* internal_default_instance() {
    return reinterpret_cast<const ImportPublicKeyResponse*>(
        &_ImportPublicKeyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(ImportPublicKeyResponse& a, ImportPublicKeyResponse& b) { a.Swap(&b); }
  inline void Swap(ImportPublicKeyResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportPublicKeyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImportPublicKeyResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ImportPublicKeyResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ImportPublicKeyResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ImportPublicKeyResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ImportPublicKeyResponse"; }

 protected:
  explicit ImportPublicKeyResponse(::google::protobuf::Arena* arena);
  ImportPublicKeyResponse(::google::protobuf::Arena* arena, const ImportPublicKeyResponse& from);
  ImportPublicKeyResponse(::google::protobuf::Arena* arena, ImportPublicKeyResponse&& from) noexcept
      : ImportPublicKeyResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:walletrpc.ImportPublicKeyResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImportPublicKeyResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImportPublicKeyResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ImportPublicKeyRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ImportPublicKeyRequest) */ {
 public:
  inline ImportPublicKeyRequest() : ImportPublicKeyRequest(nullptr) {}
  ~ImportPublicKeyRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImportPublicKeyRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImportPublicKeyRequest(const ImportPublicKeyRequest& from) : ImportPublicKeyRequest(nullptr, from) {}
  inline ImportPublicKeyRequest(ImportPublicKeyRequest&& from) noexcept
      : ImportPublicKeyRequest(nullptr, std::move(from)) {}
  inline ImportPublicKeyRequest& operator=(const ImportPublicKeyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportPublicKeyRequest& operator=(ImportPublicKeyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImportPublicKeyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportPublicKeyRequest* internal_default_instance() {
    return reinterpret_cast<const ImportPublicKeyRequest*>(
        &_ImportPublicKeyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(ImportPublicKeyRequest& a, ImportPublicKeyRequest& b) { a.Swap(&b); }
  inline void Swap(ImportPublicKeyRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportPublicKeyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImportPublicKeyRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ImportPublicKeyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImportPublicKeyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImportPublicKeyRequest& from) { ImportPublicKeyRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImportPublicKeyRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ImportPublicKeyRequest"; }

 protected:
  explicit ImportPublicKeyRequest(::google::protobuf::Arena* arena);
  ImportPublicKeyRequest(::google::protobuf::Arena* arena, const ImportPublicKeyRequest& from);
  ImportPublicKeyRequest(::google::protobuf::Arena* arena, ImportPublicKeyRequest&& from) noexcept
      : ImportPublicKeyRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPublicKeyFieldNumber = 1,
    kAddressTypeFieldNumber = 2,
  };
  // bytes public_key = 1;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // .walletrpc.AddressType address_type = 2;
  void clear_address_type() ;
  ::walletrpc::AddressType address_type() const;
  void set_address_type(::walletrpc::AddressType value);

  private:
  ::walletrpc::AddressType _internal_address_type() const;
  void _internal_set_address_type(::walletrpc::AddressType value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ImportPublicKeyRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImportPublicKeyRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImportPublicKeyRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    int address_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ImportAccountRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ImportAccountRequest) */ {
 public:
  inline ImportAccountRequest() : ImportAccountRequest(nullptr) {}
  ~ImportAccountRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImportAccountRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImportAccountRequest(const ImportAccountRequest& from) : ImportAccountRequest(nullptr, from) {}
  inline ImportAccountRequest(ImportAccountRequest&& from) noexcept
      : ImportAccountRequest(nullptr, std::move(from)) {}
  inline ImportAccountRequest& operator=(const ImportAccountRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportAccountRequest& operator=(ImportAccountRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImportAccountRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportAccountRequest* internal_default_instance() {
    return reinterpret_cast<const ImportAccountRequest*>(
        &_ImportAccountRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(ImportAccountRequest& a, ImportAccountRequest& b) { a.Swap(&b); }
  inline void Swap(ImportAccountRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportAccountRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImportAccountRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ImportAccountRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImportAccountRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImportAccountRequest& from) { ImportAccountRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImportAccountRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ImportAccountRequest"; }

 protected:
  explicit ImportAccountRequest(::google::protobuf::Arena* arena);
  ImportAccountRequest(::google::protobuf::Arena* arena, const ImportAccountRequest& from);
  ImportAccountRequest(::google::protobuf::Arena* arena, ImportAccountRequest&& from) noexcept
      : ImportAccountRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kExtendedPublicKeyFieldNumber = 2,
    kMasterKeyFingerprintFieldNumber = 3,
    kAddressTypeFieldNumber = 4,
    kDryRunFieldNumber = 5,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string extended_public_key = 2;
  void clear_extended_public_key() ;
  const std::string& extended_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_extended_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_extended_public_key();
  PROTOBUF_NODISCARD std::string* release_extended_public_key();
  void set_allocated_extended_public_key(std::string* value);

  private:
  const std::string& _internal_extended_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extended_public_key(
      const std::string& value);
  std::string* _internal_mutable_extended_public_key();

  public:
  // bytes master_key_fingerprint = 3;
  void clear_master_key_fingerprint() ;
  const std::string& master_key_fingerprint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_master_key_fingerprint(Arg_&& arg, Args_... args);
  std::string* mutable_master_key_fingerprint();
  PROTOBUF_NODISCARD std::string* release_master_key_fingerprint();
  void set_allocated_master_key_fingerprint(std::string* value);

  private:
  const std::string& _internal_master_key_fingerprint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_master_key_fingerprint(
      const std::string& value);
  std::string* _internal_mutable_master_key_fingerprint();

  public:
  // .walletrpc.AddressType address_type = 4;
  void clear_address_type() ;
  ::walletrpc::AddressType address_type() const;
  void set_address_type(::walletrpc::AddressType value);

  private:
  ::walletrpc::AddressType _internal_address_type() const;
  void _internal_set_address_type(::walletrpc::AddressType value);

  public:
  // bool dry_run = 5;
  void clear_dry_run() ;
  bool dry_run() const;
  void set_dry_run(bool value);

  private:
  bool _internal_dry_run() const;
  void _internal_set_dry_run(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ImportAccountRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      62, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImportAccountRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImportAccountRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr extended_public_key_;
    ::google::protobuf::internal::ArenaStringPtr master_key_fingerprint_;
    int address_type_;
    bool dry_run_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class GetTransactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.GetTransactionRequest) */ {
 public:
  inline GetTransactionRequest() : GetTransactionRequest(nullptr) {}
  ~GetTransactionRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetTransactionRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetTransactionRequest(const GetTransactionRequest& from) : GetTransactionRequest(nullptr, from) {}
  inline GetTransactionRequest(GetTransactionRequest&& from) noexcept
      : GetTransactionRequest(nullptr, std::move(from)) {}
  inline GetTransactionRequest& operator=(const GetTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTransactionRequest& operator=(GetTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTransactionRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTransactionRequest* internal_default_instance() {
    return reinterpret_cast<const GetTransactionRequest*>(
        &_GetTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(GetTransactionRequest& a, GetTransactionRequest& b) { a.Swap(&b); }
  inline void Swap(GetTransactionRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTransactionRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTransactionRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetTransactionRequest& from) { GetTransactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetTransactionRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.GetTransactionRequest"; }

 protected:
  explicit GetTransactionRequest(::google::protobuf::Arena* arena);
  GetTransactionRequest(::google::protobuf::Arena* arena, const GetTransactionRequest& from);
  GetTransactionRequest(::google::protobuf::Arena* arena, GetTransactionRequest&& from) noexcept
      : GetTransactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
  };
  // string txid = 1;
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* mutable_txid();
  PROTOBUF_NODISCARD std::string* release_txid();
  void set_allocated_txid(std::string* value);

  private:
  const std::string& _internal_txid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_txid(
      const std::string& value);
  std::string* _internal_mutable_txid();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.GetTransactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetTransactionRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetTransactionRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr txid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class FinalizePsbtResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.FinalizePsbtResponse) */ {
 public:
  inline FinalizePsbtResponse() : FinalizePsbtResponse(nullptr) {}
  ~FinalizePsbtResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FinalizePsbtResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FinalizePsbtResponse(const FinalizePsbtResponse& from) : FinalizePsbtResponse(nullptr, from) {}
  inline FinalizePsbtResponse(FinalizePsbtResponse&& from) noexcept
      : FinalizePsbtResponse(nullptr, std::move(from)) {}
  inline FinalizePsbtResponse& operator=(const FinalizePsbtResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinalizePsbtResponse& operator=(FinalizePsbtResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FinalizePsbtResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinalizePsbtResponse* internal_default_instance() {
    return reinterpret_cast<const FinalizePsbtResponse*>(
        &_FinalizePsbtResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(FinalizePsbtResponse& a, FinalizePsbtResponse& b) { a.Swap(&b); }
  inline void Swap(FinalizePsbtResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinalizePsbtResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FinalizePsbtResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FinalizePsbtResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FinalizePsbtResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FinalizePsbtResponse& from) { FinalizePsbtResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FinalizePsbtResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.FinalizePsbtResponse"; }

 protected:
  explicit FinalizePsbtResponse(::google::protobuf::Arena* arena);
  FinalizePsbtResponse(::google::protobuf::Arena* arena, const FinalizePsbtResponse& from);
  FinalizePsbtResponse(::google::protobuf::Arena* arena, FinalizePsbtResponse&& from) noexcept
      : FinalizePsbtResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSignedPsbtFieldNumber = 1,
    kRawFinalTxFieldNumber = 2,
  };
  // bytes signed_psbt = 1;
  void clear_signed_psbt() ;
  const std::string& signed_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_signed_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_signed_psbt();
  PROTOBUF_NODISCARD std::string* release_signed_psbt();
  void set_allocated_signed_psbt(std::string* value);

  private:
  const std::string& _internal_signed_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_signed_psbt(
      const std::string& value);
  std::string* _internal_mutable_signed_psbt();

  public:
  // bytes raw_final_tx = 2;
  void clear_raw_final_tx() ;
  const std::string& raw_final_tx() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_final_tx(Arg_&& arg, Args_... args);
  std::string* mutable_raw_final_tx();
  PROTOBUF_NODISCARD std::string* release_raw_final_tx();
  void set_allocated_raw_final_tx(std::string* value);

  private:
  const std::string& _internal_raw_final_tx() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_final_tx(
      const std::string& value);
  std::string* _internal_mutable_raw_final_tx();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.FinalizePsbtResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FinalizePsbtResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FinalizePsbtResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr signed_psbt_;
    ::google::protobuf::internal::ArenaStringPtr raw_final_tx_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class FinalizePsbtRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.FinalizePsbtRequest) */ {
 public:
  inline FinalizePsbtRequest() : FinalizePsbtRequest(nullptr) {}
  ~FinalizePsbtRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FinalizePsbtRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FinalizePsbtRequest(const FinalizePsbtRequest& from) : FinalizePsbtRequest(nullptr, from) {}
  inline FinalizePsbtRequest(FinalizePsbtRequest&& from) noexcept
      : FinalizePsbtRequest(nullptr, std::move(from)) {}
  inline FinalizePsbtRequest& operator=(const FinalizePsbtRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FinalizePsbtRequest& operator=(FinalizePsbtRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FinalizePsbtRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FinalizePsbtRequest* internal_default_instance() {
    return reinterpret_cast<const FinalizePsbtRequest*>(
        &_FinalizePsbtRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(FinalizePsbtRequest& a, FinalizePsbtRequest& b) { a.Swap(&b); }
  inline void Swap(FinalizePsbtRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FinalizePsbtRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FinalizePsbtRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FinalizePsbtRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FinalizePsbtRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FinalizePsbtRequest& from) { FinalizePsbtRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FinalizePsbtRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.FinalizePsbtRequest"; }

 protected:
  explicit FinalizePsbtRequest(::google::protobuf::Arena* arena);
  FinalizePsbtRequest(::google::protobuf::Arena* arena, const FinalizePsbtRequest& from);
  FinalizePsbtRequest(::google::protobuf::Arena* arena, FinalizePsbtRequest&& from) noexcept
      : FinalizePsbtRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFundedPsbtFieldNumber = 1,
    kAccountFieldNumber = 5,
  };
  // bytes funded_psbt = 1;
  void clear_funded_psbt() ;
  const std::string& funded_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funded_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_funded_psbt();
  PROTOBUF_NODISCARD std::string* release_funded_psbt();
  void set_allocated_funded_psbt(std::string* value);

  private:
  const std::string& _internal_funded_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funded_psbt(
      const std::string& value);
  std::string* _internal_mutable_funded_psbt();

  public:
  // string account = 5;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.FinalizePsbtRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 0,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FinalizePsbtRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FinalizePsbtRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr funded_psbt_;
    ::google::protobuf::internal::ArenaStringPtr account_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class EstimateFeeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.EstimateFeeResponse) */ {
 public:
  inline EstimateFeeResponse() : EstimateFeeResponse(nullptr) {}
  ~EstimateFeeResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EstimateFeeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline EstimateFeeResponse(const EstimateFeeResponse& from) : EstimateFeeResponse(nullptr, from) {}
  inline EstimateFeeResponse(EstimateFeeResponse&& from) noexcept
      : EstimateFeeResponse(nullptr, std::move(from)) {}
  inline EstimateFeeResponse& operator=(const EstimateFeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EstimateFeeResponse& operator=(EstimateFeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EstimateFeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EstimateFeeResponse* internal_default_instance() {
    return reinterpret_cast<const EstimateFeeResponse*>(
        &_EstimateFeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(EstimateFeeResponse& a, EstimateFeeResponse& b) { a.Swap(&b); }
  inline void Swap(EstimateFeeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EstimateFeeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EstimateFeeResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EstimateFeeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EstimateFeeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EstimateFeeResponse& from) { EstimateFeeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EstimateFeeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.EstimateFeeResponse"; }

 protected:
  explicit EstimateFeeResponse(::google::protobuf::Arena* arena);
  EstimateFeeResponse(::google::protobuf::Arena* arena, const EstimateFeeResponse& from);
  EstimateFeeResponse(::google::protobuf::Arena* arena, EstimateFeeResponse&& from) noexcept
      : EstimateFeeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSatPerKwFieldNumber = 1,
    kMinRelayFeeSatPerKwFieldNumber = 2,
  };
  // int64 sat_per_kw = 1;
  void clear_sat_per_kw() ;
  ::int64_t sat_per_kw() const;
  void set_sat_per_kw(::int64_t value);

  private:
  ::int64_t _internal_sat_per_kw() const;
  void _internal_set_sat_per_kw(::int64_t value);

  public:
  // int64 min_relay_fee_sat_per_kw = 2;
  void clear_min_relay_fee_sat_per_kw() ;
  ::int64_t min_relay_fee_sat_per_kw() const;
  void set_min_relay_fee_sat_per_kw(::int64_t value);

  private:
  ::int64_t _internal_min_relay_fee_sat_per_kw() const;
  void _internal_set_min_relay_fee_sat_per_kw(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.EstimateFeeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EstimateFeeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EstimateFeeResponse& from_msg);
    ::int64_t sat_per_kw_;
    ::int64_t min_relay_fee_sat_per_kw_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class EstimateFeeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.EstimateFeeRequest) */ {
 public:
  inline EstimateFeeRequest() : EstimateFeeRequest(nullptr) {}
  ~EstimateFeeRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR EstimateFeeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline EstimateFeeRequest(const EstimateFeeRequest& from) : EstimateFeeRequest(nullptr, from) {}
  inline EstimateFeeRequest(EstimateFeeRequest&& from) noexcept
      : EstimateFeeRequest(nullptr, std::move(from)) {}
  inline EstimateFeeRequest& operator=(const EstimateFeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EstimateFeeRequest& operator=(EstimateFeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EstimateFeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EstimateFeeRequest* internal_default_instance() {
    return reinterpret_cast<const EstimateFeeRequest*>(
        &_EstimateFeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(EstimateFeeRequest& a, EstimateFeeRequest& b) { a.Swap(&b); }
  inline void Swap(EstimateFeeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EstimateFeeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EstimateFeeRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<EstimateFeeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EstimateFeeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const EstimateFeeRequest& from) { EstimateFeeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EstimateFeeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.EstimateFeeRequest"; }

 protected:
  explicit EstimateFeeRequest(::google::protobuf::Arena* arena);
  EstimateFeeRequest(::google::protobuf::Arena* arena, const EstimateFeeRequest& from);
  EstimateFeeRequest(::google::protobuf::Arena* arena, EstimateFeeRequest&& from) noexcept
      : EstimateFeeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kConfTargetFieldNumber = 1,
  };
  // int32 conf_target = 1;
  void clear_conf_target() ;
  ::int32_t conf_target() const;
  void set_conf_target(::int32_t value);

  private:
  ::int32_t _internal_conf_target() const;
  void _internal_set_conf_target(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.EstimateFeeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_EstimateFeeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const EstimateFeeRequest& from_msg);
    ::int32_t conf_target_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class BumpForceCloseFeeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.BumpForceCloseFeeResponse) */ {
 public:
  inline BumpForceCloseFeeResponse() : BumpForceCloseFeeResponse(nullptr) {}
  ~BumpForceCloseFeeResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BumpForceCloseFeeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BumpForceCloseFeeResponse(const BumpForceCloseFeeResponse& from) : BumpForceCloseFeeResponse(nullptr, from) {}
  inline BumpForceCloseFeeResponse(BumpForceCloseFeeResponse&& from) noexcept
      : BumpForceCloseFeeResponse(nullptr, std::move(from)) {}
  inline BumpForceCloseFeeResponse& operator=(const BumpForceCloseFeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BumpForceCloseFeeResponse& operator=(BumpForceCloseFeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BumpForceCloseFeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BumpForceCloseFeeResponse* internal_default_instance() {
    return reinterpret_cast<const BumpForceCloseFeeResponse*>(
        &_BumpForceCloseFeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(BumpForceCloseFeeResponse& a, BumpForceCloseFeeResponse& b) { a.Swap(&b); }
  inline void Swap(BumpForceCloseFeeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BumpForceCloseFeeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BumpForceCloseFeeResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BumpForceCloseFeeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BumpForceCloseFeeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BumpForceCloseFeeResponse& from) { BumpForceCloseFeeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BumpForceCloseFeeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.BumpForceCloseFeeResponse"; }

 protected:
  explicit BumpForceCloseFeeResponse(::google::protobuf::Arena* arena);
  BumpForceCloseFeeResponse(::google::protobuf::Arena* arena, const BumpForceCloseFeeResponse& from);
  BumpForceCloseFeeResponse(::google::protobuf::Arena* arena, BumpForceCloseFeeResponse&& from) noexcept
      : BumpForceCloseFeeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // string status = 1;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.BumpForceCloseFeeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BumpForceCloseFeeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BumpForceCloseFeeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class BumpFeeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.BumpFeeResponse) */ {
 public:
  inline BumpFeeResponse() : BumpFeeResponse(nullptr) {}
  ~BumpFeeResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BumpFeeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline BumpFeeResponse(const BumpFeeResponse& from) : BumpFeeResponse(nullptr, from) {}
  inline BumpFeeResponse(BumpFeeResponse&& from) noexcept
      : BumpFeeResponse(nullptr, std::move(from)) {}
  inline BumpFeeResponse& operator=(const BumpFeeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline BumpFeeResponse& operator=(BumpFeeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BumpFeeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const BumpFeeResponse* internal_default_instance() {
    return reinterpret_cast<const BumpFeeResponse*>(
        &_BumpFeeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(BumpFeeResponse& a, BumpFeeResponse& b) { a.Swap(&b); }
  inline void Swap(BumpFeeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BumpFeeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BumpFeeResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BumpFeeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BumpFeeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BumpFeeResponse& from) { BumpFeeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BumpFeeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.BumpFeeResponse"; }

 protected:
  explicit BumpFeeResponse(::google::protobuf::Arena* arena);
  BumpFeeResponse(::google::protobuf::Arena* arena, const BumpFeeResponse& from);
  BumpFeeResponse(::google::protobuf::Arena* arena, BumpFeeResponse&& from) noexcept
      : BumpFeeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 1,
  };
  // string status = 1;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.BumpFeeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BumpFeeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BumpFeeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr status_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class AddressProperty final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.AddressProperty) */ {
 public:
  inline AddressProperty() : AddressProperty(nullptr) {}
  ~AddressProperty() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddressProperty(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddressProperty(const AddressProperty& from) : AddressProperty(nullptr, from) {}
  inline AddressProperty(AddressProperty&& from) noexcept
      : AddressProperty(nullptr, std::move(from)) {}
  inline AddressProperty& operator=(const AddressProperty& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddressProperty& operator=(AddressProperty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddressProperty& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddressProperty* internal_default_instance() {
    return reinterpret_cast<const AddressProperty*>(
        &_AddressProperty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(AddressProperty& a, AddressProperty& b) { a.Swap(&b); }
  inline void Swap(AddressProperty* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddressProperty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddressProperty* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AddressProperty>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddressProperty& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddressProperty& from) { AddressProperty::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddressProperty* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.AddressProperty"; }

 protected:
  explicit AddressProperty(::google::protobuf::Arena* arena);
  AddressProperty(::google::protobuf::Arena* arena, const AddressProperty& from);
  AddressProperty(::google::protobuf::Arena* arena, AddressProperty&& from) noexcept
      : AddressProperty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressFieldNumber = 1,
    kDerivationPathFieldNumber = 4,
    kPublicKeyFieldNumber = 5,
    kBalanceFieldNumber = 3,
    kIsInternalFieldNumber = 2,
  };
  // string address = 1;
  void clear_address() ;
  const std::string& address() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_address(Arg_&& arg, Args_... args);
  std::string* mutable_address();
  PROTOBUF_NODISCARD std::string* release_address();
  void set_allocated_address(std::string* value);

  private:
  const std::string& _internal_address() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_address(
      const std::string& value);
  std::string* _internal_mutable_address();

  public:
  // string derivation_path = 4;
  void clear_derivation_path() ;
  const std::string& derivation_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_derivation_path(Arg_&& arg, Args_... args);
  std::string* mutable_derivation_path();
  PROTOBUF_NODISCARD std::string* release_derivation_path();
  void set_allocated_derivation_path(std::string* value);

  private:
  const std::string& _internal_derivation_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_derivation_path(
      const std::string& value);
  std::string* _internal_mutable_derivation_path();

  public:
  // bytes public_key = 5;
  void clear_public_key() ;
  const std::string& public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_public_key();
  PROTOBUF_NODISCARD std::string* release_public_key();
  void set_allocated_public_key(std::string* value);

  private:
  const std::string& _internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_public_key(
      const std::string& value);
  std::string* _internal_mutable_public_key();

  public:
  // int64 balance = 3;
  void clear_balance() ;
  ::int64_t balance() const;
  void set_balance(::int64_t value);

  private:
  ::int64_t _internal_balance() const;
  void _internal_set_balance(::int64_t value);

  public:
  // bool is_internal = 2;
  void clear_is_internal() ;
  bool is_internal() const;
  void set_is_internal(bool value);

  private:
  bool _internal_is_internal() const;
  void _internal_set_is_internal(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.AddressProperty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddressProperty_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddressProperty& from_msg);
    ::google::protobuf::internal::ArenaStringPtr address_;
    ::google::protobuf::internal::ArenaStringPtr derivation_path_;
    ::google::protobuf::internal::ArenaStringPtr public_key_;
    ::int64_t balance_;
    bool is_internal_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class AddrResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.AddrResponse) */ {
 public:
  inline AddrResponse() : AddrResponse(nullptr) {}
  ~AddrResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddrResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddrResponse(const AddrResponse& from) : AddrResponse(nullptr, from) {}
  inline AddrResponse(AddrResponse&& from) noexcept
      : AddrResponse(nullptr, std::move(from)) {}
  inline AddrResponse& operator=(const AddrResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddrResponse& operator=(AddrResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddrResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddrResponse* internal_default_instance() {
    return reinterpret_cast<const AddrResponse*>(
        &_AddrResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(AddrResponse& a, AddrResponse& b) { a.Swap(&b); }
  inline void Swap(AddrResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddrResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddrResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AddrResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddrResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddrResponse& from) { AddrResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddrResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.AddrResponse"; }

 protected:
  explicit AddrResponse(::google::protobuf::Arena* arena);
  AddrResponse(::google::protobuf::Arena* arena, const AddrResponse& from);
  AddrResponse(::google::protobuf::Arena* arena, AddrResponse&& from) noexcept
      : AddrResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddrFieldNumber = 1,
  };
  // string addr = 1;
  void clear_addr() ;
  const std::string& addr() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_addr(Arg_&& arg, Args_... args);
  std::string* mutable_addr();
  PROTOBUF_NODISCARD std::string* release_addr();
  void set_allocated_addr(std::string* value);

  private:
  const std::string& _internal_addr() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_addr(
      const std::string& value);
  std::string* _internal_mutable_addr();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.AddrResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddrResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddrResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr addr_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class AddrRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.AddrRequest) */ {
 public:
  inline AddrRequest() : AddrRequest(nullptr) {}
  ~AddrRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddrRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddrRequest(const AddrRequest& from) : AddrRequest(nullptr, from) {}
  inline AddrRequest(AddrRequest&& from) noexcept
      : AddrRequest(nullptr, std::move(from)) {}
  inline AddrRequest& operator=(const AddrRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddrRequest& operator=(AddrRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddrRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddrRequest* internal_default_instance() {
    return reinterpret_cast<const AddrRequest*>(
        &_AddrRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(AddrRequest& a, AddrRequest& b) { a.Swap(&b); }
  inline void Swap(AddrRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddrRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddrRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AddrRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddrRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddrRequest& from) { AddrRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddrRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.AddrRequest"; }

 protected:
  explicit AddrRequest(::google::protobuf::Arena* arena);
  AddrRequest(::google::protobuf::Arena* arena, const AddrRequest& from);
  AddrRequest(::google::protobuf::Arena* arena, AddrRequest&& from) noexcept
      : AddrRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 1,
    kTypeFieldNumber = 2,
    kChangeFieldNumber = 3,
  };
  // string account = 1;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // .walletrpc.AddressType type = 2;
  void clear_type() ;
  ::walletrpc::AddressType type() const;
  void set_type(::walletrpc::AddressType value);

  private:
  ::walletrpc::AddressType _internal_type() const;
  void _internal_set_type(::walletrpc::AddressType value);

  public:
  // bool change = 3;
  void clear_change() ;
  bool change() const;
  void set_change(bool value);

  private:
  bool _internal_change() const;
  void _internal_set_change(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.AddrRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddrRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddrRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    int type_;
    bool change_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class Account final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.Account) */ {
 public:
  inline Account() : Account(nullptr) {}
  ~Account() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Account(
      ::google::protobuf::internal::ConstantInitialized);

  inline Account(const Account& from) : Account(nullptr, from) {}
  inline Account(Account&& from) noexcept
      : Account(nullptr, std::move(from)) {}
  inline Account& operator=(const Account& from) {
    CopyFrom(from);
    return *this;
  }
  inline Account& operator=(Account&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Account& default_instance() {
    return *internal_default_instance();
  }
  static inline const Account* internal_default_instance() {
    return reinterpret_cast<const Account*>(
        &_Account_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(Account& a, Account& b) { a.Swap(&b); }
  inline void Swap(Account* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Account* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Account* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<Account>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Account& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Account& from) { Account::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Account* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.Account"; }

 protected:
  explicit Account(::google::protobuf::Arena* arena);
  Account(::google::protobuf::Arena* arena, const Account& from);
  Account(::google::protobuf::Arena* arena, Account&& from) noexcept
      : Account(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kExtendedPublicKeyFieldNumber = 3,
    kMasterKeyFingerprintFieldNumber = 4,
    kDerivationPathFieldNumber = 5,
    kAddressTypeFieldNumber = 2,
    kExternalKeyCountFieldNumber = 6,
    kInternalKeyCountFieldNumber = 7,
    kWatchOnlyFieldNumber = 8,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string extended_public_key = 3;
  void clear_extended_public_key() ;
  const std::string& extended_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_extended_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_extended_public_key();
  PROTOBUF_NODISCARD std::string* release_extended_public_key();
  void set_allocated_extended_public_key(std::string* value);

  private:
  const std::string& _internal_extended_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extended_public_key(
      const std::string& value);
  std::string* _internal_mutable_extended_public_key();

  public:
  // bytes master_key_fingerprint = 4;
  void clear_master_key_fingerprint() ;
  const std::string& master_key_fingerprint() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_master_key_fingerprint(Arg_&& arg, Args_... args);
  std::string* mutable_master_key_fingerprint();
  PROTOBUF_NODISCARD std::string* release_master_key_fingerprint();
  void set_allocated_master_key_fingerprint(std::string* value);

  private:
  const std::string& _internal_master_key_fingerprint() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_master_key_fingerprint(
      const std::string& value);
  std::string* _internal_mutable_master_key_fingerprint();

  public:
  // string derivation_path = 5;
  void clear_derivation_path() ;
  const std::string& derivation_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_derivation_path(Arg_&& arg, Args_... args);
  std::string* mutable_derivation_path();
  PROTOBUF_NODISCARD std::string* release_derivation_path();
  void set_allocated_derivation_path(std::string* value);

  private:
  const std::string& _internal_derivation_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_derivation_path(
      const std::string& value);
  std::string* _internal_mutable_derivation_path();

  public:
  // .walletrpc.AddressType address_type = 2;
  void clear_address_type() ;
  ::walletrpc::AddressType address_type() const;
  void set_address_type(::walletrpc::AddressType value);

  private:
  ::walletrpc::AddressType _internal_address_type() const;
  void _internal_set_address_type(::walletrpc::AddressType value);

  public:
  // uint32 external_key_count = 6;
  void clear_external_key_count() ;
  ::uint32_t external_key_count() const;
  void set_external_key_count(::uint32_t value);

  private:
  ::uint32_t _internal_external_key_count() const;
  void _internal_set_external_key_count(::uint32_t value);

  public:
  // uint32 internal_key_count = 7;
  void clear_internal_key_count() ;
  ::uint32_t internal_key_count() const;
  void set_internal_key_count(::uint32_t value);

  private:
  ::uint32_t _internal_internal_key_count() const;
  void _internal_set_internal_key_count(::uint32_t value);

  public:
  // bool watch_only = 8;
  void clear_watch_only() ;
  bool watch_only() const;
  void set_watch_only(bool value);

  private:
  bool _internal_watch_only() const;
  void _internal_set_watch_only(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.Account)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Account_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Account& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr extended_public_key_;
    ::google::protobuf::internal::ArenaStringPtr master_key_fingerprint_;
    ::google::protobuf::internal::ArenaStringPtr derivation_path_;
    int address_type_;
    ::uint32_t external_key_count_;
    ::uint32_t internal_key_count_;
    bool watch_only_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class UtxoLease final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.UtxoLease) */ {
 public:
  inline UtxoLease() : UtxoLease(nullptr) {}
  ~UtxoLease() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UtxoLease(
      ::google::protobuf::internal::ConstantInitialized);

  inline UtxoLease(const UtxoLease& from) : UtxoLease(nullptr, from) {}
  inline UtxoLease(UtxoLease&& from) noexcept
      : UtxoLease(nullptr, std::move(from)) {}
  inline UtxoLease& operator=(const UtxoLease& from) {
    CopyFrom(from);
    return *this;
  }
  inline UtxoLease& operator=(UtxoLease&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UtxoLease& default_instance() {
    return *internal_default_instance();
  }
  static inline const UtxoLease* internal_default_instance() {
    return reinterpret_cast<const UtxoLease*>(
        &_UtxoLease_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(UtxoLease& a, UtxoLease& b) { a.Swap(&b); }
  inline void Swap(UtxoLease* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UtxoLease* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UtxoLease* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<UtxoLease>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UtxoLease& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UtxoLease& from) { UtxoLease::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UtxoLease* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.UtxoLease"; }

 protected:
  explicit UtxoLease(::google::protobuf::Arena* arena);
  UtxoLease(::google::protobuf::Arena* arena, const UtxoLease& from);
  UtxoLease(::google::protobuf::Arena* arena, UtxoLease&& from) noexcept
      : UtxoLease(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kPkScriptFieldNumber = 4,
    kOutpointFieldNumber = 2,
    kExpirationFieldNumber = 3,
    kValueFieldNumber = 5,
  };
  // bytes id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // bytes pk_script = 4;
  void clear_pk_script() ;
  const std::string& pk_script() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pk_script(Arg_&& arg, Args_... args);
  std::string* mutable_pk_script();
  PROTOBUF_NODISCARD std::string* release_pk_script();
  void set_allocated_pk_script(std::string* value);

  private:
  const std::string& _internal_pk_script() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pk_script(
      const std::string& value);
  std::string* _internal_mutable_pk_script();

  public:
  // .lnrpc.OutPoint outpoint = 2;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // uint64 expiration = 3;
  void clear_expiration() ;
  ::uint64_t expiration() const;
  void set_expiration(::uint64_t value);

  private:
  ::uint64_t _internal_expiration() const;
  void _internal_set_expiration(::uint64_t value);

  public:
  // uint64 value = 5;
  void clear_value() ;
  ::uint64_t value() const;
  void set_value(::uint64_t value);

  private:
  ::uint64_t _internal_value() const;
  void _internal_set_value(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.UtxoLease)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UtxoLease_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UtxoLease& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr pk_script_;
    ::lnrpc::OutPoint* outpoint_;
    ::uint64_t expiration_;
    ::uint64_t value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class TxTemplate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.TxTemplate) */ {
 public:
  inline TxTemplate() : TxTemplate(nullptr) {}
  ~TxTemplate() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TxTemplate(
      ::google::protobuf::internal::ConstantInitialized);

  inline TxTemplate(const TxTemplate& from) : TxTemplate(nullptr, from) {}
  inline TxTemplate(TxTemplate&& from) noexcept
      : TxTemplate(nullptr, std::move(from)) {}
  inline TxTemplate& operator=(const TxTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  inline TxTemplate& operator=(TxTemplate&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TxTemplate& default_instance() {
    return *internal_default_instance();
  }
  static inline const TxTemplate* internal_default_instance() {
    return reinterpret_cast<const TxTemplate*>(
        &_TxTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(TxTemplate& a, TxTemplate& b) { a.Swap(&b); }
  inline void Swap(TxTemplate* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TxTemplate* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TxTemplate* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TxTemplate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TxTemplate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TxTemplate& from) { TxTemplate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TxTemplate* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.TxTemplate"; }

 protected:
  explicit TxTemplate(::google::protobuf::Arena* arena);
  TxTemplate(::google::protobuf::Arena* arena, const TxTemplate& from);
  TxTemplate(::google::protobuf::Arena* arena, TxTemplate&& from) noexcept
      : TxTemplate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInputsFieldNumber = 1,
    kOutputsFieldNumber = 2,
  };
  // repeated .lnrpc.OutPoint inputs = 1;
  int inputs_size() const;
  private:
  int _internal_inputs_size() const;

  public:
  void clear_inputs() ;
  ::lnrpc::OutPoint* mutable_inputs(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* mutable_inputs();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& _internal_inputs() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* _internal_mutable_inputs();
  public:
  const ::lnrpc::OutPoint& inputs(int index) const;
  ::lnrpc::OutPoint* add_inputs();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& inputs() const;
  // map<string, uint64> outputs = 2;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  const ::google::protobuf::Map<std::string, ::uint64_t>& outputs() const;
  ::google::protobuf::Map<std::string, ::uint64_t>* mutable_outputs();

  private:
  const ::google::protobuf::Map<std::string, ::uint64_t>& _internal_outputs() const;
  ::google::protobuf::Map<std::string, ::uint64_t>* _internal_mutable_outputs();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.TxTemplate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TxTemplate_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TxTemplate& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::OutPoint > inputs_;
    ::google::protobuf::internal::MapField<TxTemplate_OutputsEntry_DoNotUse, std::string, ::uint64_t,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>
        outputs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class TapscriptPartialReveal final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.TapscriptPartialReveal) */ {
 public:
  inline TapscriptPartialReveal() : TapscriptPartialReveal(nullptr) {}
  ~TapscriptPartialReveal() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TapscriptPartialReveal(
      ::google::protobuf::internal::ConstantInitialized);

  inline TapscriptPartialReveal(const TapscriptPartialReveal& from) : TapscriptPartialReveal(nullptr, from) {}
  inline TapscriptPartialReveal(TapscriptPartialReveal&& from) noexcept
      : TapscriptPartialReveal(nullptr, std::move(from)) {}
  inline TapscriptPartialReveal& operator=(const TapscriptPartialReveal& from) {
    CopyFrom(from);
    return *this;
  }
  inline TapscriptPartialReveal& operator=(TapscriptPartialReveal&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TapscriptPartialReveal& default_instance() {
    return *internal_default_instance();
  }
  static inline const TapscriptPartialReveal* internal_default_instance() {
    return reinterpret_cast<const TapscriptPartialReveal*>(
        &_TapscriptPartialReveal_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(TapscriptPartialReveal& a, TapscriptPartialReveal& b) { a.Swap(&b); }
  inline void Swap(TapscriptPartialReveal* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TapscriptPartialReveal* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TapscriptPartialReveal* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TapscriptPartialReveal>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TapscriptPartialReveal& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TapscriptPartialReveal& from) { TapscriptPartialReveal::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TapscriptPartialReveal* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.TapscriptPartialReveal"; }

 protected:
  explicit TapscriptPartialReveal(::google::protobuf::Arena* arena);
  TapscriptPartialReveal(::google::protobuf::Arena* arena, const TapscriptPartialReveal& from);
  TapscriptPartialReveal(::google::protobuf::Arena* arena, TapscriptPartialReveal&& from) noexcept
      : TapscriptPartialReveal(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFullInclusionProofFieldNumber = 2,
    kRevealedLeafFieldNumber = 1,
  };
  // bytes full_inclusion_proof = 2;
  void clear_full_inclusion_proof() ;
  const std::string& full_inclusion_proof() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_full_inclusion_proof(Arg_&& arg, Args_... args);
  std::string* mutable_full_inclusion_proof();
  PROTOBUF_NODISCARD std::string* release_full_inclusion_proof();
  void set_allocated_full_inclusion_proof(std::string* value);

  private:
  const std::string& _internal_full_inclusion_proof() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_full_inclusion_proof(
      const std::string& value);
  std::string* _internal_mutable_full_inclusion_proof();

  public:
  // .walletrpc.TapLeaf revealed_leaf = 1;
  bool has_revealed_leaf() const;
  void clear_revealed_leaf() ;
  const ::walletrpc::TapLeaf& revealed_leaf() const;
  PROTOBUF_NODISCARD ::walletrpc::TapLeaf* release_revealed_leaf();
  ::walletrpc::TapLeaf* mutable_revealed_leaf();
  void set_allocated_revealed_leaf(::walletrpc::TapLeaf* value);
  void unsafe_arena_set_allocated_revealed_leaf(::walletrpc::TapLeaf* value);
  ::walletrpc::TapLeaf* unsafe_arena_release_revealed_leaf();

  private:
  const ::walletrpc::TapLeaf& _internal_revealed_leaf() const;
  ::walletrpc::TapLeaf* _internal_mutable_revealed_leaf();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.TapscriptPartialReveal)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TapscriptPartialReveal_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TapscriptPartialReveal& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr full_inclusion_proof_;
    ::walletrpc::TapLeaf* revealed_leaf_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class TapscriptFullTree final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.TapscriptFullTree) */ {
 public:
  inline TapscriptFullTree() : TapscriptFullTree(nullptr) {}
  ~TapscriptFullTree() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TapscriptFullTree(
      ::google::protobuf::internal::ConstantInitialized);

  inline TapscriptFullTree(const TapscriptFullTree& from) : TapscriptFullTree(nullptr, from) {}
  inline TapscriptFullTree(TapscriptFullTree&& from) noexcept
      : TapscriptFullTree(nullptr, std::move(from)) {}
  inline TapscriptFullTree& operator=(const TapscriptFullTree& from) {
    CopyFrom(from);
    return *this;
  }
  inline TapscriptFullTree& operator=(TapscriptFullTree&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TapscriptFullTree& default_instance() {
    return *internal_default_instance();
  }
  static inline const TapscriptFullTree* internal_default_instance() {
    return reinterpret_cast<const TapscriptFullTree*>(
        &_TapscriptFullTree_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(TapscriptFullTree& a, TapscriptFullTree& b) { a.Swap(&b); }
  inline void Swap(TapscriptFullTree* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TapscriptFullTree* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TapscriptFullTree* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<TapscriptFullTree>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TapscriptFullTree& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TapscriptFullTree& from) { TapscriptFullTree::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TapscriptFullTree* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.TapscriptFullTree"; }

 protected:
  explicit TapscriptFullTree(::google::protobuf::Arena* arena);
  TapscriptFullTree(::google::protobuf::Arena* arena, const TapscriptFullTree& from);
  TapscriptFullTree(::google::protobuf::Arena* arena, TapscriptFullTree&& from) noexcept
      : TapscriptFullTree(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAllLeavesFieldNumber = 1,
  };
  // repeated .walletrpc.TapLeaf all_leaves = 1;
  int all_leaves_size() const;
  private:
  int _internal_all_leaves_size() const;

  public:
  void clear_all_leaves() ;
  ::walletrpc::TapLeaf* mutable_all_leaves(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>* mutable_all_leaves();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>& _internal_all_leaves() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>* _internal_mutable_all_leaves();
  public:
  const ::walletrpc::TapLeaf& all_leaves(int index) const;
  ::walletrpc::TapLeaf* add_all_leaves();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>& all_leaves() const;
  // @@protoc_insertion_point(class_scope:walletrpc.TapscriptFullTree)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TapscriptFullTree_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TapscriptFullTree& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::TapLeaf > all_leaves_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class SendOutputsRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.SendOutputsRequest) */ {
 public:
  inline SendOutputsRequest() : SendOutputsRequest(nullptr) {}
  ~SendOutputsRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SendOutputsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline SendOutputsRequest(const SendOutputsRequest& from) : SendOutputsRequest(nullptr, from) {}
  inline SendOutputsRequest(SendOutputsRequest&& from) noexcept
      : SendOutputsRequest(nullptr, std::move(from)) {}
  inline SendOutputsRequest& operator=(const SendOutputsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendOutputsRequest& operator=(SendOutputsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendOutputsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendOutputsRequest* internal_default_instance() {
    return reinterpret_cast<const SendOutputsRequest*>(
        &_SendOutputsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(SendOutputsRequest& a, SendOutputsRequest& b) { a.Swap(&b); }
  inline void Swap(SendOutputsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendOutputsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendOutputsRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<SendOutputsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SendOutputsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SendOutputsRequest& from) { SendOutputsRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SendOutputsRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.SendOutputsRequest"; }

 protected:
  explicit SendOutputsRequest(::google::protobuf::Arena* arena);
  SendOutputsRequest(::google::protobuf::Arena* arena, const SendOutputsRequest& from);
  SendOutputsRequest(::google::protobuf::Arena* arena, SendOutputsRequest&& from) noexcept
      : SendOutputsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputsFieldNumber = 2,
    kLabelFieldNumber = 3,
    kSatPerKwFieldNumber = 1,
    kMinConfsFieldNumber = 4,
    kSpendUnconfirmedFieldNumber = 5,
    kCoinSelectionStrategyFieldNumber = 6,
  };
  // repeated .signrpc.TxOut outputs = 2;
  int outputs_size() const;
  private:
  int _internal_outputs_size() const;

  public:
  void clear_outputs() ;
  ::signrpc::TxOut* mutable_outputs(int index);
  ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>* mutable_outputs();

  private:
  const ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>& _internal_outputs() const;
  ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>* _internal_mutable_outputs();
  public:
  const ::signrpc::TxOut& outputs(int index) const;
  ::signrpc::TxOut* add_outputs();
  const ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>& outputs() const;
  // string label = 3;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // int64 sat_per_kw = 1;
  void clear_sat_per_kw() ;
  ::int64_t sat_per_kw() const;
  void set_sat_per_kw(::int64_t value);

  private:
  ::int64_t _internal_sat_per_kw() const;
  void _internal_set_sat_per_kw(::int64_t value);

  public:
  // int32 min_confs = 4;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // bool spend_unconfirmed = 5;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // .lnrpc.CoinSelectionStrategy coin_selection_strategy = 6;
  void clear_coin_selection_strategy() ;
  ::lnrpc::CoinSelectionStrategy coin_selection_strategy() const;
  void set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  private:
  ::lnrpc::CoinSelectionStrategy _internal_coin_selection_strategy() const;
  void _internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.SendOutputsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SendOutputsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SendOutputsRequest& from_msg);
    ::google::protobuf::RepeatedPtrField< ::signrpc::TxOut > outputs_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::int64_t sat_per_kw_;
    ::int32_t min_confs_;
    bool spend_unconfirmed_;
    int coin_selection_strategy_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ReleaseOutputRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ReleaseOutputRequest) */ {
 public:
  inline ReleaseOutputRequest() : ReleaseOutputRequest(nullptr) {}
  ~ReleaseOutputRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ReleaseOutputRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ReleaseOutputRequest(const ReleaseOutputRequest& from) : ReleaseOutputRequest(nullptr, from) {}
  inline ReleaseOutputRequest(ReleaseOutputRequest&& from) noexcept
      : ReleaseOutputRequest(nullptr, std::move(from)) {}
  inline ReleaseOutputRequest& operator=(const ReleaseOutputRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReleaseOutputRequest& operator=(ReleaseOutputRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReleaseOutputRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReleaseOutputRequest* internal_default_instance() {
    return reinterpret_cast<const ReleaseOutputRequest*>(
        &_ReleaseOutputRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ReleaseOutputRequest& a, ReleaseOutputRequest& b) { a.Swap(&b); }
  inline void Swap(ReleaseOutputRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReleaseOutputRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReleaseOutputRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ReleaseOutputRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReleaseOutputRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ReleaseOutputRequest& from) { ReleaseOutputRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReleaseOutputRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ReleaseOutputRequest"; }

 protected:
  explicit ReleaseOutputRequest(::google::protobuf::Arena* arena);
  ReleaseOutputRequest(::google::protobuf::Arena* arena, const ReleaseOutputRequest& from);
  ReleaseOutputRequest(::google::protobuf::Arena* arena, ReleaseOutputRequest&& from) noexcept
      : ReleaseOutputRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kOutpointFieldNumber = 2,
  };
  // bytes id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .lnrpc.OutPoint outpoint = 2;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ReleaseOutputRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ReleaseOutputRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ReleaseOutputRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::lnrpc::OutPoint* outpoint_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class PendingSweep final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.PendingSweep) */ {
 public:
  inline PendingSweep() : PendingSweep(nullptr) {}
  ~PendingSweep() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingSweep(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingSweep(const PendingSweep& from) : PendingSweep(nullptr, from) {}
  inline PendingSweep(PendingSweep&& from) noexcept
      : PendingSweep(nullptr, std::move(from)) {}
  inline PendingSweep& operator=(const PendingSweep& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingSweep& operator=(PendingSweep&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingSweep& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingSweep* internal_default_instance() {
    return reinterpret_cast<const PendingSweep*>(
        &_PendingSweep_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(PendingSweep& a, PendingSweep& b) { a.Swap(&b); }
  inline void Swap(PendingSweep* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingSweep* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingSweep* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingSweep>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingSweep& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingSweep& from) { PendingSweep::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingSweep* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.PendingSweep"; }

 protected:
  explicit PendingSweep(::google::protobuf::Arena* arena);
  PendingSweep(::google::protobuf::Arena* arena, const PendingSweep& from);
  PendingSweep(::google::protobuf::Arena* arena, PendingSweep&& from) noexcept
      : PendingSweep(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutpointFieldNumber = 1,
    kWitnessTypeFieldNumber = 2,
    kAmountSatFieldNumber = 3,
    kSatPerByteFieldNumber = 4,
    kBroadcastAttemptsFieldNumber = 5,
    kNextBroadcastHeightFieldNumber = 6,
    kRequestedConfTargetFieldNumber = 8,
    kRequestedSatPerByteFieldNumber = 9,
    kForceFieldNumber = 7,
    kImmediateFieldNumber = 12,
    kSatPerVbyteFieldNumber = 10,
    kRequestedSatPerVbyteFieldNumber = 11,
    kBudgetFieldNumber = 13,
    kDeadlineHeightFieldNumber = 14,
  };
  // .lnrpc.OutPoint outpoint = 1;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // .walletrpc.WitnessType witness_type = 2;
  void clear_witness_type() ;
  ::walletrpc::WitnessType witness_type() const;
  void set_witness_type(::walletrpc::WitnessType value);

  private:
  ::walletrpc::WitnessType _internal_witness_type() const;
  void _internal_set_witness_type(::walletrpc::WitnessType value);

  public:
  // uint32 amount_sat = 3;
  void clear_amount_sat() ;
  ::uint32_t amount_sat() const;
  void set_amount_sat(::uint32_t value);

  private:
  ::uint32_t _internal_amount_sat() const;
  void _internal_set_amount_sat(::uint32_t value);

  public:
  // uint32 sat_per_byte = 4 [deprecated = true];
  [[deprecated]]  void clear_sat_per_byte() ;
  [[deprecated]] ::uint32_t sat_per_byte() const;
  [[deprecated]] void set_sat_per_byte(::uint32_t value);

  private:
  ::uint32_t _internal_sat_per_byte() const;
  void _internal_set_sat_per_byte(::uint32_t value);

  public:
  // uint32 broadcast_attempts = 5;
  void clear_broadcast_attempts() ;
  ::uint32_t broadcast_attempts() const;
  void set_broadcast_attempts(::uint32_t value);

  private:
  ::uint32_t _internal_broadcast_attempts() const;
  void _internal_set_broadcast_attempts(::uint32_t value);

  public:
  // uint32 next_broadcast_height = 6 [deprecated = true];
  [[deprecated]]  void clear_next_broadcast_height() ;
  [[deprecated]] ::uint32_t next_broadcast_height() const;
  [[deprecated]] void set_next_broadcast_height(::uint32_t value);

  private:
  ::uint32_t _internal_next_broadcast_height() const;
  void _internal_set_next_broadcast_height(::uint32_t value);

  public:
  // uint32 requested_conf_target = 8 [deprecated = true];
  [[deprecated]]  void clear_requested_conf_target() ;
  [[deprecated]] ::uint32_t requested_conf_target() const;
  [[deprecated]] void set_requested_conf_target(::uint32_t value);

  private:
  ::uint32_t _internal_requested_conf_target() const;
  void _internal_set_requested_conf_target(::uint32_t value);

  public:
  // uint32 requested_sat_per_byte = 9 [deprecated = true];
  [[deprecated]]  void clear_requested_sat_per_byte() ;
  [[deprecated]] ::uint32_t requested_sat_per_byte() const;
  [[deprecated]] void set_requested_sat_per_byte(::uint32_t value);

  private:
  ::uint32_t _internal_requested_sat_per_byte() const;
  void _internal_set_requested_sat_per_byte(::uint32_t value);

  public:
  // bool force = 7 [deprecated = true];
  [[deprecated]]  void clear_force() ;
  [[deprecated]] bool force() const;
  [[deprecated]] void set_force(bool value);

  private:
  bool _internal_force() const;
  void _internal_set_force(bool value);

  public:
  // bool immediate = 12;
  void clear_immediate() ;
  bool immediate() const;
  void set_immediate(bool value);

  private:
  bool _internal_immediate() const;
  void _internal_set_immediate(bool value);

  public:
  // uint64 sat_per_vbyte = 10;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // uint64 requested_sat_per_vbyte = 11;
  void clear_requested_sat_per_vbyte() ;
  ::uint64_t requested_sat_per_vbyte() const;
  void set_requested_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_requested_sat_per_vbyte() const;
  void _internal_set_requested_sat_per_vbyte(::uint64_t value);

  public:
  // uint64 budget = 13;
  void clear_budget() ;
  ::uint64_t budget() const;
  void set_budget(::uint64_t value);

  private:
  ::uint64_t _internal_budget() const;
  void _internal_set_budget(::uint64_t value);

  public:
  // uint32 deadline_height = 14;
  void clear_deadline_height() ;
  ::uint32_t deadline_height() const;
  void set_deadline_height(::uint32_t value);

  private:
  ::uint32_t _internal_deadline_height() const;
  void _internal_set_deadline_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.PendingSweep)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 14, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingSweep_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingSweep& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::OutPoint* outpoint_;
    int witness_type_;
    ::uint32_t amount_sat_;
    ::uint32_t sat_per_byte_;
    ::uint32_t broadcast_attempts_;
    ::uint32_t next_broadcast_height_;
    ::uint32_t requested_conf_target_;
    ::uint32_t requested_sat_per_byte_;
    bool force_;
    bool immediate_;
    ::uint64_t sat_per_vbyte_;
    ::uint64_t requested_sat_per_vbyte_;
    ::uint64_t budget_;
    ::uint32_t deadline_height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListAccountsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListAccountsResponse) */ {
 public:
  inline ListAccountsResponse() : ListAccountsResponse(nullptr) {}
  ~ListAccountsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAccountsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAccountsResponse(const ListAccountsResponse& from) : ListAccountsResponse(nullptr, from) {}
  inline ListAccountsResponse(ListAccountsResponse&& from) noexcept
      : ListAccountsResponse(nullptr, std::move(from)) {}
  inline ListAccountsResponse& operator=(const ListAccountsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAccountsResponse& operator=(ListAccountsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAccountsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAccountsResponse* internal_default_instance() {
    return reinterpret_cast<const ListAccountsResponse*>(
        &_ListAccountsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ListAccountsResponse& a, ListAccountsResponse& b) { a.Swap(&b); }
  inline void Swap(ListAccountsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAccountsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAccountsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListAccountsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAccountsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAccountsResponse& from) { ListAccountsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAccountsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListAccountsResponse"; }

 protected:
  explicit ListAccountsResponse(::google::protobuf::Arena* arena);
  ListAccountsResponse(::google::protobuf::Arena* arena, const ListAccountsResponse& from);
  ListAccountsResponse(::google::protobuf::Arena* arena, ListAccountsResponse&& from) noexcept
      : ListAccountsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountsFieldNumber = 1,
  };
  // repeated .walletrpc.Account accounts = 1;
  int accounts_size() const;
  private:
  int _internal_accounts_size() const;

  public:
  void clear_accounts() ;
  ::walletrpc::Account* mutable_accounts(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::Account>* mutable_accounts();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::Account>& _internal_accounts() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::Account>* _internal_mutable_accounts();
  public:
  const ::walletrpc::Account& accounts(int index) const;
  ::walletrpc::Account* add_accounts();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::Account>& accounts() const;
  // @@protoc_insertion_point(class_scope:walletrpc.ListAccountsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAccountsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAccountsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::Account > accounts_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class LeaseOutputRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.LeaseOutputRequest) */ {
 public:
  inline LeaseOutputRequest() : LeaseOutputRequest(nullptr) {}
  ~LeaseOutputRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LeaseOutputRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline LeaseOutputRequest(const LeaseOutputRequest& from) : LeaseOutputRequest(nullptr, from) {}
  inline LeaseOutputRequest(LeaseOutputRequest&& from) noexcept
      : LeaseOutputRequest(nullptr, std::move(from)) {}
  inline LeaseOutputRequest& operator=(const LeaseOutputRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaseOutputRequest& operator=(LeaseOutputRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaseOutputRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaseOutputRequest* internal_default_instance() {
    return reinterpret_cast<const LeaseOutputRequest*>(
        &_LeaseOutputRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(LeaseOutputRequest& a, LeaseOutputRequest& b) { a.Swap(&b); }
  inline void Swap(LeaseOutputRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaseOutputRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaseOutputRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<LeaseOutputRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaseOutputRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LeaseOutputRequest& from) { LeaseOutputRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaseOutputRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.LeaseOutputRequest"; }

 protected:
  explicit LeaseOutputRequest(::google::protobuf::Arena* arena);
  LeaseOutputRequest(::google::protobuf::Arena* arena, const LeaseOutputRequest& from);
  LeaseOutputRequest(::google::protobuf::Arena* arena, LeaseOutputRequest&& from) noexcept
      : LeaseOutputRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kOutpointFieldNumber = 2,
    kExpirationSecondsFieldNumber = 3,
  };
  // bytes id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // .lnrpc.OutPoint outpoint = 2;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // uint64 expiration_seconds = 3;
  void clear_expiration_seconds() ;
  ::uint64_t expiration_seconds() const;
  void set_expiration_seconds(::uint64_t value);

  private:
  ::uint64_t _internal_expiration_seconds() const;
  void _internal_set_expiration_seconds(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.LeaseOutputRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LeaseOutputRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LeaseOutputRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::lnrpc::OutPoint* outpoint_;
    ::uint64_t expiration_seconds_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ImportAccountResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ImportAccountResponse) */ {
 public:
  inline ImportAccountResponse() : ImportAccountResponse(nullptr) {}
  ~ImportAccountResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImportAccountResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImportAccountResponse(const ImportAccountResponse& from) : ImportAccountResponse(nullptr, from) {}
  inline ImportAccountResponse(ImportAccountResponse&& from) noexcept
      : ImportAccountResponse(nullptr, std::move(from)) {}
  inline ImportAccountResponse& operator=(const ImportAccountResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportAccountResponse& operator=(ImportAccountResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImportAccountResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImportAccountResponse* internal_default_instance() {
    return reinterpret_cast<const ImportAccountResponse*>(
        &_ImportAccountResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(ImportAccountResponse& a, ImportAccountResponse& b) { a.Swap(&b); }
  inline void Swap(ImportAccountResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportAccountResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImportAccountResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ImportAccountResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImportAccountResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImportAccountResponse& from) { ImportAccountResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImportAccountResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ImportAccountResponse"; }

 protected:
  explicit ImportAccountResponse(::google::protobuf::Arena* arena);
  ImportAccountResponse(::google::protobuf::Arena* arena, const ImportAccountResponse& from);
  ImportAccountResponse(::google::protobuf::Arena* arena, ImportAccountResponse&& from) noexcept
      : ImportAccountResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDryRunExternalAddrsFieldNumber = 2,
    kDryRunInternalAddrsFieldNumber = 3,
    kAccountFieldNumber = 1,
  };
  // repeated string dry_run_external_addrs = 2;
  int dry_run_external_addrs_size() const;
  private:
  int _internal_dry_run_external_addrs_size() const;

  public:
  void clear_dry_run_external_addrs() ;
  const std::string& dry_run_external_addrs(int index) const;
  std::string* mutable_dry_run_external_addrs(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dry_run_external_addrs(int index, Arg_&& value, Args_... args);
  std::string* add_dry_run_external_addrs();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dry_run_external_addrs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dry_run_external_addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dry_run_external_addrs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dry_run_external_addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dry_run_external_addrs();

  public:
  // repeated string dry_run_internal_addrs = 3;
  int dry_run_internal_addrs_size() const;
  private:
  int _internal_dry_run_internal_addrs_size() const;

  public:
  void clear_dry_run_internal_addrs() ;
  const std::string& dry_run_internal_addrs(int index) const;
  std::string* mutable_dry_run_internal_addrs(int index);
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dry_run_internal_addrs(int index, Arg_&& value, Args_... args);
  std::string* add_dry_run_internal_addrs();
  template <typename Arg_ = const std::string&, typename... Args_>
  void add_dry_run_internal_addrs(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<std::string>& dry_run_internal_addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_dry_run_internal_addrs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_dry_run_internal_addrs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_dry_run_internal_addrs();

  public:
  // .walletrpc.Account account = 1;
  bool has_account() const;
  void clear_account() ;
  const ::walletrpc::Account& account() const;
  PROTOBUF_NODISCARD ::walletrpc::Account* release_account();
  ::walletrpc::Account* mutable_account();
  void set_allocated_account(::walletrpc::Account* value);
  void unsafe_arena_set_allocated_account(::walletrpc::Account* value);
  ::walletrpc::Account* unsafe_arena_release_account();

  private:
  const ::walletrpc::Account& _internal_account() const;
  ::walletrpc::Account* _internal_mutable_account();

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.ImportAccountResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      84, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImportAccountResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImportAccountResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> dry_run_external_addrs_;
    ::google::protobuf::RepeatedPtrField<std::string> dry_run_internal_addrs_;
    ::walletrpc::Account* account_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class BumpForceCloseFeeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.BumpForceCloseFeeRequest) */ {
 public:
  inline BumpForceCloseFeeRequest() : BumpForceCloseFeeRequest(nullptr) {}
  ~BumpForceCloseFeeRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BumpForceCloseFeeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BumpForceCloseFeeRequest(const BumpForceCloseFeeRequest& from) : BumpForceCloseFeeRequest(nullptr, from) {}
  inline BumpForceCloseFeeRequest(BumpForceCloseFeeRequest&& from) noexcept
      : BumpForceCloseFeeRequest(nullptr, std::move(from)) {}
  inline BumpForceCloseFeeRequest& operator=(const BumpForceCloseFeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BumpForceCloseFeeRequest& operator=(BumpForceCloseFeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BumpForceCloseFeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BumpForceCloseFeeRequest* internal_default_instance() {
    return reinterpret_cast<const BumpForceCloseFeeRequest*>(
        &_BumpForceCloseFeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(BumpForceCloseFeeRequest& a, BumpForceCloseFeeRequest& b) { a.Swap(&b); }
  inline void Swap(BumpForceCloseFeeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BumpForceCloseFeeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BumpForceCloseFeeRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BumpForceCloseFeeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BumpForceCloseFeeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BumpForceCloseFeeRequest& from) { BumpForceCloseFeeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BumpForceCloseFeeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.BumpForceCloseFeeRequest"; }

 protected:
  explicit BumpForceCloseFeeRequest(::google::protobuf::Arena* arena);
  BumpForceCloseFeeRequest(::google::protobuf::Arena* arena, const BumpForceCloseFeeRequest& from);
  BumpForceCloseFeeRequest(::google::protobuf::Arena* arena, BumpForceCloseFeeRequest&& from) noexcept
      : BumpForceCloseFeeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChanPointFieldNumber = 1,
    kStartingFeerateFieldNumber = 3,
    kDeadlineDeltaFieldNumber = 2,
    kImmediateFieldNumber = 4,
    kBudgetFieldNumber = 5,
  };
  // .lnrpc.ChannelPoint chan_point = 1;
  bool has_chan_point() const;
  void clear_chan_point() ;
  const ::lnrpc::ChannelPoint& chan_point() const;
  PROTOBUF_NODISCARD ::lnrpc::ChannelPoint* release_chan_point();
  ::lnrpc::ChannelPoint* mutable_chan_point();
  void set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  void unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value);
  ::lnrpc::ChannelPoint* unsafe_arena_release_chan_point();

  private:
  const ::lnrpc::ChannelPoint& _internal_chan_point() const;
  ::lnrpc::ChannelPoint* _internal_mutable_chan_point();

  public:
  // uint64 starting_feerate = 3;
  void clear_starting_feerate() ;
  ::uint64_t starting_feerate() const;
  void set_starting_feerate(::uint64_t value);

  private:
  ::uint64_t _internal_starting_feerate() const;
  void _internal_set_starting_feerate(::uint64_t value);

  public:
  // uint32 deadline_delta = 2;
  void clear_deadline_delta() ;
  ::uint32_t deadline_delta() const;
  void set_deadline_delta(::uint32_t value);

  private:
  ::uint32_t _internal_deadline_delta() const;
  void _internal_set_deadline_delta(::uint32_t value);

  public:
  // bool immediate = 4;
  void clear_immediate() ;
  bool immediate() const;
  void set_immediate(bool value);

  private:
  bool _internal_immediate() const;
  void _internal_set_immediate(bool value);

  public:
  // uint64 budget = 5;
  void clear_budget() ;
  ::uint64_t budget() const;
  void set_budget(::uint64_t value);

  private:
  ::uint64_t _internal_budget() const;
  void _internal_set_budget(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.BumpForceCloseFeeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BumpForceCloseFeeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BumpForceCloseFeeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::ChannelPoint* chan_point_;
    ::uint64_t starting_feerate_;
    ::uint32_t deadline_delta_;
    bool immediate_;
    ::uint64_t budget_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class BumpFeeRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.BumpFeeRequest) */ {
 public:
  inline BumpFeeRequest() : BumpFeeRequest(nullptr) {}
  ~BumpFeeRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BumpFeeRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline BumpFeeRequest(const BumpFeeRequest& from) : BumpFeeRequest(nullptr, from) {}
  inline BumpFeeRequest(BumpFeeRequest&& from) noexcept
      : BumpFeeRequest(nullptr, std::move(from)) {}
  inline BumpFeeRequest& operator=(const BumpFeeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline BumpFeeRequest& operator=(BumpFeeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BumpFeeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const BumpFeeRequest* internal_default_instance() {
    return reinterpret_cast<const BumpFeeRequest*>(
        &_BumpFeeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(BumpFeeRequest& a, BumpFeeRequest& b) { a.Swap(&b); }
  inline void Swap(BumpFeeRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BumpFeeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BumpFeeRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<BumpFeeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BumpFeeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BumpFeeRequest& from) { BumpFeeRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BumpFeeRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.BumpFeeRequest"; }

 protected:
  explicit BumpFeeRequest(::google::protobuf::Arena* arena);
  BumpFeeRequest(::google::protobuf::Arena* arena, const BumpFeeRequest& from);
  BumpFeeRequest(::google::protobuf::Arena* arena, BumpFeeRequest&& from) noexcept
      : BumpFeeRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutpointFieldNumber = 1,
    kTargetConfFieldNumber = 2,
    kSatPerByteFieldNumber = 3,
    kSatPerVbyteFieldNumber = 5,
    kBudgetFieldNumber = 7,
    kForceFieldNumber = 4,
    kImmediateFieldNumber = 6,
  };
  // .lnrpc.OutPoint outpoint = 1;
  bool has_outpoint() const;
  void clear_outpoint() ;
  const ::lnrpc::OutPoint& outpoint() const;
  PROTOBUF_NODISCARD ::lnrpc::OutPoint* release_outpoint();
  ::lnrpc::OutPoint* mutable_outpoint();
  void set_allocated_outpoint(::lnrpc::OutPoint* value);
  void unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value);
  ::lnrpc::OutPoint* unsafe_arena_release_outpoint();

  private:
  const ::lnrpc::OutPoint& _internal_outpoint() const;
  ::lnrpc::OutPoint* _internal_mutable_outpoint();

  public:
  // uint32 target_conf = 2;
  void clear_target_conf() ;
  ::uint32_t target_conf() const;
  void set_target_conf(::uint32_t value);

  private:
  ::uint32_t _internal_target_conf() const;
  void _internal_set_target_conf(::uint32_t value);

  public:
  // uint32 sat_per_byte = 3 [deprecated = true];
  [[deprecated]]  void clear_sat_per_byte() ;
  [[deprecated]] ::uint32_t sat_per_byte() const;
  [[deprecated]] void set_sat_per_byte(::uint32_t value);

  private:
  ::uint32_t _internal_sat_per_byte() const;
  void _internal_set_sat_per_byte(::uint32_t value);

  public:
  // uint64 sat_per_vbyte = 5;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  // uint64 budget = 7;
  void clear_budget() ;
  ::uint64_t budget() const;
  void set_budget(::uint64_t value);

  private:
  ::uint64_t _internal_budget() const;
  void _internal_set_budget(::uint64_t value);

  public:
  // bool force = 4 [deprecated = true];
  [[deprecated]]  void clear_force() ;
  [[deprecated]] bool force() const;
  [[deprecated]] void set_force(bool value);

  private:
  bool _internal_force() const;
  void _internal_set_force(bool value);

  public:
  // bool immediate = 6;
  void clear_immediate() ;
  bool immediate() const;
  void set_immediate(bool value);

  private:
  bool _internal_immediate() const;
  void _internal_set_immediate(bool value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.BumpFeeRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BumpFeeRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BumpFeeRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::lnrpc::OutPoint* outpoint_;
    ::uint32_t target_conf_;
    ::uint32_t sat_per_byte_;
    ::uint64_t sat_per_vbyte_;
    ::uint64_t budget_;
    bool force_;
    bool immediate_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class AccountWithAddresses final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.AccountWithAddresses) */ {
 public:
  inline AccountWithAddresses() : AccountWithAddresses(nullptr) {}
  ~AccountWithAddresses() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AccountWithAddresses(
      ::google::protobuf::internal::ConstantInitialized);

  inline AccountWithAddresses(const AccountWithAddresses& from) : AccountWithAddresses(nullptr, from) {}
  inline AccountWithAddresses(AccountWithAddresses&& from) noexcept
      : AccountWithAddresses(nullptr, std::move(from)) {}
  inline AccountWithAddresses& operator=(const AccountWithAddresses& from) {
    CopyFrom(from);
    return *this;
  }
  inline AccountWithAddresses& operator=(AccountWithAddresses&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AccountWithAddresses& default_instance() {
    return *internal_default_instance();
  }
  static inline const AccountWithAddresses* internal_default_instance() {
    return reinterpret_cast<const AccountWithAddresses*>(
        &_AccountWithAddresses_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(AccountWithAddresses& a, AccountWithAddresses& b) { a.Swap(&b); }
  inline void Swap(AccountWithAddresses* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AccountWithAddresses* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AccountWithAddresses* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<AccountWithAddresses>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AccountWithAddresses& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AccountWithAddresses& from) { AccountWithAddresses::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AccountWithAddresses* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.AccountWithAddresses"; }

 protected:
  explicit AccountWithAddresses(::google::protobuf::Arena* arena);
  AccountWithAddresses(::google::protobuf::Arena* arena, const AccountWithAddresses& from);
  AccountWithAddresses(::google::protobuf::Arena* arena, AccountWithAddresses&& from) noexcept
      : AccountWithAddresses(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAddressesFieldNumber = 4,
    kNameFieldNumber = 1,
    kDerivationPathFieldNumber = 3,
    kAddressTypeFieldNumber = 2,
  };
  // repeated .walletrpc.AddressProperty addresses = 4;
  int addresses_size() const;
  private:
  int _internal_addresses_size() const;

  public:
  void clear_addresses() ;
  ::walletrpc::AddressProperty* mutable_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>* mutable_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>& _internal_addresses() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>* _internal_mutable_addresses();
  public:
  const ::walletrpc::AddressProperty& addresses(int index) const;
  ::walletrpc::AddressProperty* add_addresses();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>& addresses() const;
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string derivation_path = 3;
  void clear_derivation_path() ;
  const std::string& derivation_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_derivation_path(Arg_&& arg, Args_... args);
  std::string* mutable_derivation_path();
  PROTOBUF_NODISCARD std::string* release_derivation_path();
  void set_allocated_derivation_path(std::string* value);

  private:
  const std::string& _internal_derivation_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_derivation_path(
      const std::string& value);
  std::string* _internal_mutable_derivation_path();

  public:
  // .walletrpc.AddressType address_type = 2;
  void clear_address_type() ;
  ::walletrpc::AddressType address_type() const;
  void set_address_type(::walletrpc::AddressType value);

  private:
  ::walletrpc::AddressType _internal_address_type() const;
  void _internal_set_address_type(::walletrpc::AddressType value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.AccountWithAddresses)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AccountWithAddresses_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AccountWithAddresses& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::AddressProperty > addresses_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr derivation_path_;
    int address_type_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class PendingSweepsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.PendingSweepsResponse) */ {
 public:
  inline PendingSweepsResponse() : PendingSweepsResponse(nullptr) {}
  ~PendingSweepsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR PendingSweepsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline PendingSweepsResponse(const PendingSweepsResponse& from) : PendingSweepsResponse(nullptr, from) {}
  inline PendingSweepsResponse(PendingSweepsResponse&& from) noexcept
      : PendingSweepsResponse(nullptr, std::move(from)) {}
  inline PendingSweepsResponse& operator=(const PendingSweepsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PendingSweepsResponse& operator=(PendingSweepsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PendingSweepsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PendingSweepsResponse* internal_default_instance() {
    return reinterpret_cast<const PendingSweepsResponse*>(
        &_PendingSweepsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(PendingSweepsResponse& a, PendingSweepsResponse& b) { a.Swap(&b); }
  inline void Swap(PendingSweepsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PendingSweepsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PendingSweepsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<PendingSweepsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PendingSweepsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const PendingSweepsResponse& from) { PendingSweepsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PendingSweepsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.PendingSweepsResponse"; }

 protected:
  explicit PendingSweepsResponse(::google::protobuf::Arena* arena);
  PendingSweepsResponse(::google::protobuf::Arena* arena, const PendingSweepsResponse& from);
  PendingSweepsResponse(::google::protobuf::Arena* arena, PendingSweepsResponse&& from) noexcept
      : PendingSweepsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPendingSweepsFieldNumber = 1,
  };
  // repeated .walletrpc.PendingSweep pending_sweeps = 1;
  int pending_sweeps_size() const;
  private:
  int _internal_pending_sweeps_size() const;

  public:
  void clear_pending_sweeps() ;
  ::walletrpc::PendingSweep* mutable_pending_sweeps(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>* mutable_pending_sweeps();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>& _internal_pending_sweeps() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>* _internal_mutable_pending_sweeps();
  public:
  const ::walletrpc::PendingSweep& pending_sweeps(int index) const;
  ::walletrpc::PendingSweep* add_pending_sweeps();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>& pending_sweeps() const;
  // @@protoc_insertion_point(class_scope:walletrpc.PendingSweepsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_PendingSweepsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const PendingSweepsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::PendingSweep > pending_sweeps_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListUnspentResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListUnspentResponse) */ {
 public:
  inline ListUnspentResponse() : ListUnspentResponse(nullptr) {}
  ~ListUnspentResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListUnspentResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListUnspentResponse(const ListUnspentResponse& from) : ListUnspentResponse(nullptr, from) {}
  inline ListUnspentResponse(ListUnspentResponse&& from) noexcept
      : ListUnspentResponse(nullptr, std::move(from)) {}
  inline ListUnspentResponse& operator=(const ListUnspentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListUnspentResponse& operator=(ListUnspentResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListUnspentResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListUnspentResponse* internal_default_instance() {
    return reinterpret_cast<const ListUnspentResponse*>(
        &_ListUnspentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ListUnspentResponse& a, ListUnspentResponse& b) { a.Swap(&b); }
  inline void Swap(ListUnspentResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListUnspentResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListUnspentResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListUnspentResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListUnspentResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListUnspentResponse& from) { ListUnspentResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListUnspentResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListUnspentResponse"; }

 protected:
  explicit ListUnspentResponse(::google::protobuf::Arena* arena);
  ListUnspentResponse(::google::protobuf::Arena* arena, const ListUnspentResponse& from);
  ListUnspentResponse(::google::protobuf::Arena* arena, ListUnspentResponse&& from) noexcept
      : ListUnspentResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUtxosFieldNumber = 1,
  };
  // repeated .lnrpc.Utxo utxos = 1;
  int utxos_size() const;
  private:
  int _internal_utxos_size() const;

  public:
  void clear_utxos() ;
  ::lnrpc::Utxo* mutable_utxos(int index);
  ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>* mutable_utxos();

  private:
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>& _internal_utxos() const;
  ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>* _internal_mutable_utxos();
  public:
  const ::lnrpc::Utxo& utxos(int index) const;
  ::lnrpc::Utxo* add_utxos();
  const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>& utxos() const;
  // @@protoc_insertion_point(class_scope:walletrpc.ListUnspentResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListUnspentResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListUnspentResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::lnrpc::Utxo > utxos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListLeasesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListLeasesResponse) */ {
 public:
  inline ListLeasesResponse() : ListLeasesResponse(nullptr) {}
  ~ListLeasesResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListLeasesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListLeasesResponse(const ListLeasesResponse& from) : ListLeasesResponse(nullptr, from) {}
  inline ListLeasesResponse(ListLeasesResponse&& from) noexcept
      : ListLeasesResponse(nullptr, std::move(from)) {}
  inline ListLeasesResponse& operator=(const ListLeasesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListLeasesResponse& operator=(ListLeasesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListLeasesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListLeasesResponse* internal_default_instance() {
    return reinterpret_cast<const ListLeasesResponse*>(
        &_ListLeasesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(ListLeasesResponse& a, ListLeasesResponse& b) { a.Swap(&b); }
  inline void Swap(ListLeasesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListLeasesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListLeasesResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListLeasesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListLeasesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListLeasesResponse& from) { ListLeasesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListLeasesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListLeasesResponse"; }

 protected:
  explicit ListLeasesResponse(::google::protobuf::Arena* arena);
  ListLeasesResponse(::google::protobuf::Arena* arena, const ListLeasesResponse& from);
  ListLeasesResponse(::google::protobuf::Arena* arena, ListLeasesResponse&& from) noexcept
      : ListLeasesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLockedUtxosFieldNumber = 1,
  };
  // repeated .walletrpc.UtxoLease locked_utxos = 1;
  int locked_utxos_size() const;
  private:
  int _internal_locked_utxos_size() const;

  public:
  void clear_locked_utxos() ;
  ::walletrpc::UtxoLease* mutable_locked_utxos(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>* mutable_locked_utxos();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>& _internal_locked_utxos() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>* _internal_mutable_locked_utxos();
  public:
  const ::walletrpc::UtxoLease& locked_utxos(int index) const;
  ::walletrpc::UtxoLease* add_locked_utxos();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>& locked_utxos() const;
  // @@protoc_insertion_point(class_scope:walletrpc.ListLeasesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListLeasesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListLeasesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::UtxoLease > locked_utxos_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListAddressesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListAddressesResponse) */ {
 public:
  inline ListAddressesResponse() : ListAddressesResponse(nullptr) {}
  ~ListAddressesResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListAddressesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListAddressesResponse(const ListAddressesResponse& from) : ListAddressesResponse(nullptr, from) {}
  inline ListAddressesResponse(ListAddressesResponse&& from) noexcept
      : ListAddressesResponse(nullptr, std::move(from)) {}
  inline ListAddressesResponse& operator=(const ListAddressesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListAddressesResponse& operator=(ListAddressesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListAddressesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListAddressesResponse* internal_default_instance() {
    return reinterpret_cast<const ListAddressesResponse*>(
        &_ListAddressesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(ListAddressesResponse& a, ListAddressesResponse& b) { a.Swap(&b); }
  inline void Swap(ListAddressesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListAddressesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListAddressesResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListAddressesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListAddressesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListAddressesResponse& from) { ListAddressesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListAddressesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListAddressesResponse"; }

 protected:
  explicit ListAddressesResponse(::google::protobuf::Arena* arena);
  ListAddressesResponse(::google::protobuf::Arena* arena, const ListAddressesResponse& from);
  ListAddressesResponse(::google::protobuf::Arena* arena, ListAddressesResponse&& from) noexcept
      : ListAddressesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountWithAddressesFieldNumber = 1,
  };
  // repeated .walletrpc.AccountWithAddresses account_with_addresses = 1;
  int account_with_addresses_size() const;
  private:
  int _internal_account_with_addresses_size() const;

  public:
  void clear_account_with_addresses() ;
  ::walletrpc::AccountWithAddresses* mutable_account_with_addresses(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>* mutable_account_with_addresses();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>& _internal_account_with_addresses() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>* _internal_mutable_account_with_addresses();
  public:
  const ::walletrpc::AccountWithAddresses& account_with_addresses(int index) const;
  ::walletrpc::AccountWithAddresses* add_account_with_addresses();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>& account_with_addresses() const;
  // @@protoc_insertion_point(class_scope:walletrpc.ListAddressesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListAddressesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListAddressesResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::AccountWithAddresses > account_with_addresses_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ImportTapscriptRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ImportTapscriptRequest) */ {
 public:
  inline ImportTapscriptRequest() : ImportTapscriptRequest(nullptr) {}
  ~ImportTapscriptRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ImportTapscriptRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ImportTapscriptRequest(const ImportTapscriptRequest& from) : ImportTapscriptRequest(nullptr, from) {}
  inline ImportTapscriptRequest(ImportTapscriptRequest&& from) noexcept
      : ImportTapscriptRequest(nullptr, std::move(from)) {}
  inline ImportTapscriptRequest& operator=(const ImportTapscriptRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImportTapscriptRequest& operator=(ImportTapscriptRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImportTapscriptRequest& default_instance() {
    return *internal_default_instance();
  }
  enum ScriptCase {
    kFullTree = 2,
    kPartialReveal = 3,
    kRootHashOnly = 4,
    kFullKeyOnly = 5,
    SCRIPT_NOT_SET = 0,
  };
  static inline const ImportTapscriptRequest* internal_default_instance() {
    return reinterpret_cast<const ImportTapscriptRequest*>(
        &_ImportTapscriptRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ImportTapscriptRequest& a, ImportTapscriptRequest& b) { a.Swap(&b); }
  inline void Swap(ImportTapscriptRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImportTapscriptRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImportTapscriptRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ImportTapscriptRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ImportTapscriptRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ImportTapscriptRequest& from) { ImportTapscriptRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ImportTapscriptRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ImportTapscriptRequest"; }

 protected:
  explicit ImportTapscriptRequest(::google::protobuf::Arena* arena);
  ImportTapscriptRequest(::google::protobuf::Arena* arena, const ImportTapscriptRequest& from);
  ImportTapscriptRequest(::google::protobuf::Arena* arena, ImportTapscriptRequest&& from) noexcept
      : ImportTapscriptRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInternalPublicKeyFieldNumber = 1,
    kFullTreeFieldNumber = 2,
    kPartialRevealFieldNumber = 3,
    kRootHashOnlyFieldNumber = 4,
    kFullKeyOnlyFieldNumber = 5,
  };
  // bytes internal_public_key = 1;
  void clear_internal_public_key() ;
  const std::string& internal_public_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_internal_public_key(Arg_&& arg, Args_... args);
  std::string* mutable_internal_public_key();
  PROTOBUF_NODISCARD std::string* release_internal_public_key();
  void set_allocated_internal_public_key(std::string* value);

  private:
  const std::string& _internal_internal_public_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_internal_public_key(
      const std::string& value);
  std::string* _internal_mutable_internal_public_key();

  public:
  // .walletrpc.TapscriptFullTree full_tree = 2;
  bool has_full_tree() const;
  private:
  bool _internal_has_full_tree() const;

  public:
  void clear_full_tree() ;
  const ::walletrpc::TapscriptFullTree& full_tree() const;
  PROTOBUF_NODISCARD ::walletrpc::TapscriptFullTree* release_full_tree();
  ::walletrpc::TapscriptFullTree* mutable_full_tree();
  void set_allocated_full_tree(::walletrpc::TapscriptFullTree* value);
  void unsafe_arena_set_allocated_full_tree(::walletrpc::TapscriptFullTree* value);
  ::walletrpc::TapscriptFullTree* unsafe_arena_release_full_tree();

  private:
  const ::walletrpc::TapscriptFullTree& _internal_full_tree() const;
  ::walletrpc::TapscriptFullTree* _internal_mutable_full_tree();

  public:
  // .walletrpc.TapscriptPartialReveal partial_reveal = 3;
  bool has_partial_reveal() const;
  private:
  bool _internal_has_partial_reveal() const;

  public:
  void clear_partial_reveal() ;
  const ::walletrpc::TapscriptPartialReveal& partial_reveal() const;
  PROTOBUF_NODISCARD ::walletrpc::TapscriptPartialReveal* release_partial_reveal();
  ::walletrpc::TapscriptPartialReveal* mutable_partial_reveal();
  void set_allocated_partial_reveal(::walletrpc::TapscriptPartialReveal* value);
  void unsafe_arena_set_allocated_partial_reveal(::walletrpc::TapscriptPartialReveal* value);
  ::walletrpc::TapscriptPartialReveal* unsafe_arena_release_partial_reveal();

  private:
  const ::walletrpc::TapscriptPartialReveal& _internal_partial_reveal() const;
  ::walletrpc::TapscriptPartialReveal* _internal_mutable_partial_reveal();

  public:
  // bytes root_hash_only = 4;
  bool has_root_hash_only() const;
  void clear_root_hash_only() ;
  const std::string& root_hash_only() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_root_hash_only(Arg_&& arg, Args_... args);
  std::string* mutable_root_hash_only();
  PROTOBUF_NODISCARD std::string* release_root_hash_only();
  void set_allocated_root_hash_only(std::string* value);

  private:
  const std::string& _internal_root_hash_only() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_root_hash_only(
      const std::string& value);
  std::string* _internal_mutable_root_hash_only();

  public:
  // bool full_key_only = 5;
  bool has_full_key_only() const;
  void clear_full_key_only() ;
  bool full_key_only() const;
  void set_full_key_only(bool value);

  private:
  bool _internal_full_key_only() const;
  void _internal_set_full_key_only(bool value);

  public:
  void clear_script();
  ScriptCase script_case() const;
  // @@protoc_insertion_point(class_scope:walletrpc.ImportTapscriptRequest)
 private:
  class _Internal;
  void set_has_full_tree();
  void set_has_partial_reveal();
  void set_has_root_hash_only();
  void set_has_full_key_only();
  inline bool has_script() const;
  inline void clear_has_script();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 5, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ImportTapscriptRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ImportTapscriptRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr internal_public_key_;
    union ScriptUnion {
      constexpr ScriptUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::walletrpc::TapscriptFullTree* full_tree_;
      ::walletrpc::TapscriptPartialReveal* partial_reveal_;
      ::google::protobuf::internal::ArenaStringPtr root_hash_only_;
      bool full_key_only_;
    } script_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class FundPsbtResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.FundPsbtResponse) */ {
 public:
  inline FundPsbtResponse() : FundPsbtResponse(nullptr) {}
  ~FundPsbtResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundPsbtResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundPsbtResponse(const FundPsbtResponse& from) : FundPsbtResponse(nullptr, from) {}
  inline FundPsbtResponse(FundPsbtResponse&& from) noexcept
      : FundPsbtResponse(nullptr, std::move(from)) {}
  inline FundPsbtResponse& operator=(const FundPsbtResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundPsbtResponse& operator=(FundPsbtResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundPsbtResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FundPsbtResponse* internal_default_instance() {
    return reinterpret_cast<const FundPsbtResponse*>(
        &_FundPsbtResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(FundPsbtResponse& a, FundPsbtResponse& b) { a.Swap(&b); }
  inline void Swap(FundPsbtResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundPsbtResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundPsbtResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundPsbtResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundPsbtResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundPsbtResponse& from) { FundPsbtResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundPsbtResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.FundPsbtResponse"; }

 protected:
  explicit FundPsbtResponse(::google::protobuf::Arena* arena);
  FundPsbtResponse(::google::protobuf::Arena* arena, const FundPsbtResponse& from);
  FundPsbtResponse(::google::protobuf::Arena* arena, FundPsbtResponse&& from) noexcept
      : FundPsbtResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLockedUtxosFieldNumber = 3,
    kFundedPsbtFieldNumber = 1,
    kChangeOutputIndexFieldNumber = 2,
  };
  // repeated .walletrpc.UtxoLease locked_utxos = 3;
  int locked_utxos_size() const;
  private:
  int _internal_locked_utxos_size() const;

  public:
  void clear_locked_utxos() ;
  ::walletrpc::UtxoLease* mutable_locked_utxos(int index);
  ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>* mutable_locked_utxos();

  private:
  const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>& _internal_locked_utxos() const;
  ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>* _internal_mutable_locked_utxos();
  public:
  const ::walletrpc::UtxoLease& locked_utxos(int index) const;
  ::walletrpc::UtxoLease* add_locked_utxos();
  const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>& locked_utxos() const;
  // bytes funded_psbt = 1;
  void clear_funded_psbt() ;
  const std::string& funded_psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_funded_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_funded_psbt();
  PROTOBUF_NODISCARD std::string* release_funded_psbt();
  void set_allocated_funded_psbt(std::string* value);

  private:
  const std::string& _internal_funded_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_funded_psbt(
      const std::string& value);
  std::string* _internal_mutable_funded_psbt();

  public:
  // int32 change_output_index = 2;
  void clear_change_output_index() ;
  ::int32_t change_output_index() const;
  void set_change_output_index(::int32_t value);

  private:
  ::int32_t _internal_change_output_index() const;
  void _internal_set_change_output_index(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:walletrpc.FundPsbtResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundPsbtResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundPsbtResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::walletrpc::UtxoLease > locked_utxos_;
    ::google::protobuf::internal::ArenaStringPtr funded_psbt_;
    ::int32_t change_output_index_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class FundPsbtRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.FundPsbtRequest) */ {
 public:
  inline FundPsbtRequest() : FundPsbtRequest(nullptr) {}
  ~FundPsbtRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FundPsbtRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline FundPsbtRequest(const FundPsbtRequest& from) : FundPsbtRequest(nullptr, from) {}
  inline FundPsbtRequest(FundPsbtRequest&& from) noexcept
      : FundPsbtRequest(nullptr, std::move(from)) {}
  inline FundPsbtRequest& operator=(const FundPsbtRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FundPsbtRequest& operator=(FundPsbtRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FundPsbtRequest& default_instance() {
    return *internal_default_instance();
  }
  enum TemplateCase {
    kPsbt = 1,
    kRaw = 2,
    kCoinSelect = 9,
    TEMPLATE_NOT_SET = 0,
  };
  enum FeesCase {
    kTargetConf = 3,
    kSatPerVbyte = 4,
    FEES_NOT_SET = 0,
  };
  static inline const FundPsbtRequest* internal_default_instance() {
    return reinterpret_cast<const FundPsbtRequest*>(
        &_FundPsbtRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 51;
  friend void swap(FundPsbtRequest& a, FundPsbtRequest& b) { a.Swap(&b); }
  inline void Swap(FundPsbtRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FundPsbtRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FundPsbtRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<FundPsbtRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FundPsbtRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FundPsbtRequest& from) { FundPsbtRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FundPsbtRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.FundPsbtRequest"; }

 protected:
  explicit FundPsbtRequest(::google::protobuf::Arena* arena);
  FundPsbtRequest(::google::protobuf::Arena* arena, const FundPsbtRequest& from);
  FundPsbtRequest(::google::protobuf::Arena* arena, FundPsbtRequest&& from) noexcept
      : FundPsbtRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccountFieldNumber = 5,
    kMinConfsFieldNumber = 6,
    kSpendUnconfirmedFieldNumber = 7,
    kChangeTypeFieldNumber = 8,
    kCoinSelectionStrategyFieldNumber = 10,
    kPsbtFieldNumber = 1,
    kRawFieldNumber = 2,
    kCoinSelectFieldNumber = 9,
    kTargetConfFieldNumber = 3,
    kSatPerVbyteFieldNumber = 4,
  };
  // string account = 5;
  void clear_account() ;
  const std::string& account() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_account(Arg_&& arg, Args_... args);
  std::string* mutable_account();
  PROTOBUF_NODISCARD std::string* release_account();
  void set_allocated_account(std::string* value);

  private:
  const std::string& _internal_account() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_account(
      const std::string& value);
  std::string* _internal_mutable_account();

  public:
  // int32 min_confs = 6;
  void clear_min_confs() ;
  ::int32_t min_confs() const;
  void set_min_confs(::int32_t value);

  private:
  ::int32_t _internal_min_confs() const;
  void _internal_set_min_confs(::int32_t value);

  public:
  // bool spend_unconfirmed = 7;
  void clear_spend_unconfirmed() ;
  bool spend_unconfirmed() const;
  void set_spend_unconfirmed(bool value);

  private:
  bool _internal_spend_unconfirmed() const;
  void _internal_set_spend_unconfirmed(bool value);

  public:
  // .walletrpc.ChangeAddressType change_type = 8;
  void clear_change_type() ;
  ::walletrpc::ChangeAddressType change_type() const;
  void set_change_type(::walletrpc::ChangeAddressType value);

  private:
  ::walletrpc::ChangeAddressType _internal_change_type() const;
  void _internal_set_change_type(::walletrpc::ChangeAddressType value);

  public:
  // .lnrpc.CoinSelectionStrategy coin_selection_strategy = 10;
  void clear_coin_selection_strategy() ;
  ::lnrpc::CoinSelectionStrategy coin_selection_strategy() const;
  void set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  private:
  ::lnrpc::CoinSelectionStrategy _internal_coin_selection_strategy() const;
  void _internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value);

  public:
  // bytes psbt = 1;
  bool has_psbt() const;
  void clear_psbt() ;
  const std::string& psbt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_psbt(Arg_&& arg, Args_... args);
  std::string* mutable_psbt();
  PROTOBUF_NODISCARD std::string* release_psbt();
  void set_allocated_psbt(std::string* value);

  private:
  const std::string& _internal_psbt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_psbt(
      const std::string& value);
  std::string* _internal_mutable_psbt();

  public:
  // .walletrpc.TxTemplate raw = 2;
  bool has_raw() const;
  private:
  bool _internal_has_raw() const;

  public:
  void clear_raw() ;
  const ::walletrpc::TxTemplate& raw() const;
  PROTOBUF_NODISCARD ::walletrpc::TxTemplate* release_raw();
  ::walletrpc::TxTemplate* mutable_raw();
  void set_allocated_raw(::walletrpc::TxTemplate* value);
  void unsafe_arena_set_allocated_raw(::walletrpc::TxTemplate* value);
  ::walletrpc::TxTemplate* unsafe_arena_release_raw();

  private:
  const ::walletrpc::TxTemplate& _internal_raw() const;
  ::walletrpc::TxTemplate* _internal_mutable_raw();

  public:
  // .walletrpc.PsbtCoinSelect coin_select = 9;
  bool has_coin_select() const;
  private:
  bool _internal_has_coin_select() const;

  public:
  void clear_coin_select() ;
  const ::walletrpc::PsbtCoinSelect& coin_select() const;
  PROTOBUF_NODISCARD ::walletrpc::PsbtCoinSelect* release_coin_select();
  ::walletrpc::PsbtCoinSelect* mutable_coin_select();
  void set_allocated_coin_select(::walletrpc::PsbtCoinSelect* value);
  void unsafe_arena_set_allocated_coin_select(::walletrpc::PsbtCoinSelect* value);
  ::walletrpc::PsbtCoinSelect* unsafe_arena_release_coin_select();

  private:
  const ::walletrpc::PsbtCoinSelect& _internal_coin_select() const;
  ::walletrpc::PsbtCoinSelect* _internal_mutable_coin_select();

  public:
  // uint32 target_conf = 3;
  bool has_target_conf() const;
  void clear_target_conf() ;
  ::uint32_t target_conf() const;
  void set_target_conf(::uint32_t value);

  private:
  ::uint32_t _internal_target_conf() const;
  void _internal_set_target_conf(::uint32_t value);

  public:
  // uint64 sat_per_vbyte = 4;
  bool has_sat_per_vbyte() const;
  void clear_sat_per_vbyte() ;
  ::uint64_t sat_per_vbyte() const;
  void set_sat_per_vbyte(::uint64_t value);

  private:
  ::uint64_t _internal_sat_per_vbyte() const;
  void _internal_set_sat_per_vbyte(::uint64_t value);

  public:
  void clear_template();
  TemplateCase template_case() const;
  void clear_fees();
  FeesCase fees_case() const;
  // @@protoc_insertion_point(class_scope:walletrpc.FundPsbtRequest)
 private:
  class _Internal;
  void set_has_psbt();
  void set_has_raw();
  void set_has_coin_select();
  void set_has_target_conf();
  void set_has_sat_per_vbyte();
  inline bool has_template() const;
  inline void clear_has_template();
  inline bool has_fees() const;
  inline void clear_has_fees();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 10, 2,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FundPsbtRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FundPsbtRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr account_;
    ::int32_t min_confs_;
    bool spend_unconfirmed_;
    int change_type_;
    int coin_selection_strategy_;
    union TemplateUnion {
      constexpr TemplateUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr psbt_;
      ::walletrpc::TxTemplate* raw_;
      ::walletrpc::PsbtCoinSelect* coin_select_;
    } template_;
    union FeesUnion {
      constexpr FeesUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::uint32_t target_conf_;
      ::uint64_t sat_per_vbyte_;
    } fees_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[2];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};
// -------------------------------------------------------------------

class ListSweepsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:walletrpc.ListSweepsResponse) */ {
 public:
  inline ListSweepsResponse() : ListSweepsResponse(nullptr) {}
  ~ListSweepsResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListSweepsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListSweepsResponse(const ListSweepsResponse& from) : ListSweepsResponse(nullptr, from) {}
  inline ListSweepsResponse(ListSweepsResponse&& from) noexcept
      : ListSweepsResponse(nullptr, std::move(from)) {}
  inline ListSweepsResponse& operator=(const ListSweepsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListSweepsResponse& operator=(ListSweepsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListSweepsResponse& default_instance() {
    return *internal_default_instance();
  }
  enum SweepsCase {
    kTransactionDetails = 1,
    kTransactionIds = 2,
    SWEEPS_NOT_SET = 0,
  };
  static inline const ListSweepsResponse* internal_default_instance() {
    return reinterpret_cast<const ListSweepsResponse*>(
        &_ListSweepsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(ListSweepsResponse& a, ListSweepsResponse& b) { a.Swap(&b); }
  inline void Swap(ListSweepsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListSweepsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListSweepsResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<ListSweepsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListSweepsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListSweepsResponse& from) { ListSweepsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListSweepsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "walletrpc.ListSweepsResponse"; }

 protected:
  explicit ListSweepsResponse(::google::protobuf::Arena* arena);
  ListSweepsResponse(::google::protobuf::Arena* arena, const ListSweepsResponse& from);
  ListSweepsResponse(::google::protobuf::Arena* arena, ListSweepsResponse&& from) noexcept
      : ListSweepsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using TransactionIDs = ListSweepsResponse_TransactionIDs;

  // accessors -------------------------------------------------------
  enum : int {
    kTransactionDetailsFieldNumber = 1,
    kTransactionIdsFieldNumber = 2,
  };
  // .lnrpc.TransactionDetails transaction_details = 1;
  bool has_transaction_details() const;
  private:
  bool _internal_has_transaction_details() const;

  public:
  void clear_transaction_details() ;
  const ::lnrpc::TransactionDetails& transaction_details() const;
  PROTOBUF_NODISCARD ::lnrpc::TransactionDetails* release_transaction_details();
  ::lnrpc::TransactionDetails* mutable_transaction_details();
  void set_allocated_transaction_details(::lnrpc::TransactionDetails* value);
  void unsafe_arena_set_allocated_transaction_details(::lnrpc::TransactionDetails* value);
  ::lnrpc::TransactionDetails* unsafe_arena_release_transaction_details();

  private:
  const ::lnrpc::TransactionDetails& _internal_transaction_details() const;
  ::lnrpc::TransactionDetails* _internal_mutable_transaction_details();

  public:
  // .walletrpc.ListSweepsResponse.TransactionIDs transaction_ids = 2;
  bool has_transaction_ids() const;
  private:
  bool _internal_has_transaction_ids() const;

  public:
  void clear_transaction_ids() ;
  const ::walletrpc::ListSweepsResponse_TransactionIDs& transaction_ids() const;
  PROTOBUF_NODISCARD ::walletrpc::ListSweepsResponse_TransactionIDs* release_transaction_ids();
  ::walletrpc::ListSweepsResponse_TransactionIDs* mutable_transaction_ids();
  void set_allocated_transaction_ids(::walletrpc::ListSweepsResponse_TransactionIDs* value);
  void unsafe_arena_set_allocated_transaction_ids(::walletrpc::ListSweepsResponse_TransactionIDs* value);
  ::walletrpc::ListSweepsResponse_TransactionIDs* unsafe_arena_release_transaction_ids();

  private:
  const ::walletrpc::ListSweepsResponse_TransactionIDs& _internal_transaction_ids() const;
  ::walletrpc::ListSweepsResponse_TransactionIDs* _internal_mutable_transaction_ids();

  public:
  void clear_sweeps();
  SweepsCase sweeps_case() const;
  // @@protoc_insertion_point(class_scope:walletrpc.ListSweepsResponse)
 private:
  class _Internal;
  void set_has_transaction_details();
  void set_has_transaction_ids();
  inline bool has_sweeps() const;
  inline void clear_has_sweeps();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListSweepsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListSweepsResponse& from_msg);
    union SweepsUnion {
      constexpr SweepsUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::lnrpc::TransactionDetails* transaction_details_;
      ::walletrpc::ListSweepsResponse_TransactionIDs* transaction_ids_;
    } sweeps_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_walletkit_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListUnspentRequest

// int32 min_confs = 1;
inline void ListUnspentRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t ListUnspentRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListUnspentRequest.min_confs)
  return _internal_min_confs();
}
inline void ListUnspentRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListUnspentRequest.min_confs)
}
inline ::int32_t ListUnspentRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void ListUnspentRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// int32 max_confs = 2;
inline void ListUnspentRequest::clear_max_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_confs_ = 0;
}
inline ::int32_t ListUnspentRequest::max_confs() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListUnspentRequest.max_confs)
  return _internal_max_confs();
}
inline void ListUnspentRequest::set_max_confs(::int32_t value) {
  _internal_set_max_confs(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListUnspentRequest.max_confs)
}
inline ::int32_t ListUnspentRequest::_internal_max_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_confs_;
}
inline void ListUnspentRequest::_internal_set_max_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_confs_ = value;
}

// string account = 3;
inline void ListUnspentRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& ListUnspentRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListUnspentRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListUnspentRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ListUnspentRequest.account)
}
inline std::string* ListUnspentRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:walletrpc.ListUnspentRequest.account)
  return _s;
}
inline const std::string& ListUnspentRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void ListUnspentRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* ListUnspentRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* ListUnspentRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ListUnspentRequest.account)
  return _impl_.account_.Release();
}
inline void ListUnspentRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ListUnspentRequest.account)
}

// bool unconfirmed_only = 4;
inline void ListUnspentRequest::clear_unconfirmed_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unconfirmed_only_ = false;
}
inline bool ListUnspentRequest::unconfirmed_only() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListUnspentRequest.unconfirmed_only)
  return _internal_unconfirmed_only();
}
inline void ListUnspentRequest::set_unconfirmed_only(bool value) {
  _internal_set_unconfirmed_only(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListUnspentRequest.unconfirmed_only)
}
inline bool ListUnspentRequest::_internal_unconfirmed_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unconfirmed_only_;
}
inline void ListUnspentRequest::_internal_set_unconfirmed_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unconfirmed_only_ = value;
}

// -------------------------------------------------------------------

// ListUnspentResponse

// repeated .lnrpc.Utxo utxos = 1;
inline int ListUnspentResponse::_internal_utxos_size() const {
  return _internal_utxos().size();
}
inline int ListUnspentResponse::utxos_size() const {
  return _internal_utxos_size();
}
inline ::lnrpc::Utxo* ListUnspentResponse::mutable_utxos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ListUnspentResponse.utxos)
  return _internal_mutable_utxos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>* ListUnspentResponse::mutable_utxos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ListUnspentResponse.utxos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_utxos();
}
inline const ::lnrpc::Utxo& ListUnspentResponse::utxos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListUnspentResponse.utxos)
  return _internal_utxos().Get(index);
}
inline ::lnrpc::Utxo* ListUnspentResponse::add_utxos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::Utxo* _add = _internal_mutable_utxos()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.ListUnspentResponse.utxos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>& ListUnspentResponse::utxos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ListUnspentResponse.utxos)
  return _internal_utxos();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>&
ListUnspentResponse::_internal_utxos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.utxos_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::Utxo>*
ListUnspentResponse::_internal_mutable_utxos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.utxos_;
}

// -------------------------------------------------------------------

// LeaseOutputRequest

// bytes id = 1;
inline void LeaseOutputRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& LeaseOutputRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.LeaseOutputRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaseOutputRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.LeaseOutputRequest.id)
}
inline std::string* LeaseOutputRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:walletrpc.LeaseOutputRequest.id)
  return _s;
}
inline const std::string& LeaseOutputRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void LeaseOutputRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* LeaseOutputRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* LeaseOutputRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.LeaseOutputRequest.id)
  return _impl_.id_.Release();
}
inline void LeaseOutputRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.LeaseOutputRequest.id)
}

// .lnrpc.OutPoint outpoint = 2;
inline bool LeaseOutputRequest::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline const ::lnrpc::OutPoint& LeaseOutputRequest::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& LeaseOutputRequest::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.LeaseOutputRequest.outpoint)
  return _internal_outpoint();
}
inline void LeaseOutputRequest::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.LeaseOutputRequest.outpoint)
}
inline ::lnrpc::OutPoint* LeaseOutputRequest::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* LeaseOutputRequest::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.LeaseOutputRequest.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* LeaseOutputRequest::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* LeaseOutputRequest::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:walletrpc.LeaseOutputRequest.outpoint)
  return _msg;
}
inline void LeaseOutputRequest::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.LeaseOutputRequest.outpoint)
}

// uint64 expiration_seconds = 3;
inline void LeaseOutputRequest::clear_expiration_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_seconds_ = ::uint64_t{0u};
}
inline ::uint64_t LeaseOutputRequest::expiration_seconds() const {
  // @@protoc_insertion_point(field_get:walletrpc.LeaseOutputRequest.expiration_seconds)
  return _internal_expiration_seconds();
}
inline void LeaseOutputRequest::set_expiration_seconds(::uint64_t value) {
  _internal_set_expiration_seconds(value);
  // @@protoc_insertion_point(field_set:walletrpc.LeaseOutputRequest.expiration_seconds)
}
inline ::uint64_t LeaseOutputRequest::_internal_expiration_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiration_seconds_;
}
inline void LeaseOutputRequest::_internal_set_expiration_seconds(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_seconds_ = value;
}

// -------------------------------------------------------------------

// LeaseOutputResponse

// uint64 expiration = 1;
inline void LeaseOutputResponse::clear_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_ = ::uint64_t{0u};
}
inline ::uint64_t LeaseOutputResponse::expiration() const {
  // @@protoc_insertion_point(field_get:walletrpc.LeaseOutputResponse.expiration)
  return _internal_expiration();
}
inline void LeaseOutputResponse::set_expiration(::uint64_t value) {
  _internal_set_expiration(value);
  // @@protoc_insertion_point(field_set:walletrpc.LeaseOutputResponse.expiration)
}
inline ::uint64_t LeaseOutputResponse::_internal_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiration_;
}
inline void LeaseOutputResponse::_internal_set_expiration(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_ = value;
}

// -------------------------------------------------------------------

// ReleaseOutputRequest

// bytes id = 1;
inline void ReleaseOutputRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ReleaseOutputRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ReleaseOutputRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReleaseOutputRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ReleaseOutputRequest.id)
}
inline std::string* ReleaseOutputRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:walletrpc.ReleaseOutputRequest.id)
  return _s;
}
inline const std::string& ReleaseOutputRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ReleaseOutputRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ReleaseOutputRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ReleaseOutputRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ReleaseOutputRequest.id)
  return _impl_.id_.Release();
}
inline void ReleaseOutputRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ReleaseOutputRequest.id)
}

// .lnrpc.OutPoint outpoint = 2;
inline bool ReleaseOutputRequest::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline const ::lnrpc::OutPoint& ReleaseOutputRequest::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& ReleaseOutputRequest::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ReleaseOutputRequest.outpoint)
  return _internal_outpoint();
}
inline void ReleaseOutputRequest::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.ReleaseOutputRequest.outpoint)
}
inline ::lnrpc::OutPoint* ReleaseOutputRequest::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* ReleaseOutputRequest::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ReleaseOutputRequest.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* ReleaseOutputRequest::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* ReleaseOutputRequest::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:walletrpc.ReleaseOutputRequest.outpoint)
  return _msg;
}
inline void ReleaseOutputRequest::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ReleaseOutputRequest.outpoint)
}

// -------------------------------------------------------------------

// ReleaseOutputResponse

// -------------------------------------------------------------------

// KeyReq

// int32 key_finger_print = 1;
inline void KeyReq::clear_key_finger_print() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_finger_print_ = 0;
}
inline ::int32_t KeyReq::key_finger_print() const {
  // @@protoc_insertion_point(field_get:walletrpc.KeyReq.key_finger_print)
  return _internal_key_finger_print();
}
inline void KeyReq::set_key_finger_print(::int32_t value) {
  _internal_set_key_finger_print(value);
  // @@protoc_insertion_point(field_set:walletrpc.KeyReq.key_finger_print)
}
inline ::int32_t KeyReq::_internal_key_finger_print() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_finger_print_;
}
inline void KeyReq::_internal_set_key_finger_print(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_finger_print_ = value;
}

// int32 key_family = 2;
inline void KeyReq::clear_key_family() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_family_ = 0;
}
inline ::int32_t KeyReq::key_family() const {
  // @@protoc_insertion_point(field_get:walletrpc.KeyReq.key_family)
  return _internal_key_family();
}
inline void KeyReq::set_key_family(::int32_t value) {
  _internal_set_key_family(value);
  // @@protoc_insertion_point(field_set:walletrpc.KeyReq.key_family)
}
inline ::int32_t KeyReq::_internal_key_family() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_family_;
}
inline void KeyReq::_internal_set_key_family(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_family_ = value;
}

// -------------------------------------------------------------------

// AddrRequest

// string account = 1;
inline void AddrRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& AddrRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AddrRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddrRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AddrRequest.account)
}
inline std::string* AddrRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:walletrpc.AddrRequest.account)
  return _s;
}
inline const std::string& AddrRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void AddrRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* AddrRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* AddrRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AddrRequest.account)
  return _impl_.account_.Release();
}
inline void AddrRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AddrRequest.account)
}

// .walletrpc.AddressType type = 2;
inline void AddrRequest::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = 0;
}
inline ::walletrpc::AddressType AddrRequest::type() const {
  // @@protoc_insertion_point(field_get:walletrpc.AddrRequest.type)
  return _internal_type();
}
inline void AddrRequest::set_type(::walletrpc::AddressType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.AddrRequest.type)
}
inline ::walletrpc::AddressType AddrRequest::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::AddressType>(_impl_.type_);
}
inline void AddrRequest::_internal_set_type(::walletrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_ = value;
}

// bool change = 3;
inline void AddrRequest::clear_change() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_ = false;
}
inline bool AddrRequest::change() const {
  // @@protoc_insertion_point(field_get:walletrpc.AddrRequest.change)
  return _internal_change();
}
inline void AddrRequest::set_change(bool value) {
  _internal_set_change(value);
  // @@protoc_insertion_point(field_set:walletrpc.AddrRequest.change)
}
inline bool AddrRequest::_internal_change() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_;
}
inline void AddrRequest::_internal_set_change(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_ = value;
}

// -------------------------------------------------------------------

// AddrResponse

// string addr = 1;
inline void AddrResponse::clear_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.ClearToEmpty();
}
inline const std::string& AddrResponse::addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AddrResponse.addr)
  return _internal_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddrResponse::set_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AddrResponse.addr)
}
inline std::string* AddrResponse::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:walletrpc.AddrResponse.addr)
  return _s;
}
inline const std::string& AddrResponse::_internal_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addr_.Get();
}
inline void AddrResponse::_internal_set_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(value, GetArena());
}
inline std::string* AddrResponse::_internal_mutable_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addr_.Mutable( GetArena());
}
inline std::string* AddrResponse::release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AddrResponse.addr)
  return _impl_.addr_.Release();
}
inline void AddrResponse::set_allocated_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.addr_.IsDefault()) {
          _impl_.addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AddrResponse.addr)
}

// -------------------------------------------------------------------

// Account

// string name = 1;
inline void Account::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Account::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.Account.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Account::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.Account.name)
}
inline std::string* Account::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:walletrpc.Account.name)
  return _s;
}
inline const std::string& Account::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Account::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Account::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Account::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.Account.name)
  return _impl_.name_.Release();
}
inline void Account::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.Account.name)
}

// .walletrpc.AddressType address_type = 2;
inline void Account::clear_address_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = 0;
}
inline ::walletrpc::AddressType Account::address_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.Account.address_type)
  return _internal_address_type();
}
inline void Account::set_address_type(::walletrpc::AddressType value) {
  _internal_set_address_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.Account.address_type)
}
inline ::walletrpc::AddressType Account::_internal_address_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::AddressType>(_impl_.address_type_);
}
inline void Account::_internal_set_address_type(::walletrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = value;
}

// string extended_public_key = 3;
inline void Account::clear_extended_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.ClearToEmpty();
}
inline const std::string& Account::extended_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.Account.extended_public_key)
  return _internal_extended_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Account::set_extended_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.Account.extended_public_key)
}
inline std::string* Account::mutable_extended_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_extended_public_key();
  // @@protoc_insertion_point(field_mutable:walletrpc.Account.extended_public_key)
  return _s;
}
inline const std::string& Account::_internal_extended_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extended_public_key_.Get();
}
inline void Account::_internal_set_extended_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.Set(value, GetArena());
}
inline std::string* Account::_internal_mutable_extended_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.extended_public_key_.Mutable( GetArena());
}
inline std::string* Account::release_extended_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.Account.extended_public_key)
  return _impl_.extended_public_key_.Release();
}
inline void Account::set_allocated_extended_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.extended_public_key_.IsDefault()) {
          _impl_.extended_public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.Account.extended_public_key)
}

// bytes master_key_fingerprint = 4;
inline void Account::clear_master_key_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.ClearToEmpty();
}
inline const std::string& Account::master_key_fingerprint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.Account.master_key_fingerprint)
  return _internal_master_key_fingerprint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Account::set_master_key_fingerprint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.Account.master_key_fingerprint)
}
inline std::string* Account::mutable_master_key_fingerprint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_master_key_fingerprint();
  // @@protoc_insertion_point(field_mutable:walletrpc.Account.master_key_fingerprint)
  return _s;
}
inline const std::string& Account::_internal_master_key_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.master_key_fingerprint_.Get();
}
inline void Account::_internal_set_master_key_fingerprint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.Set(value, GetArena());
}
inline std::string* Account::_internal_mutable_master_key_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.master_key_fingerprint_.Mutable( GetArena());
}
inline std::string* Account::release_master_key_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.Account.master_key_fingerprint)
  return _impl_.master_key_fingerprint_.Release();
}
inline void Account::set_allocated_master_key_fingerprint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.master_key_fingerprint_.IsDefault()) {
          _impl_.master_key_fingerprint_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.Account.master_key_fingerprint)
}

// string derivation_path = 5;
inline void Account::clear_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.ClearToEmpty();
}
inline const std::string& Account::derivation_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.Account.derivation_path)
  return _internal_derivation_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Account::set_derivation_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.Account.derivation_path)
}
inline std::string* Account::mutable_derivation_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_derivation_path();
  // @@protoc_insertion_point(field_mutable:walletrpc.Account.derivation_path)
  return _s;
}
inline const std::string& Account::_internal_derivation_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.derivation_path_.Get();
}
inline void Account::_internal_set_derivation_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.Set(value, GetArena());
}
inline std::string* Account::_internal_mutable_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.derivation_path_.Mutable( GetArena());
}
inline std::string* Account::release_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.Account.derivation_path)
  return _impl_.derivation_path_.Release();
}
inline void Account::set_allocated_derivation_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.derivation_path_.IsDefault()) {
          _impl_.derivation_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.Account.derivation_path)
}

// uint32 external_key_count = 6;
inline void Account::clear_external_key_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_key_count_ = 0u;
}
inline ::uint32_t Account::external_key_count() const {
  // @@protoc_insertion_point(field_get:walletrpc.Account.external_key_count)
  return _internal_external_key_count();
}
inline void Account::set_external_key_count(::uint32_t value) {
  _internal_set_external_key_count(value);
  // @@protoc_insertion_point(field_set:walletrpc.Account.external_key_count)
}
inline ::uint32_t Account::_internal_external_key_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_key_count_;
}
inline void Account::_internal_set_external_key_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_key_count_ = value;
}

// uint32 internal_key_count = 7;
inline void Account::clear_internal_key_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_key_count_ = 0u;
}
inline ::uint32_t Account::internal_key_count() const {
  // @@protoc_insertion_point(field_get:walletrpc.Account.internal_key_count)
  return _internal_internal_key_count();
}
inline void Account::set_internal_key_count(::uint32_t value) {
  _internal_set_internal_key_count(value);
  // @@protoc_insertion_point(field_set:walletrpc.Account.internal_key_count)
}
inline ::uint32_t Account::_internal_internal_key_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.internal_key_count_;
}
inline void Account::_internal_set_internal_key_count(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_key_count_ = value;
}

// bool watch_only = 8;
inline void Account::clear_watch_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_only_ = false;
}
inline bool Account::watch_only() const {
  // @@protoc_insertion_point(field_get:walletrpc.Account.watch_only)
  return _internal_watch_only();
}
inline void Account::set_watch_only(bool value) {
  _internal_set_watch_only(value);
  // @@protoc_insertion_point(field_set:walletrpc.Account.watch_only)
}
inline bool Account::_internal_watch_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.watch_only_;
}
inline void Account::_internal_set_watch_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.watch_only_ = value;
}

// -------------------------------------------------------------------

// AddressProperty

// string address = 1;
inline void AddressProperty::clear_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.ClearToEmpty();
}
inline const std::string& AddressProperty::address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AddressProperty.address)
  return _internal_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressProperty::set_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AddressProperty.address)
}
inline std::string* AddressProperty::mutable_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_address();
  // @@protoc_insertion_point(field_mutable:walletrpc.AddressProperty.address)
  return _s;
}
inline const std::string& AddressProperty::_internal_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.address_.Get();
}
inline void AddressProperty::_internal_set_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.Set(value, GetArena());
}
inline std::string* AddressProperty::_internal_mutable_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.address_.Mutable( GetArena());
}
inline std::string* AddressProperty::release_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AddressProperty.address)
  return _impl_.address_.Release();
}
inline void AddressProperty::set_allocated_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.address_.IsDefault()) {
          _impl_.address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AddressProperty.address)
}

// bool is_internal = 2;
inline void AddressProperty::clear_is_internal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_internal_ = false;
}
inline bool AddressProperty::is_internal() const {
  // @@protoc_insertion_point(field_get:walletrpc.AddressProperty.is_internal)
  return _internal_is_internal();
}
inline void AddressProperty::set_is_internal(bool value) {
  _internal_set_is_internal(value);
  // @@protoc_insertion_point(field_set:walletrpc.AddressProperty.is_internal)
}
inline bool AddressProperty::_internal_is_internal() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_internal_;
}
inline void AddressProperty::_internal_set_is_internal(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_internal_ = value;
}

// int64 balance = 3;
inline void AddressProperty::clear_balance() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = ::int64_t{0};
}
inline ::int64_t AddressProperty::balance() const {
  // @@protoc_insertion_point(field_get:walletrpc.AddressProperty.balance)
  return _internal_balance();
}
inline void AddressProperty::set_balance(::int64_t value) {
  _internal_set_balance(value);
  // @@protoc_insertion_point(field_set:walletrpc.AddressProperty.balance)
}
inline ::int64_t AddressProperty::_internal_balance() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.balance_;
}
inline void AddressProperty::_internal_set_balance(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.balance_ = value;
}

// string derivation_path = 4;
inline void AddressProperty::clear_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.ClearToEmpty();
}
inline const std::string& AddressProperty::derivation_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AddressProperty.derivation_path)
  return _internal_derivation_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressProperty::set_derivation_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AddressProperty.derivation_path)
}
inline std::string* AddressProperty::mutable_derivation_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_derivation_path();
  // @@protoc_insertion_point(field_mutable:walletrpc.AddressProperty.derivation_path)
  return _s;
}
inline const std::string& AddressProperty::_internal_derivation_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.derivation_path_.Get();
}
inline void AddressProperty::_internal_set_derivation_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.Set(value, GetArena());
}
inline std::string* AddressProperty::_internal_mutable_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.derivation_path_.Mutable( GetArena());
}
inline std::string* AddressProperty::release_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AddressProperty.derivation_path)
  return _impl_.derivation_path_.Release();
}
inline void AddressProperty::set_allocated_derivation_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.derivation_path_.IsDefault()) {
          _impl_.derivation_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AddressProperty.derivation_path)
}

// bytes public_key = 5;
inline void AddressProperty::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& AddressProperty::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AddressProperty.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddressProperty::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AddressProperty.public_key)
}
inline std::string* AddressProperty::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:walletrpc.AddressProperty.public_key)
  return _s;
}
inline const std::string& AddressProperty::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void AddressProperty::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* AddressProperty::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* AddressProperty::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AddressProperty.public_key)
  return _impl_.public_key_.Release();
}
inline void AddressProperty::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AddressProperty.public_key)
}

// -------------------------------------------------------------------

// AccountWithAddresses

// string name = 1;
inline void AccountWithAddresses::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& AccountWithAddresses::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AccountWithAddresses.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AccountWithAddresses::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AccountWithAddresses.name)
}
inline std::string* AccountWithAddresses::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:walletrpc.AccountWithAddresses.name)
  return _s;
}
inline const std::string& AccountWithAddresses::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void AccountWithAddresses::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* AccountWithAddresses::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* AccountWithAddresses::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AccountWithAddresses.name)
  return _impl_.name_.Release();
}
inline void AccountWithAddresses::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AccountWithAddresses.name)
}

// .walletrpc.AddressType address_type = 2;
inline void AccountWithAddresses::clear_address_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = 0;
}
inline ::walletrpc::AddressType AccountWithAddresses::address_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.AccountWithAddresses.address_type)
  return _internal_address_type();
}
inline void AccountWithAddresses::set_address_type(::walletrpc::AddressType value) {
  _internal_set_address_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.AccountWithAddresses.address_type)
}
inline ::walletrpc::AddressType AccountWithAddresses::_internal_address_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::AddressType>(_impl_.address_type_);
}
inline void AccountWithAddresses::_internal_set_address_type(::walletrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = value;
}

// string derivation_path = 3;
inline void AccountWithAddresses::clear_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.ClearToEmpty();
}
inline const std::string& AccountWithAddresses::derivation_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AccountWithAddresses.derivation_path)
  return _internal_derivation_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AccountWithAddresses::set_derivation_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.AccountWithAddresses.derivation_path)
}
inline std::string* AccountWithAddresses::mutable_derivation_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_derivation_path();
  // @@protoc_insertion_point(field_mutable:walletrpc.AccountWithAddresses.derivation_path)
  return _s;
}
inline const std::string& AccountWithAddresses::_internal_derivation_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.derivation_path_.Get();
}
inline void AccountWithAddresses::_internal_set_derivation_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.Set(value, GetArena());
}
inline std::string* AccountWithAddresses::_internal_mutable_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.derivation_path_.Mutable( GetArena());
}
inline std::string* AccountWithAddresses::release_derivation_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.AccountWithAddresses.derivation_path)
  return _impl_.derivation_path_.Release();
}
inline void AccountWithAddresses::set_allocated_derivation_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.derivation_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.derivation_path_.IsDefault()) {
          _impl_.derivation_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.AccountWithAddresses.derivation_path)
}

// repeated .walletrpc.AddressProperty addresses = 4;
inline int AccountWithAddresses::_internal_addresses_size() const {
  return _internal_addresses().size();
}
inline int AccountWithAddresses::addresses_size() const {
  return _internal_addresses_size();
}
inline void AccountWithAddresses::clear_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addresses_.Clear();
}
inline ::walletrpc::AddressProperty* AccountWithAddresses::mutable_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.AccountWithAddresses.addresses)
  return _internal_mutable_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>* AccountWithAddresses::mutable_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.AccountWithAddresses.addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_addresses();
}
inline const ::walletrpc::AddressProperty& AccountWithAddresses::addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.AccountWithAddresses.addresses)
  return _internal_addresses().Get(index);
}
inline ::walletrpc::AddressProperty* AccountWithAddresses::add_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::AddressProperty* _add = _internal_mutable_addresses()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.AccountWithAddresses.addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>& AccountWithAddresses::addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.AccountWithAddresses.addresses)
  return _internal_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>&
AccountWithAddresses::_internal_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::AddressProperty>*
AccountWithAddresses::_internal_mutable_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.addresses_;
}

// -------------------------------------------------------------------

// ListAccountsRequest

// string name = 1;
inline void ListAccountsRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ListAccountsRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListAccountsRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAccountsRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ListAccountsRequest.name)
}
inline std::string* ListAccountsRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:walletrpc.ListAccountsRequest.name)
  return _s;
}
inline const std::string& ListAccountsRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ListAccountsRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ListAccountsRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ListAccountsRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ListAccountsRequest.name)
  return _impl_.name_.Release();
}
inline void ListAccountsRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ListAccountsRequest.name)
}

// .walletrpc.AddressType address_type = 2;
inline void ListAccountsRequest::clear_address_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = 0;
}
inline ::walletrpc::AddressType ListAccountsRequest::address_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListAccountsRequest.address_type)
  return _internal_address_type();
}
inline void ListAccountsRequest::set_address_type(::walletrpc::AddressType value) {
  _internal_set_address_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListAccountsRequest.address_type)
}
inline ::walletrpc::AddressType ListAccountsRequest::_internal_address_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::AddressType>(_impl_.address_type_);
}
inline void ListAccountsRequest::_internal_set_address_type(::walletrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = value;
}

// -------------------------------------------------------------------

// ListAccountsResponse

// repeated .walletrpc.Account accounts = 1;
inline int ListAccountsResponse::_internal_accounts_size() const {
  return _internal_accounts().size();
}
inline int ListAccountsResponse::accounts_size() const {
  return _internal_accounts_size();
}
inline void ListAccountsResponse::clear_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.accounts_.Clear();
}
inline ::walletrpc::Account* ListAccountsResponse::mutable_accounts(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ListAccountsResponse.accounts)
  return _internal_mutable_accounts()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::Account>* ListAccountsResponse::mutable_accounts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ListAccountsResponse.accounts)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_accounts();
}
inline const ::walletrpc::Account& ListAccountsResponse::accounts(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListAccountsResponse.accounts)
  return _internal_accounts().Get(index);
}
inline ::walletrpc::Account* ListAccountsResponse::add_accounts() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::Account* _add = _internal_mutable_accounts()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.ListAccountsResponse.accounts)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::Account>& ListAccountsResponse::accounts() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ListAccountsResponse.accounts)
  return _internal_accounts();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::Account>&
ListAccountsResponse::_internal_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.accounts_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::Account>*
ListAccountsResponse::_internal_mutable_accounts() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.accounts_;
}

// -------------------------------------------------------------------

// RequiredReserveRequest

// uint32 additional_public_channels = 1;
inline void RequiredReserveRequest::clear_additional_public_channels() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_public_channels_ = 0u;
}
inline ::uint32_t RequiredReserveRequest::additional_public_channels() const {
  // @@protoc_insertion_point(field_get:walletrpc.RequiredReserveRequest.additional_public_channels)
  return _internal_additional_public_channels();
}
inline void RequiredReserveRequest::set_additional_public_channels(::uint32_t value) {
  _internal_set_additional_public_channels(value);
  // @@protoc_insertion_point(field_set:walletrpc.RequiredReserveRequest.additional_public_channels)
}
inline ::uint32_t RequiredReserveRequest::_internal_additional_public_channels() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.additional_public_channels_;
}
inline void RequiredReserveRequest::_internal_set_additional_public_channels(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.additional_public_channels_ = value;
}

// -------------------------------------------------------------------

// RequiredReserveResponse

// int64 required_reserve = 1;
inline void RequiredReserveResponse::clear_required_reserve() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_reserve_ = ::int64_t{0};
}
inline ::int64_t RequiredReserveResponse::required_reserve() const {
  // @@protoc_insertion_point(field_get:walletrpc.RequiredReserveResponse.required_reserve)
  return _internal_required_reserve();
}
inline void RequiredReserveResponse::set_required_reserve(::int64_t value) {
  _internal_set_required_reserve(value);
  // @@protoc_insertion_point(field_set:walletrpc.RequiredReserveResponse.required_reserve)
}
inline ::int64_t RequiredReserveResponse::_internal_required_reserve() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_reserve_;
}
inline void RequiredReserveResponse::_internal_set_required_reserve(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_reserve_ = value;
}

// -------------------------------------------------------------------

// ListAddressesRequest

// string account_name = 1;
inline void ListAddressesRequest::clear_account_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_name_.ClearToEmpty();
}
inline const std::string& ListAddressesRequest::account_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListAddressesRequest.account_name)
  return _internal_account_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListAddressesRequest::set_account_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ListAddressesRequest.account_name)
}
inline std::string* ListAddressesRequest::mutable_account_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account_name();
  // @@protoc_insertion_point(field_mutable:walletrpc.ListAddressesRequest.account_name)
  return _s;
}
inline const std::string& ListAddressesRequest::_internal_account_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_name_.Get();
}
inline void ListAddressesRequest::_internal_set_account_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_name_.Set(value, GetArena());
}
inline std::string* ListAddressesRequest::_internal_mutable_account_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_name_.Mutable( GetArena());
}
inline std::string* ListAddressesRequest::release_account_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ListAddressesRequest.account_name)
  return _impl_.account_name_.Release();
}
inline void ListAddressesRequest::set_allocated_account_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_name_.IsDefault()) {
          _impl_.account_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ListAddressesRequest.account_name)
}

// bool show_custom_accounts = 2;
inline void ListAddressesRequest::clear_show_custom_accounts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_custom_accounts_ = false;
}
inline bool ListAddressesRequest::show_custom_accounts() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListAddressesRequest.show_custom_accounts)
  return _internal_show_custom_accounts();
}
inline void ListAddressesRequest::set_show_custom_accounts(bool value) {
  _internal_set_show_custom_accounts(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListAddressesRequest.show_custom_accounts)
}
inline bool ListAddressesRequest::_internal_show_custom_accounts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_custom_accounts_;
}
inline void ListAddressesRequest::_internal_set_show_custom_accounts(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_custom_accounts_ = value;
}

// -------------------------------------------------------------------

// ListAddressesResponse

// repeated .walletrpc.AccountWithAddresses account_with_addresses = 1;
inline int ListAddressesResponse::_internal_account_with_addresses_size() const {
  return _internal_account_with_addresses().size();
}
inline int ListAddressesResponse::account_with_addresses_size() const {
  return _internal_account_with_addresses_size();
}
inline void ListAddressesResponse::clear_account_with_addresses() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_with_addresses_.Clear();
}
inline ::walletrpc::AccountWithAddresses* ListAddressesResponse::mutable_account_with_addresses(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ListAddressesResponse.account_with_addresses)
  return _internal_mutable_account_with_addresses()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>* ListAddressesResponse::mutable_account_with_addresses()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ListAddressesResponse.account_with_addresses)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_account_with_addresses();
}
inline const ::walletrpc::AccountWithAddresses& ListAddressesResponse::account_with_addresses(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListAddressesResponse.account_with_addresses)
  return _internal_account_with_addresses().Get(index);
}
inline ::walletrpc::AccountWithAddresses* ListAddressesResponse::add_account_with_addresses() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::AccountWithAddresses* _add = _internal_mutable_account_with_addresses()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.ListAddressesResponse.account_with_addresses)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>& ListAddressesResponse::account_with_addresses() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ListAddressesResponse.account_with_addresses)
  return _internal_account_with_addresses();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>&
ListAddressesResponse::_internal_account_with_addresses() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_with_addresses_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::AccountWithAddresses>*
ListAddressesResponse::_internal_mutable_account_with_addresses() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.account_with_addresses_;
}

// -------------------------------------------------------------------

// GetTransactionRequest

// string txid = 1;
inline void GetTransactionRequest::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
}
inline const std::string& GetTransactionRequest::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.GetTransactionRequest.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTransactionRequest::set_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.GetTransactionRequest.txid)
}
inline std::string* GetTransactionRequest::mutable_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:walletrpc.GetTransactionRequest.txid)
  return _s;
}
inline const std::string& GetTransactionRequest::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void GetTransactionRequest::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* GetTransactionRequest::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* GetTransactionRequest::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.GetTransactionRequest.txid)
  return _impl_.txid_.Release();
}
inline void GetTransactionRequest::set_allocated_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_.IsDefault()) {
          _impl_.txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.GetTransactionRequest.txid)
}

// -------------------------------------------------------------------

// SignMessageWithAddrRequest

// bytes msg = 1;
inline void SignMessageWithAddrRequest::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& SignMessageWithAddrRequest::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SignMessageWithAddrRequest.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignMessageWithAddrRequest::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SignMessageWithAddrRequest.msg)
}
inline std::string* SignMessageWithAddrRequest::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:walletrpc.SignMessageWithAddrRequest.msg)
  return _s;
}
inline const std::string& SignMessageWithAddrRequest::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void SignMessageWithAddrRequest::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* SignMessageWithAddrRequest::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* SignMessageWithAddrRequest::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SignMessageWithAddrRequest.msg)
  return _impl_.msg_.Release();
}
inline void SignMessageWithAddrRequest::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SignMessageWithAddrRequest.msg)
}

// string addr = 2;
inline void SignMessageWithAddrRequest::clear_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.ClearToEmpty();
}
inline const std::string& SignMessageWithAddrRequest::addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SignMessageWithAddrRequest.addr)
  return _internal_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignMessageWithAddrRequest::set_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SignMessageWithAddrRequest.addr)
}
inline std::string* SignMessageWithAddrRequest::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:walletrpc.SignMessageWithAddrRequest.addr)
  return _s;
}
inline const std::string& SignMessageWithAddrRequest::_internal_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addr_.Get();
}
inline void SignMessageWithAddrRequest::_internal_set_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(value, GetArena());
}
inline std::string* SignMessageWithAddrRequest::_internal_mutable_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addr_.Mutable( GetArena());
}
inline std::string* SignMessageWithAddrRequest::release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SignMessageWithAddrRequest.addr)
  return _impl_.addr_.Release();
}
inline void SignMessageWithAddrRequest::set_allocated_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.addr_.IsDefault()) {
          _impl_.addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SignMessageWithAddrRequest.addr)
}

// -------------------------------------------------------------------

// SignMessageWithAddrResponse

// string signature = 1;
inline void SignMessageWithAddrResponse::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& SignMessageWithAddrResponse::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SignMessageWithAddrResponse.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignMessageWithAddrResponse::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SignMessageWithAddrResponse.signature)
}
inline std::string* SignMessageWithAddrResponse::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:walletrpc.SignMessageWithAddrResponse.signature)
  return _s;
}
inline const std::string& SignMessageWithAddrResponse::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void SignMessageWithAddrResponse::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* SignMessageWithAddrResponse::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* SignMessageWithAddrResponse::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SignMessageWithAddrResponse.signature)
  return _impl_.signature_.Release();
}
inline void SignMessageWithAddrResponse::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SignMessageWithAddrResponse.signature)
}

// -------------------------------------------------------------------

// VerifyMessageWithAddrRequest

// bytes msg = 1;
inline void VerifyMessageWithAddrRequest::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& VerifyMessageWithAddrRequest::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.VerifyMessageWithAddrRequest.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageWithAddrRequest::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.VerifyMessageWithAddrRequest.msg)
}
inline std::string* VerifyMessageWithAddrRequest::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:walletrpc.VerifyMessageWithAddrRequest.msg)
  return _s;
}
inline const std::string& VerifyMessageWithAddrRequest::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void VerifyMessageWithAddrRequest::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* VerifyMessageWithAddrRequest::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* VerifyMessageWithAddrRequest::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.VerifyMessageWithAddrRequest.msg)
  return _impl_.msg_.Release();
}
inline void VerifyMessageWithAddrRequest::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.VerifyMessageWithAddrRequest.msg)
}

// string signature = 2;
inline void VerifyMessageWithAddrRequest::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.ClearToEmpty();
}
inline const std::string& VerifyMessageWithAddrRequest::signature() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.VerifyMessageWithAddrRequest.signature)
  return _internal_signature();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageWithAddrRequest::set_signature(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.VerifyMessageWithAddrRequest.signature)
}
inline std::string* VerifyMessageWithAddrRequest::mutable_signature() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signature();
  // @@protoc_insertion_point(field_mutable:walletrpc.VerifyMessageWithAddrRequest.signature)
  return _s;
}
inline const std::string& VerifyMessageWithAddrRequest::_internal_signature() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signature_.Get();
}
inline void VerifyMessageWithAddrRequest::_internal_set_signature(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.Set(value, GetArena());
}
inline std::string* VerifyMessageWithAddrRequest::_internal_mutable_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signature_.Mutable( GetArena());
}
inline std::string* VerifyMessageWithAddrRequest::release_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.VerifyMessageWithAddrRequest.signature)
  return _impl_.signature_.Release();
}
inline void VerifyMessageWithAddrRequest::set_allocated_signature(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signature_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signature_.IsDefault()) {
          _impl_.signature_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.VerifyMessageWithAddrRequest.signature)
}

// string addr = 3;
inline void VerifyMessageWithAddrRequest::clear_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.ClearToEmpty();
}
inline const std::string& VerifyMessageWithAddrRequest::addr() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.VerifyMessageWithAddrRequest.addr)
  return _internal_addr();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageWithAddrRequest::set_addr(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.VerifyMessageWithAddrRequest.addr)
}
inline std::string* VerifyMessageWithAddrRequest::mutable_addr() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_addr();
  // @@protoc_insertion_point(field_mutable:walletrpc.VerifyMessageWithAddrRequest.addr)
  return _s;
}
inline const std::string& VerifyMessageWithAddrRequest::_internal_addr() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.addr_.Get();
}
inline void VerifyMessageWithAddrRequest::_internal_set_addr(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.Set(value, GetArena());
}
inline std::string* VerifyMessageWithAddrRequest::_internal_mutable_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.addr_.Mutable( GetArena());
}
inline std::string* VerifyMessageWithAddrRequest::release_addr() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.VerifyMessageWithAddrRequest.addr)
  return _impl_.addr_.Release();
}
inline void VerifyMessageWithAddrRequest::set_allocated_addr(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.addr_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.addr_.IsDefault()) {
          _impl_.addr_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.VerifyMessageWithAddrRequest.addr)
}

// -------------------------------------------------------------------

// VerifyMessageWithAddrResponse

// bool valid = 1;
inline void VerifyMessageWithAddrResponse::clear_valid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = false;
}
inline bool VerifyMessageWithAddrResponse::valid() const {
  // @@protoc_insertion_point(field_get:walletrpc.VerifyMessageWithAddrResponse.valid)
  return _internal_valid();
}
inline void VerifyMessageWithAddrResponse::set_valid(bool value) {
  _internal_set_valid(value);
  // @@protoc_insertion_point(field_set:walletrpc.VerifyMessageWithAddrResponse.valid)
}
inline bool VerifyMessageWithAddrResponse::_internal_valid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.valid_;
}
inline void VerifyMessageWithAddrResponse::_internal_set_valid(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = value;
}

// bytes pubkey = 2;
inline void VerifyMessageWithAddrResponse::clear_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.ClearToEmpty();
}
inline const std::string& VerifyMessageWithAddrResponse::pubkey() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.VerifyMessageWithAddrResponse.pubkey)
  return _internal_pubkey();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void VerifyMessageWithAddrResponse::set_pubkey(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.VerifyMessageWithAddrResponse.pubkey)
}
inline std::string* VerifyMessageWithAddrResponse::mutable_pubkey() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pubkey();
  // @@protoc_insertion_point(field_mutable:walletrpc.VerifyMessageWithAddrResponse.pubkey)
  return _s;
}
inline const std::string& VerifyMessageWithAddrResponse::_internal_pubkey() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pubkey_.Get();
}
inline void VerifyMessageWithAddrResponse::_internal_set_pubkey(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.Set(value, GetArena());
}
inline std::string* VerifyMessageWithAddrResponse::_internal_mutable_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pubkey_.Mutable( GetArena());
}
inline std::string* VerifyMessageWithAddrResponse::release_pubkey() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.VerifyMessageWithAddrResponse.pubkey)
  return _impl_.pubkey_.Release();
}
inline void VerifyMessageWithAddrResponse::set_allocated_pubkey(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pubkey_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pubkey_.IsDefault()) {
          _impl_.pubkey_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.VerifyMessageWithAddrResponse.pubkey)
}

// -------------------------------------------------------------------

// ImportAccountRequest

// string name = 1;
inline void ImportAccountRequest::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& ImportAccountRequest::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountRequest.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportAccountRequest::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountRequest.name)
}
inline std::string* ImportAccountRequest::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportAccountRequest.name)
  return _s;
}
inline const std::string& ImportAccountRequest::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void ImportAccountRequest::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* ImportAccountRequest::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* ImportAccountRequest::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportAccountRequest.name)
  return _impl_.name_.Release();
}
inline void ImportAccountRequest::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportAccountRequest.name)
}

// string extended_public_key = 2;
inline void ImportAccountRequest::clear_extended_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.ClearToEmpty();
}
inline const std::string& ImportAccountRequest::extended_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountRequest.extended_public_key)
  return _internal_extended_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportAccountRequest::set_extended_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountRequest.extended_public_key)
}
inline std::string* ImportAccountRequest::mutable_extended_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_extended_public_key();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportAccountRequest.extended_public_key)
  return _s;
}
inline const std::string& ImportAccountRequest::_internal_extended_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.extended_public_key_.Get();
}
inline void ImportAccountRequest::_internal_set_extended_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.Set(value, GetArena());
}
inline std::string* ImportAccountRequest::_internal_mutable_extended_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.extended_public_key_.Mutable( GetArena());
}
inline std::string* ImportAccountRequest::release_extended_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportAccountRequest.extended_public_key)
  return _impl_.extended_public_key_.Release();
}
inline void ImportAccountRequest::set_allocated_extended_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.extended_public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.extended_public_key_.IsDefault()) {
          _impl_.extended_public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportAccountRequest.extended_public_key)
}

// bytes master_key_fingerprint = 3;
inline void ImportAccountRequest::clear_master_key_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.ClearToEmpty();
}
inline const std::string& ImportAccountRequest::master_key_fingerprint() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountRequest.master_key_fingerprint)
  return _internal_master_key_fingerprint();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportAccountRequest::set_master_key_fingerprint(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountRequest.master_key_fingerprint)
}
inline std::string* ImportAccountRequest::mutable_master_key_fingerprint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_master_key_fingerprint();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportAccountRequest.master_key_fingerprint)
  return _s;
}
inline const std::string& ImportAccountRequest::_internal_master_key_fingerprint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.master_key_fingerprint_.Get();
}
inline void ImportAccountRequest::_internal_set_master_key_fingerprint(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.Set(value, GetArena());
}
inline std::string* ImportAccountRequest::_internal_mutable_master_key_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.master_key_fingerprint_.Mutable( GetArena());
}
inline std::string* ImportAccountRequest::release_master_key_fingerprint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportAccountRequest.master_key_fingerprint)
  return _impl_.master_key_fingerprint_.Release();
}
inline void ImportAccountRequest::set_allocated_master_key_fingerprint(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.master_key_fingerprint_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.master_key_fingerprint_.IsDefault()) {
          _impl_.master_key_fingerprint_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportAccountRequest.master_key_fingerprint)
}

// .walletrpc.AddressType address_type = 4;
inline void ImportAccountRequest::clear_address_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = 0;
}
inline ::walletrpc::AddressType ImportAccountRequest::address_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountRequest.address_type)
  return _internal_address_type();
}
inline void ImportAccountRequest::set_address_type(::walletrpc::AddressType value) {
  _internal_set_address_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountRequest.address_type)
}
inline ::walletrpc::AddressType ImportAccountRequest::_internal_address_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::AddressType>(_impl_.address_type_);
}
inline void ImportAccountRequest::_internal_set_address_type(::walletrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = value;
}

// bool dry_run = 5;
inline void ImportAccountRequest::clear_dry_run() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dry_run_ = false;
}
inline bool ImportAccountRequest::dry_run() const {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountRequest.dry_run)
  return _internal_dry_run();
}
inline void ImportAccountRequest::set_dry_run(bool value) {
  _internal_set_dry_run(value);
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountRequest.dry_run)
}
inline bool ImportAccountRequest::_internal_dry_run() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dry_run_;
}
inline void ImportAccountRequest::_internal_set_dry_run(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dry_run_ = value;
}

// -------------------------------------------------------------------

// ImportAccountResponse

// .walletrpc.Account account = 1;
inline bool ImportAccountResponse::has_account() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.account_ != nullptr);
  return value;
}
inline void ImportAccountResponse::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.account_ != nullptr) _impl_.account_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::walletrpc::Account& ImportAccountResponse::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::walletrpc::Account* p = _impl_.account_;
  return p != nullptr ? *p : reinterpret_cast<const ::walletrpc::Account&>(::walletrpc::_Account_default_instance_);
}
inline const ::walletrpc::Account& ImportAccountResponse::account() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountResponse.account)
  return _internal_account();
}
inline void ImportAccountResponse::unsafe_arena_set_allocated_account(::walletrpc::Account* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.account_);
  }
  _impl_.account_ = reinterpret_cast<::walletrpc::Account*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.ImportAccountResponse.account)
}
inline ::walletrpc::Account* ImportAccountResponse::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::walletrpc::Account* released = _impl_.account_;
  _impl_.account_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::walletrpc::Account* ImportAccountResponse::unsafe_arena_release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportAccountResponse.account)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::walletrpc::Account* temp = _impl_.account_;
  _impl_.account_ = nullptr;
  return temp;
}
inline ::walletrpc::Account* ImportAccountResponse::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.account_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::walletrpc::Account>(GetArena());
    _impl_.account_ = reinterpret_cast<::walletrpc::Account*>(p);
  }
  return _impl_.account_;
}
inline ::walletrpc::Account* ImportAccountResponse::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::walletrpc::Account* _msg = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportAccountResponse.account)
  return _msg;
}
inline void ImportAccountResponse::set_allocated_account(::walletrpc::Account* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.account_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.account_ = reinterpret_cast<::walletrpc::Account*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportAccountResponse.account)
}

// repeated string dry_run_external_addrs = 2;
inline int ImportAccountResponse::_internal_dry_run_external_addrs_size() const {
  return _internal_dry_run_external_addrs().size();
}
inline int ImportAccountResponse::dry_run_external_addrs_size() const {
  return _internal_dry_run_external_addrs_size();
}
inline void ImportAccountResponse::clear_dry_run_external_addrs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dry_run_external_addrs_.Clear();
}
inline std::string* ImportAccountResponse::add_dry_run_external_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dry_run_external_addrs()->Add();
  // @@protoc_insertion_point(field_add_mutable:walletrpc.ImportAccountResponse.dry_run_external_addrs)
  return _s;
}
inline const std::string& ImportAccountResponse::dry_run_external_addrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountResponse.dry_run_external_addrs)
  return _internal_dry_run_external_addrs().Get(index);
}
inline std::string* ImportAccountResponse::mutable_dry_run_external_addrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportAccountResponse.dry_run_external_addrs)
  return _internal_mutable_dry_run_external_addrs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ImportAccountResponse::set_dry_run_external_addrs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dry_run_external_addrs()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountResponse.dry_run_external_addrs)
}
template <typename Arg_, typename... Args_>
inline void ImportAccountResponse::add_dry_run_external_addrs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dry_run_external_addrs(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:walletrpc.ImportAccountResponse.dry_run_external_addrs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ImportAccountResponse::dry_run_external_addrs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ImportAccountResponse.dry_run_external_addrs)
  return _internal_dry_run_external_addrs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ImportAccountResponse::mutable_dry_run_external_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ImportAccountResponse.dry_run_external_addrs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dry_run_external_addrs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ImportAccountResponse::_internal_dry_run_external_addrs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dry_run_external_addrs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ImportAccountResponse::_internal_mutable_dry_run_external_addrs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dry_run_external_addrs_;
}

// repeated string dry_run_internal_addrs = 3;
inline int ImportAccountResponse::_internal_dry_run_internal_addrs_size() const {
  return _internal_dry_run_internal_addrs().size();
}
inline int ImportAccountResponse::dry_run_internal_addrs_size() const {
  return _internal_dry_run_internal_addrs_size();
}
inline void ImportAccountResponse::clear_dry_run_internal_addrs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dry_run_internal_addrs_.Clear();
}
inline std::string* ImportAccountResponse::add_dry_run_internal_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_dry_run_internal_addrs()->Add();
  // @@protoc_insertion_point(field_add_mutable:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
  return _s;
}
inline const std::string& ImportAccountResponse::dry_run_internal_addrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
  return _internal_dry_run_internal_addrs().Get(index);
}
inline std::string* ImportAccountResponse::mutable_dry_run_internal_addrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
  return _internal_mutable_dry_run_internal_addrs()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ImportAccountResponse::set_dry_run_internal_addrs(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_dry_run_internal_addrs()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
}
template <typename Arg_, typename... Args_>
inline void ImportAccountResponse::add_dry_run_internal_addrs(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_dry_run_internal_addrs(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ImportAccountResponse::dry_run_internal_addrs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
  return _internal_dry_run_internal_addrs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ImportAccountResponse::mutable_dry_run_internal_addrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ImportAccountResponse.dry_run_internal_addrs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dry_run_internal_addrs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ImportAccountResponse::_internal_dry_run_internal_addrs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dry_run_internal_addrs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ImportAccountResponse::_internal_mutable_dry_run_internal_addrs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dry_run_internal_addrs_;
}

// -------------------------------------------------------------------

// ImportPublicKeyRequest

// bytes public_key = 1;
inline void ImportPublicKeyRequest::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.ClearToEmpty();
}
inline const std::string& ImportPublicKeyRequest::public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportPublicKeyRequest.public_key)
  return _internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportPublicKeyRequest::set_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportPublicKeyRequest.public_key)
}
inline std::string* ImportPublicKeyRequest::mutable_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_public_key();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportPublicKeyRequest.public_key)
  return _s;
}
inline const std::string& ImportPublicKeyRequest::_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.public_key_.Get();
}
inline void ImportPublicKeyRequest::_internal_set_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.Set(value, GetArena());
}
inline std::string* ImportPublicKeyRequest::_internal_mutable_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.public_key_.Mutable( GetArena());
}
inline std::string* ImportPublicKeyRequest::release_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportPublicKeyRequest.public_key)
  return _impl_.public_key_.Release();
}
inline void ImportPublicKeyRequest::set_allocated_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.public_key_.IsDefault()) {
          _impl_.public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportPublicKeyRequest.public_key)
}

// .walletrpc.AddressType address_type = 2;
inline void ImportPublicKeyRequest::clear_address_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = 0;
}
inline ::walletrpc::AddressType ImportPublicKeyRequest::address_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.ImportPublicKeyRequest.address_type)
  return _internal_address_type();
}
inline void ImportPublicKeyRequest::set_address_type(::walletrpc::AddressType value) {
  _internal_set_address_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.ImportPublicKeyRequest.address_type)
}
inline ::walletrpc::AddressType ImportPublicKeyRequest::_internal_address_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::AddressType>(_impl_.address_type_);
}
inline void ImportPublicKeyRequest::_internal_set_address_type(::walletrpc::AddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.address_type_ = value;
}

// -------------------------------------------------------------------

// ImportPublicKeyResponse

// -------------------------------------------------------------------

// ImportTapscriptRequest

// bytes internal_public_key = 1;
inline void ImportTapscriptRequest::clear_internal_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_public_key_.ClearToEmpty();
}
inline const std::string& ImportTapscriptRequest::internal_public_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportTapscriptRequest.internal_public_key)
  return _internal_internal_public_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportTapscriptRequest::set_internal_public_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_public_key_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportTapscriptRequest.internal_public_key)
}
inline std::string* ImportTapscriptRequest::mutable_internal_public_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_internal_public_key();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportTapscriptRequest.internal_public_key)
  return _s;
}
inline const std::string& ImportTapscriptRequest::_internal_internal_public_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.internal_public_key_.Get();
}
inline void ImportTapscriptRequest::_internal_set_internal_public_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_public_key_.Set(value, GetArena());
}
inline std::string* ImportTapscriptRequest::_internal_mutable_internal_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.internal_public_key_.Mutable( GetArena());
}
inline std::string* ImportTapscriptRequest::release_internal_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportTapscriptRequest.internal_public_key)
  return _impl_.internal_public_key_.Release();
}
inline void ImportTapscriptRequest::set_allocated_internal_public_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.internal_public_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.internal_public_key_.IsDefault()) {
          _impl_.internal_public_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportTapscriptRequest.internal_public_key)
}

// .walletrpc.TapscriptFullTree full_tree = 2;
inline bool ImportTapscriptRequest::has_full_tree() const {
  return script_case() == kFullTree;
}
inline bool ImportTapscriptRequest::_internal_has_full_tree() const {
  return script_case() == kFullTree;
}
inline void ImportTapscriptRequest::set_has_full_tree() {
  _impl_._oneof_case_[0] = kFullTree;
}
inline void ImportTapscriptRequest::clear_full_tree() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() == kFullTree) {
    if (GetArena() == nullptr) {
      delete _impl_.script_.full_tree_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.script_.full_tree_);
    }
    clear_has_script();
  }
}
inline ::walletrpc::TapscriptFullTree* ImportTapscriptRequest::release_full_tree() {
  // @@protoc_insertion_point(field_release:walletrpc.ImportTapscriptRequest.full_tree)
  if (script_case() == kFullTree) {
    clear_has_script();
    auto* temp = _impl_.script_.full_tree_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.script_.full_tree_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::walletrpc::TapscriptFullTree& ImportTapscriptRequest::_internal_full_tree() const {
  return script_case() == kFullTree ? *_impl_.script_.full_tree_ : reinterpret_cast<::walletrpc::TapscriptFullTree&>(::walletrpc::_TapscriptFullTree_default_instance_);
}
inline const ::walletrpc::TapscriptFullTree& ImportTapscriptRequest::full_tree() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportTapscriptRequest.full_tree)
  return _internal_full_tree();
}
inline ::walletrpc::TapscriptFullTree* ImportTapscriptRequest::unsafe_arena_release_full_tree() {
  // @@protoc_insertion_point(field_unsafe_arena_release:walletrpc.ImportTapscriptRequest.full_tree)
  if (script_case() == kFullTree) {
    clear_has_script();
    auto* temp = _impl_.script_.full_tree_;
    _impl_.script_.full_tree_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ImportTapscriptRequest::unsafe_arena_set_allocated_full_tree(::walletrpc::TapscriptFullTree* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_script();
  if (value) {
    set_has_full_tree();
    _impl_.script_.full_tree_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.ImportTapscriptRequest.full_tree)
}
inline ::walletrpc::TapscriptFullTree* ImportTapscriptRequest::_internal_mutable_full_tree() {
  if (script_case() != kFullTree) {
    clear_script();
    set_has_full_tree();
    _impl_.script_.full_tree_ =
        ::google::protobuf::Message::DefaultConstruct<::walletrpc::TapscriptFullTree>(GetArena());
  }
  return _impl_.script_.full_tree_;
}
inline ::walletrpc::TapscriptFullTree* ImportTapscriptRequest::mutable_full_tree() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::walletrpc::TapscriptFullTree* _msg = _internal_mutable_full_tree();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportTapscriptRequest.full_tree)
  return _msg;
}

// .walletrpc.TapscriptPartialReveal partial_reveal = 3;
inline bool ImportTapscriptRequest::has_partial_reveal() const {
  return script_case() == kPartialReveal;
}
inline bool ImportTapscriptRequest::_internal_has_partial_reveal() const {
  return script_case() == kPartialReveal;
}
inline void ImportTapscriptRequest::set_has_partial_reveal() {
  _impl_._oneof_case_[0] = kPartialReveal;
}
inline void ImportTapscriptRequest::clear_partial_reveal() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() == kPartialReveal) {
    if (GetArena() == nullptr) {
      delete _impl_.script_.partial_reveal_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.script_.partial_reveal_);
    }
    clear_has_script();
  }
}
inline ::walletrpc::TapscriptPartialReveal* ImportTapscriptRequest::release_partial_reveal() {
  // @@protoc_insertion_point(field_release:walletrpc.ImportTapscriptRequest.partial_reveal)
  if (script_case() == kPartialReveal) {
    clear_has_script();
    auto* temp = _impl_.script_.partial_reveal_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.script_.partial_reveal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::walletrpc::TapscriptPartialReveal& ImportTapscriptRequest::_internal_partial_reveal() const {
  return script_case() == kPartialReveal ? *_impl_.script_.partial_reveal_ : reinterpret_cast<::walletrpc::TapscriptPartialReveal&>(::walletrpc::_TapscriptPartialReveal_default_instance_);
}
inline const ::walletrpc::TapscriptPartialReveal& ImportTapscriptRequest::partial_reveal() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportTapscriptRequest.partial_reveal)
  return _internal_partial_reveal();
}
inline ::walletrpc::TapscriptPartialReveal* ImportTapscriptRequest::unsafe_arena_release_partial_reveal() {
  // @@protoc_insertion_point(field_unsafe_arena_release:walletrpc.ImportTapscriptRequest.partial_reveal)
  if (script_case() == kPartialReveal) {
    clear_has_script();
    auto* temp = _impl_.script_.partial_reveal_;
    _impl_.script_.partial_reveal_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ImportTapscriptRequest::unsafe_arena_set_allocated_partial_reveal(::walletrpc::TapscriptPartialReveal* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_script();
  if (value) {
    set_has_partial_reveal();
    _impl_.script_.partial_reveal_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.ImportTapscriptRequest.partial_reveal)
}
inline ::walletrpc::TapscriptPartialReveal* ImportTapscriptRequest::_internal_mutable_partial_reveal() {
  if (script_case() != kPartialReveal) {
    clear_script();
    set_has_partial_reveal();
    _impl_.script_.partial_reveal_ =
        ::google::protobuf::Message::DefaultConstruct<::walletrpc::TapscriptPartialReveal>(GetArena());
  }
  return _impl_.script_.partial_reveal_;
}
inline ::walletrpc::TapscriptPartialReveal* ImportTapscriptRequest::mutable_partial_reveal() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::walletrpc::TapscriptPartialReveal* _msg = _internal_mutable_partial_reveal();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportTapscriptRequest.partial_reveal)
  return _msg;
}

// bytes root_hash_only = 4;
inline bool ImportTapscriptRequest::has_root_hash_only() const {
  return script_case() == kRootHashOnly;
}
inline void ImportTapscriptRequest::set_has_root_hash_only() {
  _impl_._oneof_case_[0] = kRootHashOnly;
}
inline void ImportTapscriptRequest::clear_root_hash_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() == kRootHashOnly) {
    _impl_.script_.root_hash_only_.Destroy();
    clear_has_script();
  }
}
inline const std::string& ImportTapscriptRequest::root_hash_only() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportTapscriptRequest.root_hash_only)
  return _internal_root_hash_only();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportTapscriptRequest::set_root_hash_only(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() != kRootHashOnly) {
    clear_script();

    set_has_root_hash_only();
    _impl_.script_.root_hash_only_.InitDefault();
  }
  _impl_.script_.root_hash_only_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportTapscriptRequest.root_hash_only)
}
inline std::string* ImportTapscriptRequest::mutable_root_hash_only() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_root_hash_only();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportTapscriptRequest.root_hash_only)
  return _s;
}
inline const std::string& ImportTapscriptRequest::_internal_root_hash_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (script_case() != kRootHashOnly) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.script_.root_hash_only_.Get();
}
inline void ImportTapscriptRequest::_internal_set_root_hash_only(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() != kRootHashOnly) {
    clear_script();

    set_has_root_hash_only();
    _impl_.script_.root_hash_only_.InitDefault();
  }
  _impl_.script_.root_hash_only_.Set(value, GetArena());
}
inline std::string* ImportTapscriptRequest::_internal_mutable_root_hash_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() != kRootHashOnly) {
    clear_script();

    set_has_root_hash_only();
    _impl_.script_.root_hash_only_.InitDefault();
  }
  return _impl_.script_.root_hash_only_.Mutable( GetArena());
}
inline std::string* ImportTapscriptRequest::release_root_hash_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportTapscriptRequest.root_hash_only)
  if (script_case() != kRootHashOnly) {
    return nullptr;
  }
  clear_has_script();
  return _impl_.script_.root_hash_only_.Release();
}
inline void ImportTapscriptRequest::set_allocated_root_hash_only(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_script()) {
    clear_script();
  }
  if (value != nullptr) {
    set_has_root_hash_only();
    _impl_.script_.root_hash_only_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportTapscriptRequest.root_hash_only)
}

// bool full_key_only = 5;
inline bool ImportTapscriptRequest::has_full_key_only() const {
  return script_case() == kFullKeyOnly;
}
inline void ImportTapscriptRequest::set_has_full_key_only() {
  _impl_._oneof_case_[0] = kFullKeyOnly;
}
inline void ImportTapscriptRequest::clear_full_key_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (script_case() == kFullKeyOnly) {
    _impl_.script_.full_key_only_ = false;
    clear_has_script();
  }
}
inline bool ImportTapscriptRequest::full_key_only() const {
  // @@protoc_insertion_point(field_get:walletrpc.ImportTapscriptRequest.full_key_only)
  return _internal_full_key_only();
}
inline void ImportTapscriptRequest::set_full_key_only(bool value) {
  if (script_case() != kFullKeyOnly) {
    clear_script();
    set_has_full_key_only();
  }
  _impl_.script_.full_key_only_ = value;
  // @@protoc_insertion_point(field_set:walletrpc.ImportTapscriptRequest.full_key_only)
}
inline bool ImportTapscriptRequest::_internal_full_key_only() const {
  if (script_case() == kFullKeyOnly) {
    return _impl_.script_.full_key_only_;
  }
  return false;
}

inline bool ImportTapscriptRequest::has_script() const {
  return script_case() != SCRIPT_NOT_SET;
}
inline void ImportTapscriptRequest::clear_has_script() {
  _impl_._oneof_case_[0] = SCRIPT_NOT_SET;
}
inline ImportTapscriptRequest::ScriptCase ImportTapscriptRequest::script_case() const {
  return ImportTapscriptRequest::ScriptCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// TapscriptFullTree

// repeated .walletrpc.TapLeaf all_leaves = 1;
inline int TapscriptFullTree::_internal_all_leaves_size() const {
  return _internal_all_leaves().size();
}
inline int TapscriptFullTree::all_leaves_size() const {
  return _internal_all_leaves_size();
}
inline void TapscriptFullTree::clear_all_leaves() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.all_leaves_.Clear();
}
inline ::walletrpc::TapLeaf* TapscriptFullTree::mutable_all_leaves(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.TapscriptFullTree.all_leaves)
  return _internal_mutable_all_leaves()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>* TapscriptFullTree::mutable_all_leaves()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.TapscriptFullTree.all_leaves)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_all_leaves();
}
inline const ::walletrpc::TapLeaf& TapscriptFullTree::all_leaves(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.TapscriptFullTree.all_leaves)
  return _internal_all_leaves().Get(index);
}
inline ::walletrpc::TapLeaf* TapscriptFullTree::add_all_leaves() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::TapLeaf* _add = _internal_mutable_all_leaves()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.TapscriptFullTree.all_leaves)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>& TapscriptFullTree::all_leaves() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.TapscriptFullTree.all_leaves)
  return _internal_all_leaves();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>&
TapscriptFullTree::_internal_all_leaves() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.all_leaves_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::TapLeaf>*
TapscriptFullTree::_internal_mutable_all_leaves() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.all_leaves_;
}

// -------------------------------------------------------------------

// TapLeaf

// uint32 leaf_version = 1;
inline void TapLeaf::clear_leaf_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaf_version_ = 0u;
}
inline ::uint32_t TapLeaf::leaf_version() const {
  // @@protoc_insertion_point(field_get:walletrpc.TapLeaf.leaf_version)
  return _internal_leaf_version();
}
inline void TapLeaf::set_leaf_version(::uint32_t value) {
  _internal_set_leaf_version(value);
  // @@protoc_insertion_point(field_set:walletrpc.TapLeaf.leaf_version)
}
inline ::uint32_t TapLeaf::_internal_leaf_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.leaf_version_;
}
inline void TapLeaf::_internal_set_leaf_version(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.leaf_version_ = value;
}

// bytes script = 2;
inline void TapLeaf::clear_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.ClearToEmpty();
}
inline const std::string& TapLeaf::script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.TapLeaf.script)
  return _internal_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TapLeaf::set_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.TapLeaf.script)
}
inline std::string* TapLeaf::mutable_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_script();
  // @@protoc_insertion_point(field_mutable:walletrpc.TapLeaf.script)
  return _s;
}
inline const std::string& TapLeaf::_internal_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.script_.Get();
}
inline void TapLeaf::_internal_set_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.Set(value, GetArena());
}
inline std::string* TapLeaf::_internal_mutable_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.script_.Mutable( GetArena());
}
inline std::string* TapLeaf::release_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.TapLeaf.script)
  return _impl_.script_.Release();
}
inline void TapLeaf::set_allocated_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.script_.IsDefault()) {
          _impl_.script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.TapLeaf.script)
}

// -------------------------------------------------------------------

// TapscriptPartialReveal

// .walletrpc.TapLeaf revealed_leaf = 1;
inline bool TapscriptPartialReveal::has_revealed_leaf() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.revealed_leaf_ != nullptr);
  return value;
}
inline void TapscriptPartialReveal::clear_revealed_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.revealed_leaf_ != nullptr) _impl_.revealed_leaf_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::walletrpc::TapLeaf& TapscriptPartialReveal::_internal_revealed_leaf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::walletrpc::TapLeaf* p = _impl_.revealed_leaf_;
  return p != nullptr ? *p : reinterpret_cast<const ::walletrpc::TapLeaf&>(::walletrpc::_TapLeaf_default_instance_);
}
inline const ::walletrpc::TapLeaf& TapscriptPartialReveal::revealed_leaf() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.TapscriptPartialReveal.revealed_leaf)
  return _internal_revealed_leaf();
}
inline void TapscriptPartialReveal::unsafe_arena_set_allocated_revealed_leaf(::walletrpc::TapLeaf* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.revealed_leaf_);
  }
  _impl_.revealed_leaf_ = reinterpret_cast<::walletrpc::TapLeaf*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.TapscriptPartialReveal.revealed_leaf)
}
inline ::walletrpc::TapLeaf* TapscriptPartialReveal::release_revealed_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::walletrpc::TapLeaf* released = _impl_.revealed_leaf_;
  _impl_.revealed_leaf_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::walletrpc::TapLeaf* TapscriptPartialReveal::unsafe_arena_release_revealed_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.TapscriptPartialReveal.revealed_leaf)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::walletrpc::TapLeaf* temp = _impl_.revealed_leaf_;
  _impl_.revealed_leaf_ = nullptr;
  return temp;
}
inline ::walletrpc::TapLeaf* TapscriptPartialReveal::_internal_mutable_revealed_leaf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.revealed_leaf_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::walletrpc::TapLeaf>(GetArena());
    _impl_.revealed_leaf_ = reinterpret_cast<::walletrpc::TapLeaf*>(p);
  }
  return _impl_.revealed_leaf_;
}
inline ::walletrpc::TapLeaf* TapscriptPartialReveal::mutable_revealed_leaf() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::walletrpc::TapLeaf* _msg = _internal_mutable_revealed_leaf();
  // @@protoc_insertion_point(field_mutable:walletrpc.TapscriptPartialReveal.revealed_leaf)
  return _msg;
}
inline void TapscriptPartialReveal::set_allocated_revealed_leaf(::walletrpc::TapLeaf* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.revealed_leaf_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.revealed_leaf_ = reinterpret_cast<::walletrpc::TapLeaf*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.TapscriptPartialReveal.revealed_leaf)
}

// bytes full_inclusion_proof = 2;
inline void TapscriptPartialReveal::clear_full_inclusion_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_inclusion_proof_.ClearToEmpty();
}
inline const std::string& TapscriptPartialReveal::full_inclusion_proof() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.TapscriptPartialReveal.full_inclusion_proof)
  return _internal_full_inclusion_proof();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TapscriptPartialReveal::set_full_inclusion_proof(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_inclusion_proof_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.TapscriptPartialReveal.full_inclusion_proof)
}
inline std::string* TapscriptPartialReveal::mutable_full_inclusion_proof() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_full_inclusion_proof();
  // @@protoc_insertion_point(field_mutable:walletrpc.TapscriptPartialReveal.full_inclusion_proof)
  return _s;
}
inline const std::string& TapscriptPartialReveal::_internal_full_inclusion_proof() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.full_inclusion_proof_.Get();
}
inline void TapscriptPartialReveal::_internal_set_full_inclusion_proof(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_inclusion_proof_.Set(value, GetArena());
}
inline std::string* TapscriptPartialReveal::_internal_mutable_full_inclusion_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.full_inclusion_proof_.Mutable( GetArena());
}
inline std::string* TapscriptPartialReveal::release_full_inclusion_proof() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.TapscriptPartialReveal.full_inclusion_proof)
  return _impl_.full_inclusion_proof_.Release();
}
inline void TapscriptPartialReveal::set_allocated_full_inclusion_proof(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.full_inclusion_proof_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.full_inclusion_proof_.IsDefault()) {
          _impl_.full_inclusion_proof_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.TapscriptPartialReveal.full_inclusion_proof)
}

// -------------------------------------------------------------------

// ImportTapscriptResponse

// string p2tr_address = 1;
inline void ImportTapscriptResponse::clear_p2tr_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p2tr_address_.ClearToEmpty();
}
inline const std::string& ImportTapscriptResponse::p2tr_address() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ImportTapscriptResponse.p2tr_address)
  return _internal_p2tr_address();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ImportTapscriptResponse::set_p2tr_address(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p2tr_address_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.ImportTapscriptResponse.p2tr_address)
}
inline std::string* ImportTapscriptResponse::mutable_p2tr_address() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_p2tr_address();
  // @@protoc_insertion_point(field_mutable:walletrpc.ImportTapscriptResponse.p2tr_address)
  return _s;
}
inline const std::string& ImportTapscriptResponse::_internal_p2tr_address() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.p2tr_address_.Get();
}
inline void ImportTapscriptResponse::_internal_set_p2tr_address(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p2tr_address_.Set(value, GetArena());
}
inline std::string* ImportTapscriptResponse::_internal_mutable_p2tr_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.p2tr_address_.Mutable( GetArena());
}
inline std::string* ImportTapscriptResponse::release_p2tr_address() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.ImportTapscriptResponse.p2tr_address)
  return _impl_.p2tr_address_.Release();
}
inline void ImportTapscriptResponse::set_allocated_p2tr_address(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.p2tr_address_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.p2tr_address_.IsDefault()) {
          _impl_.p2tr_address_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.ImportTapscriptResponse.p2tr_address)
}

// -------------------------------------------------------------------

// Transaction

// bytes tx_hex = 1;
inline void Transaction::clear_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hex_.ClearToEmpty();
}
inline const std::string& Transaction::tx_hex() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.Transaction.tx_hex)
  return _internal_tx_hex();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transaction::set_tx_hex(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hex_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.Transaction.tx_hex)
}
inline std::string* Transaction::mutable_tx_hex() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tx_hex();
  // @@protoc_insertion_point(field_mutable:walletrpc.Transaction.tx_hex)
  return _s;
}
inline const std::string& Transaction::_internal_tx_hex() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tx_hex_.Get();
}
inline void Transaction::_internal_set_tx_hex(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hex_.Set(value, GetArena());
}
inline std::string* Transaction::_internal_mutable_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tx_hex_.Mutable( GetArena());
}
inline std::string* Transaction::release_tx_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.Transaction.tx_hex)
  return _impl_.tx_hex_.Release();
}
inline void Transaction::set_allocated_tx_hex(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tx_hex_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tx_hex_.IsDefault()) {
          _impl_.tx_hex_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.Transaction.tx_hex)
}

// string label = 2;
inline void Transaction::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& Transaction::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.Transaction.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Transaction::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.Transaction.label)
}
inline std::string* Transaction::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:walletrpc.Transaction.label)
  return _s;
}
inline const std::string& Transaction::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void Transaction::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* Transaction::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* Transaction::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.Transaction.label)
  return _impl_.label_.Release();
}
inline void Transaction::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.Transaction.label)
}

// -------------------------------------------------------------------

// PublishResponse

// string publish_error = 1;
inline void PublishResponse::clear_publish_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publish_error_.ClearToEmpty();
}
inline const std::string& PublishResponse::publish_error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.PublishResponse.publish_error)
  return _internal_publish_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PublishResponse::set_publish_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publish_error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.PublishResponse.publish_error)
}
inline std::string* PublishResponse::mutable_publish_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_publish_error();
  // @@protoc_insertion_point(field_mutable:walletrpc.PublishResponse.publish_error)
  return _s;
}
inline const std::string& PublishResponse::_internal_publish_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.publish_error_.Get();
}
inline void PublishResponse::_internal_set_publish_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publish_error_.Set(value, GetArena());
}
inline std::string* PublishResponse::_internal_mutable_publish_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.publish_error_.Mutable( GetArena());
}
inline std::string* PublishResponse::release_publish_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.PublishResponse.publish_error)
  return _impl_.publish_error_.Release();
}
inline void PublishResponse::set_allocated_publish_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.publish_error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.publish_error_.IsDefault()) {
          _impl_.publish_error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.PublishResponse.publish_error)
}

// -------------------------------------------------------------------

// RemoveTransactionResponse

// string status = 1;
inline void RemoveTransactionResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& RemoveTransactionResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.RemoveTransactionResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveTransactionResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.RemoveTransactionResponse.status)
}
inline std::string* RemoveTransactionResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:walletrpc.RemoveTransactionResponse.status)
  return _s;
}
inline const std::string& RemoveTransactionResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void RemoveTransactionResponse::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* RemoveTransactionResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* RemoveTransactionResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.RemoveTransactionResponse.status)
  return _impl_.status_.Release();
}
inline void RemoveTransactionResponse::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.RemoveTransactionResponse.status)
}

// -------------------------------------------------------------------

// SendOutputsRequest

// int64 sat_per_kw = 1;
inline void SendOutputsRequest::clear_sat_per_kw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_kw_ = ::int64_t{0};
}
inline ::int64_t SendOutputsRequest::sat_per_kw() const {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsRequest.sat_per_kw)
  return _internal_sat_per_kw();
}
inline void SendOutputsRequest::set_sat_per_kw(::int64_t value) {
  _internal_set_sat_per_kw(value);
  // @@protoc_insertion_point(field_set:walletrpc.SendOutputsRequest.sat_per_kw)
}
inline ::int64_t SendOutputsRequest::_internal_sat_per_kw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_kw_;
}
inline void SendOutputsRequest::_internal_set_sat_per_kw(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_kw_ = value;
}

// repeated .signrpc.TxOut outputs = 2;
inline int SendOutputsRequest::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int SendOutputsRequest::outputs_size() const {
  return _internal_outputs_size();
}
inline ::signrpc::TxOut* SendOutputsRequest::mutable_outputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.SendOutputsRequest.outputs)
  return _internal_mutable_outputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>* SendOutputsRequest::mutable_outputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.SendOutputsRequest.outputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_outputs();
}
inline const ::signrpc::TxOut& SendOutputsRequest::outputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsRequest.outputs)
  return _internal_outputs().Get(index);
}
inline ::signrpc::TxOut* SendOutputsRequest::add_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::signrpc::TxOut* _add = _internal_mutable_outputs()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.SendOutputsRequest.outputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>& SendOutputsRequest::outputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.SendOutputsRequest.outputs)
  return _internal_outputs();
}
inline const ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>&
SendOutputsRequest::_internal_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outputs_;
}
inline ::google::protobuf::RepeatedPtrField<::signrpc::TxOut>*
SendOutputsRequest::_internal_mutable_outputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.outputs_;
}

// string label = 3;
inline void SendOutputsRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& SendOutputsRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendOutputsRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SendOutputsRequest.label)
}
inline std::string* SendOutputsRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:walletrpc.SendOutputsRequest.label)
  return _s;
}
inline const std::string& SendOutputsRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void SendOutputsRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* SendOutputsRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* SendOutputsRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SendOutputsRequest.label)
  return _impl_.label_.Release();
}
inline void SendOutputsRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SendOutputsRequest.label)
}

// int32 min_confs = 4;
inline void SendOutputsRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t SendOutputsRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsRequest.min_confs)
  return _internal_min_confs();
}
inline void SendOutputsRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:walletrpc.SendOutputsRequest.min_confs)
}
inline ::int32_t SendOutputsRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void SendOutputsRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 5;
inline void SendOutputsRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool SendOutputsRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void SendOutputsRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:walletrpc.SendOutputsRequest.spend_unconfirmed)
}
inline bool SendOutputsRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void SendOutputsRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// .lnrpc.CoinSelectionStrategy coin_selection_strategy = 6;
inline void SendOutputsRequest::clear_coin_selection_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = 0;
}
inline ::lnrpc::CoinSelectionStrategy SendOutputsRequest::coin_selection_strategy() const {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsRequest.coin_selection_strategy)
  return _internal_coin_selection_strategy();
}
inline void SendOutputsRequest::set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  _internal_set_coin_selection_strategy(value);
  // @@protoc_insertion_point(field_set:walletrpc.SendOutputsRequest.coin_selection_strategy)
}
inline ::lnrpc::CoinSelectionStrategy SendOutputsRequest::_internal_coin_selection_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CoinSelectionStrategy>(_impl_.coin_selection_strategy_);
}
inline void SendOutputsRequest::_internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = value;
}

// -------------------------------------------------------------------

// SendOutputsResponse

// bytes raw_tx = 1;
inline void SendOutputsResponse::clear_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.ClearToEmpty();
}
inline const std::string& SendOutputsResponse::raw_tx() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SendOutputsResponse.raw_tx)
  return _internal_raw_tx();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SendOutputsResponse::set_raw_tx(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SendOutputsResponse.raw_tx)
}
inline std::string* SendOutputsResponse::mutable_raw_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_tx();
  // @@protoc_insertion_point(field_mutable:walletrpc.SendOutputsResponse.raw_tx)
  return _s;
}
inline const std::string& SendOutputsResponse::_internal_raw_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_tx_.Get();
}
inline void SendOutputsResponse::_internal_set_raw_tx(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.Set(value, GetArena());
}
inline std::string* SendOutputsResponse::_internal_mutable_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_tx_.Mutable( GetArena());
}
inline std::string* SendOutputsResponse::release_raw_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SendOutputsResponse.raw_tx)
  return _impl_.raw_tx_.Release();
}
inline void SendOutputsResponse::set_allocated_raw_tx(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_tx_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_tx_.IsDefault()) {
          _impl_.raw_tx_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SendOutputsResponse.raw_tx)
}

// -------------------------------------------------------------------

// EstimateFeeRequest

// int32 conf_target = 1;
inline void EstimateFeeRequest::clear_conf_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conf_target_ = 0;
}
inline ::int32_t EstimateFeeRequest::conf_target() const {
  // @@protoc_insertion_point(field_get:walletrpc.EstimateFeeRequest.conf_target)
  return _internal_conf_target();
}
inline void EstimateFeeRequest::set_conf_target(::int32_t value) {
  _internal_set_conf_target(value);
  // @@protoc_insertion_point(field_set:walletrpc.EstimateFeeRequest.conf_target)
}
inline ::int32_t EstimateFeeRequest::_internal_conf_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conf_target_;
}
inline void EstimateFeeRequest::_internal_set_conf_target(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conf_target_ = value;
}

// -------------------------------------------------------------------

// EstimateFeeResponse

// int64 sat_per_kw = 1;
inline void EstimateFeeResponse::clear_sat_per_kw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_kw_ = ::int64_t{0};
}
inline ::int64_t EstimateFeeResponse::sat_per_kw() const {
  // @@protoc_insertion_point(field_get:walletrpc.EstimateFeeResponse.sat_per_kw)
  return _internal_sat_per_kw();
}
inline void EstimateFeeResponse::set_sat_per_kw(::int64_t value) {
  _internal_set_sat_per_kw(value);
  // @@protoc_insertion_point(field_set:walletrpc.EstimateFeeResponse.sat_per_kw)
}
inline ::int64_t EstimateFeeResponse::_internal_sat_per_kw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_kw_;
}
inline void EstimateFeeResponse::_internal_set_sat_per_kw(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_kw_ = value;
}

// int64 min_relay_fee_sat_per_kw = 2;
inline void EstimateFeeResponse::clear_min_relay_fee_sat_per_kw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_relay_fee_sat_per_kw_ = ::int64_t{0};
}
inline ::int64_t EstimateFeeResponse::min_relay_fee_sat_per_kw() const {
  // @@protoc_insertion_point(field_get:walletrpc.EstimateFeeResponse.min_relay_fee_sat_per_kw)
  return _internal_min_relay_fee_sat_per_kw();
}
inline void EstimateFeeResponse::set_min_relay_fee_sat_per_kw(::int64_t value) {
  _internal_set_min_relay_fee_sat_per_kw(value);
  // @@protoc_insertion_point(field_set:walletrpc.EstimateFeeResponse.min_relay_fee_sat_per_kw)
}
inline ::int64_t EstimateFeeResponse::_internal_min_relay_fee_sat_per_kw() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_relay_fee_sat_per_kw_;
}
inline void EstimateFeeResponse::_internal_set_min_relay_fee_sat_per_kw(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_relay_fee_sat_per_kw_ = value;
}

// -------------------------------------------------------------------

// PendingSweep

// .lnrpc.OutPoint outpoint = 1;
inline bool PendingSweep::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline const ::lnrpc::OutPoint& PendingSweep::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& PendingSweep::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.outpoint)
  return _internal_outpoint();
}
inline void PendingSweep::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.PendingSweep.outpoint)
}
inline ::lnrpc::OutPoint* PendingSweep::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* PendingSweep::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.PendingSweep.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* PendingSweep::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* PendingSweep::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:walletrpc.PendingSweep.outpoint)
  return _msg;
}
inline void PendingSweep::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.PendingSweep.outpoint)
}

// .walletrpc.WitnessType witness_type = 2;
inline void PendingSweep::clear_witness_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.witness_type_ = 0;
}
inline ::walletrpc::WitnessType PendingSweep::witness_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.witness_type)
  return _internal_witness_type();
}
inline void PendingSweep::set_witness_type(::walletrpc::WitnessType value) {
  _internal_set_witness_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.witness_type)
}
inline ::walletrpc::WitnessType PendingSweep::_internal_witness_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::WitnessType>(_impl_.witness_type_);
}
inline void PendingSweep::_internal_set_witness_type(::walletrpc::WitnessType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.witness_type_ = value;
}

// uint32 amount_sat = 3;
inline void PendingSweep::clear_amount_sat() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = 0u;
}
inline ::uint32_t PendingSweep::amount_sat() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.amount_sat)
  return _internal_amount_sat();
}
inline void PendingSweep::set_amount_sat(::uint32_t value) {
  _internal_set_amount_sat(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.amount_sat)
}
inline ::uint32_t PendingSweep::_internal_amount_sat() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.amount_sat_;
}
inline void PendingSweep::_internal_set_amount_sat(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.amount_sat_ = value;
}

// uint32 sat_per_byte = 4 [deprecated = true];
inline void PendingSweep::clear_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = 0u;
}
inline ::uint32_t PendingSweep::sat_per_byte() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.sat_per_byte)
  return _internal_sat_per_byte();
}
inline void PendingSweep::set_sat_per_byte(::uint32_t value) {
  _internal_set_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.sat_per_byte)
}
inline ::uint32_t PendingSweep::_internal_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_byte_;
}
inline void PendingSweep::_internal_set_sat_per_byte(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = value;
}

// uint32 broadcast_attempts = 5;
inline void PendingSweep::clear_broadcast_attempts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.broadcast_attempts_ = 0u;
}
inline ::uint32_t PendingSweep::broadcast_attempts() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.broadcast_attempts)
  return _internal_broadcast_attempts();
}
inline void PendingSweep::set_broadcast_attempts(::uint32_t value) {
  _internal_set_broadcast_attempts(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.broadcast_attempts)
}
inline ::uint32_t PendingSweep::_internal_broadcast_attempts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.broadcast_attempts_;
}
inline void PendingSweep::_internal_set_broadcast_attempts(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.broadcast_attempts_ = value;
}

// uint32 next_broadcast_height = 6 [deprecated = true];
inline void PendingSweep::clear_next_broadcast_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_broadcast_height_ = 0u;
}
inline ::uint32_t PendingSweep::next_broadcast_height() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.next_broadcast_height)
  return _internal_next_broadcast_height();
}
inline void PendingSweep::set_next_broadcast_height(::uint32_t value) {
  _internal_set_next_broadcast_height(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.next_broadcast_height)
}
inline ::uint32_t PendingSweep::_internal_next_broadcast_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.next_broadcast_height_;
}
inline void PendingSweep::_internal_set_next_broadcast_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.next_broadcast_height_ = value;
}

// bool force = 7 [deprecated = true];
inline void PendingSweep::clear_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = false;
}
inline bool PendingSweep::force() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.force)
  return _internal_force();
}
inline void PendingSweep::set_force(bool value) {
  _internal_set_force(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.force)
}
inline bool PendingSweep::_internal_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_;
}
inline void PendingSweep::_internal_set_force(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = value;
}

// uint32 requested_conf_target = 8 [deprecated = true];
inline void PendingSweep::clear_requested_conf_target() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_conf_target_ = 0u;
}
inline ::uint32_t PendingSweep::requested_conf_target() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.requested_conf_target)
  return _internal_requested_conf_target();
}
inline void PendingSweep::set_requested_conf_target(::uint32_t value) {
  _internal_set_requested_conf_target(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.requested_conf_target)
}
inline ::uint32_t PendingSweep::_internal_requested_conf_target() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_conf_target_;
}
inline void PendingSweep::_internal_set_requested_conf_target(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_conf_target_ = value;
}

// uint32 requested_sat_per_byte = 9 [deprecated = true];
inline void PendingSweep::clear_requested_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_sat_per_byte_ = 0u;
}
inline ::uint32_t PendingSweep::requested_sat_per_byte() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.requested_sat_per_byte)
  return _internal_requested_sat_per_byte();
}
inline void PendingSweep::set_requested_sat_per_byte(::uint32_t value) {
  _internal_set_requested_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.requested_sat_per_byte)
}
inline ::uint32_t PendingSweep::_internal_requested_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_sat_per_byte_;
}
inline void PendingSweep::_internal_set_requested_sat_per_byte(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_sat_per_byte_ = value;
}

// uint64 sat_per_vbyte = 10;
inline void PendingSweep::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t PendingSweep::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void PendingSweep::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.sat_per_vbyte)
}
inline ::uint64_t PendingSweep::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void PendingSweep::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// uint64 requested_sat_per_vbyte = 11;
inline void PendingSweep::clear_requested_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t PendingSweep::requested_sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.requested_sat_per_vbyte)
  return _internal_requested_sat_per_vbyte();
}
inline void PendingSweep::set_requested_sat_per_vbyte(::uint64_t value) {
  _internal_set_requested_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.requested_sat_per_vbyte)
}
inline ::uint64_t PendingSweep::_internal_requested_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.requested_sat_per_vbyte_;
}
inline void PendingSweep::_internal_set_requested_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.requested_sat_per_vbyte_ = value;
}

// bool immediate = 12;
inline void PendingSweep::clear_immediate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = false;
}
inline bool PendingSweep::immediate() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.immediate)
  return _internal_immediate();
}
inline void PendingSweep::set_immediate(bool value) {
  _internal_set_immediate(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.immediate)
}
inline bool PendingSweep::_internal_immediate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immediate_;
}
inline void PendingSweep::_internal_set_immediate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = value;
}

// uint64 budget = 13;
inline void PendingSweep::clear_budget() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.budget_ = ::uint64_t{0u};
}
inline ::uint64_t PendingSweep::budget() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.budget)
  return _internal_budget();
}
inline void PendingSweep::set_budget(::uint64_t value) {
  _internal_set_budget(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.budget)
}
inline ::uint64_t PendingSweep::_internal_budget() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.budget_;
}
inline void PendingSweep::_internal_set_budget(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.budget_ = value;
}

// uint32 deadline_height = 14;
inline void PendingSweep::clear_deadline_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deadline_height_ = 0u;
}
inline ::uint32_t PendingSweep::deadline_height() const {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweep.deadline_height)
  return _internal_deadline_height();
}
inline void PendingSweep::set_deadline_height(::uint32_t value) {
  _internal_set_deadline_height(value);
  // @@protoc_insertion_point(field_set:walletrpc.PendingSweep.deadline_height)
}
inline ::uint32_t PendingSweep::_internal_deadline_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deadline_height_;
}
inline void PendingSweep::_internal_set_deadline_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deadline_height_ = value;
}

// -------------------------------------------------------------------

// PendingSweepsRequest

// -------------------------------------------------------------------

// PendingSweepsResponse

// repeated .walletrpc.PendingSweep pending_sweeps = 1;
inline int PendingSweepsResponse::_internal_pending_sweeps_size() const {
  return _internal_pending_sweeps().size();
}
inline int PendingSweepsResponse::pending_sweeps_size() const {
  return _internal_pending_sweeps_size();
}
inline void PendingSweepsResponse::clear_pending_sweeps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_sweeps_.Clear();
}
inline ::walletrpc::PendingSweep* PendingSweepsResponse::mutable_pending_sweeps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.PendingSweepsResponse.pending_sweeps)
  return _internal_mutable_pending_sweeps()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>* PendingSweepsResponse::mutable_pending_sweeps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.PendingSweepsResponse.pending_sweeps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pending_sweeps();
}
inline const ::walletrpc::PendingSweep& PendingSweepsResponse::pending_sweeps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.PendingSweepsResponse.pending_sweeps)
  return _internal_pending_sweeps().Get(index);
}
inline ::walletrpc::PendingSweep* PendingSweepsResponse::add_pending_sweeps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::PendingSweep* _add = _internal_mutable_pending_sweeps()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.PendingSweepsResponse.pending_sweeps)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>& PendingSweepsResponse::pending_sweeps() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.PendingSweepsResponse.pending_sweeps)
  return _internal_pending_sweeps();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>&
PendingSweepsResponse::_internal_pending_sweeps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_sweeps_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::PendingSweep>*
PendingSweepsResponse::_internal_mutable_pending_sweeps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pending_sweeps_;
}

// -------------------------------------------------------------------

// BumpFeeRequest

// .lnrpc.OutPoint outpoint = 1;
inline bool BumpFeeRequest::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline const ::lnrpc::OutPoint& BumpFeeRequest::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& BumpFeeRequest::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.outpoint)
  return _internal_outpoint();
}
inline void BumpFeeRequest::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.BumpFeeRequest.outpoint)
}
inline ::lnrpc::OutPoint* BumpFeeRequest::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* BumpFeeRequest::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.BumpFeeRequest.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* BumpFeeRequest::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* BumpFeeRequest::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:walletrpc.BumpFeeRequest.outpoint)
  return _msg;
}
inline void BumpFeeRequest::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.BumpFeeRequest.outpoint)
}

// uint32 target_conf = 2;
inline void BumpFeeRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = 0u;
}
inline ::uint32_t BumpFeeRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.target_conf)
  return _internal_target_conf();
}
inline void BumpFeeRequest::set_target_conf(::uint32_t value) {
  _internal_set_target_conf(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeRequest.target_conf)
}
inline ::uint32_t BumpFeeRequest::_internal_target_conf() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.target_conf_;
}
inline void BumpFeeRequest::_internal_set_target_conf(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.target_conf_ = value;
}

// uint32 sat_per_byte = 3 [deprecated = true];
inline void BumpFeeRequest::clear_sat_per_byte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = 0u;
}
inline ::uint32_t BumpFeeRequest::sat_per_byte() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.sat_per_byte)
  return _internal_sat_per_byte();
}
inline void BumpFeeRequest::set_sat_per_byte(::uint32_t value) {
  _internal_set_sat_per_byte(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeRequest.sat_per_byte)
}
inline ::uint32_t BumpFeeRequest::_internal_sat_per_byte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_byte_;
}
inline void BumpFeeRequest::_internal_set_sat_per_byte(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_byte_ = value;
}

// bool force = 4 [deprecated = true];
inline void BumpFeeRequest::clear_force() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = false;
}
inline bool BumpFeeRequest::force() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.force)
  return _internal_force();
}
inline void BumpFeeRequest::set_force(bool value) {
  _internal_set_force(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeRequest.force)
}
inline bool BumpFeeRequest::_internal_force() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.force_;
}
inline void BumpFeeRequest::_internal_set_force(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.force_ = value;
}

// uint64 sat_per_vbyte = 5;
inline void BumpFeeRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = ::uint64_t{0u};
}
inline ::uint64_t BumpFeeRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void BumpFeeRequest::set_sat_per_vbyte(::uint64_t value) {
  _internal_set_sat_per_vbyte(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeRequest.sat_per_vbyte)
}
inline ::uint64_t BumpFeeRequest::_internal_sat_per_vbyte() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sat_per_vbyte_;
}
inline void BumpFeeRequest::_internal_set_sat_per_vbyte(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sat_per_vbyte_ = value;
}

// bool immediate = 6;
inline void BumpFeeRequest::clear_immediate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = false;
}
inline bool BumpFeeRequest::immediate() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.immediate)
  return _internal_immediate();
}
inline void BumpFeeRequest::set_immediate(bool value) {
  _internal_set_immediate(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeRequest.immediate)
}
inline bool BumpFeeRequest::_internal_immediate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immediate_;
}
inline void BumpFeeRequest::_internal_set_immediate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = value;
}

// uint64 budget = 7;
inline void BumpFeeRequest::clear_budget() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.budget_ = ::uint64_t{0u};
}
inline ::uint64_t BumpFeeRequest::budget() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeRequest.budget)
  return _internal_budget();
}
inline void BumpFeeRequest::set_budget(::uint64_t value) {
  _internal_set_budget(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeRequest.budget)
}
inline ::uint64_t BumpFeeRequest::_internal_budget() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.budget_;
}
inline void BumpFeeRequest::_internal_set_budget(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.budget_ = value;
}

// -------------------------------------------------------------------

// BumpFeeResponse

// string status = 1;
inline void BumpFeeResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& BumpFeeResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.BumpFeeResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BumpFeeResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.BumpFeeResponse.status)
}
inline std::string* BumpFeeResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:walletrpc.BumpFeeResponse.status)
  return _s;
}
inline const std::string& BumpFeeResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void BumpFeeResponse::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* BumpFeeResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* BumpFeeResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.BumpFeeResponse.status)
  return _impl_.status_.Release();
}
inline void BumpFeeResponse::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.BumpFeeResponse.status)
}

// -------------------------------------------------------------------

// BumpForceCloseFeeRequest

// .lnrpc.ChannelPoint chan_point = 1;
inline bool BumpForceCloseFeeRequest::has_chan_point() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.chan_point_ != nullptr);
  return value;
}
inline const ::lnrpc::ChannelPoint& BumpForceCloseFeeRequest::_internal_chan_point() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::ChannelPoint* p = _impl_.chan_point_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::ChannelPoint&>(::lnrpc::_ChannelPoint_default_instance_);
}
inline const ::lnrpc::ChannelPoint& BumpForceCloseFeeRequest::chan_point() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.BumpForceCloseFeeRequest.chan_point)
  return _internal_chan_point();
}
inline void BumpForceCloseFeeRequest::unsafe_arena_set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }
  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.BumpForceCloseFeeRequest.chan_point)
}
inline ::lnrpc::ChannelPoint* BumpForceCloseFeeRequest::release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* released = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::ChannelPoint* BumpForceCloseFeeRequest::unsafe_arena_release_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.BumpForceCloseFeeRequest.chan_point)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::ChannelPoint* temp = _impl_.chan_point_;
  _impl_.chan_point_ = nullptr;
  return temp;
}
inline ::lnrpc::ChannelPoint* BumpForceCloseFeeRequest::_internal_mutable_chan_point() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.chan_point_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::ChannelPoint>(GetArena());
    _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(p);
  }
  return _impl_.chan_point_;
}
inline ::lnrpc::ChannelPoint* BumpForceCloseFeeRequest::mutable_chan_point() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::ChannelPoint* _msg = _internal_mutable_chan_point();
  // @@protoc_insertion_point(field_mutable:walletrpc.BumpForceCloseFeeRequest.chan_point)
  return _msg;
}
inline void BumpForceCloseFeeRequest::set_allocated_chan_point(::lnrpc::ChannelPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.chan_point_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.chan_point_ = reinterpret_cast<::lnrpc::ChannelPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.BumpForceCloseFeeRequest.chan_point)
}

// uint32 deadline_delta = 2;
inline void BumpForceCloseFeeRequest::clear_deadline_delta() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deadline_delta_ = 0u;
}
inline ::uint32_t BumpForceCloseFeeRequest::deadline_delta() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpForceCloseFeeRequest.deadline_delta)
  return _internal_deadline_delta();
}
inline void BumpForceCloseFeeRequest::set_deadline_delta(::uint32_t value) {
  _internal_set_deadline_delta(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpForceCloseFeeRequest.deadline_delta)
}
inline ::uint32_t BumpForceCloseFeeRequest::_internal_deadline_delta() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deadline_delta_;
}
inline void BumpForceCloseFeeRequest::_internal_set_deadline_delta(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deadline_delta_ = value;
}

// uint64 starting_feerate = 3;
inline void BumpForceCloseFeeRequest::clear_starting_feerate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.starting_feerate_ = ::uint64_t{0u};
}
inline ::uint64_t BumpForceCloseFeeRequest::starting_feerate() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpForceCloseFeeRequest.starting_feerate)
  return _internal_starting_feerate();
}
inline void BumpForceCloseFeeRequest::set_starting_feerate(::uint64_t value) {
  _internal_set_starting_feerate(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpForceCloseFeeRequest.starting_feerate)
}
inline ::uint64_t BumpForceCloseFeeRequest::_internal_starting_feerate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.starting_feerate_;
}
inline void BumpForceCloseFeeRequest::_internal_set_starting_feerate(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.starting_feerate_ = value;
}

// bool immediate = 4;
inline void BumpForceCloseFeeRequest::clear_immediate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = false;
}
inline bool BumpForceCloseFeeRequest::immediate() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpForceCloseFeeRequest.immediate)
  return _internal_immediate();
}
inline void BumpForceCloseFeeRequest::set_immediate(bool value) {
  _internal_set_immediate(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpForceCloseFeeRequest.immediate)
}
inline bool BumpForceCloseFeeRequest::_internal_immediate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.immediate_;
}
inline void BumpForceCloseFeeRequest::_internal_set_immediate(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.immediate_ = value;
}

// uint64 budget = 5;
inline void BumpForceCloseFeeRequest::clear_budget() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.budget_ = ::uint64_t{0u};
}
inline ::uint64_t BumpForceCloseFeeRequest::budget() const {
  // @@protoc_insertion_point(field_get:walletrpc.BumpForceCloseFeeRequest.budget)
  return _internal_budget();
}
inline void BumpForceCloseFeeRequest::set_budget(::uint64_t value) {
  _internal_set_budget(value);
  // @@protoc_insertion_point(field_set:walletrpc.BumpForceCloseFeeRequest.budget)
}
inline ::uint64_t BumpForceCloseFeeRequest::_internal_budget() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.budget_;
}
inline void BumpForceCloseFeeRequest::_internal_set_budget(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.budget_ = value;
}

// -------------------------------------------------------------------

// BumpForceCloseFeeResponse

// string status = 1;
inline void BumpForceCloseFeeResponse::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
}
inline const std::string& BumpForceCloseFeeResponse::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.BumpForceCloseFeeResponse.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BumpForceCloseFeeResponse::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.BumpForceCloseFeeResponse.status)
}
inline std::string* BumpForceCloseFeeResponse::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:walletrpc.BumpForceCloseFeeResponse.status)
  return _s;
}
inline const std::string& BumpForceCloseFeeResponse::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void BumpForceCloseFeeResponse::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.Set(value, GetArena());
}
inline std::string* BumpForceCloseFeeResponse::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* BumpForceCloseFeeResponse::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.BumpForceCloseFeeResponse.status)
  return _impl_.status_.Release();
}
inline void BumpForceCloseFeeResponse::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.status_.IsDefault()) {
          _impl_.status_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.BumpForceCloseFeeResponse.status)
}

// -------------------------------------------------------------------

// ListSweepsRequest

// bool verbose = 1;
inline void ListSweepsRequest::clear_verbose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verbose_ = false;
}
inline bool ListSweepsRequest::verbose() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListSweepsRequest.verbose)
  return _internal_verbose();
}
inline void ListSweepsRequest::set_verbose(bool value) {
  _internal_set_verbose(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListSweepsRequest.verbose)
}
inline bool ListSweepsRequest::_internal_verbose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verbose_;
}
inline void ListSweepsRequest::_internal_set_verbose(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verbose_ = value;
}

// int32 start_height = 2;
inline void ListSweepsRequest::clear_start_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_height_ = 0;
}
inline ::int32_t ListSweepsRequest::start_height() const {
  // @@protoc_insertion_point(field_get:walletrpc.ListSweepsRequest.start_height)
  return _internal_start_height();
}
inline void ListSweepsRequest::set_start_height(::int32_t value) {
  _internal_set_start_height(value);
  // @@protoc_insertion_point(field_set:walletrpc.ListSweepsRequest.start_height)
}
inline ::int32_t ListSweepsRequest::_internal_start_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.start_height_;
}
inline void ListSweepsRequest::_internal_set_start_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.start_height_ = value;
}

// -------------------------------------------------------------------

// ListSweepsResponse_TransactionIDs

// repeated string transaction_ids = 1;
inline int ListSweepsResponse_TransactionIDs::_internal_transaction_ids_size() const {
  return _internal_transaction_ids().size();
}
inline int ListSweepsResponse_TransactionIDs::transaction_ids_size() const {
  return _internal_transaction_ids_size();
}
inline void ListSweepsResponse_TransactionIDs::clear_transaction_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_ids_.Clear();
}
inline std::string* ListSweepsResponse_TransactionIDs::add_transaction_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_transaction_ids()->Add();
  // @@protoc_insertion_point(field_add_mutable:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
  return _s;
}
inline const std::string& ListSweepsResponse_TransactionIDs::transaction_ids(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
  return _internal_transaction_ids().Get(index);
}
inline std::string* ListSweepsResponse_TransactionIDs::mutable_transaction_ids(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
  return _internal_mutable_transaction_ids()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ListSweepsResponse_TransactionIDs::set_transaction_ids(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(
      *_internal_mutable_transaction_ids()->Mutable(index),
      std::forward<Arg_>(value), args... );
  // @@protoc_insertion_point(field_set:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
}
template <typename Arg_, typename... Args_>
inline void ListSweepsResponse_TransactionIDs::add_transaction_ids(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_transaction_ids(),
                               std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListSweepsResponse_TransactionIDs::transaction_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
  return _internal_transaction_ids();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListSweepsResponse_TransactionIDs::mutable_transaction_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ListSweepsResponse.TransactionIDs.transaction_ids)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_transaction_ids();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListSweepsResponse_TransactionIDs::_internal_transaction_ids() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transaction_ids_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListSweepsResponse_TransactionIDs::_internal_mutable_transaction_ids() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.transaction_ids_;
}

// -------------------------------------------------------------------

// ListSweepsResponse

// .lnrpc.TransactionDetails transaction_details = 1;
inline bool ListSweepsResponse::has_transaction_details() const {
  return sweeps_case() == kTransactionDetails;
}
inline bool ListSweepsResponse::_internal_has_transaction_details() const {
  return sweeps_case() == kTransactionDetails;
}
inline void ListSweepsResponse::set_has_transaction_details() {
  _impl_._oneof_case_[0] = kTransactionDetails;
}
inline ::lnrpc::TransactionDetails* ListSweepsResponse::release_transaction_details() {
  // @@protoc_insertion_point(field_release:walletrpc.ListSweepsResponse.transaction_details)
  if (sweeps_case() == kTransactionDetails) {
    clear_has_sweeps();
    auto* temp = _impl_.sweeps_.transaction_details_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.sweeps_.transaction_details_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::lnrpc::TransactionDetails& ListSweepsResponse::_internal_transaction_details() const {
  return sweeps_case() == kTransactionDetails ? *_impl_.sweeps_.transaction_details_ : reinterpret_cast<::lnrpc::TransactionDetails&>(::lnrpc::_TransactionDetails_default_instance_);
}
inline const ::lnrpc::TransactionDetails& ListSweepsResponse::transaction_details() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListSweepsResponse.transaction_details)
  return _internal_transaction_details();
}
inline ::lnrpc::TransactionDetails* ListSweepsResponse::unsafe_arena_release_transaction_details() {
  // @@protoc_insertion_point(field_unsafe_arena_release:walletrpc.ListSweepsResponse.transaction_details)
  if (sweeps_case() == kTransactionDetails) {
    clear_has_sweeps();
    auto* temp = _impl_.sweeps_.transaction_details_;
    _impl_.sweeps_.transaction_details_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ListSweepsResponse::unsafe_arena_set_allocated_transaction_details(::lnrpc::TransactionDetails* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_sweeps();
  if (value) {
    set_has_transaction_details();
    _impl_.sweeps_.transaction_details_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.ListSweepsResponse.transaction_details)
}
inline ::lnrpc::TransactionDetails* ListSweepsResponse::_internal_mutable_transaction_details() {
  if (sweeps_case() != kTransactionDetails) {
    clear_sweeps();
    set_has_transaction_details();
    _impl_.sweeps_.transaction_details_ =
        ::google::protobuf::Message::DefaultConstruct<::lnrpc::TransactionDetails>(GetArena());
  }
  return _impl_.sweeps_.transaction_details_;
}
inline ::lnrpc::TransactionDetails* ListSweepsResponse::mutable_transaction_details() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::lnrpc::TransactionDetails* _msg = _internal_mutable_transaction_details();
  // @@protoc_insertion_point(field_mutable:walletrpc.ListSweepsResponse.transaction_details)
  return _msg;
}

// .walletrpc.ListSweepsResponse.TransactionIDs transaction_ids = 2;
inline bool ListSweepsResponse::has_transaction_ids() const {
  return sweeps_case() == kTransactionIds;
}
inline bool ListSweepsResponse::_internal_has_transaction_ids() const {
  return sweeps_case() == kTransactionIds;
}
inline void ListSweepsResponse::set_has_transaction_ids() {
  _impl_._oneof_case_[0] = kTransactionIds;
}
inline void ListSweepsResponse::clear_transaction_ids() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (sweeps_case() == kTransactionIds) {
    if (GetArena() == nullptr) {
      delete _impl_.sweeps_.transaction_ids_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.sweeps_.transaction_ids_);
    }
    clear_has_sweeps();
  }
}
inline ::walletrpc::ListSweepsResponse_TransactionIDs* ListSweepsResponse::release_transaction_ids() {
  // @@protoc_insertion_point(field_release:walletrpc.ListSweepsResponse.transaction_ids)
  if (sweeps_case() == kTransactionIds) {
    clear_has_sweeps();
    auto* temp = _impl_.sweeps_.transaction_ids_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.sweeps_.transaction_ids_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::walletrpc::ListSweepsResponse_TransactionIDs& ListSweepsResponse::_internal_transaction_ids() const {
  return sweeps_case() == kTransactionIds ? *_impl_.sweeps_.transaction_ids_ : reinterpret_cast<::walletrpc::ListSweepsResponse_TransactionIDs&>(::walletrpc::_ListSweepsResponse_TransactionIDs_default_instance_);
}
inline const ::walletrpc::ListSweepsResponse_TransactionIDs& ListSweepsResponse::transaction_ids() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListSweepsResponse.transaction_ids)
  return _internal_transaction_ids();
}
inline ::walletrpc::ListSweepsResponse_TransactionIDs* ListSweepsResponse::unsafe_arena_release_transaction_ids() {
  // @@protoc_insertion_point(field_unsafe_arena_release:walletrpc.ListSweepsResponse.transaction_ids)
  if (sweeps_case() == kTransactionIds) {
    clear_has_sweeps();
    auto* temp = _impl_.sweeps_.transaction_ids_;
    _impl_.sweeps_.transaction_ids_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ListSweepsResponse::unsafe_arena_set_allocated_transaction_ids(::walletrpc::ListSweepsResponse_TransactionIDs* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_sweeps();
  if (value) {
    set_has_transaction_ids();
    _impl_.sweeps_.transaction_ids_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.ListSweepsResponse.transaction_ids)
}
inline ::walletrpc::ListSweepsResponse_TransactionIDs* ListSweepsResponse::_internal_mutable_transaction_ids() {
  if (sweeps_case() != kTransactionIds) {
    clear_sweeps();
    set_has_transaction_ids();
    _impl_.sweeps_.transaction_ids_ =
        ::google::protobuf::Message::DefaultConstruct<::walletrpc::ListSweepsResponse_TransactionIDs>(GetArena());
  }
  return _impl_.sweeps_.transaction_ids_;
}
inline ::walletrpc::ListSweepsResponse_TransactionIDs* ListSweepsResponse::mutable_transaction_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::walletrpc::ListSweepsResponse_TransactionIDs* _msg = _internal_mutable_transaction_ids();
  // @@protoc_insertion_point(field_mutable:walletrpc.ListSweepsResponse.transaction_ids)
  return _msg;
}

inline bool ListSweepsResponse::has_sweeps() const {
  return sweeps_case() != SWEEPS_NOT_SET;
}
inline void ListSweepsResponse::clear_has_sweeps() {
  _impl_._oneof_case_[0] = SWEEPS_NOT_SET;
}
inline ListSweepsResponse::SweepsCase ListSweepsResponse::sweeps_case() const {
  return ListSweepsResponse::SweepsCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// LabelTransactionRequest

// bytes txid = 1;
inline void LabelTransactionRequest::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
}
inline const std::string& LabelTransactionRequest::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.LabelTransactionRequest.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LabelTransactionRequest::set_txid(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.LabelTransactionRequest.txid)
}
inline std::string* LabelTransactionRequest::mutable_txid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:walletrpc.LabelTransactionRequest.txid)
  return _s;
}
inline const std::string& LabelTransactionRequest::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void LabelTransactionRequest::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* LabelTransactionRequest::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* LabelTransactionRequest::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.LabelTransactionRequest.txid)
  return _impl_.txid_.Release();
}
inline void LabelTransactionRequest::set_allocated_txid(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.txid_.IsDefault()) {
          _impl_.txid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.LabelTransactionRequest.txid)
}

// string label = 2;
inline void LabelTransactionRequest::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& LabelTransactionRequest::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.LabelTransactionRequest.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LabelTransactionRequest::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.LabelTransactionRequest.label)
}
inline std::string* LabelTransactionRequest::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:walletrpc.LabelTransactionRequest.label)
  return _s;
}
inline const std::string& LabelTransactionRequest::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void LabelTransactionRequest::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* LabelTransactionRequest::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* LabelTransactionRequest::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.LabelTransactionRequest.label)
  return _impl_.label_.Release();
}
inline void LabelTransactionRequest::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.LabelTransactionRequest.label)
}

// bool overwrite = 3;
inline void LabelTransactionRequest::clear_overwrite() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overwrite_ = false;
}
inline bool LabelTransactionRequest::overwrite() const {
  // @@protoc_insertion_point(field_get:walletrpc.LabelTransactionRequest.overwrite)
  return _internal_overwrite();
}
inline void LabelTransactionRequest::set_overwrite(bool value) {
  _internal_set_overwrite(value);
  // @@protoc_insertion_point(field_set:walletrpc.LabelTransactionRequest.overwrite)
}
inline bool LabelTransactionRequest::_internal_overwrite() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.overwrite_;
}
inline void LabelTransactionRequest::_internal_set_overwrite(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overwrite_ = value;
}

// -------------------------------------------------------------------

// LabelTransactionResponse

// -------------------------------------------------------------------

// FundPsbtRequest

// bytes psbt = 1;
inline bool FundPsbtRequest::has_psbt() const {
  return template_case() == kPsbt;
}
inline void FundPsbtRequest::set_has_psbt() {
  _impl_._oneof_case_[0] = kPsbt;
}
inline void FundPsbtRequest::clear_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (template_case() == kPsbt) {
    _impl_.template_.psbt_.Destroy();
    clear_has_template();
  }
}
inline const std::string& FundPsbtRequest::psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.psbt)
  return _internal_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundPsbtRequest::set_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (template_case() != kPsbt) {
    clear_template();

    set_has_psbt();
    _impl_.template_.psbt_.InitDefault();
  }
  _impl_.template_.psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.psbt)
}
inline std::string* FundPsbtRequest::mutable_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.FundPsbtRequest.psbt)
  return _s;
}
inline const std::string& FundPsbtRequest::_internal_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  if (template_case() != kPsbt) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.template_.psbt_.Get();
}
inline void FundPsbtRequest::_internal_set_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (template_case() != kPsbt) {
    clear_template();

    set_has_psbt();
    _impl_.template_.psbt_.InitDefault();
  }
  _impl_.template_.psbt_.Set(value, GetArena());
}
inline std::string* FundPsbtRequest::_internal_mutable_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (template_case() != kPsbt) {
    clear_template();

    set_has_psbt();
    _impl_.template_.psbt_.InitDefault();
  }
  return _impl_.template_.psbt_.Mutable( GetArena());
}
inline std::string* FundPsbtRequest::release_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FundPsbtRequest.psbt)
  if (template_case() != kPsbt) {
    return nullptr;
  }
  clear_has_template();
  return _impl_.template_.psbt_.Release();
}
inline void FundPsbtRequest::set_allocated_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (has_template()) {
    clear_template();
  }
  if (value != nullptr) {
    set_has_psbt();
    _impl_.template_.psbt_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FundPsbtRequest.psbt)
}

// .walletrpc.TxTemplate raw = 2;
inline bool FundPsbtRequest::has_raw() const {
  return template_case() == kRaw;
}
inline bool FundPsbtRequest::_internal_has_raw() const {
  return template_case() == kRaw;
}
inline void FundPsbtRequest::set_has_raw() {
  _impl_._oneof_case_[0] = kRaw;
}
inline void FundPsbtRequest::clear_raw() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (template_case() == kRaw) {
    if (GetArena() == nullptr) {
      delete _impl_.template_.raw_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.template_.raw_);
    }
    clear_has_template();
  }
}
inline ::walletrpc::TxTemplate* FundPsbtRequest::release_raw() {
  // @@protoc_insertion_point(field_release:walletrpc.FundPsbtRequest.raw)
  if (template_case() == kRaw) {
    clear_has_template();
    auto* temp = _impl_.template_.raw_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.template_.raw_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::walletrpc::TxTemplate& FundPsbtRequest::_internal_raw() const {
  return template_case() == kRaw ? *_impl_.template_.raw_ : reinterpret_cast<::walletrpc::TxTemplate&>(::walletrpc::_TxTemplate_default_instance_);
}
inline const ::walletrpc::TxTemplate& FundPsbtRequest::raw() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.raw)
  return _internal_raw();
}
inline ::walletrpc::TxTemplate* FundPsbtRequest::unsafe_arena_release_raw() {
  // @@protoc_insertion_point(field_unsafe_arena_release:walletrpc.FundPsbtRequest.raw)
  if (template_case() == kRaw) {
    clear_has_template();
    auto* temp = _impl_.template_.raw_;
    _impl_.template_.raw_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundPsbtRequest::unsafe_arena_set_allocated_raw(::walletrpc::TxTemplate* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_template();
  if (value) {
    set_has_raw();
    _impl_.template_.raw_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.FundPsbtRequest.raw)
}
inline ::walletrpc::TxTemplate* FundPsbtRequest::_internal_mutable_raw() {
  if (template_case() != kRaw) {
    clear_template();
    set_has_raw();
    _impl_.template_.raw_ =
        ::google::protobuf::Message::DefaultConstruct<::walletrpc::TxTemplate>(GetArena());
  }
  return _impl_.template_.raw_;
}
inline ::walletrpc::TxTemplate* FundPsbtRequest::mutable_raw() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::walletrpc::TxTemplate* _msg = _internal_mutable_raw();
  // @@protoc_insertion_point(field_mutable:walletrpc.FundPsbtRequest.raw)
  return _msg;
}

// .walletrpc.PsbtCoinSelect coin_select = 9;
inline bool FundPsbtRequest::has_coin_select() const {
  return template_case() == kCoinSelect;
}
inline bool FundPsbtRequest::_internal_has_coin_select() const {
  return template_case() == kCoinSelect;
}
inline void FundPsbtRequest::set_has_coin_select() {
  _impl_._oneof_case_[0] = kCoinSelect;
}
inline void FundPsbtRequest::clear_coin_select() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (template_case() == kCoinSelect) {
    if (GetArena() == nullptr) {
      delete _impl_.template_.coin_select_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.template_.coin_select_);
    }
    clear_has_template();
  }
}
inline ::walletrpc::PsbtCoinSelect* FundPsbtRequest::release_coin_select() {
  // @@protoc_insertion_point(field_release:walletrpc.FundPsbtRequest.coin_select)
  if (template_case() == kCoinSelect) {
    clear_has_template();
    auto* temp = _impl_.template_.coin_select_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.template_.coin_select_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::walletrpc::PsbtCoinSelect& FundPsbtRequest::_internal_coin_select() const {
  return template_case() == kCoinSelect ? *_impl_.template_.coin_select_ : reinterpret_cast<::walletrpc::PsbtCoinSelect&>(::walletrpc::_PsbtCoinSelect_default_instance_);
}
inline const ::walletrpc::PsbtCoinSelect& FundPsbtRequest::coin_select() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.coin_select)
  return _internal_coin_select();
}
inline ::walletrpc::PsbtCoinSelect* FundPsbtRequest::unsafe_arena_release_coin_select() {
  // @@protoc_insertion_point(field_unsafe_arena_release:walletrpc.FundPsbtRequest.coin_select)
  if (template_case() == kCoinSelect) {
    clear_has_template();
    auto* temp = _impl_.template_.coin_select_;
    _impl_.template_.coin_select_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FundPsbtRequest::unsafe_arena_set_allocated_coin_select(::walletrpc::PsbtCoinSelect* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_template();
  if (value) {
    set_has_coin_select();
    _impl_.template_.coin_select_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.FundPsbtRequest.coin_select)
}
inline ::walletrpc::PsbtCoinSelect* FundPsbtRequest::_internal_mutable_coin_select() {
  if (template_case() != kCoinSelect) {
    clear_template();
    set_has_coin_select();
    _impl_.template_.coin_select_ =
        ::google::protobuf::Message::DefaultConstruct<::walletrpc::PsbtCoinSelect>(GetArena());
  }
  return _impl_.template_.coin_select_;
}
inline ::walletrpc::PsbtCoinSelect* FundPsbtRequest::mutable_coin_select() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::walletrpc::PsbtCoinSelect* _msg = _internal_mutable_coin_select();
  // @@protoc_insertion_point(field_mutable:walletrpc.FundPsbtRequest.coin_select)
  return _msg;
}

// uint32 target_conf = 3;
inline bool FundPsbtRequest::has_target_conf() const {
  return fees_case() == kTargetConf;
}
inline void FundPsbtRequest::set_has_target_conf() {
  _impl_._oneof_case_[1] = kTargetConf;
}
inline void FundPsbtRequest::clear_target_conf() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fees_case() == kTargetConf) {
    _impl_.fees_.target_conf_ = 0u;
    clear_has_fees();
  }
}
inline ::uint32_t FundPsbtRequest::target_conf() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.target_conf)
  return _internal_target_conf();
}
inline void FundPsbtRequest::set_target_conf(::uint32_t value) {
  if (fees_case() != kTargetConf) {
    clear_fees();
    set_has_target_conf();
  }
  _impl_.fees_.target_conf_ = value;
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.target_conf)
}
inline ::uint32_t FundPsbtRequest::_internal_target_conf() const {
  if (fees_case() == kTargetConf) {
    return _impl_.fees_.target_conf_;
  }
  return 0u;
}

// uint64 sat_per_vbyte = 4;
inline bool FundPsbtRequest::has_sat_per_vbyte() const {
  return fees_case() == kSatPerVbyte;
}
inline void FundPsbtRequest::set_has_sat_per_vbyte() {
  _impl_._oneof_case_[1] = kSatPerVbyte;
}
inline void FundPsbtRequest::clear_sat_per_vbyte() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (fees_case() == kSatPerVbyte) {
    _impl_.fees_.sat_per_vbyte_ = ::uint64_t{0u};
    clear_has_fees();
  }
}
inline ::uint64_t FundPsbtRequest::sat_per_vbyte() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.sat_per_vbyte)
  return _internal_sat_per_vbyte();
}
inline void FundPsbtRequest::set_sat_per_vbyte(::uint64_t value) {
  if (fees_case() != kSatPerVbyte) {
    clear_fees();
    set_has_sat_per_vbyte();
  }
  _impl_.fees_.sat_per_vbyte_ = value;
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.sat_per_vbyte)
}
inline ::uint64_t FundPsbtRequest::_internal_sat_per_vbyte() const {
  if (fees_case() == kSatPerVbyte) {
    return _impl_.fees_.sat_per_vbyte_;
  }
  return ::uint64_t{0u};
}

// string account = 5;
inline void FundPsbtRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& FundPsbtRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundPsbtRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.account)
}
inline std::string* FundPsbtRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:walletrpc.FundPsbtRequest.account)
  return _s;
}
inline const std::string& FundPsbtRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void FundPsbtRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* FundPsbtRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* FundPsbtRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FundPsbtRequest.account)
  return _impl_.account_.Release();
}
inline void FundPsbtRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FundPsbtRequest.account)
}

// int32 min_confs = 6;
inline void FundPsbtRequest::clear_min_confs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = 0;
}
inline ::int32_t FundPsbtRequest::min_confs() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.min_confs)
  return _internal_min_confs();
}
inline void FundPsbtRequest::set_min_confs(::int32_t value) {
  _internal_set_min_confs(value);
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.min_confs)
}
inline ::int32_t FundPsbtRequest::_internal_min_confs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_confs_;
}
inline void FundPsbtRequest::_internal_set_min_confs(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_confs_ = value;
}

// bool spend_unconfirmed = 7;
inline void FundPsbtRequest::clear_spend_unconfirmed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = false;
}
inline bool FundPsbtRequest::spend_unconfirmed() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.spend_unconfirmed)
  return _internal_spend_unconfirmed();
}
inline void FundPsbtRequest::set_spend_unconfirmed(bool value) {
  _internal_set_spend_unconfirmed(value);
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.spend_unconfirmed)
}
inline bool FundPsbtRequest::_internal_spend_unconfirmed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spend_unconfirmed_;
}
inline void FundPsbtRequest::_internal_set_spend_unconfirmed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spend_unconfirmed_ = value;
}

// .walletrpc.ChangeAddressType change_type = 8;
inline void FundPsbtRequest::clear_change_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_type_ = 0;
}
inline ::walletrpc::ChangeAddressType FundPsbtRequest::change_type() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.change_type)
  return _internal_change_type();
}
inline void FundPsbtRequest::set_change_type(::walletrpc::ChangeAddressType value) {
  _internal_set_change_type(value);
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.change_type)
}
inline ::walletrpc::ChangeAddressType FundPsbtRequest::_internal_change_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::walletrpc::ChangeAddressType>(_impl_.change_type_);
}
inline void FundPsbtRequest::_internal_set_change_type(::walletrpc::ChangeAddressType value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_type_ = value;
}

// .lnrpc.CoinSelectionStrategy coin_selection_strategy = 10;
inline void FundPsbtRequest::clear_coin_selection_strategy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = 0;
}
inline ::lnrpc::CoinSelectionStrategy FundPsbtRequest::coin_selection_strategy() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtRequest.coin_selection_strategy)
  return _internal_coin_selection_strategy();
}
inline void FundPsbtRequest::set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  _internal_set_coin_selection_strategy(value);
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtRequest.coin_selection_strategy)
}
inline ::lnrpc::CoinSelectionStrategy FundPsbtRequest::_internal_coin_selection_strategy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::lnrpc::CoinSelectionStrategy>(_impl_.coin_selection_strategy_);
}
inline void FundPsbtRequest::_internal_set_coin_selection_strategy(::lnrpc::CoinSelectionStrategy value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.coin_selection_strategy_ = value;
}

inline bool FundPsbtRequest::has_template() const {
  return template_case() != TEMPLATE_NOT_SET;
}
inline void FundPsbtRequest::clear_has_template() {
  _impl_._oneof_case_[0] = TEMPLATE_NOT_SET;
}
inline bool FundPsbtRequest::has_fees() const {
  return fees_case() != FEES_NOT_SET;
}
inline void FundPsbtRequest::clear_has_fees() {
  _impl_._oneof_case_[1] = FEES_NOT_SET;
}
inline FundPsbtRequest::TemplateCase FundPsbtRequest::template_case() const {
  return FundPsbtRequest::TemplateCase(_impl_._oneof_case_[0]);
}
inline FundPsbtRequest::FeesCase FundPsbtRequest::fees_case() const {
  return FundPsbtRequest::FeesCase(_impl_._oneof_case_[1]);
}
// -------------------------------------------------------------------

// FundPsbtResponse

// bytes funded_psbt = 1;
inline void FundPsbtResponse::clear_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.ClearToEmpty();
}
inline const std::string& FundPsbtResponse::funded_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtResponse.funded_psbt)
  return _internal_funded_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FundPsbtResponse::set_funded_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtResponse.funded_psbt)
}
inline std::string* FundPsbtResponse::mutable_funded_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funded_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.FundPsbtResponse.funded_psbt)
  return _s;
}
inline const std::string& FundPsbtResponse::_internal_funded_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funded_psbt_.Get();
}
inline void FundPsbtResponse::_internal_set_funded_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.Set(value, GetArena());
}
inline std::string* FundPsbtResponse::_internal_mutable_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.funded_psbt_.Mutable( GetArena());
}
inline std::string* FundPsbtResponse::release_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FundPsbtResponse.funded_psbt)
  return _impl_.funded_psbt_.Release();
}
inline void FundPsbtResponse::set_allocated_funded_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.funded_psbt_.IsDefault()) {
          _impl_.funded_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FundPsbtResponse.funded_psbt)
}

// int32 change_output_index = 2;
inline void FundPsbtResponse::clear_change_output_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_output_index_ = 0;
}
inline ::int32_t FundPsbtResponse::change_output_index() const {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtResponse.change_output_index)
  return _internal_change_output_index();
}
inline void FundPsbtResponse::set_change_output_index(::int32_t value) {
  _internal_set_change_output_index(value);
  // @@protoc_insertion_point(field_set:walletrpc.FundPsbtResponse.change_output_index)
}
inline ::int32_t FundPsbtResponse::_internal_change_output_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.change_output_index_;
}
inline void FundPsbtResponse::_internal_set_change_output_index(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.change_output_index_ = value;
}

// repeated .walletrpc.UtxoLease locked_utxos = 3;
inline int FundPsbtResponse::_internal_locked_utxos_size() const {
  return _internal_locked_utxos().size();
}
inline int FundPsbtResponse::locked_utxos_size() const {
  return _internal_locked_utxos_size();
}
inline void FundPsbtResponse::clear_locked_utxos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locked_utxos_.Clear();
}
inline ::walletrpc::UtxoLease* FundPsbtResponse::mutable_locked_utxos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.FundPsbtResponse.locked_utxos)
  return _internal_mutable_locked_utxos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>* FundPsbtResponse::mutable_locked_utxos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.FundPsbtResponse.locked_utxos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_locked_utxos();
}
inline const ::walletrpc::UtxoLease& FundPsbtResponse::locked_utxos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FundPsbtResponse.locked_utxos)
  return _internal_locked_utxos().Get(index);
}
inline ::walletrpc::UtxoLease* FundPsbtResponse::add_locked_utxos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::UtxoLease* _add = _internal_mutable_locked_utxos()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.FundPsbtResponse.locked_utxos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>& FundPsbtResponse::locked_utxos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.FundPsbtResponse.locked_utxos)
  return _internal_locked_utxos();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>&
FundPsbtResponse::_internal_locked_utxos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locked_utxos_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>*
FundPsbtResponse::_internal_mutable_locked_utxos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.locked_utxos_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TxTemplate

// repeated .lnrpc.OutPoint inputs = 1;
inline int TxTemplate::_internal_inputs_size() const {
  return _internal_inputs().size();
}
inline int TxTemplate::inputs_size() const {
  return _internal_inputs_size();
}
inline ::lnrpc::OutPoint* TxTemplate::mutable_inputs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.TxTemplate.inputs)
  return _internal_mutable_inputs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>* TxTemplate::mutable_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.TxTemplate.inputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_inputs();
}
inline const ::lnrpc::OutPoint& TxTemplate::inputs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.TxTemplate.inputs)
  return _internal_inputs().Get(index);
}
inline ::lnrpc::OutPoint* TxTemplate::add_inputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::lnrpc::OutPoint* _add = _internal_mutable_inputs()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.TxTemplate.inputs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>& TxTemplate::inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.TxTemplate.inputs)
  return _internal_inputs();
}
inline const ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>&
TxTemplate::_internal_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.inputs_;
}
inline ::google::protobuf::RepeatedPtrField<::lnrpc::OutPoint>*
TxTemplate::_internal_mutable_inputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.inputs_;
}

// map<string, uint64> outputs = 2;
inline int TxTemplate::_internal_outputs_size() const {
  return _internal_outputs().size();
}
inline int TxTemplate::outputs_size() const {
  return _internal_outputs_size();
}
inline void TxTemplate::clear_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.outputs_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::uint64_t>& TxTemplate::_internal_outputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.outputs_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::uint64_t>& TxTemplate::outputs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:walletrpc.TxTemplate.outputs)
  return _internal_outputs();
}
inline ::google::protobuf::Map<std::string, ::uint64_t>* TxTemplate::_internal_mutable_outputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.outputs_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::uint64_t>* TxTemplate::mutable_outputs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:walletrpc.TxTemplate.outputs)
  return _internal_mutable_outputs();
}

// -------------------------------------------------------------------

// PsbtCoinSelect

// bytes psbt = 1;
inline void PsbtCoinSelect::clear_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.ClearToEmpty();
}
inline const std::string& PsbtCoinSelect::psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.PsbtCoinSelect.psbt)
  return _internal_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PsbtCoinSelect::set_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.PsbtCoinSelect.psbt)
}
inline std::string* PsbtCoinSelect::mutable_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.PsbtCoinSelect.psbt)
  return _s;
}
inline const std::string& PsbtCoinSelect::_internal_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.psbt_.Get();
}
inline void PsbtCoinSelect::_internal_set_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.Set(value, GetArena());
}
inline std::string* PsbtCoinSelect::_internal_mutable_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.psbt_.Mutable( GetArena());
}
inline std::string* PsbtCoinSelect::release_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.PsbtCoinSelect.psbt)
  return _impl_.psbt_.Release();
}
inline void PsbtCoinSelect::set_allocated_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.psbt_.IsDefault()) {
          _impl_.psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.PsbtCoinSelect.psbt)
}

// int32 existing_output_index = 2;
inline bool PsbtCoinSelect::has_existing_output_index() const {
  return change_output_case() == kExistingOutputIndex;
}
inline void PsbtCoinSelect::set_has_existing_output_index() {
  _impl_._oneof_case_[0] = kExistingOutputIndex;
}
inline void PsbtCoinSelect::clear_existing_output_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (change_output_case() == kExistingOutputIndex) {
    _impl_.change_output_.existing_output_index_ = 0;
    clear_has_change_output();
  }
}
inline ::int32_t PsbtCoinSelect::existing_output_index() const {
  // @@protoc_insertion_point(field_get:walletrpc.PsbtCoinSelect.existing_output_index)
  return _internal_existing_output_index();
}
inline void PsbtCoinSelect::set_existing_output_index(::int32_t value) {
  if (change_output_case() != kExistingOutputIndex) {
    clear_change_output();
    set_has_existing_output_index();
  }
  _impl_.change_output_.existing_output_index_ = value;
  // @@protoc_insertion_point(field_set:walletrpc.PsbtCoinSelect.existing_output_index)
}
inline ::int32_t PsbtCoinSelect::_internal_existing_output_index() const {
  if (change_output_case() == kExistingOutputIndex) {
    return _impl_.change_output_.existing_output_index_;
  }
  return 0;
}

// bool add = 3;
inline bool PsbtCoinSelect::has_add() const {
  return change_output_case() == kAdd;
}
inline void PsbtCoinSelect::set_has_add() {
  _impl_._oneof_case_[0] = kAdd;
}
inline void PsbtCoinSelect::clear_add() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (change_output_case() == kAdd) {
    _impl_.change_output_.add_ = false;
    clear_has_change_output();
  }
}
inline bool PsbtCoinSelect::add() const {
  // @@protoc_insertion_point(field_get:walletrpc.PsbtCoinSelect.add)
  return _internal_add();
}
inline void PsbtCoinSelect::set_add(bool value) {
  if (change_output_case() != kAdd) {
    clear_change_output();
    set_has_add();
  }
  _impl_.change_output_.add_ = value;
  // @@protoc_insertion_point(field_set:walletrpc.PsbtCoinSelect.add)
}
inline bool PsbtCoinSelect::_internal_add() const {
  if (change_output_case() == kAdd) {
    return _impl_.change_output_.add_;
  }
  return false;
}

inline bool PsbtCoinSelect::has_change_output() const {
  return change_output_case() != CHANGE_OUTPUT_NOT_SET;
}
inline void PsbtCoinSelect::clear_has_change_output() {
  _impl_._oneof_case_[0] = CHANGE_OUTPUT_NOT_SET;
}
inline PsbtCoinSelect::ChangeOutputCase PsbtCoinSelect::change_output_case() const {
  return PsbtCoinSelect::ChangeOutputCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// UtxoLease

// bytes id = 1;
inline void UtxoLease::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& UtxoLease::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.UtxoLease.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UtxoLease::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.UtxoLease.id)
}
inline std::string* UtxoLease::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:walletrpc.UtxoLease.id)
  return _s;
}
inline const std::string& UtxoLease::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void UtxoLease::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* UtxoLease::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* UtxoLease::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.UtxoLease.id)
  return _impl_.id_.Release();
}
inline void UtxoLease::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.UtxoLease.id)
}

// .lnrpc.OutPoint outpoint = 2;
inline bool UtxoLease::has_outpoint() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.outpoint_ != nullptr);
  return value;
}
inline const ::lnrpc::OutPoint& UtxoLease::_internal_outpoint() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::lnrpc::OutPoint* p = _impl_.outpoint_;
  return p != nullptr ? *p : reinterpret_cast<const ::lnrpc::OutPoint&>(::lnrpc::_OutPoint_default_instance_);
}
inline const ::lnrpc::OutPoint& UtxoLease::outpoint() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.UtxoLease.outpoint)
  return _internal_outpoint();
}
inline void UtxoLease::unsafe_arena_set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }
  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:walletrpc.UtxoLease.outpoint)
}
inline ::lnrpc::OutPoint* UtxoLease::release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* released = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::lnrpc::OutPoint* UtxoLease::unsafe_arena_release_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.UtxoLease.outpoint)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::lnrpc::OutPoint* temp = _impl_.outpoint_;
  _impl_.outpoint_ = nullptr;
  return temp;
}
inline ::lnrpc::OutPoint* UtxoLease::_internal_mutable_outpoint() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.outpoint_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::lnrpc::OutPoint>(GetArena());
    _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(p);
  }
  return _impl_.outpoint_;
}
inline ::lnrpc::OutPoint* UtxoLease::mutable_outpoint() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::lnrpc::OutPoint* _msg = _internal_mutable_outpoint();
  // @@protoc_insertion_point(field_mutable:walletrpc.UtxoLease.outpoint)
  return _msg;
}
inline void UtxoLease::set_allocated_outpoint(::lnrpc::OutPoint* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.outpoint_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.outpoint_ = reinterpret_cast<::lnrpc::OutPoint*>(value);
  // @@protoc_insertion_point(field_set_allocated:walletrpc.UtxoLease.outpoint)
}

// uint64 expiration = 3;
inline void UtxoLease::clear_expiration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_ = ::uint64_t{0u};
}
inline ::uint64_t UtxoLease::expiration() const {
  // @@protoc_insertion_point(field_get:walletrpc.UtxoLease.expiration)
  return _internal_expiration();
}
inline void UtxoLease::set_expiration(::uint64_t value) {
  _internal_set_expiration(value);
  // @@protoc_insertion_point(field_set:walletrpc.UtxoLease.expiration)
}
inline ::uint64_t UtxoLease::_internal_expiration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expiration_;
}
inline void UtxoLease::_internal_set_expiration(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expiration_ = value;
}

// bytes pk_script = 4;
inline void UtxoLease::clear_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.ClearToEmpty();
}
inline const std::string& UtxoLease::pk_script() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.UtxoLease.pk_script)
  return _internal_pk_script();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UtxoLease::set_pk_script(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.UtxoLease.pk_script)
}
inline std::string* UtxoLease::mutable_pk_script() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pk_script();
  // @@protoc_insertion_point(field_mutable:walletrpc.UtxoLease.pk_script)
  return _s;
}
inline const std::string& UtxoLease::_internal_pk_script() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pk_script_.Get();
}
inline void UtxoLease::_internal_set_pk_script(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.Set(value, GetArena());
}
inline std::string* UtxoLease::_internal_mutable_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pk_script_.Mutable( GetArena());
}
inline std::string* UtxoLease::release_pk_script() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.UtxoLease.pk_script)
  return _impl_.pk_script_.Release();
}
inline void UtxoLease::set_allocated_pk_script(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pk_script_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pk_script_.IsDefault()) {
          _impl_.pk_script_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.UtxoLease.pk_script)
}

// uint64 value = 5;
inline void UtxoLease::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = ::uint64_t{0u};
}
inline ::uint64_t UtxoLease::value() const {
  // @@protoc_insertion_point(field_get:walletrpc.UtxoLease.value)
  return _internal_value();
}
inline void UtxoLease::set_value(::uint64_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:walletrpc.UtxoLease.value)
}
inline ::uint64_t UtxoLease::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_;
}
inline void UtxoLease::_internal_set_value(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_ = value;
}

// -------------------------------------------------------------------

// SignPsbtRequest

// bytes funded_psbt = 1;
inline void SignPsbtRequest::clear_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.ClearToEmpty();
}
inline const std::string& SignPsbtRequest::funded_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SignPsbtRequest.funded_psbt)
  return _internal_funded_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignPsbtRequest::set_funded_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SignPsbtRequest.funded_psbt)
}
inline std::string* SignPsbtRequest::mutable_funded_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funded_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.SignPsbtRequest.funded_psbt)
  return _s;
}
inline const std::string& SignPsbtRequest::_internal_funded_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funded_psbt_.Get();
}
inline void SignPsbtRequest::_internal_set_funded_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.Set(value, GetArena());
}
inline std::string* SignPsbtRequest::_internal_mutable_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.funded_psbt_.Mutable( GetArena());
}
inline std::string* SignPsbtRequest::release_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SignPsbtRequest.funded_psbt)
  return _impl_.funded_psbt_.Release();
}
inline void SignPsbtRequest::set_allocated_funded_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.funded_psbt_.IsDefault()) {
          _impl_.funded_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SignPsbtRequest.funded_psbt)
}

// -------------------------------------------------------------------

// SignPsbtResponse

// bytes signed_psbt = 1;
inline void SignPsbtResponse::clear_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.ClearToEmpty();
}
inline const std::string& SignPsbtResponse::signed_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.SignPsbtResponse.signed_psbt)
  return _internal_signed_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SignPsbtResponse::set_signed_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.SignPsbtResponse.signed_psbt)
}
inline std::string* SignPsbtResponse::mutable_signed_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signed_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.SignPsbtResponse.signed_psbt)
  return _s;
}
inline const std::string& SignPsbtResponse::_internal_signed_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_psbt_.Get();
}
inline void SignPsbtResponse::_internal_set_signed_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.Set(value, GetArena());
}
inline std::string* SignPsbtResponse::_internal_mutable_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signed_psbt_.Mutable( GetArena());
}
inline std::string* SignPsbtResponse::release_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.SignPsbtResponse.signed_psbt)
  return _impl_.signed_psbt_.Release();
}
inline void SignPsbtResponse::set_allocated_signed_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signed_psbt_.IsDefault()) {
          _impl_.signed_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.SignPsbtResponse.signed_psbt)
}

// repeated uint32 signed_inputs = 2;
inline int SignPsbtResponse::_internal_signed_inputs_size() const {
  return _internal_signed_inputs().size();
}
inline int SignPsbtResponse::signed_inputs_size() const {
  return _internal_signed_inputs_size();
}
inline void SignPsbtResponse::clear_signed_inputs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_inputs_.Clear();
}
inline ::uint32_t SignPsbtResponse::signed_inputs(int index) const {
  // @@protoc_insertion_point(field_get:walletrpc.SignPsbtResponse.signed_inputs)
  return _internal_signed_inputs().Get(index);
}
inline void SignPsbtResponse::set_signed_inputs(int index, ::uint32_t value) {
  _internal_mutable_signed_inputs()->Set(index, value);
  // @@protoc_insertion_point(field_set:walletrpc.SignPsbtResponse.signed_inputs)
}
inline void SignPsbtResponse::add_signed_inputs(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_signed_inputs()->Add(value);
  // @@protoc_insertion_point(field_add:walletrpc.SignPsbtResponse.signed_inputs)
}
inline const ::google::protobuf::RepeatedField<::uint32_t>& SignPsbtResponse::signed_inputs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.SignPsbtResponse.signed_inputs)
  return _internal_signed_inputs();
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SignPsbtResponse::mutable_signed_inputs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.SignPsbtResponse.signed_inputs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_signed_inputs();
}
inline const ::google::protobuf::RepeatedField<::uint32_t>&
SignPsbtResponse::_internal_signed_inputs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_inputs_;
}
inline ::google::protobuf::RepeatedField<::uint32_t>* SignPsbtResponse::_internal_mutable_signed_inputs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.signed_inputs_;
}

// -------------------------------------------------------------------

// FinalizePsbtRequest

// bytes funded_psbt = 1;
inline void FinalizePsbtRequest::clear_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.ClearToEmpty();
}
inline const std::string& FinalizePsbtRequest::funded_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FinalizePsbtRequest.funded_psbt)
  return _internal_funded_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FinalizePsbtRequest::set_funded_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FinalizePsbtRequest.funded_psbt)
}
inline std::string* FinalizePsbtRequest::mutable_funded_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_funded_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.FinalizePsbtRequest.funded_psbt)
  return _s;
}
inline const std::string& FinalizePsbtRequest::_internal_funded_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.funded_psbt_.Get();
}
inline void FinalizePsbtRequest::_internal_set_funded_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.Set(value, GetArena());
}
inline std::string* FinalizePsbtRequest::_internal_mutable_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.funded_psbt_.Mutable( GetArena());
}
inline std::string* FinalizePsbtRequest::release_funded_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FinalizePsbtRequest.funded_psbt)
  return _impl_.funded_psbt_.Release();
}
inline void FinalizePsbtRequest::set_allocated_funded_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.funded_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.funded_psbt_.IsDefault()) {
          _impl_.funded_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FinalizePsbtRequest.funded_psbt)
}

// string account = 5;
inline void FinalizePsbtRequest::clear_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.ClearToEmpty();
}
inline const std::string& FinalizePsbtRequest::account() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FinalizePsbtRequest.account)
  return _internal_account();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FinalizePsbtRequest::set_account(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FinalizePsbtRequest.account)
}
inline std::string* FinalizePsbtRequest::mutable_account() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_account();
  // @@protoc_insertion_point(field_mutable:walletrpc.FinalizePsbtRequest.account)
  return _s;
}
inline const std::string& FinalizePsbtRequest::_internal_account() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.account_.Get();
}
inline void FinalizePsbtRequest::_internal_set_account(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.Set(value, GetArena());
}
inline std::string* FinalizePsbtRequest::_internal_mutable_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.account_.Mutable( GetArena());
}
inline std::string* FinalizePsbtRequest::release_account() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FinalizePsbtRequest.account)
  return _impl_.account_.Release();
}
inline void FinalizePsbtRequest::set_allocated_account(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.account_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.account_.IsDefault()) {
          _impl_.account_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FinalizePsbtRequest.account)
}

// -------------------------------------------------------------------

// FinalizePsbtResponse

// bytes signed_psbt = 1;
inline void FinalizePsbtResponse::clear_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.ClearToEmpty();
}
inline const std::string& FinalizePsbtResponse::signed_psbt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FinalizePsbtResponse.signed_psbt)
  return _internal_signed_psbt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FinalizePsbtResponse::set_signed_psbt(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FinalizePsbtResponse.signed_psbt)
}
inline std::string* FinalizePsbtResponse::mutable_signed_psbt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_signed_psbt();
  // @@protoc_insertion_point(field_mutable:walletrpc.FinalizePsbtResponse.signed_psbt)
  return _s;
}
inline const std::string& FinalizePsbtResponse::_internal_signed_psbt() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.signed_psbt_.Get();
}
inline void FinalizePsbtResponse::_internal_set_signed_psbt(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.Set(value, GetArena());
}
inline std::string* FinalizePsbtResponse::_internal_mutable_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.signed_psbt_.Mutable( GetArena());
}
inline std::string* FinalizePsbtResponse::release_signed_psbt() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FinalizePsbtResponse.signed_psbt)
  return _impl_.signed_psbt_.Release();
}
inline void FinalizePsbtResponse::set_allocated_signed_psbt(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.signed_psbt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.signed_psbt_.IsDefault()) {
          _impl_.signed_psbt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FinalizePsbtResponse.signed_psbt)
}

// bytes raw_final_tx = 2;
inline void FinalizePsbtResponse::clear_raw_final_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_final_tx_.ClearToEmpty();
}
inline const std::string& FinalizePsbtResponse::raw_final_tx() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.FinalizePsbtResponse.raw_final_tx)
  return _internal_raw_final_tx();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FinalizePsbtResponse::set_raw_final_tx(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_final_tx_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:walletrpc.FinalizePsbtResponse.raw_final_tx)
}
inline std::string* FinalizePsbtResponse::mutable_raw_final_tx() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_final_tx();
  // @@protoc_insertion_point(field_mutable:walletrpc.FinalizePsbtResponse.raw_final_tx)
  return _s;
}
inline const std::string& FinalizePsbtResponse::_internal_raw_final_tx() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_final_tx_.Get();
}
inline void FinalizePsbtResponse::_internal_set_raw_final_tx(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_final_tx_.Set(value, GetArena());
}
inline std::string* FinalizePsbtResponse::_internal_mutable_raw_final_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_final_tx_.Mutable( GetArena());
}
inline std::string* FinalizePsbtResponse::release_raw_final_tx() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:walletrpc.FinalizePsbtResponse.raw_final_tx)
  return _impl_.raw_final_tx_.Release();
}
inline void FinalizePsbtResponse::set_allocated_raw_final_tx(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_final_tx_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_final_tx_.IsDefault()) {
          _impl_.raw_final_tx_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:walletrpc.FinalizePsbtResponse.raw_final_tx)
}

// -------------------------------------------------------------------

// ListLeasesRequest

// -------------------------------------------------------------------

// ListLeasesResponse

// repeated .walletrpc.UtxoLease locked_utxos = 1;
inline int ListLeasesResponse::_internal_locked_utxos_size() const {
  return _internal_locked_utxos().size();
}
inline int ListLeasesResponse::locked_utxos_size() const {
  return _internal_locked_utxos_size();
}
inline void ListLeasesResponse::clear_locked_utxos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locked_utxos_.Clear();
}
inline ::walletrpc::UtxoLease* ListLeasesResponse::mutable_locked_utxos(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:walletrpc.ListLeasesResponse.locked_utxos)
  return _internal_mutable_locked_utxos()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>* ListLeasesResponse::mutable_locked_utxos()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:walletrpc.ListLeasesResponse.locked_utxos)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_locked_utxos();
}
inline const ::walletrpc::UtxoLease& ListLeasesResponse::locked_utxos(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:walletrpc.ListLeasesResponse.locked_utxos)
  return _internal_locked_utxos().Get(index);
}
inline ::walletrpc::UtxoLease* ListLeasesResponse::add_locked_utxos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::walletrpc::UtxoLease* _add = _internal_mutable_locked_utxos()->Add();
  // @@protoc_insertion_point(field_add:walletrpc.ListLeasesResponse.locked_utxos)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>& ListLeasesResponse::locked_utxos() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:walletrpc.ListLeasesResponse.locked_utxos)
  return _internal_locked_utxos();
}
inline const ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>&
ListLeasesResponse::_internal_locked_utxos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locked_utxos_;
}
inline ::google::protobuf::RepeatedPtrField<::walletrpc::UtxoLease>*
ListLeasesResponse::_internal_mutable_locked_utxos() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.locked_utxos_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace walletrpc


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::walletrpc::AddressType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::walletrpc::AddressType>() {
  return ::walletrpc::AddressType_descriptor();
}
template <>
struct is_proto_enum<::walletrpc::WitnessType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::walletrpc::WitnessType>() {
  return ::walletrpc::WitnessType_descriptor();
}
template <>
struct is_proto_enum<::walletrpc::ChangeAddressType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::walletrpc::ChangeAddressType>() {
  return ::walletrpc::ChangeAddressType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_walletkit_2eproto_2epb_2eh
