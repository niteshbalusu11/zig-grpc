// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chainkit.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_chainkit_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_chainkit_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_chainkit_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_chainkit_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_chainkit_2eproto;
namespace chainrpc {
class GetBestBlockRequest;
struct GetBestBlockRequestDefaultTypeInternal;
extern GetBestBlockRequestDefaultTypeInternal _GetBestBlockRequest_default_instance_;
class GetBestBlockResponse;
struct GetBestBlockResponseDefaultTypeInternal;
extern GetBestBlockResponseDefaultTypeInternal _GetBestBlockResponse_default_instance_;
class GetBlockHashRequest;
struct GetBlockHashRequestDefaultTypeInternal;
extern GetBlockHashRequestDefaultTypeInternal _GetBlockHashRequest_default_instance_;
class GetBlockHashResponse;
struct GetBlockHashResponseDefaultTypeInternal;
extern GetBlockHashResponseDefaultTypeInternal _GetBlockHashResponse_default_instance_;
class GetBlockHeaderRequest;
struct GetBlockHeaderRequestDefaultTypeInternal;
extern GetBlockHeaderRequestDefaultTypeInternal _GetBlockHeaderRequest_default_instance_;
class GetBlockHeaderResponse;
struct GetBlockHeaderResponseDefaultTypeInternal;
extern GetBlockHeaderResponseDefaultTypeInternal _GetBlockHeaderResponse_default_instance_;
class GetBlockRequest;
struct GetBlockRequestDefaultTypeInternal;
extern GetBlockRequestDefaultTypeInternal _GetBlockRequest_default_instance_;
class GetBlockResponse;
struct GetBlockResponseDefaultTypeInternal;
extern GetBlockResponseDefaultTypeInternal _GetBlockResponse_default_instance_;
}  // namespace chainrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace chainrpc {

// ===================================================================


// -------------------------------------------------------------------

class GetBlockResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBlockResponse) */ {
 public:
  inline GetBlockResponse() : GetBlockResponse(nullptr) {}
  ~GetBlockResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockResponse(const GetBlockResponse& from) : GetBlockResponse(nullptr, from) {}
  inline GetBlockResponse(GetBlockResponse&& from) noexcept
      : GetBlockResponse(nullptr, std::move(from)) {}
  inline GetBlockResponse& operator=(const GetBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockResponse& operator=(GetBlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockResponse* internal_default_instance() {
    return reinterpret_cast<const GetBlockResponse*>(
        &_GetBlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(GetBlockResponse& a, GetBlockResponse& b) { a.Swap(&b); }
  inline void Swap(GetBlockResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockResponse& from) { GetBlockResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBlockResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBlockResponse"; }

 protected:
  explicit GetBlockResponse(::google::protobuf::Arena* arena);
  GetBlockResponse(::google::protobuf::Arena* arena, const GetBlockResponse& from);
  GetBlockResponse(::google::protobuf::Arena* arena, GetBlockResponse&& from) noexcept
      : GetBlockResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawBlockFieldNumber = 1,
  };
  // bytes raw_block = 1;
  void clear_raw_block() ;
  const std::string& raw_block() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_block(Arg_&& arg, Args_... args);
  std::string* mutable_raw_block();
  PROTOBUF_NODISCARD std::string* release_raw_block();
  void set_allocated_raw_block(std::string* value);

  private:
  const std::string& _internal_raw_block() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_block(
      const std::string& value);
  std::string* _internal_mutable_raw_block();

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBlockResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBlockResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr raw_block_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBlockRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBlockRequest) */ {
 public:
  inline GetBlockRequest() : GetBlockRequest(nullptr) {}
  ~GetBlockRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockRequest(const GetBlockRequest& from) : GetBlockRequest(nullptr, from) {}
  inline GetBlockRequest(GetBlockRequest&& from) noexcept
      : GetBlockRequest(nullptr, std::move(from)) {}
  inline GetBlockRequest& operator=(const GetBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockRequest& operator=(GetBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockRequest* internal_default_instance() {
    return reinterpret_cast<const GetBlockRequest*>(
        &_GetBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(GetBlockRequest& a, GetBlockRequest& b) { a.Swap(&b); }
  inline void Swap(GetBlockRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockRequest& from) { GetBlockRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBlockRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBlockRequest"; }

 protected:
  explicit GetBlockRequest(::google::protobuf::Arena* arena);
  GetBlockRequest(::google::protobuf::Arena* arena, const GetBlockRequest& from);
  GetBlockRequest(::google::protobuf::Arena* arena, GetBlockRequest&& from) noexcept
      : GetBlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 1,
  };
  // bytes block_hash = 1;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBlockRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBlockHeaderResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBlockHeaderResponse) */ {
 public:
  inline GetBlockHeaderResponse() : GetBlockHeaderResponse(nullptr) {}
  ~GetBlockHeaderResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockHeaderResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockHeaderResponse(const GetBlockHeaderResponse& from) : GetBlockHeaderResponse(nullptr, from) {}
  inline GetBlockHeaderResponse(GetBlockHeaderResponse&& from) noexcept
      : GetBlockHeaderResponse(nullptr, std::move(from)) {}
  inline GetBlockHeaderResponse& operator=(const GetBlockHeaderResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockHeaderResponse& operator=(GetBlockHeaderResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockHeaderResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockHeaderResponse* internal_default_instance() {
    return reinterpret_cast<const GetBlockHeaderResponse*>(
        &_GetBlockHeaderResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetBlockHeaderResponse& a, GetBlockHeaderResponse& b) { a.Swap(&b); }
  inline void Swap(GetBlockHeaderResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockHeaderResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockHeaderResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockHeaderResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockHeaderResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockHeaderResponse& from) { GetBlockHeaderResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBlockHeaderResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBlockHeaderResponse"; }

 protected:
  explicit GetBlockHeaderResponse(::google::protobuf::Arena* arena);
  GetBlockHeaderResponse(::google::protobuf::Arena* arena, const GetBlockHeaderResponse& from);
  GetBlockHeaderResponse(::google::protobuf::Arena* arena, GetBlockHeaderResponse&& from) noexcept
      : GetBlockHeaderResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRawBlockHeaderFieldNumber = 1,
  };
  // bytes raw_block_header = 1;
  void clear_raw_block_header() ;
  const std::string& raw_block_header() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_raw_block_header(Arg_&& arg, Args_... args);
  std::string* mutable_raw_block_header();
  PROTOBUF_NODISCARD std::string* release_raw_block_header();
  void set_allocated_raw_block_header(std::string* value);

  private:
  const std::string& _internal_raw_block_header() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_raw_block_header(
      const std::string& value);
  std::string* _internal_mutable_raw_block_header();

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBlockHeaderResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBlockHeaderResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockHeaderResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr raw_block_header_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBlockHeaderRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBlockHeaderRequest) */ {
 public:
  inline GetBlockHeaderRequest() : GetBlockHeaderRequest(nullptr) {}
  ~GetBlockHeaderRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockHeaderRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockHeaderRequest(const GetBlockHeaderRequest& from) : GetBlockHeaderRequest(nullptr, from) {}
  inline GetBlockHeaderRequest(GetBlockHeaderRequest&& from) noexcept
      : GetBlockHeaderRequest(nullptr, std::move(from)) {}
  inline GetBlockHeaderRequest& operator=(const GetBlockHeaderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockHeaderRequest& operator=(GetBlockHeaderRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockHeaderRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockHeaderRequest* internal_default_instance() {
    return reinterpret_cast<const GetBlockHeaderRequest*>(
        &_GetBlockHeaderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetBlockHeaderRequest& a, GetBlockHeaderRequest& b) { a.Swap(&b); }
  inline void Swap(GetBlockHeaderRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockHeaderRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockHeaderRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockHeaderRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockHeaderRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockHeaderRequest& from) { GetBlockHeaderRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBlockHeaderRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBlockHeaderRequest"; }

 protected:
  explicit GetBlockHeaderRequest(::google::protobuf::Arena* arena);
  GetBlockHeaderRequest(::google::protobuf::Arena* arena, const GetBlockHeaderRequest& from);
  GetBlockHeaderRequest(::google::protobuf::Arena* arena, GetBlockHeaderRequest&& from) noexcept
      : GetBlockHeaderRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 1,
  };
  // bytes block_hash = 1;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBlockHeaderRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBlockHeaderRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockHeaderRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBlockHashResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBlockHashResponse) */ {
 public:
  inline GetBlockHashResponse() : GetBlockHashResponse(nullptr) {}
  ~GetBlockHashResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockHashResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockHashResponse(const GetBlockHashResponse& from) : GetBlockHashResponse(nullptr, from) {}
  inline GetBlockHashResponse(GetBlockHashResponse&& from) noexcept
      : GetBlockHashResponse(nullptr, std::move(from)) {}
  inline GetBlockHashResponse& operator=(const GetBlockHashResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockHashResponse& operator=(GetBlockHashResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockHashResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockHashResponse* internal_default_instance() {
    return reinterpret_cast<const GetBlockHashResponse*>(
        &_GetBlockHashResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetBlockHashResponse& a, GetBlockHashResponse& b) { a.Swap(&b); }
  inline void Swap(GetBlockHashResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockHashResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockHashResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockHashResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockHashResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockHashResponse& from) { GetBlockHashResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBlockHashResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBlockHashResponse"; }

 protected:
  explicit GetBlockHashResponse(::google::protobuf::Arena* arena);
  GetBlockHashResponse(::google::protobuf::Arena* arena, const GetBlockHashResponse& from);
  GetBlockHashResponse(::google::protobuf::Arena* arena, GetBlockHashResponse&& from) noexcept
      : GetBlockHashResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 1,
  };
  // bytes block_hash = 1;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBlockHashResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBlockHashResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockHashResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBlockHashRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBlockHashRequest) */ {
 public:
  inline GetBlockHashRequest() : GetBlockHashRequest(nullptr) {}
  ~GetBlockHashRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBlockHashRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBlockHashRequest(const GetBlockHashRequest& from) : GetBlockHashRequest(nullptr, from) {}
  inline GetBlockHashRequest(GetBlockHashRequest&& from) noexcept
      : GetBlockHashRequest(nullptr, std::move(from)) {}
  inline GetBlockHashRequest& operator=(const GetBlockHashRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBlockHashRequest& operator=(GetBlockHashRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBlockHashRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBlockHashRequest* internal_default_instance() {
    return reinterpret_cast<const GetBlockHashRequest*>(
        &_GetBlockHashRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetBlockHashRequest& a, GetBlockHashRequest& b) { a.Swap(&b); }
  inline void Swap(GetBlockHashRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBlockHashRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBlockHashRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBlockHashRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBlockHashRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBlockHashRequest& from) { GetBlockHashRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBlockHashRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBlockHashRequest"; }

 protected:
  explicit GetBlockHashRequest(::google::protobuf::Arena* arena);
  GetBlockHashRequest(::google::protobuf::Arena* arena, const GetBlockHashRequest& from);
  GetBlockHashRequest(::google::protobuf::Arena* arena, GetBlockHashRequest&& from) noexcept
      : GetBlockHashRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHeightFieldNumber = 1,
  };
  // int64 block_height = 1;
  void clear_block_height() ;
  ::int64_t block_height() const;
  void set_block_height(::int64_t value);

  private:
  ::int64_t _internal_block_height() const;
  void _internal_set_block_height(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBlockHashRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBlockHashRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBlockHashRequest& from_msg);
    ::int64_t block_height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBestBlockResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:chainrpc.GetBestBlockResponse) */ {
 public:
  inline GetBestBlockResponse() : GetBestBlockResponse(nullptr) {}
  ~GetBestBlockResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBestBlockResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBestBlockResponse(const GetBestBlockResponse& from) : GetBestBlockResponse(nullptr, from) {}
  inline GetBestBlockResponse(GetBestBlockResponse&& from) noexcept
      : GetBestBlockResponse(nullptr, std::move(from)) {}
  inline GetBestBlockResponse& operator=(const GetBestBlockResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBestBlockResponse& operator=(GetBestBlockResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBestBlockResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBestBlockResponse* internal_default_instance() {
    return reinterpret_cast<const GetBestBlockResponse*>(
        &_GetBestBlockResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetBestBlockResponse& a, GetBestBlockResponse& b) { a.Swap(&b); }
  inline void Swap(GetBestBlockResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBestBlockResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBestBlockResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<GetBestBlockResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetBestBlockResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetBestBlockResponse& from) { GetBestBlockResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetBestBlockResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBestBlockResponse"; }

 protected:
  explicit GetBestBlockResponse(::google::protobuf::Arena* arena);
  GetBestBlockResponse(::google::protobuf::Arena* arena, const GetBestBlockResponse& from);
  GetBestBlockResponse(::google::protobuf::Arena* arena, GetBestBlockResponse&& from) noexcept
      : GetBestBlockResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 1,
    kBlockHeightFieldNumber = 2,
  };
  // bytes block_hash = 1;
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* mutable_block_hash();
  PROTOBUF_NODISCARD std::string* release_block_hash();
  void set_allocated_block_hash(std::string* value);

  private:
  const std::string& _internal_block_hash() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(
      const std::string& value);
  std::string* _internal_mutable_block_hash();

  public:
  // int32 block_height = 2;
  void clear_block_height() ;
  ::int32_t block_height() const;
  void set_block_height(::int32_t value);

  private:
  ::int32_t _internal_block_height() const;
  void _internal_set_block_height(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:chainrpc.GetBestBlockResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBestBlockResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBestBlockResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    ::int32_t block_height_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_chainkit_2eproto;
};
// -------------------------------------------------------------------

class GetBestBlockRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:chainrpc.GetBestBlockRequest) */ {
 public:
  inline GetBestBlockRequest() : GetBestBlockRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetBestBlockRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetBestBlockRequest(const GetBestBlockRequest& from) : GetBestBlockRequest(nullptr, from) {}
  inline GetBestBlockRequest(GetBestBlockRequest&& from) noexcept
      : GetBestBlockRequest(nullptr, std::move(from)) {}
  inline GetBestBlockRequest& operator=(const GetBestBlockRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetBestBlockRequest& operator=(GetBestBlockRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetBestBlockRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetBestBlockRequest* internal_default_instance() {
    return reinterpret_cast<const GetBestBlockRequest*>(
        &_GetBestBlockRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetBestBlockRequest& a, GetBestBlockRequest& b) { a.Swap(&b); }
  inline void Swap(GetBestBlockRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetBestBlockRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetBestBlockRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetBestBlockRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetBestBlockRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetBestBlockRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "chainrpc.GetBestBlockRequest"; }

 protected:
  explicit GetBestBlockRequest(::google::protobuf::Arena* arena);
  GetBestBlockRequest(::google::protobuf::Arena* arena, const GetBestBlockRequest& from);
  GetBestBlockRequest(::google::protobuf::Arena* arena, GetBestBlockRequest&& from) noexcept
      : GetBestBlockRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::internal::ZeroFieldsBase::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:chainrpc.GetBestBlockRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetBestBlockRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetBestBlockRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_chainkit_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetBlockRequest

// bytes block_hash = 1;
inline void GetBlockRequest::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& GetBlockRequest::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.GetBlockRequest.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBlockRequest::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.GetBlockRequest.block_hash)
}
inline std::string* GetBlockRequest::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.GetBlockRequest.block_hash)
  return _s;
}
inline const std::string& GetBlockRequest::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void GetBlockRequest::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* GetBlockRequest::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* GetBlockRequest::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.GetBlockRequest.block_hash)
  return _impl_.block_hash_.Release();
}
inline void GetBlockRequest::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.GetBlockRequest.block_hash)
}

// -------------------------------------------------------------------

// GetBlockResponse

// bytes raw_block = 1;
inline void GetBlockResponse::clear_raw_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.ClearToEmpty();
}
inline const std::string& GetBlockResponse::raw_block() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.GetBlockResponse.raw_block)
  return _internal_raw_block();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBlockResponse::set_raw_block(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.GetBlockResponse.raw_block)
}
inline std::string* GetBlockResponse::mutable_raw_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_block();
  // @@protoc_insertion_point(field_mutable:chainrpc.GetBlockResponse.raw_block)
  return _s;
}
inline const std::string& GetBlockResponse::_internal_raw_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_block_.Get();
}
inline void GetBlockResponse::_internal_set_raw_block(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.Set(value, GetArena());
}
inline std::string* GetBlockResponse::_internal_mutable_raw_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_block_.Mutable( GetArena());
}
inline std::string* GetBlockResponse::release_raw_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.GetBlockResponse.raw_block)
  return _impl_.raw_block_.Release();
}
inline void GetBlockResponse::set_allocated_raw_block(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_block_.IsDefault()) {
          _impl_.raw_block_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.GetBlockResponse.raw_block)
}

// -------------------------------------------------------------------

// GetBlockHeaderRequest

// bytes block_hash = 1;
inline void GetBlockHeaderRequest::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& GetBlockHeaderRequest::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.GetBlockHeaderRequest.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBlockHeaderRequest::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.GetBlockHeaderRequest.block_hash)
}
inline std::string* GetBlockHeaderRequest::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.GetBlockHeaderRequest.block_hash)
  return _s;
}
inline const std::string& GetBlockHeaderRequest::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void GetBlockHeaderRequest::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* GetBlockHeaderRequest::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* GetBlockHeaderRequest::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.GetBlockHeaderRequest.block_hash)
  return _impl_.block_hash_.Release();
}
inline void GetBlockHeaderRequest::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.GetBlockHeaderRequest.block_hash)
}

// -------------------------------------------------------------------

// GetBlockHeaderResponse

// bytes raw_block_header = 1;
inline void GetBlockHeaderResponse::clear_raw_block_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_header_.ClearToEmpty();
}
inline const std::string& GetBlockHeaderResponse::raw_block_header() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.GetBlockHeaderResponse.raw_block_header)
  return _internal_raw_block_header();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBlockHeaderResponse::set_raw_block_header(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_header_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.GetBlockHeaderResponse.raw_block_header)
}
inline std::string* GetBlockHeaderResponse::mutable_raw_block_header() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_raw_block_header();
  // @@protoc_insertion_point(field_mutable:chainrpc.GetBlockHeaderResponse.raw_block_header)
  return _s;
}
inline const std::string& GetBlockHeaderResponse::_internal_raw_block_header() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.raw_block_header_.Get();
}
inline void GetBlockHeaderResponse::_internal_set_raw_block_header(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_header_.Set(value, GetArena());
}
inline std::string* GetBlockHeaderResponse::_internal_mutable_raw_block_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.raw_block_header_.Mutable( GetArena());
}
inline std::string* GetBlockHeaderResponse::release_raw_block_header() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.GetBlockHeaderResponse.raw_block_header)
  return _impl_.raw_block_header_.Release();
}
inline void GetBlockHeaderResponse::set_allocated_raw_block_header(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.raw_block_header_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.raw_block_header_.IsDefault()) {
          _impl_.raw_block_header_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.GetBlockHeaderResponse.raw_block_header)
}

// -------------------------------------------------------------------

// GetBestBlockRequest

// -------------------------------------------------------------------

// GetBestBlockResponse

// bytes block_hash = 1;
inline void GetBestBlockResponse::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& GetBestBlockResponse::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.GetBestBlockResponse.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBestBlockResponse::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.GetBestBlockResponse.block_hash)
}
inline std::string* GetBestBlockResponse::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.GetBestBlockResponse.block_hash)
  return _s;
}
inline const std::string& GetBestBlockResponse::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void GetBestBlockResponse::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* GetBestBlockResponse::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* GetBestBlockResponse::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.GetBestBlockResponse.block_hash)
  return _impl_.block_hash_.Release();
}
inline void GetBestBlockResponse::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.GetBestBlockResponse.block_hash)
}

// int32 block_height = 2;
inline void GetBestBlockResponse::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = 0;
}
inline ::int32_t GetBestBlockResponse::block_height() const {
  // @@protoc_insertion_point(field_get:chainrpc.GetBestBlockResponse.block_height)
  return _internal_block_height();
}
inline void GetBestBlockResponse::set_block_height(::int32_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:chainrpc.GetBestBlockResponse.block_height)
}
inline ::int32_t GetBestBlockResponse::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void GetBestBlockResponse::_internal_set_block_height(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// -------------------------------------------------------------------

// GetBlockHashRequest

// int64 block_height = 1;
inline void GetBlockHashRequest::clear_block_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = ::int64_t{0};
}
inline ::int64_t GetBlockHashRequest::block_height() const {
  // @@protoc_insertion_point(field_get:chainrpc.GetBlockHashRequest.block_height)
  return _internal_block_height();
}
inline void GetBlockHashRequest::set_block_height(::int64_t value) {
  _internal_set_block_height(value);
  // @@protoc_insertion_point(field_set:chainrpc.GetBlockHashRequest.block_height)
}
inline ::int64_t GetBlockHashRequest::_internal_block_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_height_;
}
inline void GetBlockHashRequest::_internal_set_block_height(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_height_ = value;
}

// -------------------------------------------------------------------

// GetBlockHashResponse

// bytes block_hash = 1;
inline void GetBlockHashResponse::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
}
inline const std::string& GetBlockHashResponse::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:chainrpc.GetBlockHashResponse.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetBlockHashResponse::set_block_hash(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:chainrpc.GetBlockHashResponse.block_hash)
}
inline std::string* GetBlockHashResponse::mutable_block_hash() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:chainrpc.GetBlockHashResponse.block_hash)
  return _s;
}
inline const std::string& GetBlockHashResponse::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void GetBlockHashResponse::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* GetBlockHashResponse::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* GetBlockHashResponse::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:chainrpc.GetBlockHashResponse.block_hash)
  return _impl_.block_hash_.Release();
}
inline void GetBlockHashResponse::set_allocated_block_hash(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.block_hash_.IsDefault()) {
          _impl_.block_hash_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:chainrpc.GetBlockHashResponse.block_hash)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace chainrpc


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_chainkit_2eproto_2epb_2eh
