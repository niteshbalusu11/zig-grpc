// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: signer.proto
// Protobuf C++ Version: 5.28.2

#include "signer.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace signrpc {

inline constexpr VerifyMessageResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : valid_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VerifyMessageResp::VerifyMessageResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VerifyMessageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VerifyMessageRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VerifyMessageRespDefaultTypeInternal() {}
  union {
    VerifyMessageResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VerifyMessageRespDefaultTypeInternal _VerifyMessageResp_default_instance_;

inline constexpr VerifyMessageReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pubkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_schnorr_sig_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VerifyMessageReq::VerifyMessageReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct VerifyMessageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VerifyMessageReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VerifyMessageReqDefaultTypeInternal() {}
  union {
    VerifyMessageReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VerifyMessageReqDefaultTypeInternal _VerifyMessageReq_default_instance_;

inline constexpr TxOut::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : pk_script_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TxOut::TxOut(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TxOutDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TxOutDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TxOutDefaultTypeInternal() {}
  union {
    TxOut _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TxOutDefaultTypeInternal _TxOut_default_instance_;

inline constexpr TweakDesc::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tweak_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        is_x_only_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TweakDesc::TweakDesc(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TweakDescDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TweakDescDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TweakDescDefaultTypeInternal() {}
  union {
    TweakDesc _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TweakDescDefaultTypeInternal _TweakDesc_default_instance_;

inline constexpr TaprootTweakDesc::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : script_root_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_spend_only_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TaprootTweakDesc::TaprootTweakDesc(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaprootTweakDescDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaprootTweakDescDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaprootTweakDescDefaultTypeInternal() {}
  union {
    TaprootTweakDesc _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaprootTweakDescDefaultTypeInternal _TaprootTweakDesc_default_instance_;

inline constexpr SignResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : raw_sigs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SignResp::SignResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignRespDefaultTypeInternal() {}
  union {
    SignResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignRespDefaultTypeInternal _SignResp_default_instance_;

inline constexpr SignMessageResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SignMessageResp::SignMessageResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignMessageRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignMessageRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignMessageRespDefaultTypeInternal() {}
  union {
    SignMessageResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignMessageRespDefaultTypeInternal _SignMessageResp_default_instance_;

inline constexpr SharedKeyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : shared_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SharedKeyResponse::SharedKeyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SharedKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedKeyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedKeyResponseDefaultTypeInternal() {}
  union {
    SharedKeyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedKeyResponseDefaultTypeInternal _SharedKeyResponse_default_instance_;

inline constexpr MuSig2SignResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : local_partial_signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2SignResponse::MuSig2SignResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2SignResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2SignResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2SignResponseDefaultTypeInternal() {}
  union {
    MuSig2SignResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2SignResponseDefaultTypeInternal _MuSig2SignResponse_default_instance_;

inline constexpr MuSig2SignRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_digest_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cleanup_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2SignRequest::MuSig2SignRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2SignRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2SignRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2SignRequestDefaultTypeInternal() {}
  union {
    MuSig2SignRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2SignRequestDefaultTypeInternal _MuSig2SignRequest_default_instance_;

inline constexpr MuSig2SessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        combined_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        taproot_internal_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        local_public_nonces_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        have_all_nonces_{false},
        version_{static_cast< ::signrpc::MuSig2Version >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2SessionResponse::MuSig2SessionResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2SessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2SessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2SessionResponseDefaultTypeInternal() {}
  union {
    MuSig2SessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2SessionResponseDefaultTypeInternal _MuSig2SessionResponse_default_instance_;

inline constexpr MuSig2RegisterNoncesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : have_all_nonces_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2RegisterNoncesResponse::MuSig2RegisterNoncesResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2RegisterNoncesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2RegisterNoncesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2RegisterNoncesResponseDefaultTypeInternal() {}
  union {
    MuSig2RegisterNoncesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2RegisterNoncesResponseDefaultTypeInternal _MuSig2RegisterNoncesResponse_default_instance_;

inline constexpr MuSig2RegisterNoncesRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : other_signer_public_nonces_{},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2RegisterNoncesRequest::MuSig2RegisterNoncesRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2RegisterNoncesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2RegisterNoncesRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2RegisterNoncesRequestDefaultTypeInternal() {}
  union {
    MuSig2RegisterNoncesRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2RegisterNoncesRequestDefaultTypeInternal _MuSig2RegisterNoncesRequest_default_instance_;

inline constexpr MuSig2CombineSigResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : final_signature_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        have_all_signatures_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2CombineSigResponse::MuSig2CombineSigResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2CombineSigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2CombineSigResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2CombineSigResponseDefaultTypeInternal() {}
  union {
    MuSig2CombineSigResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2CombineSigResponseDefaultTypeInternal _MuSig2CombineSigResponse_default_instance_;

inline constexpr MuSig2CombineSigRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : other_partial_signatures_{},
        session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2CombineSigRequest::MuSig2CombineSigRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2CombineSigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2CombineSigRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2CombineSigRequestDefaultTypeInternal() {}
  union {
    MuSig2CombineSigRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2CombineSigRequestDefaultTypeInternal _MuSig2CombineSigRequest_default_instance_;

inline constexpr MuSig2CombineKeysResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : combined_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        taproot_internal_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        version_{static_cast< ::signrpc::MuSig2Version >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2CombineKeysResponse::MuSig2CombineKeysResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2CombineKeysResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2CombineKeysResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2CombineKeysResponseDefaultTypeInternal() {}
  union {
    MuSig2CombineKeysResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2CombineKeysResponseDefaultTypeInternal _MuSig2CombineKeysResponse_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR MuSig2CleanupResponse::MuSig2CleanupResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct MuSig2CleanupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2CleanupResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2CleanupResponseDefaultTypeInternal() {}
  union {
    MuSig2CleanupResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2CleanupResponseDefaultTypeInternal _MuSig2CleanupResponse_default_instance_;

inline constexpr MuSig2CleanupRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : session_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2CleanupRequest::MuSig2CleanupRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2CleanupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2CleanupRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2CleanupRequestDefaultTypeInternal() {}
  union {
    MuSig2CleanupRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2CleanupRequestDefaultTypeInternal _MuSig2CleanupRequest_default_instance_;

inline constexpr KeyLocator::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : key_family_{0},
        key_index_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR KeyLocator::KeyLocator(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KeyLocatorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyLocatorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyLocatorDefaultTypeInternal() {}
  union {
    KeyLocator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyLocatorDefaultTypeInternal _KeyLocator_default_instance_;

inline constexpr InputScript::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : witness_{},
        sig_script_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InputScript::InputScript(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InputScriptDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputScriptDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputScriptDefaultTypeInternal() {}
  union {
    InputScript _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputScriptDefaultTypeInternal _InputScript_default_instance_;

inline constexpr SignMessageReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msg_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        schnorr_sig_tap_tweak_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tag_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_loc_{nullptr},
        double_hash_{false},
        compact_sig_{false},
        schnorr_sig_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SignMessageReq::SignMessageReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignMessageReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignMessageReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignMessageReqDefaultTypeInternal() {}
  union {
    SignMessageReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignMessageReqDefaultTypeInternal _SignMessageReq_default_instance_;

inline constexpr MuSig2SessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        all_signer_pubkeys_{},
        other_signer_public_nonces_{},
        tweaks_{},
        pregenerated_local_nonce_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_loc_{nullptr},
        taproot_tweak_{nullptr},
        version_{static_cast< ::signrpc::MuSig2Version >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2SessionRequest::MuSig2SessionRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2SessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2SessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2SessionRequestDefaultTypeInternal() {}
  union {
    MuSig2SessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2SessionRequestDefaultTypeInternal _MuSig2SessionRequest_default_instance_;

inline constexpr MuSig2CombineKeysRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        all_signer_pubkeys_{},
        tweaks_{},
        taproot_tweak_{nullptr},
        version_{static_cast< ::signrpc::MuSig2Version >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR MuSig2CombineKeysRequest::MuSig2CombineKeysRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct MuSig2CombineKeysRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MuSig2CombineKeysRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MuSig2CombineKeysRequestDefaultTypeInternal() {}
  union {
    MuSig2CombineKeysRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MuSig2CombineKeysRequestDefaultTypeInternal _MuSig2CombineKeysRequest_default_instance_;

inline constexpr KeyDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        raw_key_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_loc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR KeyDescriptor::KeyDescriptor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct KeyDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR KeyDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~KeyDescriptorDefaultTypeInternal() {}
  union {
    KeyDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 KeyDescriptorDefaultTypeInternal _KeyDescriptor_default_instance_;

inline constexpr InputScriptResp::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : input_scripts_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InputScriptResp::InputScriptResp(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InputScriptRespDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InputScriptRespDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InputScriptRespDefaultTypeInternal() {}
  union {
    InputScriptResp _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InputScriptRespDefaultTypeInternal _InputScriptResp_default_instance_;

inline constexpr SignDescriptor::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        single_tweak_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        double_tweak_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        witness_script_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        tap_tweak_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_desc_{nullptr},
        output_{nullptr},
        sighash_{0u},
        input_index_{0},
        sign_method_{static_cast< ::signrpc::SignMethod >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR SignDescriptor::SignDescriptor(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignDescriptorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignDescriptorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignDescriptorDefaultTypeInternal() {}
  union {
    SignDescriptor _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignDescriptorDefaultTypeInternal _SignDescriptor_default_instance_;

inline constexpr SharedKeyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ephemeral_pubkey_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_loc_{nullptr},
        key_desc_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR SharedKeyRequest::SharedKeyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SharedKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SharedKeyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SharedKeyRequestDefaultTypeInternal() {}
  union {
    SharedKeyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SharedKeyRequestDefaultTypeInternal _SharedKeyRequest_default_instance_;

inline constexpr SignReq::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : sign_descs_{},
        prev_outputs_{},
        raw_tx_bytes_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR SignReq::SignReq(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SignReqDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SignReqDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SignReqDefaultTypeInternal() {}
  union {
    SignReq _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SignReqDefaultTypeInternal _SignReq_default_instance_;
}  // namespace signrpc
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_signer_2eproto[2];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_signer_2eproto = nullptr;
const ::uint32_t
    TableStruct_signer_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyLocator, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyLocator, _impl_.key_family_),
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyLocator, _impl_.key_index_),
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyDescriptor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyDescriptor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyDescriptor, _impl_.raw_key_bytes_),
        PROTOBUF_FIELD_OFFSET(::signrpc::KeyDescriptor, _impl_.key_loc_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::TxOut, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::TxOut, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::signrpc::TxOut, _impl_.pk_script_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.key_desc_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.single_tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.double_tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.tap_tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.witness_script_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.output_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.sighash_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.input_index_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignDescriptor, _impl_.sign_method_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::SignReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SignReq, _impl_.raw_tx_bytes_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignReq, _impl_.sign_descs_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignReq, _impl_.prev_outputs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::SignResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SignResp, _impl_.raw_sigs_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::InputScript, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::InputScript, _impl_.witness_),
        PROTOBUF_FIELD_OFFSET(::signrpc::InputScript, _impl_.sig_script_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::InputScriptResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::InputScriptResp, _impl_.input_scripts_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.key_loc_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.double_hash_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.compact_sig_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.schnorr_sig_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.schnorr_sig_tap_tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageReq, _impl_.tag_),
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SignMessageResp, _impl_.signature_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageReq, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageReq, _impl_.msg_),
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageReq, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageReq, _impl_.pubkey_),
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageReq, _impl_.is_schnorr_sig_),
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageReq, _impl_.tag_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageResp, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::VerifyMessageResp, _impl_.valid_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyRequest, _impl_.ephemeral_pubkey_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyRequest, _impl_.key_loc_),
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyRequest, _impl_.key_desc_),
        ~0u,
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::SharedKeyResponse, _impl_.shared_key_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::TweakDesc, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::TweakDesc, _impl_.tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::TweakDesc, _impl_.is_x_only_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::TaprootTweakDesc, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::TaprootTweakDesc, _impl_.script_root_),
        PROTOBUF_FIELD_OFFSET(::signrpc::TaprootTweakDesc, _impl_.key_spend_only_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysRequest, _impl_.all_signer_pubkeys_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysRequest, _impl_.tweaks_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysRequest, _impl_.taproot_tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysRequest, _impl_.version_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysResponse, _impl_.combined_key_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysResponse, _impl_.taproot_internal_key_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineKeysResponse, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.key_loc_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.all_signer_pubkeys_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.other_signer_public_nonces_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.tweaks_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.taproot_tweak_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.version_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionRequest, _impl_.pregenerated_local_nonce_),
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _impl_.combined_key_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _impl_.taproot_internal_key_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _impl_.local_public_nonces_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _impl_.have_all_nonces_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SessionResponse, _impl_.version_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2RegisterNoncesRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2RegisterNoncesRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2RegisterNoncesRequest, _impl_.other_signer_public_nonces_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2RegisterNoncesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2RegisterNoncesResponse, _impl_.have_all_nonces_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SignRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SignRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SignRequest, _impl_.message_digest_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SignRequest, _impl_.cleanup_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SignResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2SignResponse, _impl_.local_partial_signature_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineSigRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineSigRequest, _impl_.session_id_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineSigRequest, _impl_.other_partial_signatures_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineSigResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineSigResponse, _impl_.have_all_signatures_),
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CombineSigResponse, _impl_.final_signature_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CleanupRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CleanupRequest, _impl_.session_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::signrpc::MuSig2CleanupResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::signrpc::KeyLocator)},
        {10, 20, -1, sizeof(::signrpc::KeyDescriptor)},
        {22, -1, -1, sizeof(::signrpc::TxOut)},
        {32, 49, -1, sizeof(::signrpc::SignDescriptor)},
        {58, -1, -1, sizeof(::signrpc::SignReq)},
        {69, -1, -1, sizeof(::signrpc::SignResp)},
        {78, -1, -1, sizeof(::signrpc::InputScript)},
        {88, -1, -1, sizeof(::signrpc::InputScriptResp)},
        {97, 112, -1, sizeof(::signrpc::SignMessageReq)},
        {119, -1, -1, sizeof(::signrpc::SignMessageResp)},
        {128, -1, -1, sizeof(::signrpc::VerifyMessageReq)},
        {141, -1, -1, sizeof(::signrpc::VerifyMessageResp)},
        {150, 161, -1, sizeof(::signrpc::SharedKeyRequest)},
        {164, -1, -1, sizeof(::signrpc::SharedKeyResponse)},
        {173, -1, -1, sizeof(::signrpc::TweakDesc)},
        {183, -1, -1, sizeof(::signrpc::TaprootTweakDesc)},
        {193, 205, -1, sizeof(::signrpc::MuSig2CombineKeysRequest)},
        {209, -1, -1, sizeof(::signrpc::MuSig2CombineKeysResponse)},
        {220, 235, -1, sizeof(::signrpc::MuSig2SessionRequest)},
        {242, -1, -1, sizeof(::signrpc::MuSig2SessionResponse)},
        {256, -1, -1, sizeof(::signrpc::MuSig2RegisterNoncesRequest)},
        {266, -1, -1, sizeof(::signrpc::MuSig2RegisterNoncesResponse)},
        {275, -1, -1, sizeof(::signrpc::MuSig2SignRequest)},
        {286, -1, -1, sizeof(::signrpc::MuSig2SignResponse)},
        {295, -1, -1, sizeof(::signrpc::MuSig2CombineSigRequest)},
        {305, -1, -1, sizeof(::signrpc::MuSig2CombineSigResponse)},
        {315, -1, -1, sizeof(::signrpc::MuSig2CleanupRequest)},
        {324, -1, -1, sizeof(::signrpc::MuSig2CleanupResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::signrpc::_KeyLocator_default_instance_._instance,
    &::signrpc::_KeyDescriptor_default_instance_._instance,
    &::signrpc::_TxOut_default_instance_._instance,
    &::signrpc::_SignDescriptor_default_instance_._instance,
    &::signrpc::_SignReq_default_instance_._instance,
    &::signrpc::_SignResp_default_instance_._instance,
    &::signrpc::_InputScript_default_instance_._instance,
    &::signrpc::_InputScriptResp_default_instance_._instance,
    &::signrpc::_SignMessageReq_default_instance_._instance,
    &::signrpc::_SignMessageResp_default_instance_._instance,
    &::signrpc::_VerifyMessageReq_default_instance_._instance,
    &::signrpc::_VerifyMessageResp_default_instance_._instance,
    &::signrpc::_SharedKeyRequest_default_instance_._instance,
    &::signrpc::_SharedKeyResponse_default_instance_._instance,
    &::signrpc::_TweakDesc_default_instance_._instance,
    &::signrpc::_TaprootTweakDesc_default_instance_._instance,
    &::signrpc::_MuSig2CombineKeysRequest_default_instance_._instance,
    &::signrpc::_MuSig2CombineKeysResponse_default_instance_._instance,
    &::signrpc::_MuSig2SessionRequest_default_instance_._instance,
    &::signrpc::_MuSig2SessionResponse_default_instance_._instance,
    &::signrpc::_MuSig2RegisterNoncesRequest_default_instance_._instance,
    &::signrpc::_MuSig2RegisterNoncesResponse_default_instance_._instance,
    &::signrpc::_MuSig2SignRequest_default_instance_._instance,
    &::signrpc::_MuSig2SignResponse_default_instance_._instance,
    &::signrpc::_MuSig2CombineSigRequest_default_instance_._instance,
    &::signrpc::_MuSig2CombineSigResponse_default_instance_._instance,
    &::signrpc::_MuSig2CleanupRequest_default_instance_._instance,
    &::signrpc::_MuSig2CleanupResponse_default_instance_._instance,
};
const char descriptor_table_protodef_signer_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014signer.proto\022\007signrpc\"3\n\nKeyLocator\022\022\n"
    "\nkey_family\030\001 \001(\005\022\021\n\tkey_index\030\002 \001(\005\"L\n\r"
    "KeyDescriptor\022\025\n\rraw_key_bytes\030\001 \001(\014\022$\n\007"
    "key_loc\030\002 \001(\0132\023.signrpc.KeyLocator\")\n\005Tx"
    "Out\022\r\n\005value\030\001 \001(\003\022\021\n\tpk_script\030\002 \001(\014\"\201\002"
    "\n\016SignDescriptor\022(\n\010key_desc\030\001 \001(\0132\026.sig"
    "nrpc.KeyDescriptor\022\024\n\014single_tweak\030\002 \001(\014"
    "\022\024\n\014double_tweak\030\003 \001(\014\022\021\n\ttap_tweak\030\n \001("
    "\014\022\026\n\016witness_script\030\004 \001(\014\022\036\n\006output\030\005 \001("
    "\0132\016.signrpc.TxOut\022\017\n\007sighash\030\007 \001(\r\022\023\n\013in"
    "put_index\030\010 \001(\005\022(\n\013sign_method\030\t \001(\0162\023.s"
    "ignrpc.SignMethod\"r\n\007SignReq\022\024\n\014raw_tx_b"
    "ytes\030\001 \001(\014\022+\n\nsign_descs\030\002 \003(\0132\027.signrpc"
    ".SignDescriptor\022$\n\014prev_outputs\030\003 \003(\0132\016."
    "signrpc.TxOut\"\034\n\010SignResp\022\020\n\010raw_sigs\030\001 "
    "\003(\014\"2\n\013InputScript\022\017\n\007witness\030\001 \003(\014\022\022\n\ns"
    "ig_script\030\002 \001(\014\">\n\017InputScriptResp\022+\n\rin"
    "put_scripts\030\001 \003(\0132\024.signrpc.InputScript\""
    "\256\001\n\016SignMessageReq\022\013\n\003msg\030\001 \001(\014\022$\n\007key_l"
    "oc\030\002 \001(\0132\023.signrpc.KeyLocator\022\023\n\013double_"
    "hash\030\003 \001(\010\022\023\n\013compact_sig\030\004 \001(\010\022\023\n\013schno"
    "rr_sig\030\005 \001(\010\022\035\n\025schnorr_sig_tap_tweak\030\006 "
    "\001(\014\022\013\n\003tag\030\007 \001(\014\"$\n\017SignMessageResp\022\021\n\ts"
    "ignature\030\001 \001(\014\"g\n\020VerifyMessageReq\022\013\n\003ms"
    "g\030\001 \001(\014\022\021\n\tsignature\030\002 \001(\014\022\016\n\006pubkey\030\003 \001"
    "(\014\022\026\n\016is_schnorr_sig\030\004 \001(\010\022\013\n\003tag\030\005 \001(\014\""
    "\"\n\021VerifyMessageResp\022\r\n\005valid\030\001 \001(\010\"\200\001\n\020"
    "SharedKeyRequest\022\030\n\020ephemeral_pubkey\030\001 \001"
    "(\014\022(\n\007key_loc\030\002 \001(\0132\023.signrpc.KeyLocator"
    "B\002\030\001\022(\n\010key_desc\030\003 \001(\0132\026.signrpc.KeyDesc"
    "riptor\"\'\n\021SharedKeyResponse\022\022\n\nshared_ke"
    "y\030\001 \001(\014\"-\n\tTweakDesc\022\r\n\005tweak\030\001 \001(\014\022\021\n\ti"
    "s_x_only\030\002 \001(\010\"\?\n\020TaprootTweakDesc\022\023\n\013sc"
    "ript_root\030\001 \001(\014\022\026\n\016key_spend_only\030\002 \001(\010\""
    "\265\001\n\030MuSig2CombineKeysRequest\022\032\n\022all_sign"
    "er_pubkeys\030\001 \003(\014\022\"\n\006tweaks\030\002 \003(\0132\022.signr"
    "pc.TweakDesc\0220\n\rtaproot_tweak\030\003 \001(\0132\031.si"
    "gnrpc.TaprootTweakDesc\022\'\n\007version\030\004 \001(\0162"
    "\026.signrpc.MuSig2Version\"x\n\031MuSig2Combine"
    "KeysResponse\022\024\n\014combined_key\030\001 \001(\014\022\034\n\024ta"
    "proot_internal_key\030\002 \001(\014\022\'\n\007version\030\004 \001("
    "\0162\026.signrpc.MuSig2Version\"\235\002\n\024MuSig2Sess"
    "ionRequest\022$\n\007key_loc\030\001 \001(\0132\023.signrpc.Ke"
    "yLocator\022\032\n\022all_signer_pubkeys\030\002 \003(\014\022\"\n\032"
    "other_signer_public_nonces\030\003 \003(\014\022\"\n\006twea"
    "ks\030\004 \003(\0132\022.signrpc.TweakDesc\0220\n\rtaproot_"
    "tweak\030\005 \001(\0132\031.signrpc.TaprootTweakDesc\022\'"
    "\n\007version\030\006 \001(\0162\026.signrpc.MuSig2Version\022"
    " \n\030pregenerated_local_nonce\030\007 \001(\014\"\276\001\n\025Mu"
    "Sig2SessionResponse\022\022\n\nsession_id\030\001 \001(\014\022"
    "\024\n\014combined_key\030\002 \001(\014\022\034\n\024taproot_interna"
    "l_key\030\003 \001(\014\022\033\n\023local_public_nonces\030\004 \001(\014"
    "\022\027\n\017have_all_nonces\030\005 \001(\010\022\'\n\007version\030\006 \001"
    "(\0162\026.signrpc.MuSig2Version\"U\n\033MuSig2Regi"
    "sterNoncesRequest\022\022\n\nsession_id\030\001 \001(\014\022\"\n"
    "\032other_signer_public_nonces\030\003 \003(\014\"7\n\034MuS"
    "ig2RegisterNoncesResponse\022\027\n\017have_all_no"
    "nces\030\001 \001(\010\"P\n\021MuSig2SignRequest\022\022\n\nsessi"
    "on_id\030\001 \001(\014\022\026\n\016message_digest\030\002 \001(\014\022\017\n\007c"
    "leanup\030\003 \001(\010\"5\n\022MuSig2SignResponse\022\037\n\027lo"
    "cal_partial_signature\030\001 \001(\014\"O\n\027MuSig2Com"
    "bineSigRequest\022\022\n\nsession_id\030\001 \001(\014\022 \n\030ot"
    "her_partial_signatures\030\002 \003(\014\"P\n\030MuSig2Co"
    "mbineSigResponse\022\033\n\023have_all_signatures\030"
    "\001 \001(\010\022\027\n\017final_signature\030\002 \001(\014\"*\n\024MuSig2"
    "CleanupRequest\022\022\n\nsession_id\030\001 \001(\014\"\027\n\025Mu"
    "Sig2CleanupResponse*\234\001\n\nSignMethod\022\032\n\026SI"
    "GN_METHOD_WITNESS_V0\020\000\022)\n%SIGN_METHOD_TA"
    "PROOT_KEY_SPEND_BIP0086\020\001\022!\n\035SIGN_METHOD"
    "_TAPROOT_KEY_SPEND\020\002\022$\n SIGN_METHOD_TAPR"
    "OOT_SCRIPT_SPEND\020\003*b\n\rMuSig2Version\022\034\n\030M"
    "USIG2_VERSION_UNDEFINED\020\000\022\027\n\023MUSIG2_VERS"
    "ION_V040\020\001\022\032\n\026MUSIG2_VERSION_V100RC2\020\0022\333"
    "\006\n\006Signer\0224\n\rSignOutputRaw\022\020.signrpc.Sig"
    "nReq\032\021.signrpc.SignResp\022@\n\022ComputeInputS"
    "cript\022\020.signrpc.SignReq\032\030.signrpc.InputS"
    "criptResp\022@\n\013SignMessage\022\027.signrpc.SignM"
    "essageReq\032\030.signrpc.SignMessageResp\022F\n\rV"
    "erifyMessage\022\031.signrpc.VerifyMessageReq\032"
    "\032.signrpc.VerifyMessageResp\022H\n\017DeriveSha"
    "redKey\022\031.signrpc.SharedKeyRequest\032\032.sign"
    "rpc.SharedKeyResponse\022Z\n\021MuSig2CombineKe"
    "ys\022!.signrpc.MuSig2CombineKeysRequest\032\"."
    "signrpc.MuSig2CombineKeysResponse\022T\n\023MuS"
    "ig2CreateSession\022\035.signrpc.MuSig2Session"
    "Request\032\036.signrpc.MuSig2SessionResponse\022"
    "c\n\024MuSig2RegisterNonces\022$.signrpc.MuSig2"
    "RegisterNoncesRequest\032%.signrpc.MuSig2Re"
    "gisterNoncesResponse\022E\n\nMuSig2Sign\022\032.sig"
    "nrpc.MuSig2SignRequest\032\033.signrpc.MuSig2S"
    "ignResponse\022W\n\020MuSig2CombineSig\022 .signrp"
    "c.MuSig2CombineSigRequest\032!.signrpc.MuSi"
    "g2CombineSigResponse\022N\n\rMuSig2Cleanup\022\035."
    "signrpc.MuSig2CleanupRequest\032\036.signrpc.M"
    "uSig2CleanupResponseB/Z-github.com/light"
    "ningnetwork/lnd/lnrpc/signrpcb\006proto3"
};
static ::absl::once_flag descriptor_table_signer_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_signer_2eproto = {
    false,
    false,
    3837,
    descriptor_table_protodef_signer_2eproto,
    "signer.proto",
    &descriptor_table_signer_2eproto_once,
    nullptr,
    0,
    28,
    schemas,
    file_default_instances,
    TableStruct_signer_2eproto::offsets,
    file_level_enum_descriptors_signer_2eproto,
    file_level_service_descriptors_signer_2eproto,
};
namespace signrpc {
const ::google::protobuf::EnumDescriptor* SignMethod_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_signer_2eproto);
  return file_level_enum_descriptors_signer_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t SignMethod_internal_data_[] = {
    262144u, 0u, };
bool SignMethod_IsValid(int value) {
  return 0 <= value && value <= 3;
}
const ::google::protobuf::EnumDescriptor* MuSig2Version_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_signer_2eproto);
  return file_level_enum_descriptors_signer_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t MuSig2Version_internal_data_[] = {
    196608u, 0u, };
bool MuSig2Version_IsValid(int value) {
  return 0 <= value && value <= 2;
}
// ===================================================================

class KeyLocator::_Internal {
 public:
};

KeyLocator::KeyLocator(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.KeyLocator)
}
KeyLocator::KeyLocator(
    ::google::protobuf::Arena* arena, const KeyLocator& from)
    : KeyLocator(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE KeyLocator::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void KeyLocator::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_family_),
           0,
           offsetof(Impl_, key_index_) -
               offsetof(Impl_, key_family_) +
               sizeof(Impl_::key_index_));
}
KeyLocator::~KeyLocator() {
  // @@protoc_insertion_point(destructor:signrpc.KeyLocator)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KeyLocator::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    KeyLocator::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_KeyLocator_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &KeyLocator::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<KeyLocator>(),
            ::google::protobuf::Message::GetNewImpl<KeyLocator>(),
            ::google::protobuf::Message::GetClearImpl<KeyLocator>(), &KeyLocator::ByteSizeLong,
                &KeyLocator::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_._cached_size_),
            false,
        },
        &KeyLocator::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* KeyLocator::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> KeyLocator::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::KeyLocator>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 key_index = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyLocator, _impl_.key_index_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_.key_index_)}},
    // int32 key_family = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(KeyLocator, _impl_.key_family_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_.key_family_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 key_family = 1;
    {PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_.key_family_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 key_index = 2;
    {PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_.key_index_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void KeyLocator::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.KeyLocator)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.key_family_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.key_index_) -
      reinterpret_cast<char*>(&_impl_.key_family_)) + sizeof(_impl_.key_index_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* KeyLocator::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const KeyLocator& this_ = static_cast<const KeyLocator&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* KeyLocator::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const KeyLocator& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.KeyLocator)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 key_family = 1;
          if (this_._internal_key_family() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_key_family(), target);
          }

          // int32 key_index = 2;
          if (this_._internal_key_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_key_index(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.KeyLocator)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t KeyLocator::ByteSizeLong(const MessageLite& base) {
          const KeyLocator& this_ = static_cast<const KeyLocator&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t KeyLocator::ByteSizeLong() const {
          const KeyLocator& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.KeyLocator)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // int32 key_family = 1;
            if (this_._internal_key_family() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_key_family());
            }
            // int32 key_index = 2;
            if (this_._internal_key_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_key_index());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void KeyLocator::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KeyLocator*>(&to_msg);
  auto& from = static_cast<const KeyLocator&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.KeyLocator)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_key_family() != 0) {
    _this->_impl_.key_family_ = from._impl_.key_family_;
  }
  if (from._internal_key_index() != 0) {
    _this->_impl_.key_index_ = from._impl_.key_index_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyLocator::CopyFrom(const KeyLocator& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.KeyLocator)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KeyLocator::InternalSwap(KeyLocator* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_.key_index_)
      + sizeof(KeyLocator::_impl_.key_index_)
      - PROTOBUF_FIELD_OFFSET(KeyLocator, _impl_.key_family_)>(
          reinterpret_cast<char*>(&_impl_.key_family_),
          reinterpret_cast<char*>(&other->_impl_.key_family_));
}

::google::protobuf::Metadata KeyLocator::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class KeyDescriptor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<KeyDescriptor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_._has_bits_);
};

KeyDescriptor::KeyDescriptor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.KeyDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE KeyDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::KeyDescriptor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        raw_key_bytes_(arena, from.raw_key_bytes_) {}

KeyDescriptor::KeyDescriptor(
    ::google::protobuf::Arena* arena,
    const KeyDescriptor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  KeyDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_loc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(
                              arena, *from._impl_.key_loc_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:signrpc.KeyDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE KeyDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        raw_key_bytes_(arena) {}

inline void KeyDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_loc_ = {};
}
KeyDescriptor::~KeyDescriptor() {
  // @@protoc_insertion_point(destructor:signrpc.KeyDescriptor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void KeyDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.raw_key_bytes_.Destroy();
  delete _impl_.key_loc_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    KeyDescriptor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_KeyDescriptor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &KeyDescriptor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<KeyDescriptor>(),
            ::google::protobuf::Message::GetNewImpl<KeyDescriptor>(),
            ::google::protobuf::Message::GetClearImpl<KeyDescriptor>(), &KeyDescriptor::ByteSizeLong,
                &KeyDescriptor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_._cached_size_),
            false,
        },
        &KeyDescriptor::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* KeyDescriptor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> KeyDescriptor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::KeyDescriptor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .signrpc.KeyLocator key_loc = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_.key_loc_)}},
    // bytes raw_key_bytes = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_.raw_key_bytes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes raw_key_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_.raw_key_bytes_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .signrpc.KeyLocator key_loc = 2;
    {PROTOBUF_FIELD_OFFSET(KeyDescriptor, _impl_.key_loc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::KeyLocator>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void KeyDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.KeyDescriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.raw_key_bytes_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.key_loc_ != nullptr);
    _impl_.key_loc_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* KeyDescriptor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const KeyDescriptor& this_ = static_cast<const KeyDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* KeyDescriptor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const KeyDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.KeyDescriptor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes raw_key_bytes = 1;
          if (!this_._internal_raw_key_bytes().empty()) {
            const std::string& _s = this_._internal_raw_key_bytes();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .signrpc.KeyLocator key_loc = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.key_loc_, this_._impl_.key_loc_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.KeyDescriptor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t KeyDescriptor::ByteSizeLong(const MessageLite& base) {
          const KeyDescriptor& this_ = static_cast<const KeyDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t KeyDescriptor::ByteSizeLong() const {
          const KeyDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.KeyDescriptor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes raw_key_bytes = 1;
            if (!this_._internal_raw_key_bytes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_raw_key_bytes());
            }
          }
           {
            // .signrpc.KeyLocator key_loc = 2;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_loc_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void KeyDescriptor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<KeyDescriptor*>(&to_msg);
  auto& from = static_cast<const KeyDescriptor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.KeyDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_raw_key_bytes().empty()) {
    _this->_internal_set_raw_key_bytes(from._internal_raw_key_bytes());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.key_loc_ != nullptr);
    if (_this->_impl_.key_loc_ == nullptr) {
      _this->_impl_.key_loc_ =
          ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(arena, *from._impl_.key_loc_);
    } else {
      _this->_impl_.key_loc_->MergeFrom(*from._impl_.key_loc_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void KeyDescriptor::CopyFrom(const KeyDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.KeyDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void KeyDescriptor::InternalSwap(KeyDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.raw_key_bytes_, &other->_impl_.raw_key_bytes_, arena);
  swap(_impl_.key_loc_, other->_impl_.key_loc_);
}

::google::protobuf::Metadata KeyDescriptor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TxOut::_Internal {
 public:
};

TxOut::TxOut(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.TxOut)
}
inline PROTOBUF_NDEBUG_INLINE TxOut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::TxOut& from_msg)
      : pk_script_(arena, from.pk_script_),
        _cached_size_{0} {}

TxOut::TxOut(
    ::google::protobuf::Arena* arena,
    const TxOut& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TxOut* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.value_ = from._impl_.value_;

  // @@protoc_insertion_point(copy_constructor:signrpc.TxOut)
}
inline PROTOBUF_NDEBUG_INLINE TxOut::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : pk_script_(arena),
        _cached_size_{0} {}

inline void TxOut::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.value_ = {};
}
TxOut::~TxOut() {
  // @@protoc_insertion_point(destructor:signrpc.TxOut)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TxOut::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pk_script_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TxOut::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TxOut_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TxOut::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TxOut>(),
            ::google::protobuf::Message::GetNewImpl<TxOut>(),
            ::google::protobuf::Message::GetClearImpl<TxOut>(), &TxOut::ByteSizeLong,
                &TxOut::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TxOut, _impl_._cached_size_),
            false,
        },
        &TxOut::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TxOut::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TxOut::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::TxOut>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes pk_script = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TxOut, _impl_.pk_script_)}},
    // int64 value = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TxOut, _impl_.value_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(TxOut, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 value = 1;
    {PROTOBUF_FIELD_OFFSET(TxOut, _impl_.value_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // bytes pk_script = 2;
    {PROTOBUF_FIELD_OFFSET(TxOut, _impl_.pk_script_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TxOut::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.TxOut)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.pk_script_.ClearToEmpty();
  _impl_.value_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TxOut::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TxOut& this_ = static_cast<const TxOut&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TxOut::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TxOut& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.TxOut)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 value = 1;
          if (this_._internal_value() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_value(), target);
          }

          // bytes pk_script = 2;
          if (!this_._internal_pk_script().empty()) {
            const std::string& _s = this_._internal_pk_script();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.TxOut)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TxOut::ByteSizeLong(const MessageLite& base) {
          const TxOut& this_ = static_cast<const TxOut&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TxOut::ByteSizeLong() const {
          const TxOut& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.TxOut)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes pk_script = 2;
            if (!this_._internal_pk_script().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_pk_script());
            }
            // int64 value = 1;
            if (this_._internal_value() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_value());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TxOut::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TxOut*>(&to_msg);
  auto& from = static_cast<const TxOut&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.TxOut)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_pk_script().empty()) {
    _this->_internal_set_pk_script(from._internal_pk_script());
  }
  if (from._internal_value() != 0) {
    _this->_impl_.value_ = from._impl_.value_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TxOut::CopyFrom(const TxOut& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.TxOut)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TxOut::InternalSwap(TxOut* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pk_script_, &other->_impl_.pk_script_, arena);
        swap(_impl_.value_, other->_impl_.value_);
}

::google::protobuf::Metadata TxOut::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignDescriptor::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SignDescriptor>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_._has_bits_);
};

SignDescriptor::SignDescriptor(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SignDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE SignDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SignDescriptor& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        single_tweak_(arena, from.single_tweak_),
        double_tweak_(arena, from.double_tweak_),
        witness_script_(arena, from.witness_script_),
        tap_tweak_(arena, from.tap_tweak_) {}

SignDescriptor::SignDescriptor(
    ::google::protobuf::Arena* arena,
    const SignDescriptor& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignDescriptor* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_desc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::KeyDescriptor>(
                              arena, *from._impl_.key_desc_)
                        : nullptr;
  _impl_.output_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::TxOut>(
                              arena, *from._impl_.output_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, sighash_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, sighash_),
           offsetof(Impl_, sign_method_) -
               offsetof(Impl_, sighash_) +
               sizeof(Impl_::sign_method_));

  // @@protoc_insertion_point(copy_constructor:signrpc.SignDescriptor)
}
inline PROTOBUF_NDEBUG_INLINE SignDescriptor::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        single_tweak_(arena),
        double_tweak_(arena),
        witness_script_(arena),
        tap_tweak_(arena) {}

inline void SignDescriptor::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_desc_),
           0,
           offsetof(Impl_, sign_method_) -
               offsetof(Impl_, key_desc_) +
               sizeof(Impl_::sign_method_));
}
SignDescriptor::~SignDescriptor() {
  // @@protoc_insertion_point(destructor:signrpc.SignDescriptor)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignDescriptor::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.single_tweak_.Destroy();
  _impl_.double_tweak_.Destroy();
  _impl_.witness_script_.Destroy();
  _impl_.tap_tweak_.Destroy();
  delete _impl_.key_desc_;
  delete _impl_.output_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SignDescriptor::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SignDescriptor_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SignDescriptor::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SignDescriptor>(),
            ::google::protobuf::Message::GetNewImpl<SignDescriptor>(),
            ::google::protobuf::Message::GetClearImpl<SignDescriptor>(), &SignDescriptor::ByteSizeLong,
                &SignDescriptor::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_._cached_size_),
            false,
        },
        &SignDescriptor::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SignDescriptor::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 0, 2> SignDescriptor::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966304,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SignDescriptor>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .signrpc.KeyDescriptor key_desc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.key_desc_)}},
    // bytes single_tweak = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.single_tweak_)}},
    // bytes double_tweak = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.double_tweak_)}},
    // bytes witness_script = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.witness_script_)}},
    // .signrpc.TxOut output = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 1, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.output_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // uint32 sighash = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SignDescriptor, _impl_.sighash_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.sighash_)}},
    // int32 input_index = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SignDescriptor, _impl_.input_index_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.input_index_)}},
    // .signrpc.SignMethod sign_method = 9;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(SignDescriptor, _impl_.sign_method_), 63>(),
     {72, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.sign_method_)}},
    // bytes tap_tweak = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.tap_tweak_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .signrpc.KeyDescriptor key_desc = 1;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.key_desc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes single_tweak = 2;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.single_tweak_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes double_tweak = 3;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.double_tweak_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes witness_script = 4;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.witness_script_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .signrpc.TxOut output = 5;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.output_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // uint32 sighash = 7;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.sighash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // int32 input_index = 8;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.input_index_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .signrpc.SignMethod sign_method = 9;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.sign_method_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes tap_tweak = 10;
    {PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.tap_tweak_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::KeyDescriptor>()},
    {::_pbi::TcParser::GetTable<::signrpc::TxOut>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SignDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SignDescriptor)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.single_tweak_.ClearToEmpty();
  _impl_.double_tweak_.ClearToEmpty();
  _impl_.witness_script_.ClearToEmpty();
  _impl_.tap_tweak_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.key_desc_ != nullptr);
      _impl_.key_desc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.output_ != nullptr);
      _impl_.output_->Clear();
    }
  }
  ::memset(&_impl_.sighash_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.sign_method_) -
      reinterpret_cast<char*>(&_impl_.sighash_)) + sizeof(_impl_.sign_method_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignDescriptor::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignDescriptor& this_ = static_cast<const SignDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignDescriptor::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SignDescriptor)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .signrpc.KeyDescriptor key_desc = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.key_desc_, this_._impl_.key_desc_->GetCachedSize(), target,
                stream);
          }

          // bytes single_tweak = 2;
          if (!this_._internal_single_tweak().empty()) {
            const std::string& _s = this_._internal_single_tweak();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bytes double_tweak = 3;
          if (!this_._internal_double_tweak().empty()) {
            const std::string& _s = this_._internal_double_tweak();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes witness_script = 4;
          if (!this_._internal_witness_script().empty()) {
            const std::string& _s = this_._internal_witness_script();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // .signrpc.TxOut output = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.output_, this_._impl_.output_->GetCachedSize(), target,
                stream);
          }

          // uint32 sighash = 7;
          if (this_._internal_sighash() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                7, this_._internal_sighash(), target);
          }

          // int32 input_index = 8;
          if (this_._internal_input_index() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_input_index(), target);
          }

          // .signrpc.SignMethod sign_method = 9;
          if (this_._internal_sign_method() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                9, this_._internal_sign_method(), target);
          }

          // bytes tap_tweak = 10;
          if (!this_._internal_tap_tweak().empty()) {
            const std::string& _s = this_._internal_tap_tweak();
            target = stream->WriteBytesMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SignDescriptor)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignDescriptor::ByteSizeLong(const MessageLite& base) {
          const SignDescriptor& this_ = static_cast<const SignDescriptor&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignDescriptor::ByteSizeLong() const {
          const SignDescriptor& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SignDescriptor)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes single_tweak = 2;
            if (!this_._internal_single_tweak().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_single_tweak());
            }
            // bytes double_tweak = 3;
            if (!this_._internal_double_tweak().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_double_tweak());
            }
            // bytes witness_script = 4;
            if (!this_._internal_witness_script().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_witness_script());
            }
            // bytes tap_tweak = 10;
            if (!this_._internal_tap_tweak().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tap_tweak());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .signrpc.KeyDescriptor key_desc = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_desc_);
            }
            // .signrpc.TxOut output = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.output_);
            }
          }
           {
            // uint32 sighash = 7;
            if (this_._internal_sighash() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_sighash());
            }
            // int32 input_index = 8;
            if (this_._internal_input_index() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_input_index());
            }
            // .signrpc.SignMethod sign_method = 9;
            if (this_._internal_sign_method() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_sign_method());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignDescriptor::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignDescriptor*>(&to_msg);
  auto& from = static_cast<const SignDescriptor&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SignDescriptor)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_single_tweak().empty()) {
    _this->_internal_set_single_tweak(from._internal_single_tweak());
  }
  if (!from._internal_double_tweak().empty()) {
    _this->_internal_set_double_tweak(from._internal_double_tweak());
  }
  if (!from._internal_witness_script().empty()) {
    _this->_internal_set_witness_script(from._internal_witness_script());
  }
  if (!from._internal_tap_tweak().empty()) {
    _this->_internal_set_tap_tweak(from._internal_tap_tweak());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.key_desc_ != nullptr);
      if (_this->_impl_.key_desc_ == nullptr) {
        _this->_impl_.key_desc_ =
            ::google::protobuf::Message::CopyConstruct<::signrpc::KeyDescriptor>(arena, *from._impl_.key_desc_);
      } else {
        _this->_impl_.key_desc_->MergeFrom(*from._impl_.key_desc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.output_ != nullptr);
      if (_this->_impl_.output_ == nullptr) {
        _this->_impl_.output_ =
            ::google::protobuf::Message::CopyConstruct<::signrpc::TxOut>(arena, *from._impl_.output_);
      } else {
        _this->_impl_.output_->MergeFrom(*from._impl_.output_);
      }
    }
  }
  if (from._internal_sighash() != 0) {
    _this->_impl_.sighash_ = from._impl_.sighash_;
  }
  if (from._internal_input_index() != 0) {
    _this->_impl_.input_index_ = from._impl_.input_index_;
  }
  if (from._internal_sign_method() != 0) {
    _this->_impl_.sign_method_ = from._impl_.sign_method_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignDescriptor::CopyFrom(const SignDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SignDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignDescriptor::InternalSwap(SignDescriptor* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.single_tweak_, &other->_impl_.single_tweak_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.double_tweak_, &other->_impl_.double_tweak_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.witness_script_, &other->_impl_.witness_script_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tap_tweak_, &other->_impl_.tap_tweak_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.sign_method_)
      + sizeof(SignDescriptor::_impl_.sign_method_)
      - PROTOBUF_FIELD_OFFSET(SignDescriptor, _impl_.key_desc_)>(
          reinterpret_cast<char*>(&_impl_.key_desc_),
          reinterpret_cast<char*>(&other->_impl_.key_desc_));
}

::google::protobuf::Metadata SignDescriptor::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignReq::_Internal {
 public:
};

SignReq::SignReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SignReq)
}
inline PROTOBUF_NDEBUG_INLINE SignReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SignReq& from_msg)
      : sign_descs_{visibility, arena, from.sign_descs_},
        prev_outputs_{visibility, arena, from.prev_outputs_},
        raw_tx_bytes_(arena, from.raw_tx_bytes_),
        _cached_size_{0} {}

SignReq::SignReq(
    ::google::protobuf::Arena* arena,
    const SignReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.SignReq)
}
inline PROTOBUF_NDEBUG_INLINE SignReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : sign_descs_{visibility, arena},
        prev_outputs_{visibility, arena},
        raw_tx_bytes_(arena),
        _cached_size_{0} {}

inline void SignReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SignReq::~SignReq() {
  // @@protoc_insertion_point(destructor:signrpc.SignReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.raw_tx_bytes_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SignReq::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SignReq_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SignReq::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SignReq>(),
            ::google::protobuf::Message::GetNewImpl<SignReq>(),
            ::google::protobuf::Message::GetClearImpl<SignReq>(), &SignReq::ByteSizeLong,
                &SignReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SignReq, _impl_._cached_size_),
            false,
        },
        &SignReq::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SignReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SignReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SignReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes raw_tx_bytes = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignReq, _impl_.raw_tx_bytes_)}},
    // repeated .signrpc.SignDescriptor sign_descs = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(SignReq, _impl_.sign_descs_)}},
    // repeated .signrpc.TxOut prev_outputs = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(SignReq, _impl_.prev_outputs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes raw_tx_bytes = 1;
    {PROTOBUF_FIELD_OFFSET(SignReq, _impl_.raw_tx_bytes_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .signrpc.SignDescriptor sign_descs = 2;
    {PROTOBUF_FIELD_OFFSET(SignReq, _impl_.sign_descs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .signrpc.TxOut prev_outputs = 3;
    {PROTOBUF_FIELD_OFFSET(SignReq, _impl_.prev_outputs_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::SignDescriptor>()},
    {::_pbi::TcParser::GetTable<::signrpc::TxOut>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SignReq::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SignReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.sign_descs_.Clear();
  _impl_.prev_outputs_.Clear();
  _impl_.raw_tx_bytes_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignReq& this_ = static_cast<const SignReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SignReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes raw_tx_bytes = 1;
          if (!this_._internal_raw_tx_bytes().empty()) {
            const std::string& _s = this_._internal_raw_tx_bytes();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated .signrpc.SignDescriptor sign_descs = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_sign_descs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_sign_descs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // repeated .signrpc.TxOut prev_outputs = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_prev_outputs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_prev_outputs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SignReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignReq::ByteSizeLong(const MessageLite& base) {
          const SignReq& this_ = static_cast<const SignReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignReq::ByteSizeLong() const {
          const SignReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SignReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .signrpc.SignDescriptor sign_descs = 2;
             {
              total_size += 1UL * this_._internal_sign_descs_size();
              for (const auto& msg : this_._internal_sign_descs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // repeated .signrpc.TxOut prev_outputs = 3;
             {
              total_size += 1UL * this_._internal_prev_outputs_size();
              for (const auto& msg : this_._internal_prev_outputs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes raw_tx_bytes = 1;
            if (!this_._internal_raw_tx_bytes().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_raw_tx_bytes());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignReq*>(&to_msg);
  auto& from = static_cast<const SignReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SignReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_sign_descs()->MergeFrom(
      from._internal_sign_descs());
  _this->_internal_mutable_prev_outputs()->MergeFrom(
      from._internal_prev_outputs());
  if (!from._internal_raw_tx_bytes().empty()) {
    _this->_internal_set_raw_tx_bytes(from._internal_raw_tx_bytes());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignReq::CopyFrom(const SignReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SignReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignReq::InternalSwap(SignReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.sign_descs_.InternalSwap(&other->_impl_.sign_descs_);
  _impl_.prev_outputs_.InternalSwap(&other->_impl_.prev_outputs_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.raw_tx_bytes_, &other->_impl_.raw_tx_bytes_, arena);
}

::google::protobuf::Metadata SignReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignResp::_Internal {
 public:
};

SignResp::SignResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SignResp)
}
inline PROTOBUF_NDEBUG_INLINE SignResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SignResp& from_msg)
      : raw_sigs_{visibility, arena, from.raw_sigs_},
        _cached_size_{0} {}

SignResp::SignResp(
    ::google::protobuf::Arena* arena,
    const SignResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.SignResp)
}
inline PROTOBUF_NDEBUG_INLINE SignResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : raw_sigs_{visibility, arena},
        _cached_size_{0} {}

inline void SignResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SignResp::~SignResp() {
  // @@protoc_insertion_point(destructor:signrpc.SignResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SignResp::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SignResp_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SignResp::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SignResp>(),
            ::google::protobuf::Message::GetNewImpl<SignResp>(),
            ::google::protobuf::Message::GetClearImpl<SignResp>(), &SignResp::ByteSizeLong,
                &SignResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SignResp, _impl_._cached_size_),
            false,
        },
        &SignResp::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SignResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SignResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SignResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes raw_sigs = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignResp, _impl_.raw_sigs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes raw_sigs = 1;
    {PROTOBUF_FIELD_OFFSET(SignResp, _impl_.raw_sigs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SignResp::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SignResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.raw_sigs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignResp& this_ = static_cast<const SignResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SignResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated bytes raw_sigs = 1;
          for (int i = 0, n = this_._internal_raw_sigs_size(); i < n; ++i) {
            const auto& s = this_._internal_raw_sigs().Get(i);
            target = stream->WriteBytes(1, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SignResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignResp::ByteSizeLong(const MessageLite& base) {
          const SignResp& this_ = static_cast<const SignResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignResp::ByteSizeLong() const {
          const SignResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SignResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes raw_sigs = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_raw_sigs().size());
              for (int i = 0, n = this_._internal_raw_sigs().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_raw_sigs().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignResp*>(&to_msg);
  auto& from = static_cast<const SignResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SignResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_raw_sigs()->MergeFrom(from._internal_raw_sigs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignResp::CopyFrom(const SignResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SignResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignResp::InternalSwap(SignResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.raw_sigs_.InternalSwap(&other->_impl_.raw_sigs_);
}

::google::protobuf::Metadata SignResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InputScript::_Internal {
 public:
};

InputScript::InputScript(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.InputScript)
}
inline PROTOBUF_NDEBUG_INLINE InputScript::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::InputScript& from_msg)
      : witness_{visibility, arena, from.witness_},
        sig_script_(arena, from.sig_script_),
        _cached_size_{0} {}

InputScript::InputScript(
    ::google::protobuf::Arena* arena,
    const InputScript& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InputScript* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.InputScript)
}
inline PROTOBUF_NDEBUG_INLINE InputScript::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : witness_{visibility, arena},
        sig_script_(arena),
        _cached_size_{0} {}

inline void InputScript::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InputScript::~InputScript() {
  // @@protoc_insertion_point(destructor:signrpc.InputScript)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InputScript::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.sig_script_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InputScript::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InputScript_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InputScript::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InputScript>(),
            ::google::protobuf::Message::GetNewImpl<InputScript>(),
            ::google::protobuf::Message::GetClearImpl<InputScript>(), &InputScript::ByteSizeLong,
                &InputScript::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InputScript, _impl_._cached_size_),
            false,
        },
        &InputScript::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InputScript::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> InputScript::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::InputScript>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes sig_script = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InputScript, _impl_.sig_script_)}},
    // repeated bytes witness = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InputScript, _impl_.witness_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes witness = 1;
    {PROTOBUF_FIELD_OFFSET(InputScript, _impl_.witness_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // bytes sig_script = 2;
    {PROTOBUF_FIELD_OFFSET(InputScript, _impl_.sig_script_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void InputScript::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.InputScript)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.witness_.Clear();
  _impl_.sig_script_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InputScript::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InputScript& this_ = static_cast<const InputScript&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InputScript::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InputScript& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.InputScript)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated bytes witness = 1;
          for (int i = 0, n = this_._internal_witness_size(); i < n; ++i) {
            const auto& s = this_._internal_witness().Get(i);
            target = stream->WriteBytes(1, s, target);
          }

          // bytes sig_script = 2;
          if (!this_._internal_sig_script().empty()) {
            const std::string& _s = this_._internal_sig_script();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.InputScript)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InputScript::ByteSizeLong(const MessageLite& base) {
          const InputScript& this_ = static_cast<const InputScript&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InputScript::ByteSizeLong() const {
          const InputScript& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.InputScript)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes witness = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_witness().size());
              for (int i = 0, n = this_._internal_witness().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_witness().Get(i));
              }
            }
          }
           {
            // bytes sig_script = 2;
            if (!this_._internal_sig_script().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_sig_script());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InputScript::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InputScript*>(&to_msg);
  auto& from = static_cast<const InputScript&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.InputScript)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_witness()->MergeFrom(from._internal_witness());
  if (!from._internal_sig_script().empty()) {
    _this->_internal_set_sig_script(from._internal_sig_script());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputScript::CopyFrom(const InputScript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.InputScript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InputScript::InternalSwap(InputScript* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.witness_.InternalSwap(&other->_impl_.witness_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sig_script_, &other->_impl_.sig_script_, arena);
}

::google::protobuf::Metadata InputScript::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InputScriptResp::_Internal {
 public:
};

InputScriptResp::InputScriptResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.InputScriptResp)
}
inline PROTOBUF_NDEBUG_INLINE InputScriptResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::InputScriptResp& from_msg)
      : input_scripts_{visibility, arena, from.input_scripts_},
        _cached_size_{0} {}

InputScriptResp::InputScriptResp(
    ::google::protobuf::Arena* arena,
    const InputScriptResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InputScriptResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.InputScriptResp)
}
inline PROTOBUF_NDEBUG_INLINE InputScriptResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : input_scripts_{visibility, arena},
        _cached_size_{0} {}

inline void InputScriptResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InputScriptResp::~InputScriptResp() {
  // @@protoc_insertion_point(destructor:signrpc.InputScriptResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InputScriptResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InputScriptResp::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InputScriptResp_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InputScriptResp::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InputScriptResp>(),
            ::google::protobuf::Message::GetNewImpl<InputScriptResp>(),
            ::google::protobuf::Message::GetClearImpl<InputScriptResp>(), &InputScriptResp::ByteSizeLong,
                &InputScriptResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InputScriptResp, _impl_._cached_size_),
            false,
        },
        &InputScriptResp::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InputScriptResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> InputScriptResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::InputScriptResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .signrpc.InputScript input_scripts = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InputScriptResp, _impl_.input_scripts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .signrpc.InputScript input_scripts = 1;
    {PROTOBUF_FIELD_OFFSET(InputScriptResp, _impl_.input_scripts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::InputScript>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void InputScriptResp::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.InputScriptResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.input_scripts_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InputScriptResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InputScriptResp& this_ = static_cast<const InputScriptResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InputScriptResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InputScriptResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.InputScriptResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .signrpc.InputScript input_scripts = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_input_scripts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_input_scripts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.InputScriptResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InputScriptResp::ByteSizeLong(const MessageLite& base) {
          const InputScriptResp& this_ = static_cast<const InputScriptResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InputScriptResp::ByteSizeLong() const {
          const InputScriptResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.InputScriptResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .signrpc.InputScript input_scripts = 1;
             {
              total_size += 1UL * this_._internal_input_scripts_size();
              for (const auto& msg : this_._internal_input_scripts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InputScriptResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InputScriptResp*>(&to_msg);
  auto& from = static_cast<const InputScriptResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.InputScriptResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_input_scripts()->MergeFrom(
      from._internal_input_scripts());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InputScriptResp::CopyFrom(const InputScriptResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.InputScriptResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InputScriptResp::InternalSwap(InputScriptResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.input_scripts_.InternalSwap(&other->_impl_.input_scripts_);
}

::google::protobuf::Metadata InputScriptResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignMessageReq::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SignMessageReq>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_._has_bits_);
};

SignMessageReq::SignMessageReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SignMessageReq)
}
inline PROTOBUF_NDEBUG_INLINE SignMessageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SignMessageReq& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        msg_(arena, from.msg_),
        schnorr_sig_tap_tweak_(arena, from.schnorr_sig_tap_tweak_),
        tag_(arena, from.tag_) {}

SignMessageReq::SignMessageReq(
    ::google::protobuf::Arena* arena,
    const SignMessageReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignMessageReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_loc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(
                              arena, *from._impl_.key_loc_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, double_hash_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, double_hash_),
           offsetof(Impl_, schnorr_sig_) -
               offsetof(Impl_, double_hash_) +
               sizeof(Impl_::schnorr_sig_));

  // @@protoc_insertion_point(copy_constructor:signrpc.SignMessageReq)
}
inline PROTOBUF_NDEBUG_INLINE SignMessageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        msg_(arena),
        schnorr_sig_tap_tweak_(arena),
        tag_(arena) {}

inline void SignMessageReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_loc_),
           0,
           offsetof(Impl_, schnorr_sig_) -
               offsetof(Impl_, key_loc_) +
               sizeof(Impl_::schnorr_sig_));
}
SignMessageReq::~SignMessageReq() {
  // @@protoc_insertion_point(destructor:signrpc.SignMessageReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignMessageReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.msg_.Destroy();
  _impl_.schnorr_sig_tap_tweak_.Destroy();
  _impl_.tag_.Destroy();
  delete _impl_.key_loc_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SignMessageReq::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SignMessageReq_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SignMessageReq::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SignMessageReq>(),
            ::google::protobuf::Message::GetNewImpl<SignMessageReq>(),
            ::google::protobuf::Message::GetClearImpl<SignMessageReq>(), &SignMessageReq::ByteSizeLong,
                &SignMessageReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_._cached_size_),
            false,
        },
        &SignMessageReq::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SignMessageReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 0, 2> SignMessageReq::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SignMessageReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes msg = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.msg_)}},
    // .signrpc.KeyLocator key_loc = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.key_loc_)}},
    // bool double_hash = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SignMessageReq, _impl_.double_hash_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.double_hash_)}},
    // bool compact_sig = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SignMessageReq, _impl_.compact_sig_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.compact_sig_)}},
    // bool schnorr_sig = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SignMessageReq, _impl_.schnorr_sig_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.schnorr_sig_)}},
    // bytes schnorr_sig_tap_tweak = 6;
    {::_pbi::TcParser::FastBS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.schnorr_sig_tap_tweak_)}},
    // bytes tag = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.tag_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes msg = 1;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.msg_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .signrpc.KeyLocator key_loc = 2;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.key_loc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool double_hash = 3;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.double_hash_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool compact_sig = 4;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.compact_sig_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool schnorr_sig = 5;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.schnorr_sig_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes schnorr_sig_tap_tweak = 6;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.schnorr_sig_tap_tweak_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes tag = 7;
    {PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.tag_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::KeyLocator>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SignMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SignMessageReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.schnorr_sig_tap_tweak_.ClearToEmpty();
  _impl_.tag_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.key_loc_ != nullptr);
    _impl_.key_loc_->Clear();
  }
  ::memset(&_impl_.double_hash_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.schnorr_sig_) -
      reinterpret_cast<char*>(&_impl_.double_hash_)) + sizeof(_impl_.schnorr_sig_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignMessageReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignMessageReq& this_ = static_cast<const SignMessageReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignMessageReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignMessageReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SignMessageReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes msg = 1;
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .signrpc.KeyLocator key_loc = 2;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.key_loc_, this_._impl_.key_loc_->GetCachedSize(), target,
                stream);
          }

          // bool double_hash = 3;
          if (this_._internal_double_hash() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_double_hash(), target);
          }

          // bool compact_sig = 4;
          if (this_._internal_compact_sig() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_compact_sig(), target);
          }

          // bool schnorr_sig = 5;
          if (this_._internal_schnorr_sig() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_schnorr_sig(), target);
          }

          // bytes schnorr_sig_tap_tweak = 6;
          if (!this_._internal_schnorr_sig_tap_tweak().empty()) {
            const std::string& _s = this_._internal_schnorr_sig_tap_tweak();
            target = stream->WriteBytesMaybeAliased(6, _s, target);
          }

          // bytes tag = 7;
          if (!this_._internal_tag().empty()) {
            const std::string& _s = this_._internal_tag();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SignMessageReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignMessageReq::ByteSizeLong(const MessageLite& base) {
          const SignMessageReq& this_ = static_cast<const SignMessageReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignMessageReq::ByteSizeLong() const {
          const SignMessageReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SignMessageReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes msg = 1;
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
            // bytes schnorr_sig_tap_tweak = 6;
            if (!this_._internal_schnorr_sig_tap_tweak().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_schnorr_sig_tap_tweak());
            }
            // bytes tag = 7;
            if (!this_._internal_tag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tag());
            }
          }
           {
            // .signrpc.KeyLocator key_loc = 2;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_loc_);
            }
          }
           {
            // bool double_hash = 3;
            if (this_._internal_double_hash() != 0) {
              total_size += 2;
            }
            // bool compact_sig = 4;
            if (this_._internal_compact_sig() != 0) {
              total_size += 2;
            }
            // bool schnorr_sig = 5;
            if (this_._internal_schnorr_sig() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignMessageReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignMessageReq*>(&to_msg);
  auto& from = static_cast<const SignMessageReq&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SignMessageReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (!from._internal_schnorr_sig_tap_tweak().empty()) {
    _this->_internal_set_schnorr_sig_tap_tweak(from._internal_schnorr_sig_tap_tweak());
  }
  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.key_loc_ != nullptr);
    if (_this->_impl_.key_loc_ == nullptr) {
      _this->_impl_.key_loc_ =
          ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(arena, *from._impl_.key_loc_);
    } else {
      _this->_impl_.key_loc_->MergeFrom(*from._impl_.key_loc_);
    }
  }
  if (from._internal_double_hash() != 0) {
    _this->_impl_.double_hash_ = from._impl_.double_hash_;
  }
  if (from._internal_compact_sig() != 0) {
    _this->_impl_.compact_sig_ = from._impl_.compact_sig_;
  }
  if (from._internal_schnorr_sig() != 0) {
    _this->_impl_.schnorr_sig_ = from._impl_.schnorr_sig_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignMessageReq::CopyFrom(const SignMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SignMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignMessageReq::InternalSwap(SignMessageReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.schnorr_sig_tap_tweak_, &other->_impl_.schnorr_sig_tap_tweak_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.schnorr_sig_)
      + sizeof(SignMessageReq::_impl_.schnorr_sig_)
      - PROTOBUF_FIELD_OFFSET(SignMessageReq, _impl_.key_loc_)>(
          reinterpret_cast<char*>(&_impl_.key_loc_),
          reinterpret_cast<char*>(&other->_impl_.key_loc_));
}

::google::protobuf::Metadata SignMessageReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SignMessageResp::_Internal {
 public:
};

SignMessageResp::SignMessageResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SignMessageResp)
}
inline PROTOBUF_NDEBUG_INLINE SignMessageResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SignMessageResp& from_msg)
      : signature_(arena, from.signature_),
        _cached_size_{0} {}

SignMessageResp::SignMessageResp(
    ::google::protobuf::Arena* arena,
    const SignMessageResp& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SignMessageResp* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.SignMessageResp)
}
inline PROTOBUF_NDEBUG_INLINE SignMessageResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : signature_(arena),
        _cached_size_{0} {}

inline void SignMessageResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SignMessageResp::~SignMessageResp() {
  // @@protoc_insertion_point(destructor:signrpc.SignMessageResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SignMessageResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.signature_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SignMessageResp::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SignMessageResp_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SignMessageResp::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SignMessageResp>(),
            ::google::protobuf::Message::GetNewImpl<SignMessageResp>(),
            ::google::protobuf::Message::GetClearImpl<SignMessageResp>(), &SignMessageResp::ByteSizeLong,
                &SignMessageResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SignMessageResp, _impl_._cached_size_),
            false,
        },
        &SignMessageResp::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SignMessageResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SignMessageResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SignMessageResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes signature = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SignMessageResp, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes signature = 1;
    {PROTOBUF_FIELD_OFFSET(SignMessageResp, _impl_.signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SignMessageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SignMessageResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.signature_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SignMessageResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SignMessageResp& this_ = static_cast<const SignMessageResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SignMessageResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SignMessageResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SignMessageResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes signature = 1;
          if (!this_._internal_signature().empty()) {
            const std::string& _s = this_._internal_signature();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SignMessageResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SignMessageResp::ByteSizeLong(const MessageLite& base) {
          const SignMessageResp& this_ = static_cast<const SignMessageResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SignMessageResp::ByteSizeLong() const {
          const SignMessageResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SignMessageResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes signature = 1;
            if (!this_._internal_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_signature());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SignMessageResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SignMessageResp*>(&to_msg);
  auto& from = static_cast<const SignMessageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SignMessageResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SignMessageResp::CopyFrom(const SignMessageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SignMessageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SignMessageResp::InternalSwap(SignMessageResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
}

::google::protobuf::Metadata SignMessageResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VerifyMessageReq::_Internal {
 public:
};

VerifyMessageReq::VerifyMessageReq(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.VerifyMessageReq)
}
inline PROTOBUF_NDEBUG_INLINE VerifyMessageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::VerifyMessageReq& from_msg)
      : msg_(arena, from.msg_),
        signature_(arena, from.signature_),
        pubkey_(arena, from.pubkey_),
        tag_(arena, from.tag_),
        _cached_size_{0} {}

VerifyMessageReq::VerifyMessageReq(
    ::google::protobuf::Arena* arena,
    const VerifyMessageReq& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  VerifyMessageReq* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_schnorr_sig_ = from._impl_.is_schnorr_sig_;

  // @@protoc_insertion_point(copy_constructor:signrpc.VerifyMessageReq)
}
inline PROTOBUF_NDEBUG_INLINE VerifyMessageReq::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : msg_(arena),
        signature_(arena),
        pubkey_(arena),
        tag_(arena),
        _cached_size_{0} {}

inline void VerifyMessageReq::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_schnorr_sig_ = {};
}
VerifyMessageReq::~VerifyMessageReq() {
  // @@protoc_insertion_point(destructor:signrpc.VerifyMessageReq)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VerifyMessageReq::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.msg_.Destroy();
  _impl_.signature_.Destroy();
  _impl_.pubkey_.Destroy();
  _impl_.tag_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VerifyMessageReq::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_VerifyMessageReq_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VerifyMessageReq::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VerifyMessageReq>(),
            ::google::protobuf::Message::GetNewImpl<VerifyMessageReq>(),
            ::google::protobuf::Message::GetClearImpl<VerifyMessageReq>(), &VerifyMessageReq::ByteSizeLong,
                &VerifyMessageReq::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_._cached_size_),
            false,
        },
        &VerifyMessageReq::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VerifyMessageReq::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 0, 2> VerifyMessageReq::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::VerifyMessageReq>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes msg = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.msg_)}},
    // bytes signature = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.signature_)}},
    // bytes pubkey = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.pubkey_)}},
    // bool is_schnorr_sig = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VerifyMessageReq, _impl_.is_schnorr_sig_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.is_schnorr_sig_)}},
    // bytes tag = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.tag_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes msg = 1;
    {PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.msg_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes signature = 2;
    {PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes pubkey = 3;
    {PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.pubkey_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_schnorr_sig = 4;
    {PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.is_schnorr_sig_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes tag = 5;
    {PROTOBUF_FIELD_OFFSET(VerifyMessageReq, _impl_.tag_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VerifyMessageReq::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.VerifyMessageReq)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.msg_.ClearToEmpty();
  _impl_.signature_.ClearToEmpty();
  _impl_.pubkey_.ClearToEmpty();
  _impl_.tag_.ClearToEmpty();
  _impl_.is_schnorr_sig_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VerifyMessageReq::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VerifyMessageReq& this_ = static_cast<const VerifyMessageReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VerifyMessageReq::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VerifyMessageReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.VerifyMessageReq)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes msg = 1;
          if (!this_._internal_msg().empty()) {
            const std::string& _s = this_._internal_msg();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes signature = 2;
          if (!this_._internal_signature().empty()) {
            const std::string& _s = this_._internal_signature();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bytes pubkey = 3;
          if (!this_._internal_pubkey().empty()) {
            const std::string& _s = this_._internal_pubkey();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bool is_schnorr_sig = 4;
          if (this_._internal_is_schnorr_sig() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_is_schnorr_sig(), target);
          }

          // bytes tag = 5;
          if (!this_._internal_tag().empty()) {
            const std::string& _s = this_._internal_tag();
            target = stream->WriteBytesMaybeAliased(5, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.VerifyMessageReq)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VerifyMessageReq::ByteSizeLong(const MessageLite& base) {
          const VerifyMessageReq& this_ = static_cast<const VerifyMessageReq&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VerifyMessageReq::ByteSizeLong() const {
          const VerifyMessageReq& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.VerifyMessageReq)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes msg = 1;
            if (!this_._internal_msg().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_msg());
            }
            // bytes signature = 2;
            if (!this_._internal_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_signature());
            }
            // bytes pubkey = 3;
            if (!this_._internal_pubkey().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_pubkey());
            }
            // bytes tag = 5;
            if (!this_._internal_tag().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tag());
            }
            // bool is_schnorr_sig = 4;
            if (this_._internal_is_schnorr_sig() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VerifyMessageReq::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VerifyMessageReq*>(&to_msg);
  auto& from = static_cast<const VerifyMessageReq&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.VerifyMessageReq)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_msg().empty()) {
    _this->_internal_set_msg(from._internal_msg());
  }
  if (!from._internal_signature().empty()) {
    _this->_internal_set_signature(from._internal_signature());
  }
  if (!from._internal_pubkey().empty()) {
    _this->_internal_set_pubkey(from._internal_pubkey());
  }
  if (!from._internal_tag().empty()) {
    _this->_internal_set_tag(from._internal_tag());
  }
  if (from._internal_is_schnorr_sig() != 0) {
    _this->_impl_.is_schnorr_sig_ = from._impl_.is_schnorr_sig_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VerifyMessageReq::CopyFrom(const VerifyMessageReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.VerifyMessageReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VerifyMessageReq::InternalSwap(VerifyMessageReq* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.msg_, &other->_impl_.msg_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.signature_, &other->_impl_.signature_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pubkey_, &other->_impl_.pubkey_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tag_, &other->_impl_.tag_, arena);
        swap(_impl_.is_schnorr_sig_, other->_impl_.is_schnorr_sig_);
}

::google::protobuf::Metadata VerifyMessageReq::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class VerifyMessageResp::_Internal {
 public:
};

VerifyMessageResp::VerifyMessageResp(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.VerifyMessageResp)
}
VerifyMessageResp::VerifyMessageResp(
    ::google::protobuf::Arena* arena, const VerifyMessageResp& from)
    : VerifyMessageResp(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE VerifyMessageResp::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void VerifyMessageResp::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.valid_ = {};
}
VerifyMessageResp::~VerifyMessageResp() {
  // @@protoc_insertion_point(destructor:signrpc.VerifyMessageResp)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VerifyMessageResp::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    VerifyMessageResp::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_VerifyMessageResp_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &VerifyMessageResp::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<VerifyMessageResp>(),
            ::google::protobuf::Message::GetNewImpl<VerifyMessageResp>(),
            ::google::protobuf::Message::GetClearImpl<VerifyMessageResp>(), &VerifyMessageResp::ByteSizeLong,
                &VerifyMessageResp::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(VerifyMessageResp, _impl_._cached_size_),
            false,
        },
        &VerifyMessageResp::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* VerifyMessageResp::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> VerifyMessageResp::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::VerifyMessageResp>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool valid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(VerifyMessageResp, _impl_.valid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VerifyMessageResp, _impl_.valid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool valid = 1;
    {PROTOBUF_FIELD_OFFSET(VerifyMessageResp, _impl_.valid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void VerifyMessageResp::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.VerifyMessageResp)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.valid_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* VerifyMessageResp::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const VerifyMessageResp& this_ = static_cast<const VerifyMessageResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* VerifyMessageResp::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const VerifyMessageResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.VerifyMessageResp)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool valid = 1;
          if (this_._internal_valid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_valid(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.VerifyMessageResp)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t VerifyMessageResp::ByteSizeLong(const MessageLite& base) {
          const VerifyMessageResp& this_ = static_cast<const VerifyMessageResp&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t VerifyMessageResp::ByteSizeLong() const {
          const VerifyMessageResp& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.VerifyMessageResp)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool valid = 1;
            if (this_._internal_valid() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void VerifyMessageResp::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VerifyMessageResp*>(&to_msg);
  auto& from = static_cast<const VerifyMessageResp&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.VerifyMessageResp)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_valid() != 0) {
    _this->_impl_.valid_ = from._impl_.valid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VerifyMessageResp::CopyFrom(const VerifyMessageResp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.VerifyMessageResp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VerifyMessageResp::InternalSwap(VerifyMessageResp* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.valid_, other->_impl_.valid_);
}

::google::protobuf::Metadata VerifyMessageResp::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SharedKeyRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<SharedKeyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_._has_bits_);
};

SharedKeyRequest::SharedKeyRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SharedKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SharedKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SharedKeyRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        ephemeral_pubkey_(arena, from.ephemeral_pubkey_) {}

SharedKeyRequest::SharedKeyRequest(
    ::google::protobuf::Arena* arena,
    const SharedKeyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedKeyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_loc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(
                              arena, *from._impl_.key_loc_)
                        : nullptr;
  _impl_.key_desc_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::KeyDescriptor>(
                              arena, *from._impl_.key_desc_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:signrpc.SharedKeyRequest)
}
inline PROTOBUF_NDEBUG_INLINE SharedKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        ephemeral_pubkey_(arena) {}

inline void SharedKeyRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_loc_),
           0,
           offsetof(Impl_, key_desc_) -
               offsetof(Impl_, key_loc_) +
               sizeof(Impl_::key_desc_));
}
SharedKeyRequest::~SharedKeyRequest() {
  // @@protoc_insertion_point(destructor:signrpc.SharedKeyRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SharedKeyRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ephemeral_pubkey_.Destroy();
  delete _impl_.key_loc_;
  delete _impl_.key_desc_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SharedKeyRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SharedKeyRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SharedKeyRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SharedKeyRequest>(),
            ::google::protobuf::Message::GetNewImpl<SharedKeyRequest>(),
            ::google::protobuf::Message::GetClearImpl<SharedKeyRequest>(), &SharedKeyRequest::ByteSizeLong,
                &SharedKeyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_._cached_size_),
            false,
        },
        &SharedKeyRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SharedKeyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> SharedKeyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SharedKeyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes ephemeral_pubkey = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.ephemeral_pubkey_)}},
    // .signrpc.KeyLocator key_loc = 2 [deprecated = true];
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.key_loc_)}},
    // .signrpc.KeyDescriptor key_desc = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.key_desc_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes ephemeral_pubkey = 1;
    {PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.ephemeral_pubkey_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .signrpc.KeyLocator key_loc = 2 [deprecated = true];
    {PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.key_loc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .signrpc.KeyDescriptor key_desc = 3;
    {PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.key_desc_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::KeyLocator>()},
    {::_pbi::TcParser::GetTable<::signrpc::KeyDescriptor>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void SharedKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SharedKeyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ephemeral_pubkey_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.key_loc_ != nullptr);
      _impl_.key_loc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.key_desc_ != nullptr);
      _impl_.key_desc_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SharedKeyRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SharedKeyRequest& this_ = static_cast<const SharedKeyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SharedKeyRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SharedKeyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SharedKeyRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes ephemeral_pubkey = 1;
          if (!this_._internal_ephemeral_pubkey().empty()) {
            const std::string& _s = this_._internal_ephemeral_pubkey();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .signrpc.KeyLocator key_loc = 2 [deprecated = true];
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                2, *this_._impl_.key_loc_, this_._impl_.key_loc_->GetCachedSize(), target,
                stream);
          }

          // .signrpc.KeyDescriptor key_desc = 3;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.key_desc_, this_._impl_.key_desc_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SharedKeyRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SharedKeyRequest::ByteSizeLong(const MessageLite& base) {
          const SharedKeyRequest& this_ = static_cast<const SharedKeyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SharedKeyRequest::ByteSizeLong() const {
          const SharedKeyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SharedKeyRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes ephemeral_pubkey = 1;
            if (!this_._internal_ephemeral_pubkey().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_ephemeral_pubkey());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .signrpc.KeyLocator key_loc = 2 [deprecated = true];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_loc_);
            }
            // .signrpc.KeyDescriptor key_desc = 3;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_desc_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SharedKeyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SharedKeyRequest*>(&to_msg);
  auto& from = static_cast<const SharedKeyRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SharedKeyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ephemeral_pubkey().empty()) {
    _this->_internal_set_ephemeral_pubkey(from._internal_ephemeral_pubkey());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.key_loc_ != nullptr);
      if (_this->_impl_.key_loc_ == nullptr) {
        _this->_impl_.key_loc_ =
            ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(arena, *from._impl_.key_loc_);
      } else {
        _this->_impl_.key_loc_->MergeFrom(*from._impl_.key_loc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.key_desc_ != nullptr);
      if (_this->_impl_.key_desc_ == nullptr) {
        _this->_impl_.key_desc_ =
            ::google::protobuf::Message::CopyConstruct<::signrpc::KeyDescriptor>(arena, *from._impl_.key_desc_);
      } else {
        _this->_impl_.key_desc_->MergeFrom(*from._impl_.key_desc_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SharedKeyRequest::CopyFrom(const SharedKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SharedKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SharedKeyRequest::InternalSwap(SharedKeyRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ephemeral_pubkey_, &other->_impl_.ephemeral_pubkey_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.key_desc_)
      + sizeof(SharedKeyRequest::_impl_.key_desc_)
      - PROTOBUF_FIELD_OFFSET(SharedKeyRequest, _impl_.key_loc_)>(
          reinterpret_cast<char*>(&_impl_.key_loc_),
          reinterpret_cast<char*>(&other->_impl_.key_loc_));
}

::google::protobuf::Metadata SharedKeyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SharedKeyResponse::_Internal {
 public:
};

SharedKeyResponse::SharedKeyResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.SharedKeyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SharedKeyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::SharedKeyResponse& from_msg)
      : shared_key_(arena, from.shared_key_),
        _cached_size_{0} {}

SharedKeyResponse::SharedKeyResponse(
    ::google::protobuf::Arena* arena,
    const SharedKeyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedKeyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.SharedKeyResponse)
}
inline PROTOBUF_NDEBUG_INLINE SharedKeyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : shared_key_(arena),
        _cached_size_{0} {}

inline void SharedKeyResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SharedKeyResponse::~SharedKeyResponse() {
  // @@protoc_insertion_point(destructor:signrpc.SharedKeyResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void SharedKeyResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.shared_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    SharedKeyResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_SharedKeyResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &SharedKeyResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<SharedKeyResponse>(),
            ::google::protobuf::Message::GetNewImpl<SharedKeyResponse>(),
            ::google::protobuf::Message::GetClearImpl<SharedKeyResponse>(), &SharedKeyResponse::ByteSizeLong,
                &SharedKeyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(SharedKeyResponse, _impl_._cached_size_),
            false,
        },
        &SharedKeyResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* SharedKeyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> SharedKeyResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::SharedKeyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes shared_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(SharedKeyResponse, _impl_.shared_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes shared_key = 1;
    {PROTOBUF_FIELD_OFFSET(SharedKeyResponse, _impl_.shared_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void SharedKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.SharedKeyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.shared_key_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* SharedKeyResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const SharedKeyResponse& this_ = static_cast<const SharedKeyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* SharedKeyResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const SharedKeyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.SharedKeyResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes shared_key = 1;
          if (!this_._internal_shared_key().empty()) {
            const std::string& _s = this_._internal_shared_key();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.SharedKeyResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t SharedKeyResponse::ByteSizeLong(const MessageLite& base) {
          const SharedKeyResponse& this_ = static_cast<const SharedKeyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t SharedKeyResponse::ByteSizeLong() const {
          const SharedKeyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.SharedKeyResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes shared_key = 1;
            if (!this_._internal_shared_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_shared_key());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void SharedKeyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SharedKeyResponse*>(&to_msg);
  auto& from = static_cast<const SharedKeyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.SharedKeyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_shared_key().empty()) {
    _this->_internal_set_shared_key(from._internal_shared_key());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SharedKeyResponse::CopyFrom(const SharedKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.SharedKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SharedKeyResponse::InternalSwap(SharedKeyResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.shared_key_, &other->_impl_.shared_key_, arena);
}

::google::protobuf::Metadata SharedKeyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TweakDesc::_Internal {
 public:
};

TweakDesc::TweakDesc(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.TweakDesc)
}
inline PROTOBUF_NDEBUG_INLINE TweakDesc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::TweakDesc& from_msg)
      : tweak_(arena, from.tweak_),
        _cached_size_{0} {}

TweakDesc::TweakDesc(
    ::google::protobuf::Arena* arena,
    const TweakDesc& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TweakDesc* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.is_x_only_ = from._impl_.is_x_only_;

  // @@protoc_insertion_point(copy_constructor:signrpc.TweakDesc)
}
inline PROTOBUF_NDEBUG_INLINE TweakDesc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tweak_(arena),
        _cached_size_{0} {}

inline void TweakDesc::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.is_x_only_ = {};
}
TweakDesc::~TweakDesc() {
  // @@protoc_insertion_point(destructor:signrpc.TweakDesc)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TweakDesc::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tweak_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TweakDesc::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TweakDesc_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TweakDesc::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TweakDesc>(),
            ::google::protobuf::Message::GetNewImpl<TweakDesc>(),
            ::google::protobuf::Message::GetClearImpl<TweakDesc>(), &TweakDesc::ByteSizeLong,
                &TweakDesc::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TweakDesc, _impl_._cached_size_),
            false,
        },
        &TweakDesc::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TweakDesc::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TweakDesc::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::TweakDesc>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool is_x_only = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TweakDesc, _impl_.is_x_only_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TweakDesc, _impl_.is_x_only_)}},
    // bytes tweak = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TweakDesc, _impl_.tweak_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes tweak = 1;
    {PROTOBUF_FIELD_OFFSET(TweakDesc, _impl_.tweak_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool is_x_only = 2;
    {PROTOBUF_FIELD_OFFSET(TweakDesc, _impl_.is_x_only_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TweakDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.TweakDesc)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tweak_.ClearToEmpty();
  _impl_.is_x_only_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TweakDesc::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TweakDesc& this_ = static_cast<const TweakDesc&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TweakDesc::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TweakDesc& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.TweakDesc)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes tweak = 1;
          if (!this_._internal_tweak().empty()) {
            const std::string& _s = this_._internal_tweak();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bool is_x_only = 2;
          if (this_._internal_is_x_only() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_is_x_only(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.TweakDesc)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TweakDesc::ByteSizeLong(const MessageLite& base) {
          const TweakDesc& this_ = static_cast<const TweakDesc&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TweakDesc::ByteSizeLong() const {
          const TweakDesc& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.TweakDesc)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes tweak = 1;
            if (!this_._internal_tweak().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_tweak());
            }
            // bool is_x_only = 2;
            if (this_._internal_is_x_only() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TweakDesc::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TweakDesc*>(&to_msg);
  auto& from = static_cast<const TweakDesc&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.TweakDesc)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tweak().empty()) {
    _this->_internal_set_tweak(from._internal_tweak());
  }
  if (from._internal_is_x_only() != 0) {
    _this->_impl_.is_x_only_ = from._impl_.is_x_only_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TweakDesc::CopyFrom(const TweakDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.TweakDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TweakDesc::InternalSwap(TweakDesc* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tweak_, &other->_impl_.tweak_, arena);
        swap(_impl_.is_x_only_, other->_impl_.is_x_only_);
}

::google::protobuf::Metadata TweakDesc::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaprootTweakDesc::_Internal {
 public:
};

TaprootTweakDesc::TaprootTweakDesc(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.TaprootTweakDesc)
}
inline PROTOBUF_NDEBUG_INLINE TaprootTweakDesc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::TaprootTweakDesc& from_msg)
      : script_root_(arena, from.script_root_),
        _cached_size_{0} {}

TaprootTweakDesc::TaprootTweakDesc(
    ::google::protobuf::Arena* arena,
    const TaprootTweakDesc& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaprootTweakDesc* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.key_spend_only_ = from._impl_.key_spend_only_;

  // @@protoc_insertion_point(copy_constructor:signrpc.TaprootTweakDesc)
}
inline PROTOBUF_NDEBUG_INLINE TaprootTweakDesc::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : script_root_(arena),
        _cached_size_{0} {}

inline void TaprootTweakDesc::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.key_spend_only_ = {};
}
TaprootTweakDesc::~TaprootTweakDesc() {
  // @@protoc_insertion_point(destructor:signrpc.TaprootTweakDesc)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaprootTweakDesc::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.script_root_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TaprootTweakDesc::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TaprootTweakDesc_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TaprootTweakDesc::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TaprootTweakDesc>(),
            ::google::protobuf::Message::GetNewImpl<TaprootTweakDesc>(),
            ::google::protobuf::Message::GetClearImpl<TaprootTweakDesc>(), &TaprootTweakDesc::ByteSizeLong,
                &TaprootTweakDesc::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TaprootTweakDesc, _impl_._cached_size_),
            false,
        },
        &TaprootTweakDesc::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TaprootTweakDesc::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> TaprootTweakDesc::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::TaprootTweakDesc>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool key_spend_only = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(TaprootTweakDesc, _impl_.key_spend_only_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(TaprootTweakDesc, _impl_.key_spend_only_)}},
    // bytes script_root = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaprootTweakDesc, _impl_.script_root_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes script_root = 1;
    {PROTOBUF_FIELD_OFFSET(TaprootTweakDesc, _impl_.script_root_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool key_spend_only = 2;
    {PROTOBUF_FIELD_OFFSET(TaprootTweakDesc, _impl_.key_spend_only_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void TaprootTweakDesc::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.TaprootTweakDesc)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.script_root_.ClearToEmpty();
  _impl_.key_spend_only_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaprootTweakDesc::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaprootTweakDesc& this_ = static_cast<const TaprootTweakDesc&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaprootTweakDesc::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaprootTweakDesc& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.TaprootTweakDesc)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes script_root = 1;
          if (!this_._internal_script_root().empty()) {
            const std::string& _s = this_._internal_script_root();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bool key_spend_only = 2;
          if (this_._internal_key_spend_only() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                2, this_._internal_key_spend_only(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.TaprootTweakDesc)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaprootTweakDesc::ByteSizeLong(const MessageLite& base) {
          const TaprootTweakDesc& this_ = static_cast<const TaprootTweakDesc&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaprootTweakDesc::ByteSizeLong() const {
          const TaprootTweakDesc& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.TaprootTweakDesc)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes script_root = 1;
            if (!this_._internal_script_root().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_script_root());
            }
            // bool key_spend_only = 2;
            if (this_._internal_key_spend_only() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaprootTweakDesc::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaprootTweakDesc*>(&to_msg);
  auto& from = static_cast<const TaprootTweakDesc&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.TaprootTweakDesc)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_script_root().empty()) {
    _this->_internal_set_script_root(from._internal_script_root());
  }
  if (from._internal_key_spend_only() != 0) {
    _this->_impl_.key_spend_only_ = from._impl_.key_spend_only_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaprootTweakDesc::CopyFrom(const TaprootTweakDesc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.TaprootTweakDesc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaprootTweakDesc::InternalSwap(TaprootTweakDesc* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.script_root_, &other->_impl_.script_root_, arena);
        swap(_impl_.key_spend_only_, other->_impl_.key_spend_only_);
}

::google::protobuf::Metadata TaprootTweakDesc::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2CombineKeysRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MuSig2CombineKeysRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_._has_bits_);
};

MuSig2CombineKeysRequest::MuSig2CombineKeysRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2CombineKeysRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineKeysRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2CombineKeysRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        all_signer_pubkeys_{visibility, arena, from.all_signer_pubkeys_},
        tweaks_{visibility, arena, from.tweaks_} {}

MuSig2CombineKeysRequest::MuSig2CombineKeysRequest(
    ::google::protobuf::Arena* arena,
    const MuSig2CombineKeysRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2CombineKeysRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.taproot_tweak_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::TaprootTweakDesc>(
                              arena, *from._impl_.taproot_tweak_)
                        : nullptr;
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2CombineKeysRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineKeysRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        all_signer_pubkeys_{visibility, arena},
        tweaks_{visibility, arena} {}

inline void MuSig2CombineKeysRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, taproot_tweak_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, taproot_tweak_) +
               sizeof(Impl_::version_));
}
MuSig2CombineKeysRequest::~MuSig2CombineKeysRequest() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2CombineKeysRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2CombineKeysRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.taproot_tweak_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2CombineKeysRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2CombineKeysRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2CombineKeysRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2CombineKeysRequest>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2CombineKeysRequest>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2CombineKeysRequest>(), &MuSig2CombineKeysRequest::ByteSizeLong,
                &MuSig2CombineKeysRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_._cached_size_),
            false,
        },
        &MuSig2CombineKeysRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2CombineKeysRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 0, 2> MuSig2CombineKeysRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2CombineKeysRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .signrpc.MuSig2Version version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MuSig2CombineKeysRequest, _impl_.version_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.version_)}},
    // repeated bytes all_signer_pubkeys = 1;
    {::_pbi::TcParser::FastBR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.all_signer_pubkeys_)}},
    // repeated .signrpc.TweakDesc tweaks = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.tweaks_)}},
    // .signrpc.TaprootTweakDesc taproot_tweak = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.taproot_tweak_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated bytes all_signer_pubkeys = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.all_signer_pubkeys_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .signrpc.TweakDesc tweaks = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.tweaks_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .signrpc.TaprootTweakDesc taproot_tweak = 3;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.taproot_tweak_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .signrpc.MuSig2Version version = 4;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::TweakDesc>()},
    {::_pbi::TcParser::GetTable<::signrpc::TaprootTweakDesc>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MuSig2CombineKeysRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2CombineKeysRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.all_signer_pubkeys_.Clear();
  _impl_.tweaks_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.taproot_tweak_ != nullptr);
    _impl_.taproot_tweak_->Clear();
  }
  _impl_.version_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2CombineKeysRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2CombineKeysRequest& this_ = static_cast<const MuSig2CombineKeysRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2CombineKeysRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2CombineKeysRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2CombineKeysRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated bytes all_signer_pubkeys = 1;
          for (int i = 0, n = this_._internal_all_signer_pubkeys_size(); i < n; ++i) {
            const auto& s = this_._internal_all_signer_pubkeys().Get(i);
            target = stream->WriteBytes(1, s, target);
          }

          // repeated .signrpc.TweakDesc tweaks = 2;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tweaks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tweaks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    2, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .signrpc.TaprootTweakDesc taproot_tweak = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.taproot_tweak_, this_._impl_.taproot_tweak_->GetCachedSize(), target,
                stream);
          }

          // .signrpc.MuSig2Version version = 4;
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_version(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2CombineKeysRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2CombineKeysRequest::ByteSizeLong(const MessageLite& base) {
          const MuSig2CombineKeysRequest& this_ = static_cast<const MuSig2CombineKeysRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2CombineKeysRequest::ByteSizeLong() const {
          const MuSig2CombineKeysRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2CombineKeysRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes all_signer_pubkeys = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_all_signer_pubkeys().size());
              for (int i = 0, n = this_._internal_all_signer_pubkeys().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_all_signer_pubkeys().Get(i));
              }
            }
            // repeated .signrpc.TweakDesc tweaks = 2;
             {
              total_size += 1UL * this_._internal_tweaks_size();
              for (const auto& msg : this_._internal_tweaks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // .signrpc.TaprootTweakDesc taproot_tweak = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.taproot_tweak_);
            }
          }
           {
            // .signrpc.MuSig2Version version = 4;
            if (this_._internal_version() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2CombineKeysRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2CombineKeysRequest*>(&to_msg);
  auto& from = static_cast<const MuSig2CombineKeysRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2CombineKeysRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_all_signer_pubkeys()->MergeFrom(from._internal_all_signer_pubkeys());
  _this->_internal_mutable_tweaks()->MergeFrom(
      from._internal_tweaks());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.taproot_tweak_ != nullptr);
    if (_this->_impl_.taproot_tweak_ == nullptr) {
      _this->_impl_.taproot_tweak_ =
          ::google::protobuf::Message::CopyConstruct<::signrpc::TaprootTweakDesc>(arena, *from._impl_.taproot_tweak_);
    } else {
      _this->_impl_.taproot_tweak_->MergeFrom(*from._impl_.taproot_tweak_);
    }
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2CombineKeysRequest::CopyFrom(const MuSig2CombineKeysRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2CombineKeysRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2CombineKeysRequest::InternalSwap(MuSig2CombineKeysRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.all_signer_pubkeys_.InternalSwap(&other->_impl_.all_signer_pubkeys_);
  _impl_.tweaks_.InternalSwap(&other->_impl_.tweaks_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.version_)
      + sizeof(MuSig2CombineKeysRequest::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysRequest, _impl_.taproot_tweak_)>(
          reinterpret_cast<char*>(&_impl_.taproot_tweak_),
          reinterpret_cast<char*>(&other->_impl_.taproot_tweak_));
}

::google::protobuf::Metadata MuSig2CombineKeysRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2CombineKeysResponse::_Internal {
 public:
};

MuSig2CombineKeysResponse::MuSig2CombineKeysResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2CombineKeysResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineKeysResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2CombineKeysResponse& from_msg)
      : combined_key_(arena, from.combined_key_),
        taproot_internal_key_(arena, from.taproot_internal_key_),
        _cached_size_{0} {}

MuSig2CombineKeysResponse::MuSig2CombineKeysResponse(
    ::google::protobuf::Arena* arena,
    const MuSig2CombineKeysResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2CombineKeysResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2CombineKeysResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineKeysResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : combined_key_(arena),
        taproot_internal_key_(arena),
        _cached_size_{0} {}

inline void MuSig2CombineKeysResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.version_ = {};
}
MuSig2CombineKeysResponse::~MuSig2CombineKeysResponse() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2CombineKeysResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2CombineKeysResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.combined_key_.Destroy();
  _impl_.taproot_internal_key_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2CombineKeysResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2CombineKeysResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2CombineKeysResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2CombineKeysResponse>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2CombineKeysResponse>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2CombineKeysResponse>(), &MuSig2CombineKeysResponse::ByteSizeLong,
                &MuSig2CombineKeysResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_._cached_size_),
            false,
        },
        &MuSig2CombineKeysResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2CombineKeysResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MuSig2CombineKeysResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967284,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2CombineKeysResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .signrpc.MuSig2Version version = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MuSig2CombineKeysResponse, _impl_.version_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_.version_)}},
    // bytes combined_key = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_.combined_key_)}},
    // bytes taproot_internal_key = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_.taproot_internal_key_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes combined_key = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_.combined_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes taproot_internal_key = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_.taproot_internal_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // .signrpc.MuSig2Version version = 4;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineKeysResponse, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2CombineKeysResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2CombineKeysResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.combined_key_.ClearToEmpty();
  _impl_.taproot_internal_key_.ClearToEmpty();
  _impl_.version_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2CombineKeysResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2CombineKeysResponse& this_ = static_cast<const MuSig2CombineKeysResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2CombineKeysResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2CombineKeysResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2CombineKeysResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes combined_key = 1;
          if (!this_._internal_combined_key().empty()) {
            const std::string& _s = this_._internal_combined_key();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes taproot_internal_key = 2;
          if (!this_._internal_taproot_internal_key().empty()) {
            const std::string& _s = this_._internal_taproot_internal_key();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // .signrpc.MuSig2Version version = 4;
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                4, this_._internal_version(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2CombineKeysResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2CombineKeysResponse::ByteSizeLong(const MessageLite& base) {
          const MuSig2CombineKeysResponse& this_ = static_cast<const MuSig2CombineKeysResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2CombineKeysResponse::ByteSizeLong() const {
          const MuSig2CombineKeysResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2CombineKeysResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes combined_key = 1;
            if (!this_._internal_combined_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_combined_key());
            }
            // bytes taproot_internal_key = 2;
            if (!this_._internal_taproot_internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_taproot_internal_key());
            }
            // .signrpc.MuSig2Version version = 4;
            if (this_._internal_version() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2CombineKeysResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2CombineKeysResponse*>(&to_msg);
  auto& from = static_cast<const MuSig2CombineKeysResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2CombineKeysResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_combined_key().empty()) {
    _this->_internal_set_combined_key(from._internal_combined_key());
  }
  if (!from._internal_taproot_internal_key().empty()) {
    _this->_internal_set_taproot_internal_key(from._internal_taproot_internal_key());
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2CombineKeysResponse::CopyFrom(const MuSig2CombineKeysResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2CombineKeysResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2CombineKeysResponse::InternalSwap(MuSig2CombineKeysResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.combined_key_, &other->_impl_.combined_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taproot_internal_key_, &other->_impl_.taproot_internal_key_, arena);
  swap(_impl_.version_, other->_impl_.version_);
}

::google::protobuf::Metadata MuSig2CombineKeysResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2SessionRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<MuSig2SessionRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_._has_bits_);
};

MuSig2SessionRequest::MuSig2SessionRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2SessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2SessionRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        all_signer_pubkeys_{visibility, arena, from.all_signer_pubkeys_},
        other_signer_public_nonces_{visibility, arena, from.other_signer_public_nonces_},
        tweaks_{visibility, arena, from.tweaks_},
        pregenerated_local_nonce_(arena, from.pregenerated_local_nonce_) {}

MuSig2SessionRequest::MuSig2SessionRequest(
    ::google::protobuf::Arena* arena,
    const MuSig2SessionRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2SessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_loc_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(
                              arena, *from._impl_.key_loc_)
                        : nullptr;
  _impl_.taproot_tweak_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::signrpc::TaprootTweakDesc>(
                              arena, *from._impl_.taproot_tweak_)
                        : nullptr;
  _impl_.version_ = from._impl_.version_;

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2SessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        all_signer_pubkeys_{visibility, arena},
        other_signer_public_nonces_{visibility, arena},
        tweaks_{visibility, arena},
        pregenerated_local_nonce_(arena) {}

inline void MuSig2SessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_loc_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, key_loc_) +
               sizeof(Impl_::version_));
}
MuSig2SessionRequest::~MuSig2SessionRequest() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2SessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2SessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.pregenerated_local_nonce_.Destroy();
  delete _impl_.key_loc_;
  delete _impl_.taproot_tweak_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2SessionRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2SessionRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2SessionRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2SessionRequest>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2SessionRequest>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2SessionRequest>(), &MuSig2SessionRequest::ByteSizeLong,
                &MuSig2SessionRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_._cached_size_),
            false,
        },
        &MuSig2SessionRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2SessionRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 3, 0, 2> MuSig2SessionRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2SessionRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .signrpc.KeyLocator key_loc = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.key_loc_)}},
    // repeated bytes all_signer_pubkeys = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.all_signer_pubkeys_)}},
    // repeated bytes other_signer_public_nonces = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.other_signer_public_nonces_)}},
    // repeated .signrpc.TweakDesc tweaks = 4;
    {::_pbi::TcParser::FastMtR1,
     {34, 63, 1, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.tweaks_)}},
    // .signrpc.TaprootTweakDesc taproot_tweak = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 1, 2, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.taproot_tweak_)}},
    // .signrpc.MuSig2Version version = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MuSig2SessionRequest, _impl_.version_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.version_)}},
    // bytes pregenerated_local_nonce = 7;
    {::_pbi::TcParser::FastBS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.pregenerated_local_nonce_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .signrpc.KeyLocator key_loc = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.key_loc_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated bytes all_signer_pubkeys = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.all_signer_pubkeys_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated bytes other_signer_public_nonces = 3;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.other_signer_public_nonces_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
    // repeated .signrpc.TweakDesc tweaks = 4;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.tweaks_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .signrpc.TaprootTweakDesc taproot_tweak = 5;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.taproot_tweak_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .signrpc.MuSig2Version version = 6;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.version_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // bytes pregenerated_local_nonce = 7;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.pregenerated_local_nonce_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::signrpc::KeyLocator>()},
    {::_pbi::TcParser::GetTable<::signrpc::TweakDesc>()},
    {::_pbi::TcParser::GetTable<::signrpc::TaprootTweakDesc>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void MuSig2SessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2SessionRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.all_signer_pubkeys_.Clear();
  _impl_.other_signer_public_nonces_.Clear();
  _impl_.tweaks_.Clear();
  _impl_.pregenerated_local_nonce_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.key_loc_ != nullptr);
      _impl_.key_loc_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.taproot_tweak_ != nullptr);
      _impl_.taproot_tweak_->Clear();
    }
  }
  _impl_.version_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2SessionRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2SessionRequest& this_ = static_cast<const MuSig2SessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2SessionRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2SessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2SessionRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .signrpc.KeyLocator key_loc = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.key_loc_, this_._impl_.key_loc_->GetCachedSize(), target,
                stream);
          }

          // repeated bytes all_signer_pubkeys = 2;
          for (int i = 0, n = this_._internal_all_signer_pubkeys_size(); i < n; ++i) {
            const auto& s = this_._internal_all_signer_pubkeys().Get(i);
            target = stream->WriteBytes(2, s, target);
          }

          // repeated bytes other_signer_public_nonces = 3;
          for (int i = 0, n = this_._internal_other_signer_public_nonces_size(); i < n; ++i) {
            const auto& s = this_._internal_other_signer_public_nonces().Get(i);
            target = stream->WriteBytes(3, s, target);
          }

          // repeated .signrpc.TweakDesc tweaks = 4;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_tweaks_size());
               i < n; i++) {
            const auto& repfield = this_._internal_tweaks().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    4, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // .signrpc.TaprootTweakDesc taproot_tweak = 5;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.taproot_tweak_, this_._impl_.taproot_tweak_->GetCachedSize(), target,
                stream);
          }

          // .signrpc.MuSig2Version version = 6;
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_version(), target);
          }

          // bytes pregenerated_local_nonce = 7;
          if (!this_._internal_pregenerated_local_nonce().empty()) {
            const std::string& _s = this_._internal_pregenerated_local_nonce();
            target = stream->WriteBytesMaybeAliased(7, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2SessionRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2SessionRequest::ByteSizeLong(const MessageLite& base) {
          const MuSig2SessionRequest& this_ = static_cast<const MuSig2SessionRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2SessionRequest::ByteSizeLong() const {
          const MuSig2SessionRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2SessionRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes all_signer_pubkeys = 2;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_all_signer_pubkeys().size());
              for (int i = 0, n = this_._internal_all_signer_pubkeys().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_all_signer_pubkeys().Get(i));
              }
            }
            // repeated bytes other_signer_public_nonces = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_other_signer_public_nonces().size());
              for (int i = 0, n = this_._internal_other_signer_public_nonces().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_other_signer_public_nonces().Get(i));
              }
            }
            // repeated .signrpc.TweakDesc tweaks = 4;
             {
              total_size += 1UL * this_._internal_tweaks_size();
              for (const auto& msg : this_._internal_tweaks()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes pregenerated_local_nonce = 7;
            if (!this_._internal_pregenerated_local_nonce().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_pregenerated_local_nonce());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .signrpc.KeyLocator key_loc = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_loc_);
            }
            // .signrpc.TaprootTweakDesc taproot_tweak = 5;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.taproot_tweak_);
            }
          }
           {
            // .signrpc.MuSig2Version version = 6;
            if (this_._internal_version() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2SessionRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2SessionRequest*>(&to_msg);
  auto& from = static_cast<const MuSig2SessionRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2SessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_all_signer_pubkeys()->MergeFrom(from._internal_all_signer_pubkeys());
  _this->_internal_mutable_other_signer_public_nonces()->MergeFrom(from._internal_other_signer_public_nonces());
  _this->_internal_mutable_tweaks()->MergeFrom(
      from._internal_tweaks());
  if (!from._internal_pregenerated_local_nonce().empty()) {
    _this->_internal_set_pregenerated_local_nonce(from._internal_pregenerated_local_nonce());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.key_loc_ != nullptr);
      if (_this->_impl_.key_loc_ == nullptr) {
        _this->_impl_.key_loc_ =
            ::google::protobuf::Message::CopyConstruct<::signrpc::KeyLocator>(arena, *from._impl_.key_loc_);
      } else {
        _this->_impl_.key_loc_->MergeFrom(*from._impl_.key_loc_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.taproot_tweak_ != nullptr);
      if (_this->_impl_.taproot_tweak_ == nullptr) {
        _this->_impl_.taproot_tweak_ =
            ::google::protobuf::Message::CopyConstruct<::signrpc::TaprootTweakDesc>(arena, *from._impl_.taproot_tweak_);
      } else {
        _this->_impl_.taproot_tweak_->MergeFrom(*from._impl_.taproot_tweak_);
      }
    }
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2SessionRequest::CopyFrom(const MuSig2SessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2SessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2SessionRequest::InternalSwap(MuSig2SessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.all_signer_pubkeys_.InternalSwap(&other->_impl_.all_signer_pubkeys_);
  _impl_.other_signer_public_nonces_.InternalSwap(&other->_impl_.other_signer_public_nonces_);
  _impl_.tweaks_.InternalSwap(&other->_impl_.tweaks_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pregenerated_local_nonce_, &other->_impl_.pregenerated_local_nonce_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.version_)
      + sizeof(MuSig2SessionRequest::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(MuSig2SessionRequest, _impl_.key_loc_)>(
          reinterpret_cast<char*>(&_impl_.key_loc_),
          reinterpret_cast<char*>(&other->_impl_.key_loc_));
}

::google::protobuf::Metadata MuSig2SessionRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2SessionResponse::_Internal {
 public:
};

MuSig2SessionResponse::MuSig2SessionResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2SessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2SessionResponse& from_msg)
      : session_id_(arena, from.session_id_),
        combined_key_(arena, from.combined_key_),
        taproot_internal_key_(arena, from.taproot_internal_key_),
        local_public_nonces_(arena, from.local_public_nonces_),
        _cached_size_{0} {}

MuSig2SessionResponse::MuSig2SessionResponse(
    ::google::protobuf::Arena* arena,
    const MuSig2SessionResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2SessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, have_all_nonces_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, have_all_nonces_),
           offsetof(Impl_, version_) -
               offsetof(Impl_, have_all_nonces_) +
               sizeof(Impl_::version_));

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2SessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_id_(arena),
        combined_key_(arena),
        taproot_internal_key_(arena),
        local_public_nonces_(arena),
        _cached_size_{0} {}

inline void MuSig2SessionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, have_all_nonces_),
           0,
           offsetof(Impl_, version_) -
               offsetof(Impl_, have_all_nonces_) +
               sizeof(Impl_::version_));
}
MuSig2SessionResponse::~MuSig2SessionResponse() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2SessionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2SessionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_id_.Destroy();
  _impl_.combined_key_.Destroy();
  _impl_.taproot_internal_key_.Destroy();
  _impl_.local_public_nonces_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2SessionResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2SessionResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2SessionResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2SessionResponse>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2SessionResponse>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2SessionResponse>(), &MuSig2SessionResponse::ByteSizeLong,
                &MuSig2SessionResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_._cached_size_),
            false,
        },
        &MuSig2SessionResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2SessionResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 0, 2> MuSig2SessionResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2SessionResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes session_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.session_id_)}},
    // bytes combined_key = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.combined_key_)}},
    // bytes taproot_internal_key = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.taproot_internal_key_)}},
    // bytes local_public_nonces = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.local_public_nonces_)}},
    // bool have_all_nonces = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MuSig2SessionResponse, _impl_.have_all_nonces_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.have_all_nonces_)}},
    // .signrpc.MuSig2Version version = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(MuSig2SessionResponse, _impl_.version_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.version_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes session_id = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes combined_key = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.combined_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes taproot_internal_key = 3;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.taproot_internal_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes local_public_nonces = 4;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.local_public_nonces_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool have_all_nonces = 5;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.have_all_nonces_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // .signrpc.MuSig2Version version = 6;
    {PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.version_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2SessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2SessionResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  _impl_.combined_key_.ClearToEmpty();
  _impl_.taproot_internal_key_.ClearToEmpty();
  _impl_.local_public_nonces_.ClearToEmpty();
  ::memset(&_impl_.have_all_nonces_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.version_) -
      reinterpret_cast<char*>(&_impl_.have_all_nonces_)) + sizeof(_impl_.version_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2SessionResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2SessionResponse& this_ = static_cast<const MuSig2SessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2SessionResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2SessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2SessionResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes session_id = 1;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes combined_key = 2;
          if (!this_._internal_combined_key().empty()) {
            const std::string& _s = this_._internal_combined_key();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bytes taproot_internal_key = 3;
          if (!this_._internal_taproot_internal_key().empty()) {
            const std::string& _s = this_._internal_taproot_internal_key();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // bytes local_public_nonces = 4;
          if (!this_._internal_local_public_nonces().empty()) {
            const std::string& _s = this_._internal_local_public_nonces();
            target = stream->WriteBytesMaybeAliased(4, _s, target);
          }

          // bool have_all_nonces = 5;
          if (this_._internal_have_all_nonces() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                5, this_._internal_have_all_nonces(), target);
          }

          // .signrpc.MuSig2Version version = 6;
          if (this_._internal_version() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                6, this_._internal_version(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2SessionResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2SessionResponse::ByteSizeLong(const MessageLite& base) {
          const MuSig2SessionResponse& this_ = static_cast<const MuSig2SessionResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2SessionResponse::ByteSizeLong() const {
          const MuSig2SessionResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2SessionResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes session_id = 1;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_session_id());
            }
            // bytes combined_key = 2;
            if (!this_._internal_combined_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_combined_key());
            }
            // bytes taproot_internal_key = 3;
            if (!this_._internal_taproot_internal_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_taproot_internal_key());
            }
            // bytes local_public_nonces = 4;
            if (!this_._internal_local_public_nonces().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_local_public_nonces());
            }
            // bool have_all_nonces = 5;
            if (this_._internal_have_all_nonces() != 0) {
              total_size += 2;
            }
            // .signrpc.MuSig2Version version = 6;
            if (this_._internal_version() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_version());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2SessionResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2SessionResponse*>(&to_msg);
  auto& from = static_cast<const MuSig2SessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2SessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_combined_key().empty()) {
    _this->_internal_set_combined_key(from._internal_combined_key());
  }
  if (!from._internal_taproot_internal_key().empty()) {
    _this->_internal_set_taproot_internal_key(from._internal_taproot_internal_key());
  }
  if (!from._internal_local_public_nonces().empty()) {
    _this->_internal_set_local_public_nonces(from._internal_local_public_nonces());
  }
  if (from._internal_have_all_nonces() != 0) {
    _this->_impl_.have_all_nonces_ = from._impl_.have_all_nonces_;
  }
  if (from._internal_version() != 0) {
    _this->_impl_.version_ = from._impl_.version_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2SessionResponse::CopyFrom(const MuSig2SessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2SessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2SessionResponse::InternalSwap(MuSig2SessionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.combined_key_, &other->_impl_.combined_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.taproot_internal_key_, &other->_impl_.taproot_internal_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_public_nonces_, &other->_impl_.local_public_nonces_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.version_)
      + sizeof(MuSig2SessionResponse::_impl_.version_)
      - PROTOBUF_FIELD_OFFSET(MuSig2SessionResponse, _impl_.have_all_nonces_)>(
          reinterpret_cast<char*>(&_impl_.have_all_nonces_),
          reinterpret_cast<char*>(&other->_impl_.have_all_nonces_));
}

::google::protobuf::Metadata MuSig2SessionResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2RegisterNoncesRequest::_Internal {
 public:
};

MuSig2RegisterNoncesRequest::MuSig2RegisterNoncesRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2RegisterNoncesRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2RegisterNoncesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2RegisterNoncesRequest& from_msg)
      : other_signer_public_nonces_{visibility, arena, from.other_signer_public_nonces_},
        session_id_(arena, from.session_id_),
        _cached_size_{0} {}

MuSig2RegisterNoncesRequest::MuSig2RegisterNoncesRequest(
    ::google::protobuf::Arena* arena,
    const MuSig2RegisterNoncesRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2RegisterNoncesRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2RegisterNoncesRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2RegisterNoncesRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : other_signer_public_nonces_{visibility, arena},
        session_id_(arena),
        _cached_size_{0} {}

inline void MuSig2RegisterNoncesRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MuSig2RegisterNoncesRequest::~MuSig2RegisterNoncesRequest() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2RegisterNoncesRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2RegisterNoncesRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2RegisterNoncesRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2RegisterNoncesRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2RegisterNoncesRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2RegisterNoncesRequest>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2RegisterNoncesRequest>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2RegisterNoncesRequest>(), &MuSig2RegisterNoncesRequest::ByteSizeLong,
                &MuSig2RegisterNoncesRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesRequest, _impl_._cached_size_),
            false,
        },
        &MuSig2RegisterNoncesRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2RegisterNoncesRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 2, 0, 0, 2> MuSig2RegisterNoncesRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967290,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2RegisterNoncesRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes session_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesRequest, _impl_.session_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated bytes other_signer_public_nonces = 3;
    {::_pbi::TcParser::FastBR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesRequest, _impl_.other_signer_public_nonces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes session_id = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated bytes other_signer_public_nonces = 3;
    {PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesRequest, _impl_.other_signer_public_nonces_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2RegisterNoncesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2RegisterNoncesRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.other_signer_public_nonces_.Clear();
  _impl_.session_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2RegisterNoncesRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2RegisterNoncesRequest& this_ = static_cast<const MuSig2RegisterNoncesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2RegisterNoncesRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2RegisterNoncesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2RegisterNoncesRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes session_id = 1;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated bytes other_signer_public_nonces = 3;
          for (int i = 0, n = this_._internal_other_signer_public_nonces_size(); i < n; ++i) {
            const auto& s = this_._internal_other_signer_public_nonces().Get(i);
            target = stream->WriteBytes(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2RegisterNoncesRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2RegisterNoncesRequest::ByteSizeLong(const MessageLite& base) {
          const MuSig2RegisterNoncesRequest& this_ = static_cast<const MuSig2RegisterNoncesRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2RegisterNoncesRequest::ByteSizeLong() const {
          const MuSig2RegisterNoncesRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2RegisterNoncesRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes other_signer_public_nonces = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_other_signer_public_nonces().size());
              for (int i = 0, n = this_._internal_other_signer_public_nonces().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_other_signer_public_nonces().Get(i));
              }
            }
          }
           {
            // bytes session_id = 1;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2RegisterNoncesRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2RegisterNoncesRequest*>(&to_msg);
  auto& from = static_cast<const MuSig2RegisterNoncesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2RegisterNoncesRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_other_signer_public_nonces()->MergeFrom(from._internal_other_signer_public_nonces());
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2RegisterNoncesRequest::CopyFrom(const MuSig2RegisterNoncesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2RegisterNoncesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2RegisterNoncesRequest::InternalSwap(MuSig2RegisterNoncesRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.other_signer_public_nonces_.InternalSwap(&other->_impl_.other_signer_public_nonces_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
}

::google::protobuf::Metadata MuSig2RegisterNoncesRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2RegisterNoncesResponse::_Internal {
 public:
};

MuSig2RegisterNoncesResponse::MuSig2RegisterNoncesResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2RegisterNoncesResponse)
}
MuSig2RegisterNoncesResponse::MuSig2RegisterNoncesResponse(
    ::google::protobuf::Arena* arena, const MuSig2RegisterNoncesResponse& from)
    : MuSig2RegisterNoncesResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE MuSig2RegisterNoncesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void MuSig2RegisterNoncesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.have_all_nonces_ = {};
}
MuSig2RegisterNoncesResponse::~MuSig2RegisterNoncesResponse() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2RegisterNoncesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2RegisterNoncesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2RegisterNoncesResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2RegisterNoncesResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2RegisterNoncesResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2RegisterNoncesResponse>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2RegisterNoncesResponse>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2RegisterNoncesResponse>(), &MuSig2RegisterNoncesResponse::ByteSizeLong,
                &MuSig2RegisterNoncesResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesResponse, _impl_._cached_size_),
            false,
        },
        &MuSig2RegisterNoncesResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2RegisterNoncesResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MuSig2RegisterNoncesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2RegisterNoncesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool have_all_nonces = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MuSig2RegisterNoncesResponse, _impl_.have_all_nonces_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesResponse, _impl_.have_all_nonces_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool have_all_nonces = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2RegisterNoncesResponse, _impl_.have_all_nonces_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2RegisterNoncesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2RegisterNoncesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.have_all_nonces_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2RegisterNoncesResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2RegisterNoncesResponse& this_ = static_cast<const MuSig2RegisterNoncesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2RegisterNoncesResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2RegisterNoncesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2RegisterNoncesResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool have_all_nonces = 1;
          if (this_._internal_have_all_nonces() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_have_all_nonces(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2RegisterNoncesResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2RegisterNoncesResponse::ByteSizeLong(const MessageLite& base) {
          const MuSig2RegisterNoncesResponse& this_ = static_cast<const MuSig2RegisterNoncesResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2RegisterNoncesResponse::ByteSizeLong() const {
          const MuSig2RegisterNoncesResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2RegisterNoncesResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bool have_all_nonces = 1;
            if (this_._internal_have_all_nonces() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2RegisterNoncesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2RegisterNoncesResponse*>(&to_msg);
  auto& from = static_cast<const MuSig2RegisterNoncesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2RegisterNoncesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_have_all_nonces() != 0) {
    _this->_impl_.have_all_nonces_ = from._impl_.have_all_nonces_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2RegisterNoncesResponse::CopyFrom(const MuSig2RegisterNoncesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2RegisterNoncesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2RegisterNoncesResponse::InternalSwap(MuSig2RegisterNoncesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.have_all_nonces_, other->_impl_.have_all_nonces_);
}

::google::protobuf::Metadata MuSig2RegisterNoncesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2SignRequest::_Internal {
 public:
};

MuSig2SignRequest::MuSig2SignRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2SignRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SignRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2SignRequest& from_msg)
      : session_id_(arena, from.session_id_),
        message_digest_(arena, from.message_digest_),
        _cached_size_{0} {}

MuSig2SignRequest::MuSig2SignRequest(
    ::google::protobuf::Arena* arena,
    const MuSig2SignRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2SignRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.cleanup_ = from._impl_.cleanup_;

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2SignRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SignRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_id_(arena),
        message_digest_(arena),
        _cached_size_{0} {}

inline void MuSig2SignRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cleanup_ = {};
}
MuSig2SignRequest::~MuSig2SignRequest() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2SignRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2SignRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_id_.Destroy();
  _impl_.message_digest_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2SignRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2SignRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2SignRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2SignRequest>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2SignRequest>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2SignRequest>(), &MuSig2SignRequest::ByteSizeLong,
                &MuSig2SignRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_._cached_size_),
            false,
        },
        &MuSig2SignRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2SignRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> MuSig2SignRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2SignRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes session_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_.session_id_)}},
    // bytes message_digest = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_.message_digest_)}},
    // bool cleanup = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MuSig2SignRequest, _impl_.cleanup_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_.cleanup_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes session_id = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes message_digest = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_.message_digest_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool cleanup = 3;
    {PROTOBUF_FIELD_OFFSET(MuSig2SignRequest, _impl_.cleanup_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2SignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2SignRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  _impl_.message_digest_.ClearToEmpty();
  _impl_.cleanup_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2SignRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2SignRequest& this_ = static_cast<const MuSig2SignRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2SignRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2SignRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2SignRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes session_id = 1;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes message_digest = 2;
          if (!this_._internal_message_digest().empty()) {
            const std::string& _s = this_._internal_message_digest();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bool cleanup = 3;
          if (this_._internal_cleanup() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_cleanup(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2SignRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2SignRequest::ByteSizeLong(const MessageLite& base) {
          const MuSig2SignRequest& this_ = static_cast<const MuSig2SignRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2SignRequest::ByteSizeLong() const {
          const MuSig2SignRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2SignRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes session_id = 1;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_session_id());
            }
            // bytes message_digest = 2;
            if (!this_._internal_message_digest().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_message_digest());
            }
            // bool cleanup = 3;
            if (this_._internal_cleanup() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2SignRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2SignRequest*>(&to_msg);
  auto& from = static_cast<const MuSig2SignRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2SignRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  if (!from._internal_message_digest().empty()) {
    _this->_internal_set_message_digest(from._internal_message_digest());
  }
  if (from._internal_cleanup() != 0) {
    _this->_impl_.cleanup_ = from._impl_.cleanup_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2SignRequest::CopyFrom(const MuSig2SignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2SignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2SignRequest::InternalSwap(MuSig2SignRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_digest_, &other->_impl_.message_digest_, arena);
        swap(_impl_.cleanup_, other->_impl_.cleanup_);
}

::google::protobuf::Metadata MuSig2SignRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2SignResponse::_Internal {
 public:
};

MuSig2SignResponse::MuSig2SignResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2SignResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SignResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2SignResponse& from_msg)
      : local_partial_signature_(arena, from.local_partial_signature_),
        _cached_size_{0} {}

MuSig2SignResponse::MuSig2SignResponse(
    ::google::protobuf::Arena* arena,
    const MuSig2SignResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2SignResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2SignResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2SignResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : local_partial_signature_(arena),
        _cached_size_{0} {}

inline void MuSig2SignResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MuSig2SignResponse::~MuSig2SignResponse() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2SignResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2SignResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.local_partial_signature_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2SignResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2SignResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2SignResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2SignResponse>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2SignResponse>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2SignResponse>(), &MuSig2SignResponse::ByteSizeLong,
                &MuSig2SignResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2SignResponse, _impl_._cached_size_),
            false,
        },
        &MuSig2SignResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2SignResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MuSig2SignResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2SignResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes local_partial_signature = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2SignResponse, _impl_.local_partial_signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes local_partial_signature = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2SignResponse, _impl_.local_partial_signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2SignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2SignResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.local_partial_signature_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2SignResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2SignResponse& this_ = static_cast<const MuSig2SignResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2SignResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2SignResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2SignResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes local_partial_signature = 1;
          if (!this_._internal_local_partial_signature().empty()) {
            const std::string& _s = this_._internal_local_partial_signature();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2SignResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2SignResponse::ByteSizeLong(const MessageLite& base) {
          const MuSig2SignResponse& this_ = static_cast<const MuSig2SignResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2SignResponse::ByteSizeLong() const {
          const MuSig2SignResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2SignResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes local_partial_signature = 1;
            if (!this_._internal_local_partial_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_local_partial_signature());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2SignResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2SignResponse*>(&to_msg);
  auto& from = static_cast<const MuSig2SignResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2SignResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_local_partial_signature().empty()) {
    _this->_internal_set_local_partial_signature(from._internal_local_partial_signature());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2SignResponse::CopyFrom(const MuSig2SignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2SignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2SignResponse::InternalSwap(MuSig2SignResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.local_partial_signature_, &other->_impl_.local_partial_signature_, arena);
}

::google::protobuf::Metadata MuSig2SignResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2CombineSigRequest::_Internal {
 public:
};

MuSig2CombineSigRequest::MuSig2CombineSigRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2CombineSigRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineSigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2CombineSigRequest& from_msg)
      : other_partial_signatures_{visibility, arena, from.other_partial_signatures_},
        session_id_(arena, from.session_id_),
        _cached_size_{0} {}

MuSig2CombineSigRequest::MuSig2CombineSigRequest(
    ::google::protobuf::Arena* arena,
    const MuSig2CombineSigRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2CombineSigRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2CombineSigRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineSigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : other_partial_signatures_{visibility, arena},
        session_id_(arena),
        _cached_size_{0} {}

inline void MuSig2CombineSigRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MuSig2CombineSigRequest::~MuSig2CombineSigRequest() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2CombineSigRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2CombineSigRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2CombineSigRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2CombineSigRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2CombineSigRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2CombineSigRequest>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2CombineSigRequest>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2CombineSigRequest>(), &MuSig2CombineSigRequest::ByteSizeLong,
                &MuSig2CombineSigRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2CombineSigRequest, _impl_._cached_size_),
            false,
        },
        &MuSig2CombineSigRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2CombineSigRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MuSig2CombineSigRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2CombineSigRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated bytes other_partial_signatures = 2;
    {::_pbi::TcParser::FastBR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineSigRequest, _impl_.other_partial_signatures_)}},
    // bytes session_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineSigRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes session_id = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineSigRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated bytes other_partial_signatures = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineSigRequest, _impl_.other_partial_signatures_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kBytes | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2CombineSigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2CombineSigRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.other_partial_signatures_.Clear();
  _impl_.session_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2CombineSigRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2CombineSigRequest& this_ = static_cast<const MuSig2CombineSigRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2CombineSigRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2CombineSigRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2CombineSigRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes session_id = 1;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated bytes other_partial_signatures = 2;
          for (int i = 0, n = this_._internal_other_partial_signatures_size(); i < n; ++i) {
            const auto& s = this_._internal_other_partial_signatures().Get(i);
            target = stream->WriteBytes(2, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2CombineSigRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2CombineSigRequest::ByteSizeLong(const MessageLite& base) {
          const MuSig2CombineSigRequest& this_ = static_cast<const MuSig2CombineSigRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2CombineSigRequest::ByteSizeLong() const {
          const MuSig2CombineSigRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2CombineSigRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated bytes other_partial_signatures = 2;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_other_partial_signatures().size());
              for (int i = 0, n = this_._internal_other_partial_signatures().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
                    this_._internal_other_partial_signatures().Get(i));
              }
            }
          }
           {
            // bytes session_id = 1;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2CombineSigRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2CombineSigRequest*>(&to_msg);
  auto& from = static_cast<const MuSig2CombineSigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2CombineSigRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_other_partial_signatures()->MergeFrom(from._internal_other_partial_signatures());
  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2CombineSigRequest::CopyFrom(const MuSig2CombineSigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2CombineSigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2CombineSigRequest::InternalSwap(MuSig2CombineSigRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.other_partial_signatures_.InternalSwap(&other->_impl_.other_partial_signatures_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
}

::google::protobuf::Metadata MuSig2CombineSigRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2CombineSigResponse::_Internal {
 public:
};

MuSig2CombineSigResponse::MuSig2CombineSigResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2CombineSigResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineSigResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2CombineSigResponse& from_msg)
      : final_signature_(arena, from.final_signature_),
        _cached_size_{0} {}

MuSig2CombineSigResponse::MuSig2CombineSigResponse(
    ::google::protobuf::Arena* arena,
    const MuSig2CombineSigResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2CombineSigResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.have_all_signatures_ = from._impl_.have_all_signatures_;

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2CombineSigResponse)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CombineSigResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : final_signature_(arena),
        _cached_size_{0} {}

inline void MuSig2CombineSigResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.have_all_signatures_ = {};
}
MuSig2CombineSigResponse::~MuSig2CombineSigResponse() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2CombineSigResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2CombineSigResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.final_signature_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2CombineSigResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2CombineSigResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2CombineSigResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2CombineSigResponse>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2CombineSigResponse>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2CombineSigResponse>(), &MuSig2CombineSigResponse::ByteSizeLong,
                &MuSig2CombineSigResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2CombineSigResponse, _impl_._cached_size_),
            false,
        },
        &MuSig2CombineSigResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2CombineSigResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> MuSig2CombineSigResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2CombineSigResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes final_signature = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineSigResponse, _impl_.final_signature_)}},
    // bool have_all_signatures = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MuSig2CombineSigResponse, _impl_.have_all_signatures_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CombineSigResponse, _impl_.have_all_signatures_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool have_all_signatures = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineSigResponse, _impl_.have_all_signatures_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bytes final_signature = 2;
    {PROTOBUF_FIELD_OFFSET(MuSig2CombineSigResponse, _impl_.final_signature_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2CombineSigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2CombineSigResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.final_signature_.ClearToEmpty();
  _impl_.have_all_signatures_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2CombineSigResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2CombineSigResponse& this_ = static_cast<const MuSig2CombineSigResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2CombineSigResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2CombineSigResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2CombineSigResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bool have_all_signatures = 1;
          if (this_._internal_have_all_signatures() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                1, this_._internal_have_all_signatures(), target);
          }

          // bytes final_signature = 2;
          if (!this_._internal_final_signature().empty()) {
            const std::string& _s = this_._internal_final_signature();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2CombineSigResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2CombineSigResponse::ByteSizeLong(const MessageLite& base) {
          const MuSig2CombineSigResponse& this_ = static_cast<const MuSig2CombineSigResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2CombineSigResponse::ByteSizeLong() const {
          const MuSig2CombineSigResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2CombineSigResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes final_signature = 2;
            if (!this_._internal_final_signature().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_final_signature());
            }
            // bool have_all_signatures = 1;
            if (this_._internal_have_all_signatures() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2CombineSigResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2CombineSigResponse*>(&to_msg);
  auto& from = static_cast<const MuSig2CombineSigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2CombineSigResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_final_signature().empty()) {
    _this->_internal_set_final_signature(from._internal_final_signature());
  }
  if (from._internal_have_all_signatures() != 0) {
    _this->_impl_.have_all_signatures_ = from._impl_.have_all_signatures_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2CombineSigResponse::CopyFrom(const MuSig2CombineSigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2CombineSigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2CombineSigResponse::InternalSwap(MuSig2CombineSigResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.final_signature_, &other->_impl_.final_signature_, arena);
        swap(_impl_.have_all_signatures_, other->_impl_.have_all_signatures_);
}

::google::protobuf::Metadata MuSig2CombineSigResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2CleanupRequest::_Internal {
 public:
};

MuSig2CleanupRequest::MuSig2CleanupRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2CleanupRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CleanupRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::signrpc::MuSig2CleanupRequest& from_msg)
      : session_id_(arena, from.session_id_),
        _cached_size_{0} {}

MuSig2CleanupRequest::MuSig2CleanupRequest(
    ::google::protobuf::Arena* arena,
    const MuSig2CleanupRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2CleanupRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2CleanupRequest)
}
inline PROTOBUF_NDEBUG_INLINE MuSig2CleanupRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : session_id_(arena),
        _cached_size_{0} {}

inline void MuSig2CleanupRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MuSig2CleanupRequest::~MuSig2CleanupRequest() {
  // @@protoc_insertion_point(destructor:signrpc.MuSig2CleanupRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MuSig2CleanupRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.session_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2CleanupRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_MuSig2CleanupRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2CleanupRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<MuSig2CleanupRequest>(),
            ::google::protobuf::Message::GetNewImpl<MuSig2CleanupRequest>(),
            ::google::protobuf::Message::GetClearImpl<MuSig2CleanupRequest>(), &MuSig2CleanupRequest::ByteSizeLong,
                &MuSig2CleanupRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2CleanupRequest, _impl_._cached_size_),
            false,
        },
        &MuSig2CleanupRequest::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2CleanupRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> MuSig2CleanupRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2CleanupRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes session_id = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MuSig2CleanupRequest, _impl_.session_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes session_id = 1;
    {PROTOBUF_FIELD_OFFSET(MuSig2CleanupRequest, _impl_.session_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void MuSig2CleanupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:signrpc.MuSig2CleanupRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.session_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* MuSig2CleanupRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const MuSig2CleanupRequest& this_ = static_cast<const MuSig2CleanupRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* MuSig2CleanupRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const MuSig2CleanupRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:signrpc.MuSig2CleanupRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes session_id = 1;
          if (!this_._internal_session_id().empty()) {
            const std::string& _s = this_._internal_session_id();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:signrpc.MuSig2CleanupRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t MuSig2CleanupRequest::ByteSizeLong(const MessageLite& base) {
          const MuSig2CleanupRequest& this_ = static_cast<const MuSig2CleanupRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t MuSig2CleanupRequest::ByteSizeLong() const {
          const MuSig2CleanupRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:signrpc.MuSig2CleanupRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes session_id = 1;
            if (!this_._internal_session_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_session_id());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void MuSig2CleanupRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MuSig2CleanupRequest*>(&to_msg);
  auto& from = static_cast<const MuSig2CleanupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:signrpc.MuSig2CleanupRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_session_id().empty()) {
    _this->_internal_set_session_id(from._internal_session_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MuSig2CleanupRequest::CopyFrom(const MuSig2CleanupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:signrpc.MuSig2CleanupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MuSig2CleanupRequest::InternalSwap(MuSig2CleanupRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.session_id_, &other->_impl_.session_id_, arena);
}

::google::protobuf::Metadata MuSig2CleanupRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MuSig2CleanupResponse::_Internal {
 public:
};

MuSig2CleanupResponse::MuSig2CleanupResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:signrpc.MuSig2CleanupResponse)
}
MuSig2CleanupResponse::MuSig2CleanupResponse(
    ::google::protobuf::Arena* arena,
    const MuSig2CleanupResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  MuSig2CleanupResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:signrpc.MuSig2CleanupResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    MuSig2CleanupResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_MuSig2CleanupResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &MuSig2CleanupResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<MuSig2CleanupResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<MuSig2CleanupResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<MuSig2CleanupResponse>(), &MuSig2CleanupResponse::ByteSizeLong,
                &MuSig2CleanupResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(MuSig2CleanupResponse, _impl_._cached_size_),
            false,
        },
        &MuSig2CleanupResponse::kDescriptorMethods,
        &descriptor_table_signer_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* MuSig2CleanupResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> MuSig2CleanupResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::signrpc::MuSig2CleanupResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata MuSig2CleanupResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace signrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_signer_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
