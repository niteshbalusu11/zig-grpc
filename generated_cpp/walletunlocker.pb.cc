// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: walletunlocker.proto
// Protobuf C++ Version: 5.28.2

#include "walletunlocker.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace lnrpc {

inline constexpr WatchOnlyAccount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : xpub_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        purpose_{0u},
        coin_type_{0u},
        account_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WatchOnlyAccount::WatchOnlyAccount(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchOnlyAccountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchOnlyAccountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchOnlyAccountDefaultTypeInternal() {}
  union {
    WatchOnlyAccount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchOnlyAccountDefaultTypeInternal _WatchOnlyAccount_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR UnlockWalletResponse::UnlockWalletResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct UnlockWalletResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockWalletResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockWalletResponseDefaultTypeInternal() {}
  union {
    UnlockWalletResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockWalletResponseDefaultTypeInternal _UnlockWalletResponse_default_instance_;

inline constexpr InitWalletResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : admin_macaroon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR InitWalletResponse::InitWalletResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InitWalletResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitWalletResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitWalletResponseDefaultTypeInternal() {}
  union {
    InitWalletResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitWalletResponseDefaultTypeInternal _InitWalletResponse_default_instance_;

inline constexpr GenSeedResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cipher_seed_mnemonic_{},
        enciphered_seed_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenSeedResponse::GenSeedResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenSeedResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenSeedResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenSeedResponseDefaultTypeInternal() {}
  union {
    GenSeedResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenSeedResponseDefaultTypeInternal _GenSeedResponse_default_instance_;

inline constexpr GenSeedRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : aezeed_passphrase_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        seed_entropy_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR GenSeedRequest::GenSeedRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GenSeedRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GenSeedRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GenSeedRequestDefaultTypeInternal() {}
  union {
    GenSeedRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GenSeedRequestDefaultTypeInternal _GenSeedRequest_default_instance_;

inline constexpr ChangePasswordResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : admin_macaroon_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChangePasswordResponse::ChangePasswordResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChangePasswordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangePasswordResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangePasswordResponseDefaultTypeInternal() {}
  union {
    ChangePasswordResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangePasswordResponseDefaultTypeInternal _ChangePasswordResponse_default_instance_;

inline constexpr ChangePasswordRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : current_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        new_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stateless_init_{false},
        new_macaroon_root_key_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ChangePasswordRequest::ChangePasswordRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ChangePasswordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangePasswordRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangePasswordRequestDefaultTypeInternal() {}
  union {
    ChangePasswordRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangePasswordRequestDefaultTypeInternal _ChangePasswordRequest_default_instance_;

inline constexpr WatchOnly::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : accounts_{},
        master_key_fingerprint_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        master_key_birthday_timestamp_{::uint64_t{0u}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR WatchOnly::WatchOnly(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct WatchOnlyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WatchOnlyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~WatchOnlyDefaultTypeInternal() {}
  union {
    WatchOnly _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WatchOnlyDefaultTypeInternal _WatchOnly_default_instance_;

inline constexpr UnlockWalletRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        wallet_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_backups_{nullptr},
        recovery_window_{0},
        stateless_init_{false} {}

template <typename>
PROTOBUF_CONSTEXPR UnlockWalletRequest::UnlockWalletRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnlockWalletRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnlockWalletRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnlockWalletRequestDefaultTypeInternal() {}
  union {
    UnlockWalletRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnlockWalletRequestDefaultTypeInternal _UnlockWalletRequest_default_instance_;

inline constexpr InitWalletRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        cipher_seed_mnemonic_{},
        wallet_password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        aezeed_passphrase_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        extended_master_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        macaroon_root_key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_backups_{nullptr},
        watch_only_{nullptr},
        recovery_window_{0},
        stateless_init_{false},
        extended_master_key_birthday_timestamp_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR InitWalletRequest::InitWalletRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct InitWalletRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR InitWalletRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~InitWalletRequestDefaultTypeInternal() {}
  union {
    InitWalletRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 InitWalletRequestDefaultTypeInternal _InitWalletRequest_default_instance_;
}  // namespace lnrpc
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_walletunlocker_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_walletunlocker_2eproto = nullptr;
const ::uint32_t
    TableStruct_walletunlocker_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::GenSeedRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::GenSeedRequest, _impl_.aezeed_passphrase_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::GenSeedRequest, _impl_.seed_entropy_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::GenSeedResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::GenSeedResponse, _impl_.cipher_seed_mnemonic_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::GenSeedResponse, _impl_.enciphered_seed_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.wallet_password_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.cipher_seed_mnemonic_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.aezeed_passphrase_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.recovery_window_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.channel_backups_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.stateless_init_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.extended_master_key_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.extended_master_key_birthday_timestamp_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.watch_only_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletRequest, _impl_.macaroon_root_key_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
        1,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::InitWalletResponse, _impl_.admin_macaroon_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnly, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnly, _impl_.master_key_birthday_timestamp_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnly, _impl_.master_key_fingerprint_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnly, _impl_.accounts_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnlyAccount, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnlyAccount, _impl_.purpose_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnlyAccount, _impl_.coin_type_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnlyAccount, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::WatchOnlyAccount, _impl_.xpub_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletRequest, _impl_.wallet_password_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletRequest, _impl_.recovery_window_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletRequest, _impl_.channel_backups_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletRequest, _impl_.stateless_init_),
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::UnlockWalletResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordRequest, _impl_.current_password_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordRequest, _impl_.new_password_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordRequest, _impl_.stateless_init_),
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordRequest, _impl_.new_macaroon_root_key_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::lnrpc::ChangePasswordResponse, _impl_.admin_macaroon_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::lnrpc::GenSeedRequest)},
        {10, -1, -1, sizeof(::lnrpc::GenSeedResponse)},
        {20, 38, -1, sizeof(::lnrpc::InitWalletRequest)},
        {48, -1, -1, sizeof(::lnrpc::InitWalletResponse)},
        {57, -1, -1, sizeof(::lnrpc::WatchOnly)},
        {68, -1, -1, sizeof(::lnrpc::WatchOnlyAccount)},
        {80, 92, -1, sizeof(::lnrpc::UnlockWalletRequest)},
        {96, -1, -1, sizeof(::lnrpc::UnlockWalletResponse)},
        {104, -1, -1, sizeof(::lnrpc::ChangePasswordRequest)},
        {116, -1, -1, sizeof(::lnrpc::ChangePasswordResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::lnrpc::_GenSeedRequest_default_instance_._instance,
    &::lnrpc::_GenSeedResponse_default_instance_._instance,
    &::lnrpc::_InitWalletRequest_default_instance_._instance,
    &::lnrpc::_InitWalletResponse_default_instance_._instance,
    &::lnrpc::_WatchOnly_default_instance_._instance,
    &::lnrpc::_WatchOnlyAccount_default_instance_._instance,
    &::lnrpc::_UnlockWalletRequest_default_instance_._instance,
    &::lnrpc::_UnlockWalletResponse_default_instance_._instance,
    &::lnrpc::_ChangePasswordRequest_default_instance_._instance,
    &::lnrpc::_ChangePasswordResponse_default_instance_._instance,
};
const char descriptor_table_protodef_walletunlocker_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024walletunlocker.proto\022\005lnrpc\032\017lightning"
    ".proto\"A\n\016GenSeedRequest\022\031\n\021aezeed_passp"
    "hrase\030\001 \001(\014\022\024\n\014seed_entropy\030\002 \001(\014\"H\n\017Gen"
    "SeedResponse\022\034\n\024cipher_seed_mnemonic\030\001 \003"
    "(\t\022\027\n\017enciphered_seed\030\002 \001(\014\"\330\002\n\021InitWall"
    "etRequest\022\027\n\017wallet_password\030\001 \001(\014\022\034\n\024ci"
    "pher_seed_mnemonic\030\002 \003(\t\022\031\n\021aezeed_passp"
    "hrase\030\003 \001(\014\022\027\n\017recovery_window\030\004 \001(\005\0222\n\017"
    "channel_backups\030\005 \001(\0132\031.lnrpc.ChanBackup"
    "Snapshot\022\026\n\016stateless_init\030\006 \001(\010\022\033\n\023exte"
    "nded_master_key\030\007 \001(\t\022.\n&extended_master"
    "_key_birthday_timestamp\030\010 \001(\004\022$\n\nwatch_o"
    "nly\030\t \001(\0132\020.lnrpc.WatchOnly\022\031\n\021macaroon_"
    "root_key\030\n \001(\014\",\n\022InitWalletResponse\022\026\n\016"
    "admin_macaroon\030\001 \001(\014\"}\n\tWatchOnly\022%\n\035mas"
    "ter_key_birthday_timestamp\030\001 \001(\004\022\036\n\026mast"
    "er_key_fingerprint\030\002 \001(\014\022)\n\010accounts\030\003 \003"
    "(\0132\027.lnrpc.WatchOnlyAccount\"U\n\020WatchOnly"
    "Account\022\017\n\007purpose\030\001 \001(\r\022\021\n\tcoin_type\030\002 "
    "\001(\r\022\017\n\007account\030\003 \001(\r\022\014\n\004xpub\030\004 \001(\t\"\223\001\n\023U"
    "nlockWalletRequest\022\027\n\017wallet_password\030\001 "
    "\001(\014\022\027\n\017recovery_window\030\002 \001(\005\0222\n\017channel_"
    "backups\030\003 \001(\0132\031.lnrpc.ChanBackupSnapshot"
    "\022\026\n\016stateless_init\030\004 \001(\010\"\026\n\024UnlockWallet"
    "Response\"~\n\025ChangePasswordRequest\022\030\n\020cur"
    "rent_password\030\001 \001(\014\022\024\n\014new_password\030\002 \001("
    "\014\022\026\n\016stateless_init\030\003 \001(\010\022\035\n\025new_macaroo"
    "n_root_key\030\004 \001(\010\"0\n\026ChangePasswordRespon"
    "se\022\026\n\016admin_macaroon\030\001 \001(\0142\245\002\n\016WalletUnl"
    "ocker\0228\n\007GenSeed\022\025.lnrpc.GenSeedRequest\032"
    "\026.lnrpc.GenSeedResponse\022A\n\nInitWallet\022\030."
    "lnrpc.InitWalletRequest\032\031.lnrpc.InitWall"
    "etResponse\022G\n\014UnlockWallet\022\032.lnrpc.Unloc"
    "kWalletRequest\032\033.lnrpc.UnlockWalletRespo"
    "nse\022M\n\016ChangePassword\022\034.lnrpc.ChangePass"
    "wordRequest\032\035.lnrpc.ChangePasswordRespon"
    "seB\'Z%github.com/lightningnetwork/lnd/ln"
    "rpcb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_walletunlocker_2eproto_deps[1] =
    {
        &::descriptor_table_lightning_2eproto,
};
static ::absl::once_flag descriptor_table_walletunlocker_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_walletunlocker_2eproto = {
    false,
    false,
    1491,
    descriptor_table_protodef_walletunlocker_2eproto,
    "walletunlocker.proto",
    &descriptor_table_walletunlocker_2eproto_once,
    descriptor_table_walletunlocker_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct_walletunlocker_2eproto::offsets,
    file_level_enum_descriptors_walletunlocker_2eproto,
    file_level_service_descriptors_walletunlocker_2eproto,
};
namespace lnrpc {
// ===================================================================

class GenSeedRequest::_Internal {
 public:
};

GenSeedRequest::GenSeedRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.GenSeedRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenSeedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::GenSeedRequest& from_msg)
      : aezeed_passphrase_(arena, from.aezeed_passphrase_),
        seed_entropy_(arena, from.seed_entropy_),
        _cached_size_{0} {}

GenSeedRequest::GenSeedRequest(
    ::google::protobuf::Arena* arena,
    const GenSeedRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenSeedRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:lnrpc.GenSeedRequest)
}
inline PROTOBUF_NDEBUG_INLINE GenSeedRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : aezeed_passphrase_(arena),
        seed_entropy_(arena),
        _cached_size_{0} {}

inline void GenSeedRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenSeedRequest::~GenSeedRequest() {
  // @@protoc_insertion_point(destructor:lnrpc.GenSeedRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenSeedRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.aezeed_passphrase_.Destroy();
  _impl_.seed_entropy_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GenSeedRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GenSeedRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GenSeedRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GenSeedRequest>(),
            ::google::protobuf::Message::GetNewImpl<GenSeedRequest>(),
            ::google::protobuf::Message::GetClearImpl<GenSeedRequest>(), &GenSeedRequest::ByteSizeLong,
                &GenSeedRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GenSeedRequest, _impl_._cached_size_),
            false,
        },
        &GenSeedRequest::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GenSeedRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> GenSeedRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::GenSeedRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes seed_entropy = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GenSeedRequest, _impl_.seed_entropy_)}},
    // bytes aezeed_passphrase = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenSeedRequest, _impl_.aezeed_passphrase_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes aezeed_passphrase = 1;
    {PROTOBUF_FIELD_OFFSET(GenSeedRequest, _impl_.aezeed_passphrase_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes seed_entropy = 2;
    {PROTOBUF_FIELD_OFFSET(GenSeedRequest, _impl_.seed_entropy_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void GenSeedRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.GenSeedRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.aezeed_passphrase_.ClearToEmpty();
  _impl_.seed_entropy_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenSeedRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenSeedRequest& this_ = static_cast<const GenSeedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenSeedRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenSeedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.GenSeedRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes aezeed_passphrase = 1;
          if (!this_._internal_aezeed_passphrase().empty()) {
            const std::string& _s = this_._internal_aezeed_passphrase();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes seed_entropy = 2;
          if (!this_._internal_seed_entropy().empty()) {
            const std::string& _s = this_._internal_seed_entropy();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.GenSeedRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenSeedRequest::ByteSizeLong(const MessageLite& base) {
          const GenSeedRequest& this_ = static_cast<const GenSeedRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenSeedRequest::ByteSizeLong() const {
          const GenSeedRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.GenSeedRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes aezeed_passphrase = 1;
            if (!this_._internal_aezeed_passphrase().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_aezeed_passphrase());
            }
            // bytes seed_entropy = 2;
            if (!this_._internal_seed_entropy().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_seed_entropy());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenSeedRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenSeedRequest*>(&to_msg);
  auto& from = static_cast<const GenSeedRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.GenSeedRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_aezeed_passphrase().empty()) {
    _this->_internal_set_aezeed_passphrase(from._internal_aezeed_passphrase());
  }
  if (!from._internal_seed_entropy().empty()) {
    _this->_internal_set_seed_entropy(from._internal_seed_entropy());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenSeedRequest::CopyFrom(const GenSeedRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.GenSeedRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenSeedRequest::InternalSwap(GenSeedRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.aezeed_passphrase_, &other->_impl_.aezeed_passphrase_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.seed_entropy_, &other->_impl_.seed_entropy_, arena);
}

::google::protobuf::Metadata GenSeedRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class GenSeedResponse::_Internal {
 public:
};

GenSeedResponse::GenSeedResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.GenSeedResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenSeedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::GenSeedResponse& from_msg)
      : cipher_seed_mnemonic_{visibility, arena, from.cipher_seed_mnemonic_},
        enciphered_seed_(arena, from.enciphered_seed_),
        _cached_size_{0} {}

GenSeedResponse::GenSeedResponse(
    ::google::protobuf::Arena* arena,
    const GenSeedResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GenSeedResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:lnrpc.GenSeedResponse)
}
inline PROTOBUF_NDEBUG_INLINE GenSeedResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cipher_seed_mnemonic_{visibility, arena},
        enciphered_seed_(arena),
        _cached_size_{0} {}

inline void GenSeedResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GenSeedResponse::~GenSeedResponse() {
  // @@protoc_insertion_point(destructor:lnrpc.GenSeedResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void GenSeedResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.enciphered_seed_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    GenSeedResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_GenSeedResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &GenSeedResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<GenSeedResponse>(),
            ::google::protobuf::Message::GetNewImpl<GenSeedResponse>(),
            ::google::protobuf::Message::GetClearImpl<GenSeedResponse>(), &GenSeedResponse::ByteSizeLong,
                &GenSeedResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(GenSeedResponse, _impl_._cached_size_),
            false,
        },
        &GenSeedResponse::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* GenSeedResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 50, 2> GenSeedResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::GenSeedResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes enciphered_seed = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(GenSeedResponse, _impl_.enciphered_seed_)}},
    // repeated string cipher_seed_mnemonic = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(GenSeedResponse, _impl_.cipher_seed_mnemonic_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string cipher_seed_mnemonic = 1;
    {PROTOBUF_FIELD_OFFSET(GenSeedResponse, _impl_.cipher_seed_mnemonic_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bytes enciphered_seed = 2;
    {PROTOBUF_FIELD_OFFSET(GenSeedResponse, _impl_.enciphered_seed_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\25\24\0\0\0\0\0\0"
    "lnrpc.GenSeedResponse"
    "cipher_seed_mnemonic"
  }},
};

PROTOBUF_NOINLINE void GenSeedResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.GenSeedResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cipher_seed_mnemonic_.Clear();
  _impl_.enciphered_seed_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GenSeedResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GenSeedResponse& this_ = static_cast<const GenSeedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GenSeedResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GenSeedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.GenSeedResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated string cipher_seed_mnemonic = 1;
          for (int i = 0, n = this_._internal_cipher_seed_mnemonic_size(); i < n; ++i) {
            const auto& s = this_._internal_cipher_seed_mnemonic().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lnrpc.GenSeedResponse.cipher_seed_mnemonic");
            target = stream->WriteString(1, s, target);
          }

          // bytes enciphered_seed = 2;
          if (!this_._internal_enciphered_seed().empty()) {
            const std::string& _s = this_._internal_enciphered_seed();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.GenSeedResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GenSeedResponse::ByteSizeLong(const MessageLite& base) {
          const GenSeedResponse& this_ = static_cast<const GenSeedResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GenSeedResponse::ByteSizeLong() const {
          const GenSeedResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.GenSeedResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string cipher_seed_mnemonic = 1;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_cipher_seed_mnemonic().size());
              for (int i = 0, n = this_._internal_cipher_seed_mnemonic().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_cipher_seed_mnemonic().Get(i));
              }
            }
          }
           {
            // bytes enciphered_seed = 2;
            if (!this_._internal_enciphered_seed().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_enciphered_seed());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GenSeedResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GenSeedResponse*>(&to_msg);
  auto& from = static_cast<const GenSeedResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.GenSeedResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cipher_seed_mnemonic()->MergeFrom(from._internal_cipher_seed_mnemonic());
  if (!from._internal_enciphered_seed().empty()) {
    _this->_internal_set_enciphered_seed(from._internal_enciphered_seed());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GenSeedResponse::CopyFrom(const GenSeedResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.GenSeedResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GenSeedResponse::InternalSwap(GenSeedResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cipher_seed_mnemonic_.InternalSwap(&other->_impl_.cipher_seed_mnemonic_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.enciphered_seed_, &other->_impl_.enciphered_seed_, arena);
}

::google::protobuf::Metadata GenSeedResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InitWalletRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<InitWalletRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_._has_bits_);
};

void InitWalletRequest::clear_channel_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_backups_ != nullptr) _impl_.channel_backups_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
InitWalletRequest::InitWalletRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.InitWalletRequest)
}
inline PROTOBUF_NDEBUG_INLINE InitWalletRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::InitWalletRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        cipher_seed_mnemonic_{visibility, arena, from.cipher_seed_mnemonic_},
        wallet_password_(arena, from.wallet_password_),
        aezeed_passphrase_(arena, from.aezeed_passphrase_),
        extended_master_key_(arena, from.extended_master_key_),
        macaroon_root_key_(arena, from.macaroon_root_key_) {}

InitWalletRequest::InitWalletRequest(
    ::google::protobuf::Arena* arena,
    const InitWalletRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InitWalletRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.channel_backups_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::lnrpc::ChanBackupSnapshot>(
                              arena, *from._impl_.channel_backups_)
                        : nullptr;
  _impl_.watch_only_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::lnrpc::WatchOnly>(
                              arena, *from._impl_.watch_only_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, recovery_window_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, recovery_window_),
           offsetof(Impl_, extended_master_key_birthday_timestamp_) -
               offsetof(Impl_, recovery_window_) +
               sizeof(Impl_::extended_master_key_birthday_timestamp_));

  // @@protoc_insertion_point(copy_constructor:lnrpc.InitWalletRequest)
}
inline PROTOBUF_NDEBUG_INLINE InitWalletRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        cipher_seed_mnemonic_{visibility, arena},
        wallet_password_(arena),
        aezeed_passphrase_(arena),
        extended_master_key_(arena),
        macaroon_root_key_(arena) {}

inline void InitWalletRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_backups_),
           0,
           offsetof(Impl_, extended_master_key_birthday_timestamp_) -
               offsetof(Impl_, channel_backups_) +
               sizeof(Impl_::extended_master_key_birthday_timestamp_));
}
InitWalletRequest::~InitWalletRequest() {
  // @@protoc_insertion_point(destructor:lnrpc.InitWalletRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitWalletRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.wallet_password_.Destroy();
  _impl_.aezeed_passphrase_.Destroy();
  _impl_.extended_master_key_.Destroy();
  _impl_.macaroon_root_key_.Destroy();
  delete _impl_.channel_backups_;
  delete _impl_.watch_only_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InitWalletRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InitWalletRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InitWalletRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InitWalletRequest>(),
            ::google::protobuf::Message::GetNewImpl<InitWalletRequest>(),
            ::google::protobuf::Message::GetClearImpl<InitWalletRequest>(), &InitWalletRequest::ByteSizeLong,
                &InitWalletRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_._cached_size_),
            false,
        },
        &InitWalletRequest::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InitWalletRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 10, 2, 79, 2> InitWalletRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_._has_bits_),
    0, // no _extensions_
    10, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::InitWalletRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bytes wallet_password = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.wallet_password_)}},
    // repeated string cipher_seed_mnemonic = 2;
    {::_pbi::TcParser::FastUR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.cipher_seed_mnemonic_)}},
    // bytes aezeed_passphrase = 3;
    {::_pbi::TcParser::FastBS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.aezeed_passphrase_)}},
    // int32 recovery_window = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(InitWalletRequest, _impl_.recovery_window_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.recovery_window_)}},
    // .lnrpc.ChanBackupSnapshot channel_backups = 5;
    {::_pbi::TcParser::FastMtS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.channel_backups_)}},
    // bool stateless_init = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(InitWalletRequest, _impl_.stateless_init_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.stateless_init_)}},
    // string extended_master_key = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.extended_master_key_)}},
    // uint64 extended_master_key_birthday_timestamp = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(InitWalletRequest, _impl_.extended_master_key_birthday_timestamp_), 63>(),
     {64, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.extended_master_key_birthday_timestamp_)}},
    // .lnrpc.WatchOnly watch_only = 9;
    {::_pbi::TcParser::FastMtS1,
     {74, 1, 1, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.watch_only_)}},
    // bytes macaroon_root_key = 10;
    {::_pbi::TcParser::FastBS1,
     {82, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.macaroon_root_key_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes wallet_password = 1;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.wallet_password_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated string cipher_seed_mnemonic = 2;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.cipher_seed_mnemonic_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // bytes aezeed_passphrase = 3;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.aezeed_passphrase_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 recovery_window = 4;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.recovery_window_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .lnrpc.ChanBackupSnapshot channel_backups = 5;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.channel_backups_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool stateless_init = 6;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.stateless_init_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // string extended_master_key = 7;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.extended_master_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint64 extended_master_key_birthday_timestamp = 8;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.extended_master_key_birthday_timestamp_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // .lnrpc.WatchOnly watch_only = 9;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.watch_only_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes macaroon_root_key = 10;
    {PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.macaroon_root_key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lnrpc::ChanBackupSnapshot>()},
    {::_pbi::TcParser::GetTable<::lnrpc::WatchOnly>()},
  }}, {{
    "\27\0\24\0\0\0\0\23\0\0\0\0\0\0\0\0"
    "lnrpc.InitWalletRequest"
    "cipher_seed_mnemonic"
    "extended_master_key"
  }},
};

PROTOBUF_NOINLINE void InitWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.InitWalletRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cipher_seed_mnemonic_.Clear();
  _impl_.wallet_password_.ClearToEmpty();
  _impl_.aezeed_passphrase_.ClearToEmpty();
  _impl_.extended_master_key_.ClearToEmpty();
  _impl_.macaroon_root_key_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.channel_backups_ != nullptr);
      _impl_.channel_backups_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.watch_only_ != nullptr);
      _impl_.watch_only_->Clear();
    }
  }
  ::memset(&_impl_.recovery_window_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.extended_master_key_birthday_timestamp_) -
      reinterpret_cast<char*>(&_impl_.recovery_window_)) + sizeof(_impl_.extended_master_key_birthday_timestamp_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InitWalletRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InitWalletRequest& this_ = static_cast<const InitWalletRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InitWalletRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InitWalletRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.InitWalletRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes wallet_password = 1;
          if (!this_._internal_wallet_password().empty()) {
            const std::string& _s = this_._internal_wallet_password();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // repeated string cipher_seed_mnemonic = 2;
          for (int i = 0, n = this_._internal_cipher_seed_mnemonic_size(); i < n; ++i) {
            const auto& s = this_._internal_cipher_seed_mnemonic().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lnrpc.InitWalletRequest.cipher_seed_mnemonic");
            target = stream->WriteString(2, s, target);
          }

          // bytes aezeed_passphrase = 3;
          if (!this_._internal_aezeed_passphrase().empty()) {
            const std::string& _s = this_._internal_aezeed_passphrase();
            target = stream->WriteBytesMaybeAliased(3, _s, target);
          }

          // int32 recovery_window = 4;
          if (this_._internal_recovery_window() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<4>(
                    stream, this_._internal_recovery_window(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .lnrpc.ChanBackupSnapshot channel_backups = 5;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                5, *this_._impl_.channel_backups_, this_._impl_.channel_backups_->GetCachedSize(), target,
                stream);
          }

          // bool stateless_init = 6;
          if (this_._internal_stateless_init() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                6, this_._internal_stateless_init(), target);
          }

          // string extended_master_key = 7;
          if (!this_._internal_extended_master_key().empty()) {
            const std::string& _s = this_._internal_extended_master_key();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lnrpc.InitWalletRequest.extended_master_key");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // uint64 extended_master_key_birthday_timestamp = 8;
          if (this_._internal_extended_master_key_birthday_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                8, this_._internal_extended_master_key_birthday_timestamp(), target);
          }

          // .lnrpc.WatchOnly watch_only = 9;
          if (cached_has_bits & 0x00000002u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                9, *this_._impl_.watch_only_, this_._impl_.watch_only_->GetCachedSize(), target,
                stream);
          }

          // bytes macaroon_root_key = 10;
          if (!this_._internal_macaroon_root_key().empty()) {
            const std::string& _s = this_._internal_macaroon_root_key();
            target = stream->WriteBytesMaybeAliased(10, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.InitWalletRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InitWalletRequest::ByteSizeLong(const MessageLite& base) {
          const InitWalletRequest& this_ = static_cast<const InitWalletRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InitWalletRequest::ByteSizeLong() const {
          const InitWalletRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.InitWalletRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string cipher_seed_mnemonic = 2;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_cipher_seed_mnemonic().size());
              for (int i = 0, n = this_._internal_cipher_seed_mnemonic().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_cipher_seed_mnemonic().Get(i));
              }
            }
          }
           {
            // bytes wallet_password = 1;
            if (!this_._internal_wallet_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_wallet_password());
            }
            // bytes aezeed_passphrase = 3;
            if (!this_._internal_aezeed_passphrase().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_aezeed_passphrase());
            }
            // string extended_master_key = 7;
            if (!this_._internal_extended_master_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_extended_master_key());
            }
            // bytes macaroon_root_key = 10;
            if (!this_._internal_macaroon_root_key().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_macaroon_root_key());
            }
          }
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x00000003u) {
            // .lnrpc.ChanBackupSnapshot channel_backups = 5;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.channel_backups_);
            }
            // .lnrpc.WatchOnly watch_only = 9;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.watch_only_);
            }
          }
           {
            // int32 recovery_window = 4;
            if (this_._internal_recovery_window() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_recovery_window());
            }
            // bool stateless_init = 6;
            if (this_._internal_stateless_init() != 0) {
              total_size += 2;
            }
            // uint64 extended_master_key_birthday_timestamp = 8;
            if (this_._internal_extended_master_key_birthday_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_extended_master_key_birthday_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InitWalletRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InitWalletRequest*>(&to_msg);
  auto& from = static_cast<const InitWalletRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.InitWalletRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cipher_seed_mnemonic()->MergeFrom(from._internal_cipher_seed_mnemonic());
  if (!from._internal_wallet_password().empty()) {
    _this->_internal_set_wallet_password(from._internal_wallet_password());
  }
  if (!from._internal_aezeed_passphrase().empty()) {
    _this->_internal_set_aezeed_passphrase(from._internal_aezeed_passphrase());
  }
  if (!from._internal_extended_master_key().empty()) {
    _this->_internal_set_extended_master_key(from._internal_extended_master_key());
  }
  if (!from._internal_macaroon_root_key().empty()) {
    _this->_internal_set_macaroon_root_key(from._internal_macaroon_root_key());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.channel_backups_ != nullptr);
      if (_this->_impl_.channel_backups_ == nullptr) {
        _this->_impl_.channel_backups_ =
            ::google::protobuf::Message::CopyConstruct<::lnrpc::ChanBackupSnapshot>(arena, *from._impl_.channel_backups_);
      } else {
        _this->_impl_.channel_backups_->MergeFrom(*from._impl_.channel_backups_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.watch_only_ != nullptr);
      if (_this->_impl_.watch_only_ == nullptr) {
        _this->_impl_.watch_only_ =
            ::google::protobuf::Message::CopyConstruct<::lnrpc::WatchOnly>(arena, *from._impl_.watch_only_);
      } else {
        _this->_impl_.watch_only_->MergeFrom(*from._impl_.watch_only_);
      }
    }
  }
  if (from._internal_recovery_window() != 0) {
    _this->_impl_.recovery_window_ = from._impl_.recovery_window_;
  }
  if (from._internal_stateless_init() != 0) {
    _this->_impl_.stateless_init_ = from._impl_.stateless_init_;
  }
  if (from._internal_extended_master_key_birthday_timestamp() != 0) {
    _this->_impl_.extended_master_key_birthday_timestamp_ = from._impl_.extended_master_key_birthday_timestamp_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitWalletRequest::CopyFrom(const InitWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.InitWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InitWalletRequest::InternalSwap(InitWalletRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.cipher_seed_mnemonic_.InternalSwap(&other->_impl_.cipher_seed_mnemonic_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wallet_password_, &other->_impl_.wallet_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.aezeed_passphrase_, &other->_impl_.aezeed_passphrase_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.extended_master_key_, &other->_impl_.extended_master_key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.macaroon_root_key_, &other->_impl_.macaroon_root_key_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.extended_master_key_birthday_timestamp_)
      + sizeof(InitWalletRequest::_impl_.extended_master_key_birthday_timestamp_)
      - PROTOBUF_FIELD_OFFSET(InitWalletRequest, _impl_.channel_backups_)>(
          reinterpret_cast<char*>(&_impl_.channel_backups_),
          reinterpret_cast<char*>(&other->_impl_.channel_backups_));
}

::google::protobuf::Metadata InitWalletRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class InitWalletResponse::_Internal {
 public:
};

InitWalletResponse::InitWalletResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.InitWalletResponse)
}
inline PROTOBUF_NDEBUG_INLINE InitWalletResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::InitWalletResponse& from_msg)
      : admin_macaroon_(arena, from.admin_macaroon_),
        _cached_size_{0} {}

InitWalletResponse::InitWalletResponse(
    ::google::protobuf::Arena* arena,
    const InitWalletResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  InitWalletResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:lnrpc.InitWalletResponse)
}
inline PROTOBUF_NDEBUG_INLINE InitWalletResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : admin_macaroon_(arena),
        _cached_size_{0} {}

inline void InitWalletResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
InitWalletResponse::~InitWalletResponse() {
  // @@protoc_insertion_point(destructor:lnrpc.InitWalletResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void InitWalletResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.admin_macaroon_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    InitWalletResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_InitWalletResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &InitWalletResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<InitWalletResponse>(),
            ::google::protobuf::Message::GetNewImpl<InitWalletResponse>(),
            ::google::protobuf::Message::GetClearImpl<InitWalletResponse>(), &InitWalletResponse::ByteSizeLong,
                &InitWalletResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(InitWalletResponse, _impl_._cached_size_),
            false,
        },
        &InitWalletResponse::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* InitWalletResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> InitWalletResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::InitWalletResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes admin_macaroon = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(InitWalletResponse, _impl_.admin_macaroon_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes admin_macaroon = 1;
    {PROTOBUF_FIELD_OFFSET(InitWalletResponse, _impl_.admin_macaroon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void InitWalletResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.InitWalletResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_macaroon_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* InitWalletResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const InitWalletResponse& this_ = static_cast<const InitWalletResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* InitWalletResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const InitWalletResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.InitWalletResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes admin_macaroon = 1;
          if (!this_._internal_admin_macaroon().empty()) {
            const std::string& _s = this_._internal_admin_macaroon();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.InitWalletResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t InitWalletResponse::ByteSizeLong(const MessageLite& base) {
          const InitWalletResponse& this_ = static_cast<const InitWalletResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t InitWalletResponse::ByteSizeLong() const {
          const InitWalletResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.InitWalletResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes admin_macaroon = 1;
            if (!this_._internal_admin_macaroon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_admin_macaroon());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void InitWalletResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<InitWalletResponse*>(&to_msg);
  auto& from = static_cast<const InitWalletResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.InitWalletResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin_macaroon().empty()) {
    _this->_internal_set_admin_macaroon(from._internal_admin_macaroon());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void InitWalletResponse::CopyFrom(const InitWalletResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.InitWalletResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void InitWalletResponse::InternalSwap(InitWalletResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_macaroon_, &other->_impl_.admin_macaroon_, arena);
}

::google::protobuf::Metadata InitWalletResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchOnly::_Internal {
 public:
};

WatchOnly::WatchOnly(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.WatchOnly)
}
inline PROTOBUF_NDEBUG_INLINE WatchOnly::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::WatchOnly& from_msg)
      : accounts_{visibility, arena, from.accounts_},
        master_key_fingerprint_(arena, from.master_key_fingerprint_),
        _cached_size_{0} {}

WatchOnly::WatchOnly(
    ::google::protobuf::Arena* arena,
    const WatchOnly& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchOnly* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.master_key_birthday_timestamp_ = from._impl_.master_key_birthday_timestamp_;

  // @@protoc_insertion_point(copy_constructor:lnrpc.WatchOnly)
}
inline PROTOBUF_NDEBUG_INLINE WatchOnly::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : accounts_{visibility, arena},
        master_key_fingerprint_(arena),
        _cached_size_{0} {}

inline void WatchOnly::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.master_key_birthday_timestamp_ = {};
}
WatchOnly::~WatchOnly() {
  // @@protoc_insertion_point(destructor:lnrpc.WatchOnly)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WatchOnly::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.master_key_fingerprint_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WatchOnly::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WatchOnly_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WatchOnly::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WatchOnly>(),
            ::google::protobuf::Message::GetNewImpl<WatchOnly>(),
            ::google::protobuf::Message::GetClearImpl<WatchOnly>(), &WatchOnly::ByteSizeLong,
                &WatchOnly::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_._cached_size_),
            false,
        },
        &WatchOnly::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WatchOnly::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> WatchOnly::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::WatchOnly>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // uint64 master_key_birthday_timestamp = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(WatchOnly, _impl_.master_key_birthday_timestamp_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_.master_key_birthday_timestamp_)}},
    // bytes master_key_fingerprint = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_.master_key_fingerprint_)}},
    // repeated .lnrpc.WatchOnlyAccount accounts = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_.accounts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint64 master_key_birthday_timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_.master_key_birthday_timestamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // bytes master_key_fingerprint = 2;
    {PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_.master_key_fingerprint_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // repeated .lnrpc.WatchOnlyAccount accounts = 3;
    {PROTOBUF_FIELD_OFFSET(WatchOnly, _impl_.accounts_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lnrpc::WatchOnlyAccount>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void WatchOnly::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.WatchOnly)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.accounts_.Clear();
  _impl_.master_key_fingerprint_.ClearToEmpty();
  _impl_.master_key_birthday_timestamp_ = ::uint64_t{0u};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WatchOnly::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WatchOnly& this_ = static_cast<const WatchOnly&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WatchOnly::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WatchOnly& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.WatchOnly)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint64 master_key_birthday_timestamp = 1;
          if (this_._internal_master_key_birthday_timestamp() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                1, this_._internal_master_key_birthday_timestamp(), target);
          }

          // bytes master_key_fingerprint = 2;
          if (!this_._internal_master_key_fingerprint().empty()) {
            const std::string& _s = this_._internal_master_key_fingerprint();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // repeated .lnrpc.WatchOnlyAccount accounts = 3;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_accounts_size());
               i < n; i++) {
            const auto& repfield = this_._internal_accounts().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    3, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.WatchOnly)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WatchOnly::ByteSizeLong(const MessageLite& base) {
          const WatchOnly& this_ = static_cast<const WatchOnly&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WatchOnly::ByteSizeLong() const {
          const WatchOnly& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.WatchOnly)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .lnrpc.WatchOnlyAccount accounts = 3;
             {
              total_size += 1UL * this_._internal_accounts_size();
              for (const auto& msg : this_._internal_accounts()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // bytes master_key_fingerprint = 2;
            if (!this_._internal_master_key_fingerprint().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_master_key_fingerprint());
            }
            // uint64 master_key_birthday_timestamp = 1;
            if (this_._internal_master_key_birthday_timestamp() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_master_key_birthday_timestamp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WatchOnly::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchOnly*>(&to_msg);
  auto& from = static_cast<const WatchOnly&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.WatchOnly)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_accounts()->MergeFrom(
      from._internal_accounts());
  if (!from._internal_master_key_fingerprint().empty()) {
    _this->_internal_set_master_key_fingerprint(from._internal_master_key_fingerprint());
  }
  if (from._internal_master_key_birthday_timestamp() != 0) {
    _this->_impl_.master_key_birthday_timestamp_ = from._impl_.master_key_birthday_timestamp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchOnly::CopyFrom(const WatchOnly& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.WatchOnly)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchOnly::InternalSwap(WatchOnly* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.accounts_.InternalSwap(&other->_impl_.accounts_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.master_key_fingerprint_, &other->_impl_.master_key_fingerprint_, arena);
        swap(_impl_.master_key_birthday_timestamp_, other->_impl_.master_key_birthday_timestamp_);
}

::google::protobuf::Metadata WatchOnly::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class WatchOnlyAccount::_Internal {
 public:
};

WatchOnlyAccount::WatchOnlyAccount(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.WatchOnlyAccount)
}
inline PROTOBUF_NDEBUG_INLINE WatchOnlyAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::WatchOnlyAccount& from_msg)
      : xpub_(arena, from.xpub_),
        _cached_size_{0} {}

WatchOnlyAccount::WatchOnlyAccount(
    ::google::protobuf::Arena* arena,
    const WatchOnlyAccount& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  WatchOnlyAccount* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, purpose_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, purpose_),
           offsetof(Impl_, account_) -
               offsetof(Impl_, purpose_) +
               sizeof(Impl_::account_));

  // @@protoc_insertion_point(copy_constructor:lnrpc.WatchOnlyAccount)
}
inline PROTOBUF_NDEBUG_INLINE WatchOnlyAccount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : xpub_(arena),
        _cached_size_{0} {}

inline void WatchOnlyAccount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, purpose_),
           0,
           offsetof(Impl_, account_) -
               offsetof(Impl_, purpose_) +
               sizeof(Impl_::account_));
}
WatchOnlyAccount::~WatchOnlyAccount() {
  // @@protoc_insertion_point(destructor:lnrpc.WatchOnlyAccount)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void WatchOnlyAccount::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.xpub_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    WatchOnlyAccount::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_WatchOnlyAccount_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &WatchOnlyAccount::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<WatchOnlyAccount>(),
            ::google::protobuf::Message::GetNewImpl<WatchOnlyAccount>(),
            ::google::protobuf::Message::GetClearImpl<WatchOnlyAccount>(), &WatchOnlyAccount::ByteSizeLong,
                &WatchOnlyAccount::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_._cached_size_),
            false,
        },
        &WatchOnlyAccount::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* WatchOnlyAccount::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 35, 2> WatchOnlyAccount::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::WatchOnlyAccount>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string xpub = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.xpub_)}},
    // uint32 purpose = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchOnlyAccount, _impl_.purpose_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.purpose_)}},
    // uint32 coin_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchOnlyAccount, _impl_.coin_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.coin_type_)}},
    // uint32 account = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(WatchOnlyAccount, _impl_.account_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.account_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 purpose = 1;
    {PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.purpose_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 coin_type = 2;
    {PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.coin_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 account = 3;
    {PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.account_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string xpub = 4;
    {PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.xpub_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\0\0\4\0\0\0"
    "lnrpc.WatchOnlyAccount"
    "xpub"
  }},
};

PROTOBUF_NOINLINE void WatchOnlyAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.WatchOnlyAccount)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.xpub_.ClearToEmpty();
  ::memset(&_impl_.purpose_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.account_) -
      reinterpret_cast<char*>(&_impl_.purpose_)) + sizeof(_impl_.account_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* WatchOnlyAccount::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const WatchOnlyAccount& this_ = static_cast<const WatchOnlyAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* WatchOnlyAccount::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const WatchOnlyAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.WatchOnlyAccount)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // uint32 purpose = 1;
          if (this_._internal_purpose() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                1, this_._internal_purpose(), target);
          }

          // uint32 coin_type = 2;
          if (this_._internal_coin_type() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_coin_type(), target);
          }

          // uint32 account = 3;
          if (this_._internal_account() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_account(), target);
          }

          // string xpub = 4;
          if (!this_._internal_xpub().empty()) {
            const std::string& _s = this_._internal_xpub();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "lnrpc.WatchOnlyAccount.xpub");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.WatchOnlyAccount)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t WatchOnlyAccount::ByteSizeLong(const MessageLite& base) {
          const WatchOnlyAccount& this_ = static_cast<const WatchOnlyAccount&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t WatchOnlyAccount::ByteSizeLong() const {
          const WatchOnlyAccount& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.WatchOnlyAccount)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string xpub = 4;
            if (!this_._internal_xpub().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_xpub());
            }
            // uint32 purpose = 1;
            if (this_._internal_purpose() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_purpose());
            }
            // uint32 coin_type = 2;
            if (this_._internal_coin_type() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_coin_type());
            }
            // uint32 account = 3;
            if (this_._internal_account() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_account());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void WatchOnlyAccount::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<WatchOnlyAccount*>(&to_msg);
  auto& from = static_cast<const WatchOnlyAccount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.WatchOnlyAccount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_xpub().empty()) {
    _this->_internal_set_xpub(from._internal_xpub());
  }
  if (from._internal_purpose() != 0) {
    _this->_impl_.purpose_ = from._impl_.purpose_;
  }
  if (from._internal_coin_type() != 0) {
    _this->_impl_.coin_type_ = from._impl_.coin_type_;
  }
  if (from._internal_account() != 0) {
    _this->_impl_.account_ = from._impl_.account_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void WatchOnlyAccount::CopyFrom(const WatchOnlyAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.WatchOnlyAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void WatchOnlyAccount::InternalSwap(WatchOnlyAccount* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.xpub_, &other->_impl_.xpub_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.account_)
      + sizeof(WatchOnlyAccount::_impl_.account_)
      - PROTOBUF_FIELD_OFFSET(WatchOnlyAccount, _impl_.purpose_)>(
          reinterpret_cast<char*>(&_impl_.purpose_),
          reinterpret_cast<char*>(&other->_impl_.purpose_));
}

::google::protobuf::Metadata WatchOnlyAccount::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnlockWalletRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<UnlockWalletRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_._has_bits_);
};

void UnlockWalletRequest::clear_channel_backups() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.channel_backups_ != nullptr) _impl_.channel_backups_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
UnlockWalletRequest::UnlockWalletRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.UnlockWalletRequest)
}
inline PROTOBUF_NDEBUG_INLINE UnlockWalletRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::UnlockWalletRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        wallet_password_(arena, from.wallet_password_) {}

UnlockWalletRequest::UnlockWalletRequest(
    ::google::protobuf::Arena* arena,
    const UnlockWalletRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnlockWalletRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.channel_backups_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::lnrpc::ChanBackupSnapshot>(
                              arena, *from._impl_.channel_backups_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, recovery_window_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, recovery_window_),
           offsetof(Impl_, stateless_init_) -
               offsetof(Impl_, recovery_window_) +
               sizeof(Impl_::stateless_init_));

  // @@protoc_insertion_point(copy_constructor:lnrpc.UnlockWalletRequest)
}
inline PROTOBUF_NDEBUG_INLINE UnlockWalletRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        wallet_password_(arena) {}

inline void UnlockWalletRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_backups_),
           0,
           offsetof(Impl_, stateless_init_) -
               offsetof(Impl_, channel_backups_) +
               sizeof(Impl_::stateless_init_));
}
UnlockWalletRequest::~UnlockWalletRequest() {
  // @@protoc_insertion_point(destructor:lnrpc.UnlockWalletRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void UnlockWalletRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.wallet_password_.Destroy();
  delete _impl_.channel_backups_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    UnlockWalletRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_UnlockWalletRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &UnlockWalletRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<UnlockWalletRequest>(),
            ::google::protobuf::Message::GetNewImpl<UnlockWalletRequest>(),
            ::google::protobuf::Message::GetClearImpl<UnlockWalletRequest>(), &UnlockWalletRequest::ByteSizeLong,
                &UnlockWalletRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_._cached_size_),
            false,
        },
        &UnlockWalletRequest::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* UnlockWalletRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 0, 2> UnlockWalletRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::UnlockWalletRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool stateless_init = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(UnlockWalletRequest, _impl_.stateless_init_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.stateless_init_)}},
    // bytes wallet_password = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.wallet_password_)}},
    // int32 recovery_window = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(UnlockWalletRequest, _impl_.recovery_window_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.recovery_window_)}},
    // .lnrpc.ChanBackupSnapshot channel_backups = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.channel_backups_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes wallet_password = 1;
    {PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.wallet_password_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // int32 recovery_window = 2;
    {PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.recovery_window_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .lnrpc.ChanBackupSnapshot channel_backups = 3;
    {PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.channel_backups_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bool stateless_init = 4;
    {PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.stateless_init_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }}, {{
    {::_pbi::TcParser::GetTable<::lnrpc::ChanBackupSnapshot>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void UnlockWalletRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.UnlockWalletRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.wallet_password_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.channel_backups_ != nullptr);
    _impl_.channel_backups_->Clear();
  }
  ::memset(&_impl_.recovery_window_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.stateless_init_) -
      reinterpret_cast<char*>(&_impl_.recovery_window_)) + sizeof(_impl_.stateless_init_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* UnlockWalletRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const UnlockWalletRequest& this_ = static_cast<const UnlockWalletRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* UnlockWalletRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const UnlockWalletRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.UnlockWalletRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes wallet_password = 1;
          if (!this_._internal_wallet_password().empty()) {
            const std::string& _s = this_._internal_wallet_password();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // int32 recovery_window = 2;
          if (this_._internal_recovery_window() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_recovery_window(), target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .lnrpc.ChanBackupSnapshot channel_backups = 3;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                3, *this_._impl_.channel_backups_, this_._impl_.channel_backups_->GetCachedSize(), target,
                stream);
          }

          // bool stateless_init = 4;
          if (this_._internal_stateless_init() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_stateless_init(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.UnlockWalletRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t UnlockWalletRequest::ByteSizeLong(const MessageLite& base) {
          const UnlockWalletRequest& this_ = static_cast<const UnlockWalletRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t UnlockWalletRequest::ByteSizeLong() const {
          const UnlockWalletRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.UnlockWalletRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes wallet_password = 1;
            if (!this_._internal_wallet_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_wallet_password());
            }
          }
           {
            // .lnrpc.ChanBackupSnapshot channel_backups = 3;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.channel_backups_);
            }
          }
           {
            // int32 recovery_window = 2;
            if (this_._internal_recovery_window() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_recovery_window());
            }
            // bool stateless_init = 4;
            if (this_._internal_stateless_init() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void UnlockWalletRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnlockWalletRequest*>(&to_msg);
  auto& from = static_cast<const UnlockWalletRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.UnlockWalletRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_wallet_password().empty()) {
    _this->_internal_set_wallet_password(from._internal_wallet_password());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.channel_backups_ != nullptr);
    if (_this->_impl_.channel_backups_ == nullptr) {
      _this->_impl_.channel_backups_ =
          ::google::protobuf::Message::CopyConstruct<::lnrpc::ChanBackupSnapshot>(arena, *from._impl_.channel_backups_);
    } else {
      _this->_impl_.channel_backups_->MergeFrom(*from._impl_.channel_backups_);
    }
  }
  if (from._internal_recovery_window() != 0) {
    _this->_impl_.recovery_window_ = from._impl_.recovery_window_;
  }
  if (from._internal_stateless_init() != 0) {
    _this->_impl_.stateless_init_ = from._impl_.stateless_init_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnlockWalletRequest::CopyFrom(const UnlockWalletRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.UnlockWalletRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnlockWalletRequest::InternalSwap(UnlockWalletRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.wallet_password_, &other->_impl_.wallet_password_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.stateless_init_)
      + sizeof(UnlockWalletRequest::_impl_.stateless_init_)
      - PROTOBUF_FIELD_OFFSET(UnlockWalletRequest, _impl_.channel_backups_)>(
          reinterpret_cast<char*>(&_impl_.channel_backups_),
          reinterpret_cast<char*>(&other->_impl_.channel_backups_));
}

::google::protobuf::Metadata UnlockWalletRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnlockWalletResponse::_Internal {
 public:
};

UnlockWalletResponse::UnlockWalletResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:lnrpc.UnlockWalletResponse)
}
UnlockWalletResponse::UnlockWalletResponse(
    ::google::protobuf::Arena* arena,
    const UnlockWalletResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnlockWalletResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:lnrpc.UnlockWalletResponse)
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    UnlockWalletResponse::_class_data_ = {
        ::google::protobuf::internal::ZeroFieldsBase::ClassData{
            &_UnlockWalletResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &UnlockWalletResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::internal::ZeroFieldsBase::GetDeleteImpl<UnlockWalletResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<UnlockWalletResponse>(),
            ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<UnlockWalletResponse>(), &UnlockWalletResponse::ByteSizeLong,
                &UnlockWalletResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(UnlockWalletResponse, _impl_._cached_size_),
            false,
        },
        &UnlockWalletResponse::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* UnlockWalletResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> UnlockWalletResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::UnlockWalletResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};








::google::protobuf::Metadata UnlockWalletResponse::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChangePasswordRequest::_Internal {
 public:
};

ChangePasswordRequest::ChangePasswordRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.ChangePasswordRequest)
}
inline PROTOBUF_NDEBUG_INLINE ChangePasswordRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::ChangePasswordRequest& from_msg)
      : current_password_(arena, from.current_password_),
        new_password_(arena, from.new_password_),
        _cached_size_{0} {}

ChangePasswordRequest::ChangePasswordRequest(
    ::google::protobuf::Arena* arena,
    const ChangePasswordRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChangePasswordRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stateless_init_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, stateless_init_),
           offsetof(Impl_, new_macaroon_root_key_) -
               offsetof(Impl_, stateless_init_) +
               sizeof(Impl_::new_macaroon_root_key_));

  // @@protoc_insertion_point(copy_constructor:lnrpc.ChangePasswordRequest)
}
inline PROTOBUF_NDEBUG_INLINE ChangePasswordRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : current_password_(arena),
        new_password_(arena),
        _cached_size_{0} {}

inline void ChangePasswordRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stateless_init_),
           0,
           offsetof(Impl_, new_macaroon_root_key_) -
               offsetof(Impl_, stateless_init_) +
               sizeof(Impl_::new_macaroon_root_key_));
}
ChangePasswordRequest::~ChangePasswordRequest() {
  // @@protoc_insertion_point(destructor:lnrpc.ChangePasswordRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChangePasswordRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.current_password_.Destroy();
  _impl_.new_password_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ChangePasswordRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ChangePasswordRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ChangePasswordRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ChangePasswordRequest>(),
            ::google::protobuf::Message::GetNewImpl<ChangePasswordRequest>(),
            ::google::protobuf::Message::GetClearImpl<ChangePasswordRequest>(), &ChangePasswordRequest::ByteSizeLong,
                &ChangePasswordRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_._cached_size_),
            false,
        },
        &ChangePasswordRequest::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ChangePasswordRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> ChangePasswordRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::ChangePasswordRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool new_macaroon_root_key = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChangePasswordRequest, _impl_.new_macaroon_root_key_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.new_macaroon_root_key_)}},
    // bytes current_password = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.current_password_)}},
    // bytes new_password = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.new_password_)}},
    // bool stateless_init = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ChangePasswordRequest, _impl_.stateless_init_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.stateless_init_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes current_password = 1;
    {PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.current_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes new_password = 2;
    {PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.new_password_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // bool stateless_init = 3;
    {PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.stateless_init_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool new_macaroon_root_key = 4;
    {PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.new_macaroon_root_key_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ChangePasswordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.ChangePasswordRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.current_password_.ClearToEmpty();
  _impl_.new_password_.ClearToEmpty();
  ::memset(&_impl_.stateless_init_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.new_macaroon_root_key_) -
      reinterpret_cast<char*>(&_impl_.stateless_init_)) + sizeof(_impl_.new_macaroon_root_key_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ChangePasswordRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ChangePasswordRequest& this_ = static_cast<const ChangePasswordRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ChangePasswordRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ChangePasswordRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.ChangePasswordRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes current_password = 1;
          if (!this_._internal_current_password().empty()) {
            const std::string& _s = this_._internal_current_password();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // bytes new_password = 2;
          if (!this_._internal_new_password().empty()) {
            const std::string& _s = this_._internal_new_password();
            target = stream->WriteBytesMaybeAliased(2, _s, target);
          }

          // bool stateless_init = 3;
          if (this_._internal_stateless_init() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_stateless_init(), target);
          }

          // bool new_macaroon_root_key = 4;
          if (this_._internal_new_macaroon_root_key() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                4, this_._internal_new_macaroon_root_key(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.ChangePasswordRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ChangePasswordRequest::ByteSizeLong(const MessageLite& base) {
          const ChangePasswordRequest& this_ = static_cast<const ChangePasswordRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ChangePasswordRequest::ByteSizeLong() const {
          const ChangePasswordRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.ChangePasswordRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // bytes current_password = 1;
            if (!this_._internal_current_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_current_password());
            }
            // bytes new_password = 2;
            if (!this_._internal_new_password().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_new_password());
            }
            // bool stateless_init = 3;
            if (this_._internal_stateless_init() != 0) {
              total_size += 2;
            }
            // bool new_macaroon_root_key = 4;
            if (this_._internal_new_macaroon_root_key() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ChangePasswordRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChangePasswordRequest*>(&to_msg);
  auto& from = static_cast<const ChangePasswordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.ChangePasswordRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_current_password().empty()) {
    _this->_internal_set_current_password(from._internal_current_password());
  }
  if (!from._internal_new_password().empty()) {
    _this->_internal_set_new_password(from._internal_new_password());
  }
  if (from._internal_stateless_init() != 0) {
    _this->_impl_.stateless_init_ = from._impl_.stateless_init_;
  }
  if (from._internal_new_macaroon_root_key() != 0) {
    _this->_impl_.new_macaroon_root_key_ = from._impl_.new_macaroon_root_key_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChangePasswordRequest::CopyFrom(const ChangePasswordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.ChangePasswordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChangePasswordRequest::InternalSwap(ChangePasswordRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.current_password_, &other->_impl_.current_password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.new_password_, &other->_impl_.new_password_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.new_macaroon_root_key_)
      + sizeof(ChangePasswordRequest::_impl_.new_macaroon_root_key_)
      - PROTOBUF_FIELD_OFFSET(ChangePasswordRequest, _impl_.stateless_init_)>(
          reinterpret_cast<char*>(&_impl_.stateless_init_),
          reinterpret_cast<char*>(&other->_impl_.stateless_init_));
}

::google::protobuf::Metadata ChangePasswordRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ChangePasswordResponse::_Internal {
 public:
};

ChangePasswordResponse::ChangePasswordResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:lnrpc.ChangePasswordResponse)
}
inline PROTOBUF_NDEBUG_INLINE ChangePasswordResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::lnrpc::ChangePasswordResponse& from_msg)
      : admin_macaroon_(arena, from.admin_macaroon_),
        _cached_size_{0} {}

ChangePasswordResponse::ChangePasswordResponse(
    ::google::protobuf::Arena* arena,
    const ChangePasswordResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ChangePasswordResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:lnrpc.ChangePasswordResponse)
}
inline PROTOBUF_NDEBUG_INLINE ChangePasswordResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : admin_macaroon_(arena),
        _cached_size_{0} {}

inline void ChangePasswordResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ChangePasswordResponse::~ChangePasswordResponse() {
  // @@protoc_insertion_point(destructor:lnrpc.ChangePasswordResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void ChangePasswordResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.admin_macaroon_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    ChangePasswordResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_ChangePasswordResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &ChangePasswordResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<ChangePasswordResponse>(),
            ::google::protobuf::Message::GetNewImpl<ChangePasswordResponse>(),
            ::google::protobuf::Message::GetClearImpl<ChangePasswordResponse>(), &ChangePasswordResponse::ByteSizeLong,
                &ChangePasswordResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(ChangePasswordResponse, _impl_._cached_size_),
            false,
        },
        &ChangePasswordResponse::kDescriptorMethods,
        &descriptor_table_walletunlocker_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* ChangePasswordResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> ChangePasswordResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::lnrpc::ChangePasswordResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bytes admin_macaroon = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ChangePasswordResponse, _impl_.admin_macaroon_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes admin_macaroon = 1;
    {PROTOBUF_FIELD_OFFSET(ChangePasswordResponse, _impl_.admin_macaroon_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void ChangePasswordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:lnrpc.ChangePasswordResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.admin_macaroon_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ChangePasswordResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ChangePasswordResponse& this_ = static_cast<const ChangePasswordResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ChangePasswordResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ChangePasswordResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:lnrpc.ChangePasswordResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes admin_macaroon = 1;
          if (!this_._internal_admin_macaroon().empty()) {
            const std::string& _s = this_._internal_admin_macaroon();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:lnrpc.ChangePasswordResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ChangePasswordResponse::ByteSizeLong(const MessageLite& base) {
          const ChangePasswordResponse& this_ = static_cast<const ChangePasswordResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ChangePasswordResponse::ByteSizeLong() const {
          const ChangePasswordResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:lnrpc.ChangePasswordResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // bytes admin_macaroon = 1;
            if (!this_._internal_admin_macaroon().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_admin_macaroon());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ChangePasswordResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ChangePasswordResponse*>(&to_msg);
  auto& from = static_cast<const ChangePasswordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:lnrpc.ChangePasswordResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_admin_macaroon().empty()) {
    _this->_internal_set_admin_macaroon(from._internal_admin_macaroon());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ChangePasswordResponse::CopyFrom(const ChangePasswordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:lnrpc.ChangePasswordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ChangePasswordResponse::InternalSwap(ChangePasswordResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.admin_macaroon_, &other->_impl_.admin_macaroon_, arena);
}

::google::protobuf::Metadata ChangePasswordResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace lnrpc
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_walletunlocker_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
